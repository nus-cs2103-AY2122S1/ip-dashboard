[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"# pika.Duke project template","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"3. After that, locate the `src/main/java/pika.Duke.java` file, right-click it, and choose `Run pika.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"random689":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"    mainClassName \u003d \"pika.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"    archiveBaseName \u003d \"pika\"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"//    enableAssertions \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"random689":18,"-":44}},{"path":"data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"T | 1 | 123 | Tags : #1","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"D | 0 | 123 | Dec 12 2020","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"D | 0 | 123 | Dec 22 2020 | Tags : #123   #12 3","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"D | 0 | 123 | Dec 22 2020 | Tags : #12 3   #123","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"random689":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"## Pika Bot User Guide","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"Pika Bot is an app that is for managing and keeping track of task.","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"### Quick Start","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"1. Ensure that you have Java 11 or above installed in your computer.","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"2. Download the latest version from [here](https://github.com/random689/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"3. Copy the file to the folder you want to use as the home folder for your Pika Bot.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Do note that the GUI shown below has already ran some commands.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"![GUI](https://random689.github.io/ip/Ui.png)","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"## Features:","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"* Adding a todo task : [todo](https://random689.github.io/ip/#todo)","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"* Adding a deadline task : [deadline](https://random689.github.io/ip/#deadline)","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"* Adding an event task : [event](https://random689.github.io/ip/#event)","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"* Marking a task as done : [done](https://random689.github.io/ip/#done)","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"* Deleting a task : [delete](https://random689.github.io/ip/#delete)","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"* Listing all the current task : [list](https://random689.github.io/ip/#list)","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"* Tagging a task : [tag](https://random689.github.io/ip/#tag)","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"* Searching tasks by name : [find](https://random689.github.io/ip/#find)","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"### todo","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"Adds a new todo task.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"Syntax: `todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"\u003e If the description is empty, an error message will be displayed","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"### deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"Adds a new deadline task.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"Syntax: `deadline \u003cdescription\u003e /by \u003cdate time\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"\u003e If the description or the date/time is empty, an error message will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"\u003e ","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"\u003e You can refer to [Date Time Format](https://random689.github.io/ip/#Date-Time-Format) for the allowed date-time format.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"### event","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"Adds a new event task.","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"Syntax: `event \u003cdescription\u003e /at \u003cdate time\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"\u003e If the description or the date/time is empty, an error message will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"\u003e You can refer to [Date Time Format](https://random689.github.io/ip/#Date-Time-Format) for the allowed date-time format.","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"### done","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"random689"},"content":"Marks the task at the given index as completed","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"random689"},"content":"Syntax: `done \u003cindex\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"random689"},"content":"\u003e If the task at the given index is already marked as completed, an error will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"random689"},"content":"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"random689"},"content":"\u003e If an invalid index is given, an error message will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"random689"},"content":"### delete","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"random689"},"content":"Deletes the task at the given index","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"random689"},"content":"Syntax: `delete \u003cindex\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"random689"},"content":"\u003e If an invalid index is given, an error message will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"random689"},"content":"### list","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"random689"},"content":"Lists all the current task","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"random689"},"content":"Syntax: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"random689"},"content":"### tag","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"random689"},"content":"Adds a tag to the task","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"random689"},"content":"Syntax: `tag \u003cindex\u003e \u003ctag name\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"random689"},"content":"\u003e If an invalid index is given, an error message will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"random689"},"content":"\u003e ","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"random689"},"content":"\u003e If the tag name is empty, an error message will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"random689"},"content":"### find","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"random689"},"content":"Finds all the task with the given string pattern and display it as a list","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"random689"},"content":"Syntax: `find \u003cpattern\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"random689"},"content":"\u003e If no pattern is given, an error message will be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"random689"},"content":"\u003e ","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"random689"},"content":"\u003e If the pattern is a space \" \", all the task will be returned by default.","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"random689"},"content":"### bye","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"random689"},"content":"Informs Pika Bot that the user is exiting. Pika Bot will save all the current tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"random689"},"content":"Syntax: `bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"random689"},"content":"### Date Time Format","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"random689"},"content":"This application only allows 1 type of date time format.","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"random689"},"content":"\u003e Time is optional, and will be omitted if not specified.","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"random689"},"content":"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"random689"},"content":"\u003e Time is in military time / 24-hour clock (E.g 22:55)","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"random689"},"content":"Allowed Format:","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"random689"},"content":"* YYYY-MM-DD","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"random689"},"content":"* YYYY-MM-DD HH:MM","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"random689"},"content":"----","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"random689":119,"-":14}},{"path":"src/main/java/pika/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"random689":16}},{"path":"src/main/java/pika/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"import pika.ui.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"random689"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    private final Pika pika \u003d new Pika();","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"            stage.setTitle(\"PikaBot\");","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPika(pika);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"random689":35}},{"path":"src/main/java/pika/Pika.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import pika.ui.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":" * Main Class to run the Duke ChatBot.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"public class Pika {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    private TaskList taskLists;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     * Constructor for the duke class.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"     * @param filePath The path where the txt file is located/to be created.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"    public Pika(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            this.taskLists \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        } catch (PikaException | IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"            Ui.loadingErrorMessage(); //Inform user that the existing file is of the wrong format","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"            this.taskLists \u003d new TaskList(); //Creates a new empty list","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     * Constructor for the duke class.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"    public Pika() {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"        storage \u003d new Storage(\"data\");","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"            this.taskLists \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"        } catch (PikaException | IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"            Ui.loadingErrorMessage(); //Inform user that the existing file is of the wrong format","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"            this.taskLists \u003d new TaskList(); //Creates a new empty list","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"     * Returns the message the bot will say after parsing the response.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"     * @return The message the bot will reply to the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"     * @throws PikaException if there are any errors with the input.","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"     * @throws IOException if there are any errors when loading the file.","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"    public String getResponse(String input) throws PikaException, IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"        String output;","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"        output \u003d c.execute(taskLists, storage);","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"        return output;","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"random689":62}},{"path":"src/main/java/pika/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import pika.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"import pika.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":" * AddCommand class to handle all the adding of events to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    private final Task inputTask;","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"     * @param taskType Task type.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"     * @param details The name/date/time of the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"     * @throws PikaException Throws this if there are anything wrong with the inputs.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"    public AddCommand(String taskType, String details) throws PikaException {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        String[] split;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"            if (details \u003d\u003d null) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"                throw new PikaException(\"Pika pi!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"            this.inputTask \u003d new Todo(details);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"            if (details \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"                throw new PikaException(\"Pika pi!! The description of a deadline task cannot be empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"            split \u003d details.split(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"            if (split.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"                throw new PikaException(\"Pika pi!! Your deadline input format is not valid!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"            this.inputTask \u003d new Deadline(split[0].trim(), split[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"            if (details \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"                throw new PikaException(\"Pika pi!!  The description of an event task cannot be empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"            split \u003d details.split(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"            if (split.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"                throw new PikaException(\"Pika pi!! Your event date input format is not valid!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"            this.inputTask \u003d new Event(split[0].trim(), split[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!!  I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"random689"},"content":"     * Executes the AddCommand to update the list, update the txt, and print the returns to the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"random689"},"content":"     * @return The add task string for the Pikabot to say.","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"random689"},"content":"     * @throws IOException if the filepath has any issues.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException {","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"random689"},"content":"        taskList.add(this.inputTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"random689"},"content":"        Storage.updateText(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"random689"},"content":"        return Ui.addedMessage(taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":79}},{"path":"src/main/java/pika/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"random689"},"content":" * Base Command Class for the other Command classes.","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"public class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    private final boolean isRunning;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     * Constructor for the command class.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * @param isRunning boolean to indicate if the bot still runs after this function.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    public Command(boolean isRunning) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        this.isRunning \u003d isRunning;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"     * Checks if the bot still runs after this command.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"     * @return the boolean depending if the bot should still run.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        return this.isRunning;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"     * @return the string that the bot will say once the command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"     * @throws IOException   if the filepath has any issues.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"     * @throws PikaException to handle any other input/format error.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, PikaException {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"        return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":46}},{"path":"src/main/java/pika/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"random689"},"content":" * DeleteCommand class to handle the deletion of task from the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    private final int index;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     * Constructor for the DeleteCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     * @param input The index of the task to be deleted.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"     * @throws PikaException catches if the input is invalid.","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    public DeleteCommand(String input) throws PikaException {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"            //Catch if there is no number after the command","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"☹ OOPS!!! delete will require a task number to update.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        this.index \u003d Integer.parseInt(input.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     * Executes the DeleteCommand to delete the task from the list,","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     * update the respective list and txt file.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"     * @return the string that the bot will say once the delete command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"     * @throws IOException   if the filepath has any issues.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"     * @throws PikaException if there are any other format/input issues.","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, PikaException {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"        if (index \u003e taskList.getCount() || index \u003c\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"            //Catches if the number is \u003e than the number of task or if its negative","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! The number is not in within the number of tasks!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"            Task t \u003d taskList.delete(index - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"            Storage.updateText(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"            return Ui.deleteMessage(t, taskList.getCount());","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":54}},{"path":"src/main/java/pika/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":" * DoneCommand Class to handle the done command.","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"public class DoneCommand extends Command { //DoneCommand to handle the updating of list","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"    private final int index;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * Constructor for the DoneCommand Class.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     * @param input index for the task that is to be marked as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"     * @throws PikaException Catches if the input is invalid.","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    public DoneCommand(String input) throws PikaException {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"            //Catch if there is no number after the command","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! done will require a task number to update.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"        this.index \u003d Integer.parseInt(input.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"     * Executes the DoneCommand to update the task in the list as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     * Also updates the list and txt files accordingly.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     * @return the string that the bot will say once the done command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"     * @throws IOException   If the filepath has issue.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"     * @throws PikaException catches if the input/format is wrong.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, PikaException {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"        if (index \u003e taskList.getCount() || index \u003c\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"            //Catches if the number is \u003e than the number of task or if its negative","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! The number is not in within the number of tasks!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"            if (taskList.get(index - 1).isDone()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"                throw new PikaException(\"Pika pi!! That task has already been completed!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"            String done \u003d taskList.get(index - 1).markAsDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"            Storage.updateText(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"            return Ui.doneMessage(done);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":55}},{"path":"src/main/java/pika/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":" * ExitCommand class to handle the closing of the bot.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"public class ExitCommand extends Command { //ExitCommand to handle the shutting down of bots","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"     * Constructor for ExitCommand.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     * @param details any other input by the user apart from the exit command.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * @throws PikaException if the user inputs anything extra.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    public ExitCommand(String details) throws PikaException {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        if (details !\u003d null) {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"     * Executes the exitCommand for the bot to say the goodbye Message","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"     * and to inform the Duke Class that isRunning is false.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"     * @return the string that the bot will say once the exit command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"        return Ui.goodByeMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":38}},{"path":"src/main/java/pika/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"random689"},"content":" * FindCommand Class for the find commands.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"    private final String string;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     * FindCommand Constructor.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * @param string is the string to be searched.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * @throws PikaException if the pattern is not given.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    public FindCommand(String string) throws PikaException {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"        if (string \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! find will require a pattern to find.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"            this.string \u003d string;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"     * Executes the Search Command to print the list of task with the given string to the user via the Ui.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     * @return the string that the bot will say once the find command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"        return Ui.searchList(taskList, this.string);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":40}},{"path":"src/main/java/pika/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"random689"},"content":" * ListCommand Class to handle the showing of list","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"     * Constructor for ListCommand.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     * @param details any other input by the user apart from the list command.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * @throws PikaException if the user inputs anything extra.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    public ListCommand(String details) throws PikaException {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        if (details !\u003d null) {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"     * Executes the ListCommand to print the list to the user via the Ui.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"     * @return the string that the bot will say once the list command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"        return Ui.printList(taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":37}},{"path":"src/main/java/pika/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.command;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.ui.Storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import pika.ui.Ui;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"random689"},"content":" * TagCommand Class for tagging.","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"    private final int index;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    private final String tagName;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * Constructor for TagCommand.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"     * @param details the index of the task to be tagged and name of the tag.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     * @throws PikaException Throws this is there are anything wrong with the inputs.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"    public TagCommand(String details) throws PikaException {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        super(true);","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! Please specify which task to tag!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"        int spaceIndex \u003d details.indexOf(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        if (spaceIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! Your tag command is missing something!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"        this.index \u003d Integer.parseInt(details","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"                        .substring(0, spaceIndex)","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"                        .trim());","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"        this.tagName \u003d details.substring(spaceIndex).trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"     * Executes the TagCommand to update the list, and returns the tag.","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"     * @param storage  The current storage class to handle the txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"     * @return The add tag string for the Pikabot to say.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"     * @throws IOException   if the filepath has any issues.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"     * @throws PikaException if there are any other format/input issues.","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, PikaException {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"        if (index \u003e taskList.getCount() || index \u003c\u003d 0) {","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"            //Catches if the number is \u003e than the number of task or if its negative","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! The number is not in within the number of tasks!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"            String s \u003d taskList.get(index - 1).addTag(tagName);","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"            Storage.updateText(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"            return Ui.addedTagMessage(index, s);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"random689":58}},{"path":"src/main/java/pika/exception/PikaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"random689"},"content":" * Used to handle any errors in Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"public class PikaException extends Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"     * Constructor for the Error.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"    protected PikaException() {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     * Constructor for the Error with the return message.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * @param message Message to be printed out to the users.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    public PikaException(String message) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"random689":22}},{"path":"src/main/java/pika/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":" * Deadline Class to handle Deadline Tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"    protected String dueDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"     * Constructor for Deadline Class.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     * @param name    name of the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * @param dueDate Due date of the task. Can be Date or Date/Time.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * @throws PikaException If the date or time input is not valid.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    public Deadline(String name, String dueDate) throws PikaException {","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"            this.dueDate \u003d TaskTime.convertDateTimeFormat(dueDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! Your event date input format is not valid!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"     * Returns the string to be written in the txt file.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"     * @return txt format of the task for storage.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"    public String write() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"        String tags \u003d \" |\" + getTags();","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"        if (tags.equals(\" |\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"            return \"D \" + super.write() + \" | \" + this.dueDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"            return \"D \" + super.write() + \" | \" + this.dueDate + \" |\" + getTags();","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"     * Returns the task for the list format.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"     * @return The task in string format.","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"random689":53}},{"path":"src/main/java/pika/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":" * Event Class to handle event tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"    protected String eventTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"     * Constructor for the event class.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     * @param name      Name of the event Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * @param eventTime Date or Date and Time for the event Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * @throws PikaException If the date or time input is not valid.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    public Event(String name, String eventTime) throws PikaException { //Event class to handle Event task","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"            this.eventTime \u003d TaskTime.convertDateTimeFormat(eventTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! Your event date input format is not valid!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"     * Returns the string to be written in the txt file.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"     * @return txt format of the task for storage.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"    public String write() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"        String tags \u003d \" |\" + getTags();","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"        if (tags.equals(\" |\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"            return \"E \" + super.write() + \" | \" + this.eventTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"            return \"E \" + super.write() + \" | \" + this.eventTime + \" |\" + getTags();","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"     * Returns the list format of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"     * @return list format of the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.eventTime + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"random689":53}},{"path":"src/main/java/pika/task/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"random689"},"content":" * Tag class.","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"public class Tag {","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"    private final String tagName;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"     * Constructor for tags.","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"     * @param tagName Name of the tag.","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"        return \"#\" + this.tagName;","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"random689":21}},{"path":"src/main/java/pika/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"random689"},"content":" * Base Task class.","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"public class Task { //Base Task Class","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"    private final String name;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"    private ArrayList\u003cTag\u003e tags;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"     * Constructor of Task class.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     * @param name Name of Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        this.tags \u003d new ArrayList\u003c\u003e(30);","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"     * Marks the task as done when called and return it.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"     * @return the task\u0027s completed message.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    public String markAsDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"        return this.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     * Checks if the task is already completed.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     * @return if the task has been completed.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"     * Returns the string to be written in the txt file.","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"     * @return txt format of the task for storage.","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"    public String write() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"            return \"| 1 | \" + this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"            return \"| 0 | \" + this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"     * Returns the name of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"     * @return name of the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"    public String getName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"        return this.name;","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"random689"},"content":"     * Adds the tag to the task.","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"random689"},"content":"     * @param tagName Name of the tag to be added.","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"random689"},"content":"     * @return the tag added.","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"random689"},"content":"    public String addTag(String tagName) {","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"random689"},"content":"        assert tagName !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"random689"},"content":"        Tag t \u003d new Tag(tagName);","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"random689"},"content":"        tags.add(t);","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"random689"},"content":"        return t.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"random689"},"content":"     * Adds an arrayList of tag to the task when loading.","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"random689"},"content":"     * @param tags Arraylist of tags to be added.","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"random689"},"content":"    public void addTag(ArrayList\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"random689"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"random689"},"content":"    public String getTags() {","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"random689"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"random689"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"random689"},"content":"            return \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"random689"},"content":"            sb.append(\" Tags :\");","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"random689"},"content":"            for (Tag t : tags) {","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"random689"},"content":"                sb.append(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"random689"},"content":"                sb.append(t.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"random689"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"random689"},"content":"     * Returns the task as String.","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"random689"},"content":"     * @return list format of the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"random689"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"random689"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"random689"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"random689"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"random689":114}},{"path":"src/main/java/pika/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.task;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"public class TaskList { //TaskList class used to store the tasks and will be updated from the Command class","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"    protected int count;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"        this.count \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"     * Constructor, Creates the Tasklist from the existing file.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"     * @param file Input existing file.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"     * @throws IOException Catches if the filepath or file has issue.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"     * @throws PikaException Catches if the file content is incorrect to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"    public TaskList(BufferedReader file) throws IOException, PikaException {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        String line \u003d file.readLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"        this.count \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"            tasks.add(parseLine(line));","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"            count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"            line \u003d file.readLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"     * Parses each line of the file and creates the task accordingly.","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"     * @param line input line of file.","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"     * @return the tasks for the constructor.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"     * @throws PikaException if the file content is not of the right format to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"    public Task parseLine(String line) throws PikaException {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"        String[] splits;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"        Task t;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"        splits \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"        switch (splits[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"        case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"            t \u003d new Deadline(splits[2], TaskTime.unconvertDateTime(splits[3]));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"            if (splits[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"                t.markAsDone();","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"            if (splits.length \u003d\u003d 5) {","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"                t.addTag(parseAsTag(splits[4]));","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"        case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"            t \u003d new Event(splits[2], TaskTime.unconvertDateTime(splits[3]));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"            if (splits[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"                t.markAsDone();","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"            if (splits.length \u003d\u003d 5) {","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"random689"},"content":"                t.addTag(parseAsTag(splits[4]));","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"random689"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"random689"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"random689"},"content":"            t \u003d new Todo(splits[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"random689"},"content":"            if (splits[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"random689"},"content":"                t.markAsDone();","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"random689"},"content":"            if (splits.length \u003d\u003d 4) {","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"random689"},"content":"                t.addTag(parseAsTag(splits[3]));","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"random689"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"random689"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Your file format is invalid\");","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"random689"},"content":"        return t;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"random689"},"content":"     * Parses the line for tags into an arrayList of tags.","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"random689"},"content":"     * @param line The line of tags from the laoded txt file.","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"random689"},"content":"     * @return The arrayList of tags to be added to the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"random689"},"content":"    public ArrayList\u003cTag\u003e parseAsTag(String line) {","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"random689"},"content":"        ArrayList\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e(30);","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"random689"},"content":"        String[] splits \u003d line.split(\"#\");","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"random689"},"content":"        for (int i \u003d 1; i \u003c splits.length; i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"random689"},"content":"            tags.add(new Tag(splits[i]));","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"random689"},"content":"        return tags;","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"random689"},"content":"     * Adds the tasks to the list.","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"random689"},"content":"     * @param t task to be added.","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"random689"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"random689"},"content":"        assert t !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"random689"},"content":"        this.tasks.add(count++, t);","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"random689"},"content":"     * Gets the task at the given index.","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"random689"},"content":"     * @param i the index to get the task from","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"random689"},"content":"     * @return the task","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"random689"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"random689"},"content":"        assert i !\u003d 0 : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"random689"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"random689"},"content":"     * Gets the number of task in the list.","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"random689"},"content":"     * @return the number of task in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"random689"},"content":"    public int getCount() {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"random689"},"content":"        return count;","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"random689"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"random689"},"content":"     * @param i the index that the task to be deleted is at.","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"random689"},"content":"     * @return the deleted task.","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"random689"},"content":"    public Task delete(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"random689"},"content":"        assert i !\u003d 0 : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"random689"},"content":"        this.count--;","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"random689"},"content":"        return this.tasks.remove(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"random689"},"content":"     * Searches the list for any task with the given string.","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"random689"},"content":"     * @param string Input string pattern to find.","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"random689"},"content":"     * @return The list of task with the term in the task details.","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"random689"},"content":"    public String searchList(String string) {","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"random689"},"content":"        assert string !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"random689"},"content":"        int newCount \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"random689"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"random689"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"random689"},"content":"            if (tasks.get(i).getName().contains(string)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"random689"},"content":"                sb.append(++newCount).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"random689"},"content":"        if (newCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"random689"},"content":"            return \"Pika pi.... Seems like there was no match for your search\";","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"random689"},"content":"            return sb.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"random689"},"content":"     * Returns the list of task for the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":165,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":166,"author":{"gitId":"random689"},"content":"     * @return The list of task.","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"random689"},"content":"    public String printList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"random689"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"random689"},"content":"            //When the list is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"random689"},"content":"            return \"The list is empty!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"random689"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"random689"},"content":"            for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"random689"},"content":"                sb.append(i + 1)","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"random689"},"content":"                        .append(\". \")","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"random689"},"content":"                        .append(tasks.get(i))","lastModifiedDate":"2021-09-10"},{"lineNumber":178,"author":{"gitId":"random689"},"content":"                        .append(tasks.get(i).getTags())","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"random689"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":180,"author":{"gitId":"random689"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"random689"},"content":"            return sb.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":184}},{"path":"src/main/java/pika/task/TaskTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":" * TaskTime Class to handle date time formatting.","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"public class TaskTime { //TaskTime used to handle the timings","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"    private static final DateTimeFormatter TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"hhmma\");","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"     * Converts a fixed input of YYYY-MM-DD and HH:MM to MMM dd yyyy and hhmma.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     * @param inputTime String of input date or date AND time in YYY-MM-DD and HH:MM.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * @return Time in the converted format.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    public static String convertDateTimeFormat(String inputTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"        assert inputTime !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"        String[] split \u003d inputTime.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"        LocalDate date \u003d LocalDate.parse(split[0].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"            return date.format(DATE_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"            LocalTime time \u003d LocalTime.parse(split[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            return date.format(DATE_FORMAT) + \" \" + time.format(TIME_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     * Converts a fixed input of MMM dd yyyy and hhmma to YYY-MM-DD and HH:MM.","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     * Used for reading an already made txt file.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     * @param inputTime String of input date or date AND time in MMM dd yyyy and hhmma.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     * @return Time in the converted format.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"    public static String unconvertDateTime(String inputTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"        assert inputTime !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"        String dateString \u003d inputTime.substring(0, 11);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"        String timeString \u003d inputTime.substring(11);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"        LocalDate date \u003d LocalDate.parse(dateString.trim(), DATE_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"        if (timeString.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"            return date.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"            LocalTime time \u003d LocalTime.parse(timeString.trim(), TIME_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"            return date.toString() + \" \" + time.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":51}},{"path":"src/main/java/pika/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"random689"},"content":" * Todo Task to handle todo Tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"     * Constructor class for todo Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"     * @param name The name of the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * Returns the string to be written in the txt file.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"     * @return txt format of the task for storage.","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"    public String write() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        String tags \u003d \" |\" + getTags();","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"        if (tags.equals(\" |\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"            return \"D \" + super.write();","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            return \"T \" + super.write() + \" |\" + getTags();","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     * Returns the list format of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     * @return list format of the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"random689":41}},{"path":"src/main/java/pika/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"        displayPicture.setClip(new Circle(40, 38, 38));","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"    private void setPikaStyle() {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"        dialog.setStyle(\"-fx-background-color: #ffd700;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"                + \"-fx-background-radius: 10;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"                + \"-fx-padding: 10;\");","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"    private void setErrorStyle() {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"        dialog.setStyle(\"-fx-background-color: #ff3300;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"                + \"-fx-background-radius: 15;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"                + \"-fx-padding: 15;\");","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"    private void setUserStyle() {","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"        dialog.setStyle(\"-fx-background-color: #ffefd5;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"                + \"-fx-background-radius: 15;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"                + \"-fx-padding: 15;\");","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"random689"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"random689"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"random689"},"content":"        db.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"random689"},"content":"        db.setUserStyle();","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"random689"},"content":"        return db;","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"random689"},"content":"    public static DialogBox getPikaDialog(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"random689"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"random689"},"content":"        db.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"random689"},"content":"        db.setPikaStyle();","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"random689"},"content":"        db.flip();","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"random689"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"random689"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"random689"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"random689"},"content":"        db.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"random689"},"content":"        db.setErrorStyle();","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"random689"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"random689"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"random689":89}},{"path":"src/main/java/pika/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"import pika.Pika;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"random689"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"random689"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"    private Pika pika;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ash.png\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"    private Image pikaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pika.png\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     * Initializes the mainWindow.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"        sendButton.setStyle(\"-fx-background-color: #ffa500\");","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"        //dialogContainer.setStyle(\"-fx-background-color: #add8e6\");","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"        dialogContainer.setStyle(\"-fx-background-image: url(\u0027/images/pokeball2.png\u0027);\"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"                + \"-fx-background-size: 194 184;\");","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"                DialogBox.getPikaDialog(\"Hello from\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"                        + \"Pika Pi!\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"                        + \"(o^-^o)\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"                        + \"Hello! I\u0027m PikaBot!\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"                        + \"What can Pika do for you?\\n\", pikaImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"    public void setPika(Pika p) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"        pika \u003d p;","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"random689"},"content":"        if (input.equals(\"bye\")) { //Closes the application if the bye command is inputted","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"random689"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"random689"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"random689"},"content":"            String response \u003d pika.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"random689"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"random689"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"random689"},"content":"                    DialogBox.getPikaDialog(response, pikaImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"random689"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"random689"},"content":"        } catch (PikaException | IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"random689"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"random689"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"random689"},"content":"                    DialogBox.getErrorDialog(e.getMessage(), pikaImage));","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"random689"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"random689":82}},{"path":"src/main/java/pika/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import pika.command.AddCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import pika.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import pika.command.DeleteCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import pika.command.DoneCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import pika.command.ExitCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import pika.command.FindCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import pika.command.ListCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"import pika.command.TagCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"import pika.exception.PikaException;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"public class Parser { //The Parser to handle the inputs from the terminal","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"     * Converts the input to the proper command and returns an error if the input is not valid.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"     * @param input User input","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     * @return the new Command","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"     * @throws PikaException If the input is not of the right format","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"    public static Command parse(String input) throws PikaException {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"        String command;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"        String details;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"        int spaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        if (spaceIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"            command \u003d input;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            details \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"            command \u003d input.substring(0, spaceIndex).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"            details \u003d input.substring(spaceIndex).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"        switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"            return new ExitCommand(details);","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"            return new AddCommand(command, details);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"            return new AddCommand(command, details);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"            return new AddCommand(command, details);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"            return new DoneCommand(details);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"            return new ListCommand(details);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"            return new DeleteCommand(details);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"            return new FindCommand(details);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"        case \"tag\":","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"            return new TagCommand(details);","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"            throw new PikaException(\"Pika pi!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":65}},{"path":"src/main/java/pika/ui/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"import java.io.File;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"public class Storage { //Storage class used to handle the writing of the file after each actions","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"    private static Path listPath;","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"     * Constructor for Storage Class.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"     * @param path the filepath where the txt file will be/is created","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"        assert path !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        Path filePath \u003d Paths.get(path);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"            new File(filePath.toString()).mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"        listPath \u003d Paths.get(path, \"task.txt\");","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     * Reads the existing txt file if a previous one was already made.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     * @return the BufferedReader to read the file","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"     * @throws FileNotFoundException Handles if the files was not there previously, meaning need make new file","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"    public BufferedReader loadTasks() throws FileNotFoundException {","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"        return new BufferedReader(new FileReader(listPath.toString()));","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"     * Updates the text each time after any new action is done.","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"     * @param tasks The list of tasks that the bot is using","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"     * @throws IOException handles if the filepath/file has issues","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"    public static void updateText(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"        BufferedWriter botList \u003d new BufferedWriter(","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"                new FileWriter(listPath.toString()));","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"        for (int i \u003d 0; i \u003c tasks.getCount(); i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"            botList.write(tasks.get(i).write() + \"\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"        botList.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":59}},{"path":"src/main/java/pika/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"package pika.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"import pika.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"import pika.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"public class Ui { //IU Class used to handle the interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"     * Calls the goodbye message for Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"     * @return Goodbye message","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"    public static String goodByeMessage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"        return \"Pika...chuuuuu....\";","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"     * Calls the message to inform the user that the task has been added successfully.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"random689"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"random689"},"content":"     * @return Added message","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"random689"},"content":"    public static String addedMessage(TaskList taskList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"random689"},"content":"        assert taskList !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"random689"},"content":"        return \"pika pika! I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"random689"},"content":"                + \"  \" + (taskList.get(taskList.getCount() - 1)) + \"\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"random689"},"content":"                + \"Now you have \" + taskList.getCount() + \" in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"random689"},"content":"     * Prints the list of task for the users.","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"random689"},"content":"     * @param taskList Takes in the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"random689"},"content":"     * @return The list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"random689"},"content":"    public static String printList(TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"random689"},"content":"        assert taskList !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"random689"},"content":"        return taskList.printList();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"random689"},"content":"     * Prints the list of task for the users with the pattern in the task name.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"random689"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"random689"},"content":"     * @param pattern  pattern to be searched","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"random689"},"content":"     * @return List of task with search term in task details","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"random689"},"content":"    public static String searchList(TaskList taskList, String pattern) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"random689"},"content":"        assert pattern !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"random689"},"content":"        assert taskList !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"random689"},"content":"        return taskList.searchList(pattern);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"random689"},"content":"     * Prints the done Message to inform the user that the task has been marked as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"random689"},"content":"     * @param msg task\u0027s message when marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"random689"},"content":"     * @return done Message","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"random689"},"content":"    public static String doneMessage(String msg) {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"random689"},"content":"        assert msg !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"random689"},"content":"        return \"Nice! Pika marked this task as done:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"random689"},"content":"                + \"  \" + msg;","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"random689"},"content":"     * Prints the deleted message to inform the user that the task has been deleted properly.","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"random689"},"content":"     * @param task  Task to be deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"random689"},"content":"     * @param index The number of tasks that remains in the list","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"random689"},"content":"     * @return Deletion message","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"random689"},"content":"    public static String deleteMessage(Task task, int index) {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"random689"},"content":"        assert task !\u003d null : \"Pika Pi, this is not valid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"random689"},"content":"        return \"Pika PIIIIII!. Pika removed this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"random689"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"random689"},"content":"                + \"Now you have \" + index + \" in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"random689"},"content":"     * Prints the error to inform the user that their file format is incorrect.","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"random689"},"content":"     * @return Error message","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"random689"},"content":"    public static String loadingErrorMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"random689"},"content":"        return \"Pika pi!! It seems like your file format is incorrect!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"random689"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"random689"},"content":"     * Prints the message to inform the user the tag has been added.","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"random689"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"random689"},"content":"     * @param index Index of the task that is to be tagged","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"random689"},"content":"     * @param tag The tag name","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"random689"},"content":"     * @return The tagged message","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"random689"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"random689"},"content":"    public static String addedTagMessage(int index, String tag) {","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"random689"},"content":"        return \"pika pika! I\u0027ve added tag \u0027\" + tag + \"\u0027 to task \" + index + \"!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"random689"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"random689"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":100}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"                \u003cFont name\u003d\"Verdana\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"random689"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"random689":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"pika.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"random689"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"random689"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"random689":19}},{"path":"text-ui-test/data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"D | 0 | return book | Aug 25 2021 0600PM","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"E | 1 | project meeting | Aug 27 2021 1000PM","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"E | 0 | project meeting | Aug 20 2021 0100AM","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"random689":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"random689"},"content":"event project meeting","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"random689"},"content":"deadline feed cats","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"random689"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"random689"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"random689"},"content":"deadline return book /by 2021-08-25 18:00","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"random689"},"content":"event project meeting /at 2021-08-27 22:00","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"random689"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"random689"},"content":"random","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"random689"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"random689"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"random689"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"random689"},"content":"todo find cats","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"random689"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"random689"},"content":"event project meeting /at 2021-08-20 01:00","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"random689"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"random689"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"random689":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"random689"},"content":"java -classpath ..\\bin pika.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"random689":1,"-":20}}]
