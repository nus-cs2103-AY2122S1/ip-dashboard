[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"# duke project template","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limzk126":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    archiveBaseName \u003d \"anniezero\"","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limzk126":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"# User guide","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"![image](AnnieZero_logo.png)  ","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"## Introduction","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"AnnieZero is a lightweight desktop app that helps you keep track of your tasks on the go. Interaction with AnnieZero is done via a Command-Line-Interface(CLI) for simplicity and efficiency.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"## Navigation","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":" - **App set-up**","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"\t - [Quick-start](#quick-start)","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"\t - [GUI showcase](#gui-showcase)","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" - **Features**","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"\t - [Listing all your tasks: `list`](#listing-all-your-tasks-list)","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"\t - [Adding a todo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"\t - [Adding a deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"\t - [Adding an event task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"\t - [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"\t - [Marking a task as done: `done`](#marking-a-task-as-done-done)","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"\t - [Finding specified tasks: `find`](#finding-specified-tasks-find)","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"\t - [Exiting the app: `bye`](#exiting-the-app-bye)","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"\t - [Saving tasks](#saving-tasks)","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"## App set-up","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"### Quick-start","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"1.  Ensure you have  `Java 11`  or above installed in your computer.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"2.  Copy the  `anniezero.jar`  file to the folder you want to use as the home folder for AnnieZero.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"3.  Open your terminal and navigate to the home folder for Anniezero.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"4.  Run  `java -jar anniezero.jar`  to start the program.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"5.  You can now start tracking your tasks 😃","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"### GUI showcase","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"![image](Ui.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"### Listing all your tasks: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"Format: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"Lists all the tasks currently in your task list. ","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"Expected outcome:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"A numbered list of your current tasks will be shown.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"Adds a todo tasks to your current task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"- The description of this todo task should be stated in `DESCRIPTION`. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"Expected outcome:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"AnnieZero will notify you with a message displaying the task details if the task has been successfully added.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"Example of usage:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"1. `todo learn baking` will add a todo task with description *learn baking*.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"2. `todo eat breakfast` will add a todo task with description *eat breakfast*.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"Format: `deadline DESCRIPTION / BY_DATE BY_TIME`","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"Adds a deadline tasks to your current task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"- The description of this deadline task should be stated in","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"   `DESCRIPTION`. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"- The deadline date of this deadline task should be stated in","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"   `BY_DATE`, in `YYYY-MM-dd` format. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"- The deadline time of this deadline task should be stated in","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"   `BY_TIME`, in `hh:mm` format. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"- There must only be one **spacing** between `BY_DATE` and `BY_TIME`.","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"Expected outcome:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"AnnieZero will notify you with a message displaying the task details","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"if the task has been successfully added.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"Expected of usage:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"1. `deadline cs999 assignment / 2021-10-19 23:59` will add a tasks named *cs999 assignment* that has a deadline of 19 October 2021, 11.59pm.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"2. `deadline Quiz / 2021-10-20 09:30` will add a tasks named *Quiz* that has a deadline of 20 october 2021, 9.30am.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"### Adding an event task: event","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"Format: `event DESCRIPTION / AT_DATE START_TIMEtEND_TIME`","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"Adds a deadline tasks to your current task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"- The description of this deadline task should be stated in","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"   `DESCRIPTION`. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"- The event date of this event task should be stated in","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"   `AT_DATE`. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"- The event start time of this event task should be stated in","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"   `START_TIME`. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"- The event end time of this event task should be stated in `END_TIME`. It cannot be left empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"- There must only be one **spacing** between `BY_DATE` and `START_TIMEtEND_TIME`.","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"- There must be a letter **t** between `START_TIME` and `END_TIME`.","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"Expected outcome:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"AnnieZero will notify you with a message displaying the task details","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"if the task has been successfully added.","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"Example of usage:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"1. `event beach day / 2021-11-01 08:30t12:00` will add a task named *beach day* that happens on 1 November 2021 from 8.30am to 12pm.","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"2. `event gala premier / 2021-11-02 18:00t23:00` will a task named *gala premier* that happens on 2 November 2021 from 6pm to 11.30pm  ","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"Deletes the task with `INDEX` (shown in  `list`).","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"Expected outcome:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"AnnieZero will notify you with a message displaying the task details","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"of the successfully deleted task.","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Example of usage:  ","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"1. `delete 2`  will delete the 2nd task in the list.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"Deletes the task with `INDEX` (shown in  `list`).","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Expected outcome:  ","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"AnnieZero will notify you with a message displaying the task details","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"of the successfully marked task.","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"Example of usage:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"1. `mark 3`  will delete the 3rd task in the list.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"### Finding specified tasks: `find`","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"Finds tasks which description matches the `KEYWORD`.","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"- The `KEYWORD` can be a subsequence of the task\u0027s description. e.g. `find sm rhol` will match a task named `summer holiday`.","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"- The `KEYWORD` is case-insensitive. e.g. `find eat fruits` will match a task named `Eat FruiTs`.","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"- The spacing in KEYWORD does not matter. e.g `find e      b f   ast` will match a task named `eat breakfast`.","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"Expected outcome:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"A list of tasks with description that matches the `KEYWORD` will be shown.","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"Example of usage:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"1. `find d w sc` will find a task named `Date with Skittle-chan`.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"2. `find learnbaking` will find a task named `learn baking`.  ","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"3. `find un` will find a task named `brunch with skittle` as well as `University exam`.","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"### Exiting the app: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"Format: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"Saves the tasks into the hard drive and exits the app.","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"Expected outcome:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"AnnieZero will say goodbye and close the app after a short pause.","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"### Saving tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"Tasks are saved automatically whenever a new task is added and when you exit.","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"limzk126":127,"-":26}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    public Label getDialog() {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        return dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"    public ImageView getDisplayPicture() {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        return displayPicture;","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"        setMargin(tmp.get(0), new Insets(0, 10, 0, 0));","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"     * Creates a DialogBox object and modifies its CSS style attributes.","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"     * @param text Text to be contained in DialogBox.","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"     * @param img Image to be contained in DialogBox.","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"     * @return DialogBox to display on GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"        db.getDialog().setStyle(\"-fx-background-color: azure; -fx-padding: 5 5 5 5\");","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        setMargin(db.getDisplayPicture(), new Insets(0, 0, 0, 10));","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        db.setPadding(new Insets(10, 0, 10, 25));","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"     * Creates a DialogBox object and modifies its CSS style attributes.","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"     * DialogBox\u0027s nodes are reversed in positioning.","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"     * @param text Text to be contained in DialogBox.","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"     * @param img Image to be contained in DialogBox.","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"     * @return DialogBox to display on GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"        db.getDialog().setStyle(\"-fx-background-color: azure; -fx-padding: 5 5 5 5\");","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"        db.setPadding(new Insets(10, 10, 10, 0));","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limzk126":92}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.misc.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" * Driver class to simulate the \u0027Annie\u0027 chat bot program.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"public class Duke {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    private final TaskList tl;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private final Parser p;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private boolean isExited;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case directory of data storage file is invalid.","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        tl \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        tl.initialise();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        p \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        isExited \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    public boolean getIsExited() {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"        return isExited;","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     * Returns an appropriate text reply for duke in the dialog box according","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     * to user\u0027s input message.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     * @return A text that duke should reply with.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"            Command command \u003d p.parseCommand(input.trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"            if (command.getIsBye()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"                isExited \u003d true;","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"            return command.execute(tl);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"            return e.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":52}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limzk126":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/Duke.css\").toExternalForm());","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"            stage.setTitle(\"AnnieZero\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limzk126":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.gif\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     * Sets some properties before running duke.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        // Display Welcome Message.","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"                (Ui.WELCOME_MSG, dukeImage));","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        dialogContainer.setMinHeight(scrollPane.getPrefHeight());","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    public void setDuke() {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"            duke \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                    e.toString(), dukeImage));","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        // To simulate a slight pause when chat bot is signaled to exit.","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        if (duke.getIsExited()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"            delay.play();","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limzk126":79}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" * AddDeadlineCommand class which represents a command to add a Deadline task.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private final String[] args;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     * Constructor for AddDeadlineCommand class.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * @param args Parsed input that contains type, date and time of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public AddDeadlineCommand(String[] args) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * Executes the operation to add the Deadline task.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        assert args.length \u003d\u003d 3;","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        Task task \u003d new Deadline(args[0], args[1], args[2]);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        return Ui.ADD_MSG","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"                + tl.addTask(task)","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"                + \"Current tasks count: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"                + tl.getSize()","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"                + \"\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":47}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" * AddEventCommand class which represents the command to add an Event task.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private final String[] args;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     * Constructor for AddEventCommand class.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * @param args Parsed input that contains the type, date and time of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public AddEventCommand(String[] args) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * Executes the operation to add the Event task.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        assert args.length \u003d\u003d 3;","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        Task task \u003d new Event(args[0], args[1], args[2]);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        return Ui.ADD_MSG","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"                + tl.addTask(task)","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"                + \"Current tasks count: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"                + tl.getSize()","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"                + \"\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":47}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" * AddTodoCommand class to represent the command to add a Todo task.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private final String inputSuffix;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     * Constructor for AddTodoCommand class.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * @param inputSuffix The task\u0027s description.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public AddTodoCommand(String inputSuffix) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        this.inputSuffix \u003d inputSuffix;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * Executes the operation to add the Todo task.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        assert !inputSuffix.isEmpty();","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        Task task \u003d new Todo(inputSuffix);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        return Ui.ADD_MSG","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"                + tl.addTask(task)","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"                + \"Current tasks count: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"                + tl.getSize()","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"                + \"\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":48}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":" * ByeCommand class which represents the command to exit Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"     * Constructor for ByeCommand class.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"        isBye \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     * Executes the data saving operation.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        tl.saveData();","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        return Ui.GOODBYE_MSG;","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":" * Command class to represent an executable command.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     * Executes the appropriate operations according to command type.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case of Duke related errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    public abstract String execute(TaskList tl) throws DukeException, IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * Returns whether this command is a ByeCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     * @return Whether command is a ByeCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    public abstract boolean getIsBye();","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" * DeleteCommand class to represent a command to delete a specific task.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    private final int idx;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     * @param idx The task number of the task to be deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     * Executes the task deletion operation.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case of Duke related errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) throws DukeException, IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        return Ui.DELETE_MSG + tl.deleteTask(idx);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":41}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" * DoneCommand class to represent a command to mark a task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    private final int idx;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"     * Constructor for DoneCommand class.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     * @param idx The task number of the task to be marked as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    public DoneCommand(int idx) {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     * Executes the operation to mark the task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case of Duke related errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) throws DukeException, IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        return Ui.DONE_MSG + tl.completeTask(idx);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":" * FindCommand class to represent command to find specific tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    private final String inputSuffix;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"     * Constructor for FindCommand class.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     * @param inputSuffix The keyword to search for tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    public FindCommand(String inputSuffix) {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        this.inputSuffix \u003d inputSuffix;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     * Executes the operation to find specified tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        return Ui.FIND_MSG + tl.findTasks(inputSuffix);","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":" * ListCommand class to represent the command to list the current tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    private final boolean isBye;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"     * Constructor for ListCommand class.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * Executes the operation to list the current tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     * @param tl The current TaskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     * @return String to notify user of successful command execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    public String execute(TaskList tl) {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"        return Ui.LIST_MSG + tl.displayList();","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    public boolean getIsBye() {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        return isBye;","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":32}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class that is unique to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     * @param message Error message to be displayed.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":16}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle Invalid/non-existent commands.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidCommandException class.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c I do not understand your command!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":14}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle the wrong format for dates.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidNoDateException class.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    public InvalidDateException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c but this date format is invalid!\"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"                + \"Please follow this format: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"                + \"[yyyy-MM-dd].\");","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":17}},{"path":"src/main/java/duke/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle the wrong format for event and deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidDateException class.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    public InvalidFormatException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c but this format is invalid!\"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"                + \"Please follow this format:\"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"                + \" [\u003cType\u003e \u003cDescription\u003e / \u003cDate\u003e \u003cTime\u003e].\");","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":17}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle the marking of non-existing tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidIndexException class.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c but this task does not exist!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":14}},{"path":"src/main/java/duke/exception/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * InvalidTimeException class to handle invalid time formats.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidTimeException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidNoDateException class.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    public InvalidTimeException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c but this time format is invalid!\"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"                + \"Please follow this format: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"                + \"[hh:mm].\");","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":17}},{"path":"src/main/java/duke/misc/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidTimeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"import duke.task.DateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":" * Parser class to handle parsing of user command inputs.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public Parser() {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * Parses the command input by user.","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     * @param input User\u0027s command input.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     * @return Appropriate executable command according to user command input.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case the input is invalid.","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case the directory of data storage file is non-existent.","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    public Command parseCommand(String input) throws DukeException, IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        int idx \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        if (idx \u003e\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"            String prefixArguments \u003d input.substring(0, idx);","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"            String suffixArguments \u003d input.substring(idx + 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"            return handleMultiArgCommand(prefixArguments, suffixArguments);","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"            return handleOneArgCommand(input);","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"    // Handles one argument commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    private Command handleOneArgCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        switch (input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"            return makeByeCommand();","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"        case \"list\":","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"            return makeListCommand();","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"        default:","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"    // Handles multi argument commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"    private Command handleMultiArgCommand(","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"            String prefixArguments, String suffixArguments) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"        switch (prefixArguments) {","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        case \"done\":","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"            return makeDoneCommand(suffixArguments);","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"            return makeDeleteCommand(suffixArguments);","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"        case \"find\":","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"            return makeFindCommand(suffixArguments);","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"            return makeAddDeadlineCommand(suffixArguments);","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"            return makeTodoCommand(suffixArguments);","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"            return makeEventCommand(suffixArguments);","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"     * Parses the user input for event time range.","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"     * @param time User input for event time range.","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"     * @return Parsed user input for event time range.","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"    public static String[] parseEventTime(String time) {","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"        return time.split(\"t\");","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"     * Handles parsing of the stored tasks data for Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"     * @param taskData The task\u0027s stored data.","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"     * @return The appropriate Task object.","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"    public static Task parseStoredTaskData(String taskData) {","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"        String[] args \u003d taskData.split(\" // \");","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        String taskType \u003d args[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        String description \u003d args[2];","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"        Boolean isTaskDone \u003d Integer.parseInt(args[1]) !\u003d 0;","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"        assert args.length \u003d\u003d 3 || args.length \u003d\u003d 5;","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"        if (taskType.equals(\"Todo\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"            return new Todo(description, isTaskDone);","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"        String date \u003d args[3];","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"        String time \u003d args[4];","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"        if (taskType.equals(\"Event\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"            return new Event(description, date, time, isTaskDone);","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"            assert taskType.equals(\"Deadline\");","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"            return new Deadline(description, date, time, isTaskDone);","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"    // Extracts the date and time from user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"    private String[] parseDateTime(String dateTimeArg) {","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"        int idx \u003d dateTimeArg.indexOf(\" \");","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"        // The \"x\" literals serve as a filler to prevent null array variables.","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"        String[] res \u003d {\"x\", \"x\"};","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"        if (idx \u003e\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"            // Date argument","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"            res[0] \u003d dateTimeArg.substring(0, idx);","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"            // Time argument","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"            res[1] \u003d dateTimeArg.substring(idx + 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"            return res;","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"        res[0] \u003d dateTimeArg;","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"        return res;","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"    // Extracts the description and date/time from user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"    private String[] parseSuffixArgs(String suffixArguments) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"        if (!suffixArguments.matches(\"[\\\\s\\\\S]+/[\\\\s\\\\S]+\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"        String[] args \u003d suffixArguments.split(\"/\");","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"limzk126"},"content":"        String description \u003d args[0].trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"limzk126"},"content":"        String dateTimeArg \u003d args[1].trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"limzk126"},"content":"        String[] dateAndTime \u003d parseDateTime(dateTimeArg);","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"limzk126"},"content":"        String date \u003d dateAndTime[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"limzk126"},"content":"        String time \u003d dateAndTime[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"        if (DateTime.isInvalidDate(date)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"        if (isInvalidTime(time)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"        String[] res \u003d new String[3];","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"        res[0] \u003d description;","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"        res[1] \u003d date;","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"limzk126"},"content":"        res[2] \u003d time;","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"limzk126"},"content":"        return res;","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"    // Checks the validity of time for both deadline and event tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"    private boolean isInvalidTime(String time) {","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"        // Checks time for deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"        if (!DateTime.isInvalidTime(time)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"limzk126"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":180,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"limzk126"},"content":"        // Checks time range for event task.","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"limzk126"},"content":"        int tIdx \u003d time.indexOf(\"t\");","lastModifiedDate":"2021-09-16"},{"lineNumber":183,"author":{"gitId":"limzk126"},"content":"        String timeStart \u003d time.substring(0, tIdx);","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"limzk126"},"content":"        String timeEnd \u003d time.substring(tIdx + 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":185,"author":{"gitId":"limzk126"},"content":"        boolean isInvalidTimeStart \u003d DateTime.isInvalidTime(timeStart);","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"limzk126"},"content":"        boolean isInvalidTimeEnd \u003d DateTime.isInvalidTime(timeEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"limzk126"},"content":"        return isInvalidTimeStart || isInvalidTimeEnd;","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":191,"author":{"gitId":"limzk126"},"content":"    private Command makeByeCommand() {","lastModifiedDate":"2021-09-16"},{"lineNumber":192,"author":{"gitId":"limzk126"},"content":"        return new ByeCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"limzk126"},"content":"    private Command makeListCommand() {","lastModifiedDate":"2021-09-16"},{"lineNumber":196,"author":{"gitId":"limzk126"},"content":"        return new ListCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"limzk126"},"content":"    private Command makeDeleteCommand(String inputSuffix) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":201,"author":{"gitId":"limzk126"},"content":"            int taskIdx \u003d Integer.parseInt(inputSuffix);","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"limzk126"},"content":"            return new DeleteCommand(taskIdx);","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"limzk126"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":204,"author":{"gitId":"limzk126"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":205,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"limzk126"},"content":"    private Command makeDoneCommand(String inputSuffix) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":210,"author":{"gitId":"limzk126"},"content":"            int taskIdx \u003d Integer.parseInt(inputSuffix);","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"limzk126"},"content":"            return new DoneCommand(taskIdx);","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"limzk126"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"limzk126"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":214,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":215,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":216,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"limzk126"},"content":"    private Command makeFindCommand(String inputSuffix) throws InvalidCommandException {","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"limzk126"},"content":"        if (!inputSuffix.matches(\"[\\\\s\\\\S]+\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"limzk126"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"limzk126"},"content":"        return new FindCommand(inputSuffix);","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"limzk126"},"content":"    private Command makeAddDeadlineCommand(String inputSuffix) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"limzk126"},"content":"        String[] args \u003d parseSuffixArgs(inputSuffix);","lastModifiedDate":"2021-09-16"},{"lineNumber":226,"author":{"gitId":"limzk126"},"content":"        return new AddDeadlineCommand(args);","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"limzk126"},"content":"    private Command makeEventCommand(String inputSuffix) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"limzk126"},"content":"        String[] args \u003d parseSuffixArgs(inputSuffix);","lastModifiedDate":"2021-09-16"},{"lineNumber":231,"author":{"gitId":"limzk126"},"content":"        return new AddEventCommand(args);","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"limzk126"},"content":"    private Command makeTodoCommand(String inputSuffix) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"limzk126"},"content":"        if (!inputSuffix.matches(\"[\\\\s\\\\S]+\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"limzk126"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"limzk126"},"content":"        return new AddTodoCommand(inputSuffix);","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":240,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":240}},{"path":"src/main/java/duke/misc/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" * Storage class to retrieve and store tasks in Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    private final String currentDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    private final Path filePath \u003d Paths.get(currentDirectory, \"Data\", \"duke.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    private final boolean filePathExists \u003d Files.exists(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    private final boolean fileDirExists \u003d Files.exists(filePath.getParent());","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    public Storage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * Reads data from duke.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     * @return ArrayList of saved tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case the file directory is invalid..","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    public ArrayList\u003cTask\u003e readData() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        if (!filePathExists) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"            return al;","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        File file \u003d new File(filePath.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"            String taskData \u003d sc.nextLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"            Task task \u003d Parser.parseStoredTaskData(taskData);","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"            al.add(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        return al;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"     * Writes data into duke.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"     * @param al The ArrayList of tasks to write from.","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case the file directory is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    public void writeData(ArrayList\u003cTask\u003e al) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        if (!fileDirExists) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"            Path parentPath \u003d filePath.getParent();","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"            File parentDir \u003d parentPath.toFile();","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"            parentDir.mkdir();","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"        FileWriter fw \u003d new FileWriter(filePath.toFile());","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"        String data \u003d al.stream()","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"                .map(Task::getData)","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"        fw.write(data);","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":70}},{"path":"src/main/java/duke/misc/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":" * TaskList class which encapsulates all tasks, as well as handle information and","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":" * operations relating to the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * Initialises the TaskList using the stored data.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public void initialise() throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        tasks \u003d storage.readData();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * Returns size of current TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     * @return size of current TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"     * Creates a String with all task information appended in rows.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     * @return String of all task information.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    public String displayList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"                .mapToObj(idx -\u003e String.format(\"%d. %s\", idx + 1, tasks.get(idx).toString()))","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"     * Adds a task to current TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"     * @return The String output by toString method of task.","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"    public String addTask(Task task) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"        saveData();","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"        return task.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"     * Deletes specified task from current TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"     * @param idx Index of task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"     * @return The String output by toString method of task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case index of task is out of bounds.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    public String deleteTask(int idx) throws DukeException, IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"        if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"        String message \u003d tasks.get(idx - 1).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"        tasks.remove(idx - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"        saveData();","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"        return message;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"     * Marks specified task from current TaskList as done.","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"     * @param idx Index of task to be marked completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"     * @return The String output by toString method of task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case if index of task is out of bounds.","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"    public String completeTask(int idx) throws DukeException, IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"        if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"        tasks.get(idx - 1).markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"        saveData();","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"        return tasks.get(idx - 1).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"     * Saves all tasks into specified file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid file directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"    public void saveData() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"        storage.writeData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"     * Checks if String b is a subsequence of String a.","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"     * @param a The \u0027Container\u0027 String.","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"     * @param b The \u0027Containee\u0027 String.","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"     * @return The boolean value of the subsequence query.","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"    public boolean isSubSequence(String a, String b) {","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"        assert !a.isEmpty();","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"        // Convert all characters to lower case and remove all whitespace characters.","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"        a \u003d a.toLowerCase().replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"        b \u003d b.toLowerCase().replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"        int j \u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"        while (i \u003c a.length() \u0026\u0026 j \u003c b.length()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"            if (a.charAt(i) \u003d\u003d b.charAt(j)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"                j++;","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"            i++;","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"        return j \u003d\u003d b.length();","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"     * Finds all tasks with specified keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"     * @param key Abbreviation or specific keyword.","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"     * @return String of all tasks found appended in rows.","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"    public String findTasks(String key) {","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"        return tasks.stream()","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"                .filter(task -\u003e isSubSequence(task.getDescription(), key))","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"                .map(Task::toString)","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"                .map(description -\u003e \"- \" + description)","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":152}},{"path":"src/main/java/duke/misc/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Ui class to encapsulate display messages for input/output of Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    /** Welcome message to display when duke starts */","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    public static final String WELCOME_MSG \u003d \"Hi I am Annie!\\nHow can I assist you?\";","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    /** Message to display when ByeCommand executed. */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    public static final String GOODBYE_MSG \u003d \"Bye. See you soon!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    /** Message to display when listCommand executed. */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    public static final String LIST_MSG \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    /** Message to display when a task creation command is executed. */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    public static final String ADD_MSG \u003d \"Gotcha. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    /** Message to display when doneCommand executed. */","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    public static final String DONE_MSG \u003d \"I have marked this task as done:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    /** Message to display when deleteCommand executed. */","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    public static final String DELETE_MSG \u003d \"I have deleted this task:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    /** Message to display when FindCommand executed. */","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    public static final String FIND_MSG \u003d \"Here are what i found:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":21}},{"path":"src/main/java/duke/task/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":" * DateTime class which encapsulates a task\u0027s date and time. It also enables","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" * the date and time to be reformatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"public class DateTime {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     * Constructor for DateTime class.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * @param date The date in yyyy-MM-dd format.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * @param time The time in HH:mm format.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    DateTime(String date, String time) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        this.time \u003d LocalTime.parse(time);","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     * Constructor for DateTime class.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     * @param date The date in yyyy-MM-dd format.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     * @param startTime The time in HH:mm format.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     * @param endTime The time in HH:mm format.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    DateTime(String date, String startTime, String endTime) {","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        this.startTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"     * Returns original date used to create the DateTime class.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     * @return String of original date.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"        return date.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     * Returns original time used to create the DateTime class.","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"     * @return String of original time.","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    public String getTime() {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"        return time.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"     * Returns original time range used to create the DateTime class.","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"     * @return String of original time range.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"    public String getTimeRange() {","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        return startTime.toString() + \"t\" + endTime.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"     * Checks if date has an invalid format.","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"     * @return Boolean true if invalid and boolean false otherwise.","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    public static boolean isInvalidDate(String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"            DATE_FORMATTER.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"     * Checks if time has an invalid format.","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"     * @param time The time to be checked","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"     * @return Boolean true if invalid and boolean false otherwise.","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"    public static boolean isInvalidTime(String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"            TIME_FORMATTER.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"     * Formats the input date.","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"     * @return The String representation of the date in d MMM yyy format.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"     * Formats the input time.","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"     * @return The String representation of the time in KK.mma format.","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"    public String getFormattedTime() {","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"hh.mma\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"     * Formats the input time range.","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"     * @return The String representation of the time range in KK.mma format.","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"    public String getFormattedTimeRange() {","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"        return startTime.format(DateTimeFormatter.ofPattern(\"hh.mma\"))","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"                + \" to \"","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"                + endTime.format(DateTimeFormatter.ofPattern(\"hh.mma\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":130}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Deadline class to represent a task with a deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    private final DateTime byDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"     * @param byDate Date of task deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     * @param byTime Time of task deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    public Deadline(String description, String byDate, String byTime) {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"        this.byDateTime \u003d new DateTime(byDate, byTime);","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * @param byDate Date of task deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     * @param byTime Time of task deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    public Deadline(String description, String byDate, String byTime, Boolean isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"        this.byDateTime \u003d new DateTime(byDate, byTime);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for storage in duke.txt.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"        return \"Deadline // \" + (super.getIsDone() ? 1 : 0) + \" // \" + super.getDescription()","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"                + \" // \" + byDateTime.getDate() + \" // \" + byDateTime.getTime();","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"     * Returns a String describing details of the deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     * @return A String describing details of the deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                + \" (by: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"                + byDateTime.getFormattedDate()","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"                + \" \"","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"                + byDateTime.getFormattedTime()","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"                + \")\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":60}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import duke.misc.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" * Event class which represents a task with event date/time.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    private final DateTime atDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     * Constructor for Event class.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     * @param description Description of event.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"     * @param atDate Date of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"     * @param atTime Time of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    public Event(String description, String atDate, String atTime) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"        String[] timeRange \u003d Parser.parseEventTime(atTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        this.atDateTime \u003d new DateTime(atDate, timeRange[0], timeRange[1]);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * Constructor for Event class.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     * @param description Description of event task.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * @param atDate Date of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * @param atTime Time of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     * @param isDone Completion status of event.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public Event(String description, String atDate, String atTime, Boolean isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        String[] timeRange \u003d Parser.parseEventTime(atTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        String startTime \u003d timeRange[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        String endTime \u003d timeRange[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        this.atDateTime \u003d new DateTime(atDate, startTime, endTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for storage in duke.txt.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        return \"Event // \" + (super.getIsDone() ? 1 : 0) + \" // \" + super.getDescription()","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"                + \" // \" + atDateTime.getDate() + \" // \" + atDateTime.getTimeRange();","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"     * Returns a String describing details of the event task.","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     * @return A String Describing details of the event task.","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"                + \" (at: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"                + atDateTime.getFormattedDate()","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"                + \" \"","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"                + atDateTime.getFormattedTimeRange()","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"                + \")\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":66}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Task class which encapsulates task description and status of completion.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     * Constructor of Task class.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        return isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        return description;","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * Returns an icon to indicate completion status of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @return \"X\" or \" \" depending on status.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for storage in duke.txt.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        return (getIsDone() ? 1 : 0) + \" // \" + getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"     * Returns a string describing details of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     * @return A String describing details of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":62}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Todo class which represents a task without a deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     * Constructor of Todo class.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     * @param description Description of todo task.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     * Constructor of Todo class.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * @param description Description of todo task.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for storage in duke.txt.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        return \"Todo // \" + (super.getIsDone() ? 1 : 0) + \" // \" + super.getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     * Returns a string describing details of the todo task.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     * @return A String describing details of the todo task.","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        return \"[T]\" + super.toString() + \"\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"        \u003cfont\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        \u003c/font\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limzk126":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"\u003cAnchorPane id\u003d\"anchor\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"/\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limzk126":23}},{"path":"src/test/java/duke/misc/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    void testDelete() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"            TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"            tl.initialise();","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"            Todo task \u003d new Todo(\"bake cake\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"            tl.addTask(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"            int idx \u003d tl.getSize();","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"            assertEquals(task.toString(), tl.deleteTask(idx));","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"            fail();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    void testComplete() {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"            assertEquals(\"test\", new TaskList().completeTask(1));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"            fail();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"            assertEquals(\"duke.exception.InvalidIndexException: Sorry \u003e.\u003c but this task does not exist!\",","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"                    e.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"            fail();","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limzk126":40}},{"path":"src/test/java/duke/task/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"class DateTimeTest {","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    void getFormattedDate() {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"        DateTime dateTime \u003d new DateTime(\"2021-10-20\", \"23:59\");","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        assertEquals(\"20 Oct 2021\", dateTime.getFormattedDate());","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    void getFormattedTime() {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        DateTime dateTime \u003d new DateTime(\"2021-10-20\", \"01:59\");","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"        assertEquals(\"01.59AM\", dateTime.getFormattedTime());","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"limzk126":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"Destroy humanity","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"todoexercise","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"deadline end of the world","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"todo bake cake","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"todo make cheese","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"todo Ask Annie out for date","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"event Date with Annie / 30-08-2021","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"deadline project 1 / 2021-08-30","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"event mooncake festival /","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"event Annie\u0027s birthday party / 2022-01-26","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"done -100","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"done with life","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"find Annie","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"find annie","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"delete 3","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"limzk126":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/misc/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"exec bash","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"limzk126":4,"-":34}}]
