[{"path":"Test/duke/misc/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"  ","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":4}},{"path":"Test/duke/misc/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"  ","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":" * Encapsulates task Deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * @author limzk126","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" * @version Level-4","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    protected String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    Deadline(String description, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"limzk126":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" * Driver class to simulate the \u0027Annie\u0027 chat bot program.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":" * @author limzk126","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":" * @version Level-4","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    private final String LINE \u003d \"______________________________________________________________\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    private final String WELCOME_MSG \u003d \"Hi I am Annie!\\nHow can I assist you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    private final String GOODBYE_MSG \u003d \"Bye. See you soon!\";","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private final String LIST_MSG \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private final String ADD_MSG \u003d \"Gotcha. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    private final String NUMTASK_MSG \u003d \"You have %d tasks in your list now.\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    private final String DONE_MSG \u003d \"I have marked this task as done: \\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    // List to store user task inputs.","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    private final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    // Flag to indicate if program is ended by user.","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    private boolean isEnded \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /*","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * Prints a horizontal line, followed by the text input by user on a newline,","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * then finally a horizontal line on a newline.","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    private void printText(String text) {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"        System.out.printf(\"%s\", LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        System.out.println(text);","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        if (!text.equals(GOODBYE_MSG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"            System.out.printf(NUMTASK_MSG, taskList.size());","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        System.out.printf(\"%s\\n\", LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    // Prints a numbered checklist of the user\u0027s task.","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    private void printList() {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        int taskNum \u003d 0;","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"        System.out.printf(\"%s\", LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"        System.out.printf(\"%s\", LIST_MSG);","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"        // Print list.","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"            System.out.printf(\"%d.%s\\n\", ++taskNum, task.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"        System.out.printf(\"%s\\n\", LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"    /*","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"     * Marks the specified task as done and notifies the user that it has successfully","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"     * done so.","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"    private void completeTask(String text) {","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"        String stringTaskNum \u003d text.substring(text.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"        int num \u003d Integer.parseInt(stringTaskNum);","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        Task task \u003d taskList.get(num - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"        task.markDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        // Message to notify user.","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        String message \u003d DONE_MSG + task;","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"        printText(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"    // Adds task without deadline to list and notifies user.","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"    private void addTodo (String text) {","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"        String taskName \u003d text.substring(text.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"        // Create and add task.","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"        Todo task \u003d new Todo(taskName);","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"        // Message to notify user.","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"        String message \u003d ADD_MSG + task;","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"        printText(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"    // Adds task with deadline to list and notifies user.","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"    private void addDeadline(String text) {","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"        // Split the command by the first \u0027/\u0027.","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"        String[] str \u003d new String[2];","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"        str[0] \u003d text.substring(0, text.indexOf(\"/\")).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"        str[1] \u003d text.substring(text.indexOf(\u0027/\u0027) + 1).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"        // Retrieve name of task and its date/time.","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"        String taskName \u003d str[0].substring(str[0].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"        String taskDate \u003d str[1].substring(str[1].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"        // Create and add task.","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"        Deadline task \u003d new Deadline(taskName, taskDate);","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"        // Message to notify user.","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"        String message \u003d ADD_MSG + task;","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"        printText(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"    // Adds event to list and notifies user.","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"    private void addEvent(String text) {","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"        // Split the command by the first \u0027/\u0027.","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"        String[] str \u003d new String[2];","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"        str[0] \u003d text.substring(0, text.indexOf(\"/\")).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"        str[1] \u003d text.substring(text.indexOf(\u0027/\u0027) + 1).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"        // Retrieve name of task and its date/time.","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"        String taskName \u003d str[0].substring(str[0].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"limzk126"},"content":"        String taskDate \u003d str[1].substring(str[1].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"limzk126"},"content":"        // Create and add task.","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"limzk126"},"content":"        Event task \u003d new Event(taskName, taskDate);","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"limzk126"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"limzk126"},"content":"        // Message to notify user.","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"limzk126"},"content":"        String message \u003d ADD_MSG + task;","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"limzk126"},"content":"        printText(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"limzk126"},"content":"    // Processes text to find out what command user has issued to the program.","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"limzk126"},"content":"    private void parseText(String text) {","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"limzk126"},"content":"        if (text.equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"limzk126"},"content":"            // End program.","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"limzk126"},"content":"            isEnded \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"limzk126"},"content":"        } else if (text.equals(\"list\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"limzk126"},"content":"            // List all previous text.","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"limzk126"},"content":"            printList();","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"limzk126"},"content":"        } else if (text.matches(\"done (.*)\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"limzk126"},"content":"            // Complete task.","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"limzk126"},"content":"            completeTask(text);","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"limzk126"},"content":"        } else if (text.matches(\"todo (.*)\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"limzk126"},"content":"            // Add task without deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"limzk126"},"content":"            addTodo(text);","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"limzk126"},"content":"        } else if (text.matches(\"deadline (.*)\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"limzk126"},"content":"            // Add task with deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"limzk126"},"content":"            addDeadline(text);","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"limzk126"},"content":"        } else if (text.matches(\"event (.*)\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"limzk126"},"content":"            // Add an event.","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"limzk126"},"content":"            addEvent(text);","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"limzk126"},"content":"     * Method to simulate the program.","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"limzk126"},"content":"    public void run() {","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"limzk126"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"limzk126"},"content":"        String textInput;","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"limzk126"},"content":"        // Program starts. Say hello.","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"limzk126"},"content":"        printText(WELCOME_MSG);","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"limzk126"},"content":"        // While loop to continuously receive user input.","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"limzk126"},"content":"        while (!isEnded) {","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"limzk126"},"content":"            textInput \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"limzk126"},"content":"            parseText(textInput);","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"limzk126"},"content":"        // Program ends. Say goodbye.","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"limzk126"},"content":"        printText(GOODBYE_MSG);","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"limzk126"},"content":"        sc.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"limzk126"},"content":"     * Driver method to start program.","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"limzk126"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"limzk126"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"limzk126":177,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":" * Encapsulates event date.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * @author limzk126","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" * @version Level-4","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"limzk126":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":" * Encapsulates task description and status of completion.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * @author limzk126","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" * @version Level-4","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        return description;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"limzk126":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":" * A task without any deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * @author limzk126","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" * @version Level-4","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"limzk126":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import duke.misc.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import duke.misc.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.misc.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" * Driver class to simulate the \u0027Annie\u0027 chat bot program.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"public class Duke {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     * Method to Simulate program.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case of invalid directory.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        Ui.printBlock(Ui.WELCOME_MSG);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        while (true) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"            String command \u003d ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"            Ui.printBlock(p.execute(command, tl));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"                tl.saveData();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     * Driver method to start program.","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"            new Duke().run();","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"            System.err.println(\"File does not exist!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":45}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class that is unique to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     * @param message Error message to be displayed.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":15}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle the Invalid commands.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidCommandException class.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c I do not understand your command!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":13}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle the wrong format for dates.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidDateException extends DukeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidNoDateException class.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    public InvalidDateException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c but this format is invalid!\\nPlease follow this format: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"                \"[yyyy-MM-dd].\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":14}},{"path":"src/main/java/duke/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle the wrong format for deadlined task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidDateException class.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    public InvalidFormatException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c but this format is invalid!\\nPlease follow this format:\"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"                + \" [\u003cType\u003e \u003cDescription\u003e / \u003cDate/Time\u003e].\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":14}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Exception class to handle the marking of non-existing tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"     * Constructor for InvalidIndexException class.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"        super(\"Sorry \u003e.\u003c but this task does not exist!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":13}},{"path":"src/main/java/duke/misc/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import duke.task.DateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" * Parser class to handle user commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * Creates a Task object according to user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     * @param input User\u0027s command input.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     * @return Respective Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case of errors.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    public Task makeTask(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        int idx \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        String name \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        String[] args \u003d {};","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        if (idx \u003e\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"            name \u003d input.substring(0, idx).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"            args \u003d input.substring(idx + 1).split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        switch(name) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"                return new Todo(args[0].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"            case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"                if (!input.matches(\"event (.*)/(.*)\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"                    throw new InvalidFormatException();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"                if (!DateTime.isValidDate(args[1].trim())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"                    throw new InvalidDateException();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"                return new Event(args[0].trim(), args[1].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"                if (!input.matches(\"deadline (.*)/(.*)\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"                    throw new InvalidFormatException();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"                if (!DateTime.isValidDate(args[1].trim())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"                    throw new InvalidDateException();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"                return new Deadline(args[0].trim(), args[1].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"     * Determines the action to be executed according to user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"     * @param input User\u0027s command input.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"     * @param tl TaskList which action is executed on.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"     * @return Message according to what action is executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"    public String execute(String input, TaskList tl) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"        int idx;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"        String suffix \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"        idx \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"        if (idx \u003e\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"            suffix \u003d input.substring(idx + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"                message \u003d Ui.GOODBYE_MSG;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"                message \u003d Ui.LIST_MSG + tl.displayList();","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"            } else if (input.matches(\"done (.*)\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"                message \u003d Ui.DONE_MSG;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"                    idx \u003d Integer.parseInt(suffix);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"                message +\u003d tl.complete(idx);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"            } else if (input.matches(\"delete (.*)\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"                message \u003d Ui.DELETE_MSG;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"                    idx \u003d Integer.parseInt(suffix);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"                message +\u003d tl.delete(idx);","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"            } else if (input.matches(\"find (.*)\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"                message \u003d Ui.FIND_MSG + tl.find(suffix);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"                message \u003d Ui.ADD_MSG;","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"                Task task \u003d makeTask(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"                message +\u003d tl.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"            message \u003d e.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"        return message;","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":106}},{"path":"src/main/java/duke/misc/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":" * Storage class to retrieve and store tasks in Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    private String FILE_PATH \u003d \"C:\\\\Users\\\\Chu Heng 2\\\\Desktop\\\\cs2103T\\\\ip\\\\data\\\\duke.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     * Reads data from duke.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case directory is invalid or file does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    public ArrayList\u003cTask\u003e readData() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        f.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"            String data \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"            String[] args \u003d data.split(\" // \");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"            boolean isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"            if (Integer.parseInt(args[1]) \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"                isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"                isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"            switch(args[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"                case \"Todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"                    al.add(new Todo(args[2], isDone));","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"                case \"Event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"                    al.add(new Event(args[2], args[3], isDone));","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"                case \"Deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"                    al.add(new Deadline(args[2], args[3], isDone));","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"        return al;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"     * Writes data into duke.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"     * @param al The ArrayList to write from.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case directory is invalid or file does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    public void writeData(ArrayList\u003cTask\u003e al) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"            File f \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"            f.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"            for (int i \u003d 1; i \u003c\u003d al.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"                fw.write(al.get(i - 1).getData() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"            throw e;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":75}},{"path":"src/main/java/duke/misc/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" * TaskList class which encapsulates all tasks, as well as handle information and","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":" * operations relating to the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"            tasks \u003d storage.readData();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"            System.err.println(\"File does not exist!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * Creates a string with all task information appended in rows.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     * @return String of all task information.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    public String displayList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"        int idx \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"            sb.append(String.format(\"%d.%s\\n\", ++idx, task.toString()));","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"     * Adds a task to current TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     * @return The String output by toString method of task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    public String add(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        return task.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     * Deletes specified task from current TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"     * @param idx Index of task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"     * @return The String output by toString method of task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case the index of task is out of bounds.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    public String delete(int idx) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"        if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"        String message \u003d tasks.get(idx - 1).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"        tasks.remove(idx - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"        return message;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"     * Completes specified task from current TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"     * @param idx Index of task to be completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"     * @return The String output by toString method of task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"     * @throws DukeException In case index of task is out of bounds.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    public String complete(int idx) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"        if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"        tasks.get(idx - 1).markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"        return tasks.get(idx - 1).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"     * Saves all tasks into specified directory.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"     * @throws IOException In case directory is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"limzk126"},"content":"    public void saveData() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"limzk126"},"content":"            storage.writeData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"limzk126"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"limzk126"},"content":"            throw e;","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"limzk126"},"content":"     * Finds all tasks with specified keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"limzk126"},"content":"     * @param key keyword to search.","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"limzk126"},"content":"     * @return String of all tasks found appended in rows.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"limzk126"},"content":"    public String find(String key) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"limzk126"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"limzk126"},"content":"        int idx \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"limzk126"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"limzk126"},"content":"            if (task.getDescription().contains(key)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"limzk126"},"content":"                sb.append(String.format(\"%d.%s\\n\", ++idx, task.toString()));","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"limzk126"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"limzk126"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":115}},{"path":"src/main/java/duke/misc/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.misc;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":" * Ui class to encapsulate display messages and handle input/output of duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    static final String LINE \u003d \"_________________________________________________________________\"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"            + \"_______________________________________________________________________\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    /** Welcome message. */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    public static final String WELCOME_MSG \u003d \"Hi I am Annie!\\nHow can I assist you?\";","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    /** Goodbye message. */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    public static final String GOODBYE_MSG \u003d \"Bye. See you soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    static final String LIST_MSG \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    static final String ADD_MSG \u003d \"Gotcha. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"    static final String NUMTASK_MSG \u003d \"Your current task count: \";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    static final String DONE_MSG \u003d \"I have marked this task as done:\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"    static final String DELETE_MSG \u003d \"I have deleted this task:\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    static final String FIND_MSG \u003d \"Here are what i found:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     * Prints text with a horizontal line on top and below it.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     * @param text The text to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    public static void printBlock(String text) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"        System.out.printf(\"%s%s\\n%s\", LINE, text, LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"     * Reads in a single command.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"     * @return The command read.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":50}},{"path":"src/main/java/duke/task/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":" * DateTime class which encapsulates a task\u0027s date and time. It also enables","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":" * the date and time to be reformatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"public class DateTime {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"    static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"hh:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * Constructor for DateTIme class.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     * @param date The date in YYYY-MM-dd format.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    DateTime(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * Constructor for DateTime class.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @param date The date in yyyy-MM-dd format.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     * @param time The time in hh:mm format.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    DateTime(String date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"        this.time \u003d LocalTime.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     * Returns original date used to create the DateTime class.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"     * @return String of original date.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        return date.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     * Checks if date if in valid format. Returns true if yes and false","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"     * otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"     * @param date The time.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"     * @return The boolean value.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"            DATE_FORMATTER.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"limzk126"},"content":"     * Checks if time if in valid format. Returns true if yes and false","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"limzk126"},"content":"     * otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"limzk126"},"content":"     * @param time The time.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"limzk126"},"content":"     * @return The boolean value.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"limzk126"},"content":"    public static boolean isValidTime(String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"limzk126"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"limzk126"},"content":"            TIME_FORMATTER.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"limzk126"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"limzk126"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"limzk126"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"limzk126"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"limzk126"},"content":"     * Overrides Object class\u0027s toString method.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"limzk126"},"content":"     * @return The String representation of the date in d MMM yyy format.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"limzk126"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"limzk126":89}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Deadline class which Encapsulates task\u0027s deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    private DateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     * @param description Description of deadlined task.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"     * @param by Date/time of task deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        this.by \u003d new DateTime(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     * @param description Description of deadlined task.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * @param by Date/time of task deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    public Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        this.by \u003d new DateTime(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for storage in hard disk","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     * and returns it.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        return \"Deadline // \" + (super.getIsDone() ? 1 : 0) + \" // \" + super.getDescription()","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"                + \" // \" + by.getDate();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"     * Overrides Task class toString method.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     * @return A String describing details of Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.toString() + \")\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Event class which encapsulates event date/time.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    private DateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     * Constructor for Event class.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     * @param description Description of event.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"     * @param at Date/time of event.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        this.at \u003d new DateTime(at);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     * Constructor for Event class.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"     * @param description Description of event.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"     * @param at Data/time of event.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * @param isDone Completion status of event.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    public Event(String description, String at, Boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        this.at \u003d new DateTime(at);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for hard drive storage","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"     * and returns it.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"        return \"Event // \" + (super.getIsDone() ? 1 : 0) + \" // \" + super.getDescription()","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"                + \" // \" + at.getDate();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"     * Overrides Task class\u0027s toString method.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     * @return A String Describing details of Event class.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.toString() + \")\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Task class which encapsulates task description and status of completion.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     * Constructor of Task class.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"        return isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"     * Returns \"X\" if uncompleted and \" \" otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"     * @return \"X\" or \" \" depending on status.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"        return description;","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for storage in hard disk","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     * and returns it.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"        return (getIsDone() ? 1 : 0) + \" // \" + getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"limzk126"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"limzk126"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"limzk126"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"limzk126"},"content":"     * Overrides Object class toString method.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"limzk126"},"content":"     * @return A String describing details of Task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"limzk126"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":63}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":" * Todo class to represent a class without a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"     * Constructor of Todo class.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"     * @param description Description of a task without deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"     * Constructor of Todo class.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"     * @param description Description of a task without deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"limzk126"},"content":"     * Formats task\u0027s data into a string for storage in hard disk","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"limzk126"},"content":"     * and returns it.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"limzk126"},"content":"     * @return String containing task\u0027s data.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"limzk126"},"content":"    public String getData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"limzk126"},"content":"        return \"Todo // \" + (super.getIsDone() ? 1 : 0) + \" // \" + super.getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"limzk126"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"limzk126"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"limzk126"},"content":"     * Overrides Task class toString method.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"limzk126"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"limzk126"},"content":"     * @return A String describing details of todo class.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"limzk126"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"limzk126"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"limzk126"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"limzk126"},"content":"        return \"[T]\" + super.toString() + \"\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"limzk126"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"limzk126"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limzk126":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limzk126"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"limzk126"},"content":"Destroy humanity","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"limzk126"},"content":"todoexercise","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"limzk126"},"content":"deadline end of the world","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"limzk126"},"content":"todo bake cake","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"limzk126"},"content":"todo make cheese","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"limzk126"},"content":"todo Ask Annie out for date","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"limzk126"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"limzk126"},"content":"event Date with Annie / 30/08/2021 6pm","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"limzk126"},"content":"deadline project 1 / saturday","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"limzk126"},"content":"event mooncake festival / sunday 1pm","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"limzk126"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"limzk126"},"content":"event Annie\u0027s birthday party / 01/26/2022 5pm","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"limzk126"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"limzk126"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"limzk126"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"limzk126"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"limzk126"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"limzk126"},"content":"done -100","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"limzk126"},"content":"done with life","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"limzk126"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"limzk126"},"content":"delete 3","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"limzk126"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"limzk126"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"limzk126":24}}]
