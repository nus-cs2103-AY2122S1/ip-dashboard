[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"T | 1 | Read Lecture Notes | ","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"E | 1 | attend class | 2019-08-28 11:00","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"D | 0 | finish tutorial | 2019-08-28 15:00","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"import command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":" * Project Duke is an educational software project.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":" * It stores tasks entered by users locally and reloads then on every start-up.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"     * Creates the instance of Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"     * The path to the local file and tasklist will be initialised.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"     * @param filePath the path to the local file","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"     * Starts the Duke program.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"     * Programme will ask for input until user enters the \u0027bye\u0027 command.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"    public void run() {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"KengXIII"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"KengXIII"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"KengXIII"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"KengXIII"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"KengXIII"},"content":"                Command c \u003d Command.parse(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"KengXIII"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"KengXIII"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"KengXIII"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"KengXIII"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"KengXIII"},"content":"            } finally {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"KengXIII"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"KengXIII"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"KengXIII"},"content":"     * Creates the initialization process and run the programme when completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"KengXIII"},"content":"     * @param args","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"KengXIII"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"KengXIII":61}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidDateFormat;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import exception.NullDescription;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"import task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"import task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"    private final boolean EXIT \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"    private String taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    private String taskInfo;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"    private void checkDescription(String description, String type) throws NullDescription {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"        int numOfCharacters \u003d  type.length();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"        if (description.length() \u003c\u003d numOfCharacters || description.split(\" \").length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"            throw new NullDescription(type);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"    private void verifyDate(String dateInfo, String type) throws InvalidDateFormat {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"        switch(type) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"                if (dateInfo.split(\" /by \").length !\u003d 2 ||","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"                        dateInfo.split(\" /by \")[1].split(\" \").length !\u003d 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"                    throw new InvalidDateFormat();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"                };","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"                if (dateInfo.split(\" /at \").length !\u003d 2 ||","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"                        dateInfo.split(\" /at \")[1].split(\" \").length !\u003d 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"                    throw new InvalidDateFormat();","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"                };","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"KengXIII"},"content":"     * Abstracts out the critical information from the user\u0027s input and insert task as the taskType.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"KengXIII"},"content":"     * Initialises taskInfo and taskType with respective information.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"KengXIII"},"content":"     * @param input The complete string input by users","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"KengXIII"},"content":"     * @throws NullDescription If the description of task is empty or contains only spaces.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"KengXIII"},"content":"     * @throws InvalidDateFormat If the input does not follow the specified format YYYY-MM-DD HH:MM","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"KengXIII"},"content":"    public AddCommand(String input) throws NullDescription, InvalidDateFormat {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"KengXIII"},"content":"        this.taskType \u003d input.split(\" \")[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"KengXIII"},"content":"        switch (input.split(\" \")[0]) {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"KengXIII"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"KengXIII"},"content":"                checkDescription(input, \"todo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"KengXIII"},"content":"                this.taskInfo \u003d input.substring(5);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"KengXIII"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"KengXIII"},"content":"                checkDescription(input, \"deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"KengXIII"},"content":"                this.taskInfo \u003d input.substring(9);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"KengXIII"},"content":"                verifyDate(taskInfo, \"deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"KengXIII"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"KengXIII"},"content":"                checkDescription(input, \"event\");","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"KengXIII"},"content":"                this.taskInfo \u003d input.substring(6);","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"KengXIII"},"content":"                verifyDate(taskInfo, \"event\");","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"KengXIII"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"KengXIII"},"content":"                System.out.println(\"Something went wrong...\");","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"KengXIII"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDateFormat {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"KengXIII"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"KengXIII"},"content":"        switch(taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"KengXIII"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"KengXIII"},"content":"                newTask \u003d new Todo(taskInfo, false);","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"KengXIII"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"KengXIII"},"content":"                String deadlineDescription \u003d taskInfo.split(\" /by \")[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"KengXIII"},"content":"                String deadlineDate \u003d taskInfo.split(\" /by \")[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"KengXIII"},"content":"                newTask \u003d new Deadline(deadlineDescription, deadlineDate, false);","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"KengXIII"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"KengXIII"},"content":"                String eventDescription \u003d taskInfo.split(\" /at \")[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"KengXIII"},"content":"                String eventDate \u003d taskInfo.split(\" /at \")[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"KengXIII"},"content":"                newTask \u003d new Event(eventDescription, eventDate, false);","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"KengXIII"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"KengXIII"},"content":"                System.out.println(\"Something went wrong...\");","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"KengXIII"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"KengXIII"},"content":"        storage.write(tasks.getTaskList());","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"KengXIII"},"content":"        System.out.printf(\"\\tGot it. I\u0027ve added this task:\\n\" + \"\\t%s\\n\" + \"\\tNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"KengXIII"},"content":"                newTask, tasks.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"KengXIII"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"KengXIII"},"content":"        return EXIT;","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":108}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidDateFormat;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import exception.NullDescription;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":" * Command is the over-arching class of all possible commands supported by Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":" * Command classes will provide the instruction on how to handle user inputs.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"     * Parses the input given by users and return the correct type of command.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"     * Invalid commands will throw the respective DukeExceptions","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"     * @param input string input by users","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"     * @return The specific type of command that can be executed","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"     * @throws InvalidCommand If command cannot be understood","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"     * @throws NullDescription If AddCommand is intended but without any description","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"     * @throws InvalidDateFormat If AddCommand is intended but the date format is not followed","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"    public static Command parse(String input) throws InvalidCommand, NullDescription, InvalidDateFormat {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"        String[] output \u003d input.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"        if (output.length \u003d\u003d 0 || output[0].isEmpty() || output[0].equals(\" \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"            throw new InvalidCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"        String command \u003d output[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"        Command commandType \u003d null;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"        switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"                commandType \u003d new ExitCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"            case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"                commandType \u003d new DoneCommand(Integer.parseInt(output[1]) - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"KengXIII"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"KengXIII"},"content":"                commandType \u003d new DeleteCommand(Integer.parseInt(output[1]) - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"KengXIII"},"content":"            case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"KengXIII"},"content":"                commandType \u003d new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"KengXIII"},"content":"            case \"find\":","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"KengXIII"},"content":"                commandType \u003d new FindCommand(output[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"KengXIII"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"KengXIII"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"KengXIII"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"KengXIII"},"content":"                commandType \u003d new AddCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"KengXIII"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"KengXIII"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"KengXIII"},"content":"                throw new InvalidCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"KengXIII"},"content":"        return commandType;","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"KengXIII"},"content":"     * Execute the given command returned by parse method.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"KengXIII"},"content":"     * Each command class will have its own interaction with Ui, TaskList and Storage","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"KengXIII"},"content":"     * @param tasks the TaskList loaded from storage.","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"KengXIII"},"content":"     * @param ui Ui interface that prints messages.","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"KengXIII"},"content":"     * @param storage accesses the file location in local storage.","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"KengXIII"},"content":"     * @throws DukeException If the execution contains unexpected behaviour","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"KengXIII"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"KengXIII"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"KengXIII"},"content":"     * @return the boolean true if command is an exit command.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"KengXIII"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":82}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidValue;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":" * DeleteCommand will delete the task stored in local storage when executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"    private final boolean EXIT \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"     * Creates a delete task request using the task number i","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"     * @param i the task number to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"        this.taskNumber \u003d i;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)  throws InvalidValue {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"            Task deletedTask \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"            storage.write(tasks.getTaskList());","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"            System.out.printf(\"\\tNoted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"                    \"\\t%s\\n\" +","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"                    \"\\tNow you have %d tasks in the list.\\n\", deletedTask, tasks.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"            throw new InvalidValue();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"        return EXIT;","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":41}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidValue;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":" * DoneCommand will mark as task as completed when executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    private final boolean EXIT \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"    public DoneCommand(int i) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"        this.taskNumber \u003d i;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidValue {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"            tasks.completeTask(taskNumber);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"            storage.write(tasks.getTaskList());","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"            System.out.printf(\"\\tNice! I\u0027ve marked this task as done:\\n\" + \"\\t%s\\n\", tasks.getTask(taskNumber));","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"            throw new InvalidValue();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"        return EXIT;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":33}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":" * ExitCommand will close Duke program when executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"    private final boolean EXIT \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"        return EXIT;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":21}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    private String keyword;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"    private final boolean EXIT \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"            if (taskList.get(i).getDescription().toLowerCase(Locale.ROOT).contains(keyword.toLowerCase(Locale.ROOT))) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"                System.out.printf(\"\\t%d.%s%n\", index, taskList.get(i));","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"                index++;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"        return EXIT;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"KengXIII":38}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":" * ListCommand will list out the task number, task description and date(if applicable) when executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"        private final boolean EXIT \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"                System.out.printf(\"\\t%d.%s%n\", (i + 1), taskList.get(i));","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"        public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"            return EXIT;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":27}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package exception;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":" * DukeException is a class of exception that conveys information when thrown.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":" * Exception messages are exclusive to Duke program.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"KengXIII":9}},{"path":"src/main/java/exception/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package exception;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"public class InvalidCommand extends DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"        return \"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"KengXIII":9}},{"path":"src/main/java/exception/InvalidDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package exception;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"public class InvalidDateFormat extends DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"        return \"\\tInvalid format, please use yyyy-MM-dd for date and HH:mm for time in 24hr format.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"KengXIII":9}},{"path":"src/main/java/exception/InvalidValue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package exception;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"public class InvalidValue extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"        return \"\\t☹ OOPS!!! I\u0027m sorry, but the task number seems to be invalid.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"KengXIII":9}},{"path":"src/main/java/exception/NullDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package exception;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"public class NullDescription extends DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"    private String type;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"    public NullDescription(String type) {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"        return \"\\t☹ OOPS!!! The description of a \" + type + \" cannot be empty.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"KengXIII":14}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidDateFormat;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"import task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":" * Storage class allows access to the local storage file that contains the data saved.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":" * Filepath to the local file is required.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":" * If file is not found, tasklist will be initialised to be empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"    private String filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"     * Initialises the filepath for access.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"     * @param filePath path of file from current location.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"     * Processes the information stored in the local file and convert it into an ArrayList of Task.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"     * When file is empty/not found, ArrayList returned will be empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"     * @return the ArrayList of Task stored in local storage.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"     * @throws InvalidDateFormat If the file contains invalid date format and is corrupted.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"    public ArrayList\u003cTask\u003e load() throws InvalidDateFormat {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"KengXIII"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"KengXIII"},"content":"            Scanner scanner \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"KengXIII"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"KengXIII"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"KengXIII"},"content":"                // process the line","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"KengXIII"},"content":"                String[] output \u003d line.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"KengXIII"},"content":"                switch (output[0]) {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"KengXIII"},"content":"                    case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"KengXIII"},"content":"                        Task newTodo \u003d new Todo(output[2], output[1].equals(\"1\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"KengXIII"},"content":"                        taskList.add(newTodo);","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"KengXIII"},"content":"                        break;","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"KengXIII"},"content":"                    case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"KengXIII"},"content":"                        Task newDeadline \u003d new Deadline(output[2], output[3], output[1].equals(\"1\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"KengXIII"},"content":"                        taskList.add(newDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"KengXIII"},"content":"                        break;","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"KengXIII"},"content":"                    case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"KengXIII"},"content":"                        Task newEvent \u003d new Event(output[2], output[3], output[1].equals(\"1\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"KengXIII"},"content":"                        taskList.add(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"KengXIII"},"content":"                        break;","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"KengXIII"},"content":"                    default:","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"KengXIII"},"content":"                        System.out.println(\"Detected invalid task type. Please check...\");","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"KengXIII"},"content":"                        break;","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"KengXIII"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"KengXIII"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"KengXIII"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"KengXIII"},"content":"            System.out.println(\"Something went wrong: \" + e1.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"KengXIII"},"content":"        } catch (InvalidDateFormat e2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"KengXIII"},"content":"            throw new InvalidDateFormat();","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"KengXIII"},"content":"        return taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"KengXIII"},"content":"     * Writes data into the file specified.","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"KengXIII"},"content":"     * @param filePath path to the local file used for storage.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"KengXIII"},"content":"     * @param textToAdd the string containing task details","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"KengXIII"},"content":"     * @throws IOException If file is unable to be read.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"KengXIII"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"KengXIII"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"KengXIII"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"KengXIII"},"content":"        fw.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"KengXIII"},"content":"     * Abstracts the data of tasks into a string used for writeToFile.","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"KengXIII"},"content":"     * @param taskList the ArrayList of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"KengXIII"},"content":"    public void write(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"KengXIII"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"KengXIII"},"content":"        String separator \u003d \" | \";","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"KengXIII"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"KengXIII"},"content":"            output \u003d output + t.getType() + separator + ((t.checkDone()) ? 1 : 0) + separator +","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"KengXIII"},"content":"                    t.getDescription() + separator + t.getDeadline() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"KengXIII"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"KengXIII"},"content":"            writeToFile(this.filePath, output);","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"KengXIII"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"KengXIII"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"KengXIII":107}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidDateFormat;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":" * Deadline is a subclass of Task with a deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter dayOutputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter timeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"ha\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter dayInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter timeInputFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"     * Initialises the description, deadline and isComplete status of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"     * @param description task description","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"     * @param completed true if the task is completed","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"     * @throws InvalidDateFormat","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"    public Deadline(String description, String deadline, boolean completed) throws InvalidDateFormat {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"        super(description, completed);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"        String date \u003d deadline.split(\" \")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"        String time \u003d deadline.split(\" \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"            this.date \u003d LocalDate.parse(date,dayInputFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"            this.time \u003d LocalTime.parse(time,timeInputFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"            throw new InvalidDateFormat();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"KengXIII"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"KengXIII"},"content":"        return String.format(\"[D]%s (by: %s %s)\", super.toString(),","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"KengXIII"},"content":"                date.format(dayOutputFormatter), time.format(timeOutputFormatter));","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"KengXIII"},"content":"    public String getType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"KengXIII"},"content":"        return \"D\";","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"KengXIII"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"KengXIII"},"content":"        return this.date.toString() + \" \" + this.time.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"KengXIII":59}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"import exception.InvalidDateFormat;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter dayOutputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter timeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"ha\");","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter dayInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"    DateTimeFormatter timeInputFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"    public Event(String description, String deadline, boolean completed) throws InvalidDateFormat {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"        super(description, completed);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"        String date \u003d deadline.split(\" \")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"        String time \u003d deadline.split(\" \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"            this.date \u003d LocalDate.parse(date,dayInputFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"            this.time \u003d LocalTime.parse(time,timeInputFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"            throw new InvalidDateFormat();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"        return String.format(\"[E]%s (at: %s %s)\", super.toString(),","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"                date.format(dayOutputFormatter), time.format(timeOutputFormatter));","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"    public String getType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"        return \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"KengXIII"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"KengXIII"},"content":"        return this.date.toString() + \" \" + this.time.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"KengXIII":47}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"    public Task(String description, boolean completed) {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"        this.isDone \u003d completed;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"    public void markIsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"    public boolean checkDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"     * Returns the type of task in String.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"     * @return string format of task type.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"    public abstract String getType();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"    public abstract String getDeadline();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"KengXIII":40}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"    public TaskList(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"        this.taskList \u003d t;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"    public void addTask(Task taskToAdd) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"        taskList.add(taskToAdd);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"        return taskList.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"    public void completeTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"        Task taskToComplete \u003d taskList.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"        taskToComplete.markIsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"    public int size() {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"KengXIII":41}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":" * task.Todo is a subclass of a task.Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":" * It has the same behaviour of a task except printing out the task.Task type when using","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":" * ToString method call.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"     * Constructor for task.Todo object.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"     * @param description the task description","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"    public Todo(String description, boolean completed) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"        super(description, completed);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"     * Returns out the task.Task description and the task type in String","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"     * @return the String representation of a task.Todo","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"KengXIII"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"KengXIII"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"KengXIII"},"content":"    public String getType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"KengXIII"},"content":"        return \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"KengXIII"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"KengXIII"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"KengXIII"},"content":"        return \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"KengXIII":40}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"package ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke. \\n\\tWhat can I do for you?\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"KengXIII"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"KengXIII"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"KengXIII"},"content":"        return input;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"KengXIII"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"KengXIII"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"KengXIII"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"KengXIII"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"KengXIII":25}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"        Duke testSubject \u003d new Duke(\"invalid path\");","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KengXIII":12}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"T | 1 | 1 | ","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"D | 1 | 1 | 1","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"E | 1 | 1 | 1","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"T | 0 | 0 | ","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"D | 0 | 0 | return book","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"E | 0 | 0 | project meeting","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"T | 0 | borrow book | ","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"E | 0 | project meeting | Mon 2-4pm","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"KengXIII":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KengXIII"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"KengXIII"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"KengXIII"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"KengXIII"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"KengXIII"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"KengXIII"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"KengXIII"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"KengXIII"},"content":"todo","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"KengXIII"},"content":"event","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"KengXIII"},"content":"deadline","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"KengXIII"},"content":"trolololololol","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"KengXIII"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"KengXIII":12}}]
