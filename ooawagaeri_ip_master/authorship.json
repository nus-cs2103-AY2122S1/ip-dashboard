[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"# CS2103/T Duke Project  ","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"\u003cimg height\u003d\"100\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Duke_%28Java_mascot%29_waving.svg/226px-Duke_%28Java_mascot%29_waving.svg.png\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"## Duke Template","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"Based on a project template for a greenfield Java project. It\u0027s named after the [Java mascot _Duke_](https://www.oracle.com/java/duke.html).","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"- Project Duke is an educational software project designed to take you through the steps of building a small software incrementally while applying as many Java and SE techniques as possible along the way.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"- The project aims to build a product named Duke, a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"Given below are instructions on how to use it:","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"## Setting up in Intellij :zap:","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)\u003cbr\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"   ____________________________________________________________","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"   Hello! I\u0027m Duke","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"   What can I do for you?","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"   ____________________________________________________________","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"## List of Features :bread:","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"- [X] Add Command","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"- [X] Delete Command","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"- [X] Done Command","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"- [X] List Command","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"- [X] Find Command","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"- [X] Done Command","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"- [ ] ~~Useless Command~~","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"- [ ] _More features to come!_","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"## How To Use :bulb:","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"\u003e Prepare a `tasks.txt` containing a list of commands \u0026 task to be **initialized** \u003cbr\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"\u003e This file is _optional_ but is recommended to test the program\u0027s features","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"For example:","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"```text","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"add todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"add deadline return book /by 6/6/2021 1600","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"## Some Code :package:","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"```java","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"     new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":" }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":" ```","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"ooawagaeri"},"content":"    ","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":17,"ooawagaeri":51}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"ooawagaeri":14}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"D | 0 | return book | 2021 Jun 6 4.00 PM","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"T | 0 | wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ooawagaeri":3}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"add todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"add deadline return book /by 6/6/2021 1600","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ooawagaeri":2}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"/*","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":" * in the user manual at https://docs.gradle.org/7.2/userguide/multi_project_builds.html","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ooawagaeri":10}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":" * Represents a window controller for dialog box using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":" * Consists of an ImageView to represent the speaker\u0027s face and","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":" * a label containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs DialogBox object.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     * @param text speaker\u0027s message.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     * @param img speaker\u0027s image.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"        Circle clip \u003d new Circle(50, 50, 48);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"     * Gets DialogBox object for User speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"     * @param text speaker\u0027s message.","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"     * @param img speaker\u0027s image.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":"     * @return new dialog object.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"ooawagaeri"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"ooawagaeri"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"ooawagaeri"},"content":"     * Gets DialogBox object for Duke speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"ooawagaeri"},"content":"     * Flips speaker\u0027s image horizontally.","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"ooawagaeri"},"content":"     * @param text speaker\u0027s message.","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"ooawagaeri"},"content":"     * @param img speaker\u0027s image.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"ooawagaeri"},"content":"     * @return new dialog object.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"ooawagaeri"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"ooawagaeri"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"ooawagaeri"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"ooawagaeri"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ooawagaeri":85}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":" * Represents a chat bot request. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" * an instance of a chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs Duke Object.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"        String filePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs Duke Object.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"     * @param filePath a relative or absolute file path of text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"     * Runs chat box functions.","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"     * Reads user\u0027s commands (add, delete, exit) via console input.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"     * If exit command, executes given commands upon task list and","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"     * displays output of commands on console.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"ooawagaeri"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":"            } finally {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ooawagaeri"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ooawagaeri"},"content":"     * Reads pre-written and user input commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"ooawagaeri"},"content":"     * Executes the stored commands and displays respective outputs.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"ooawagaeri"},"content":"     * @param args command prompt / line arguments","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ooawagaeri"},"content":"     **/","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"ooawagaeri"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"ooawagaeri"},"content":"     * Retrieves chat bot\u0027s response based on user\u0027s command","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"ooawagaeri"},"content":"     * @param fullCommand user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"ooawagaeri"},"content":"     * @return Duke\u0027s chat bot message.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException if errors occur within list.","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"ooawagaeri"},"content":"    protected String getResponse(String fullCommand) {","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"ooawagaeri"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"ooawagaeri"},"content":"            String output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"ooawagaeri"},"content":"            return output;","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"ooawagaeri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"ooawagaeri"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ooawagaeri":93,"-":5}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ooawagaeri":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":" * Represents a GUI for Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"     * Populates application window with UI.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"     * @param stage current window.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"            MainWindow window \u003d new MainWindow();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"            window.setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"            Scene scene \u003d new Scene(window);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"            scene.getStylesheets().add(\"/view/stylesheet.css\");","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"            stage.setTitle(\"Duke Chatterbot\");","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ooawagaeri":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":" * Represents a window controller for main window using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":" * Consist of Images to read each speaker\u0027s face and Duke application interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs MainWindow object.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"    public MainWindow() {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"ooawagaeri"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"ooawagaeri"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"ooawagaeri"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"ooawagaeri"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"ooawagaeri"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"ooawagaeri"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ooawagaeri":76}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":" * Represents an addition user command.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from command class.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs AddCommand object.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd task command to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"    public AddCommand(String cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"        super(cmd);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"     * Executes command.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     * Adds task command into TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of tasks within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * @param ui user interface of chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     * @param storage file directory manager.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * @return chat bot response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If unable to add task.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"        String output \u003d ui.showAdded(tasks.add(getLine()), tasks.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"        super.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"        return output;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"     * Returns if command exits program.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"     * @return true if command exists program.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":" * Represents a user command.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"    private final String line;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs Command object.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd task command.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"    public Command(String cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"        line \u003d cmd;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * Executes command.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of tasks within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     * @param ui user interface of chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     * @param storage file directory manager.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     * @return chat bot response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If errors occur within list.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"        List\u003cTask\u003e tasksTasks \u003d tasks.getTasks();","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"        String[] saveList \u003d new String[tasksTasks.size()];","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"        for (int i \u003d 0; i \u003c tasksTasks.size(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"            saveList[i] \u003d tasksTasks.get(i).save();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"        storage.save(saveList);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"        return \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"    public String getLine() {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"        return line;","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"     * Returns if command exits program.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":56}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.Messages;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" * Represents a deletion user command.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from command class.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs DeleteCommand object.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    public DeleteCommand(String cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"        super(cmd);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     * Executes command.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"     * Deletes task command from TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of tasks within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     * @param ui user interface of chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * @param storage file directory manager.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     * @return chat bot response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If unable to delete task.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"            int index \u003d Integer.parseInt(getLine()) - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"            String output \u003d ui.showDelete(tasks.remove(index), tasks.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"            super.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"            return output;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(Messages.EXIST.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"     * Returns if command exits program.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"     * @return true if command exists program.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":55}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.Messages;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" * Represents a done user command.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs DoneCommand object.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd task command to be completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    public DoneCommand(String cmd) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"        super(cmd);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     * Executes command.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of tasks within chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     * @param ui user interface of chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * @param storage file directory manager.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     * @return chat bot response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If unable to done task.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"            int index \u003d Integer.parseInt(getLine()) - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"            String output \u003d ui.showDone(tasks.done(index));","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"            super.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"            return output;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(Messages.EXIST.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"     * Returns if command exits program.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"     * @return true if command exists program.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ooawagaeri":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":" * Represents an exit user command.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from command class.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs ExitCommand object.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd task command.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    public ExitCommand(String cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"        super(cmd);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"     * Executes command.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"     * Does nothing and display exiting message.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of tasks within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     * @param ui user interface of chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * @return chat bot response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     * @param storage file directory manager.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"        return ui.showBye();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"     * Returns if command exits program.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"     * @return true if command exists program.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":" * Represents a find / query user command.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs FindCommand object.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd task search word to find.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    public FindCommand(String cmd) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"        super(cmd);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"     * Executes command.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"     * Finds all task which has search term.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of tasks within chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     * @param ui user interface of chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * @return chat bot response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     * @param storage file directory manager.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"        return ui.showFind(tasks.find(getLine()));","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"     * Returns if command Finds program.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"     * @return true if command exists program.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ooawagaeri":44}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":" * Represents a list user command.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs ListCommand object.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd task command.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    public ListCommand(String cmd) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"        super(cmd);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"     * Executes command.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"     * Displays all tasks in TaskList","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of tasks within chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     * @param ui user interface of chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * @param storage file directory manager.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     * @return chat bot response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"        return ui.showList(tasks.list());","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"     * Returns if command exits program.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"     * @return true if command exists program.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ooawagaeri":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":" * Handles custom Duke chat bot exceptions.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs DukeException object.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"     * @param error error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"        super(error);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ooawagaeri":15}},{"path":"src/main/java/duke/exception/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"public enum Messages {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"    KNOWN {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"        public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"            return \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"    },","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    EXIST {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"        public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"            return \"The task selected does not exist\";","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"    },","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    EMPTY {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"        public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"            return \"The field(s) of %s cannot be empty.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    },","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"    TIME {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"        public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"            return \"Date \u0026 time format entered is invalid. Follow d/M/yyyy [HHmm].\";","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"    };","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * Returns display datetime format \"yyyy MMM d h.mm a\".","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     * @param time datetime object of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    public static String dateFormat(LocalDateTime time) {","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy MMM d h.mm a\");","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"        return time.format(formatter);","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"    };","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ooawagaeri":37}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.Messages;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":" * Parses user command into respective commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     * Returns command body of task request.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     * Substrings input line after start word till end of string.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"     * @param input user command line.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"     * @param start substring after target word.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"     * @return task details.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"    private static String cut(String input, String start) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"        return input.substring(input.indexOf(start) + start.length() + 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     * Returns a command, respective to user command/request.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     * If command is add, returns AddCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     * If command is delete, returns DeleteCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     * If command is exit, returns ExitCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"     * @param cmd user command line.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"     * @return task command.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If invalid command.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"    public static Command parse(String cmd) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"        if (cmd.contains(\"add\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"            return new AddCommand(cut(cmd, \"add\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        } else if (cmd.contains(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"            return new ListCommand(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"        } else if (cmd.contains(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"            return new DoneCommand(cut(cmd, \"done\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"        } else if (cmd.contains(\"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"            return new DeleteCommand(cut(cmd, \"delete\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"        } else if (cmd.contains(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"            return new ExitCommand(\"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"        } else if (cmd.contains(\"find\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"            return new FindCommand(cut(cmd, \"find\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(Messages.KNOWN.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":56}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" * Represents a file directory manager.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":" * Contains operations to read from file and save task into a file.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs TaskList Object.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     * @param filePath relative or absolute file path to read.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     * Loads content task file from filePath.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     * @return content of file.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If filePath doesn\u0027t exist.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    public Scanner load() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"            return new Scanner(new File(filePath));","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"     * Saves list of task into a text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks text of library / list of task to be stored.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If unable to create save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"    public void save(String ... tasks) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"        String location \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"            File f \u003d new File(location);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"                if (f.getParentFile().mkdirs()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"                    System.out.println(\"Directory created\");","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"                if (f.createNewFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"                    System.out.println(\"Text file created\");","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"            FileWriter fw \u003d new FileWriter(location);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"            for (String tsk: tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"                fw.write(tsk + System.lineSeparator());","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":69}},{"path":"src/main/java/duke/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.Messages;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":" * Represents a deadline task within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from task class.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs deadline object.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"     * @param name name of deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     * @param time by datetime of deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"    public Deadline(String name, LocalDateTime time) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * Includes isDone status and deadline task name.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * @return task description","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"[D]%s(by: %s)\", super.toString(), Messages.dateFormat(time));","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of deadline task for saving.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"     * @return task save description","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"    public String save() {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"D | %s| %s\", super.save(), Messages.dateFormat(time));","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ooawagaeri":44}},{"path":"src/main/java/duke/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.Messages;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":" * Represents an event task within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from task class.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs event object.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"     * @param name name of event.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     * @param time at datetime of event","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"    public Event(String name, LocalDateTime time) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"     * Includes isDone status and event task name.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * @return task description","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"[E]%s(at: %s)\", super.toString(), Messages.dateFormat(time));","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of event task for saving.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"     * @return task save description","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"    public String save() {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"E | %s| %s\", super.save(), Messages.dateFormat(time));","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ooawagaeri":44}},{"path":"src/main/java/duke/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":" * Represents a task within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"    private final String name;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs task object.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"     * @param name name of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"     * Includes isDone status and task name.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"     * @return task description","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"[%s] %s\", getStatus(), name);","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     * Returns completion status/mark/indication.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     * If isDone, X.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"     * Else, blank.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"     * @return done status.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"     * Sets task to complete.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"     * Returns name of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"     * @return name of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"    public String getName() {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"        return name;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of task for saving.","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"     * @return task save description.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"    public String save() {","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"        int done \u003d isDone ? 1 : 0;","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"%d | %s\", done, name);","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ooawagaeri":67}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"import duke.exception.Messages;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":" * Represents a list of task within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":" * Contains operations to add, delete and run task.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"    private final List\u003cTask\u003e library;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs TaskList Object.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"        this.library \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs TaskList Object.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     * Loads task request from text file into list.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     * @param taskFile scanner object of text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException if unable to add task.","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"    public TaskList(Scanner taskFile) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"        this.library \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"        // Extract lines","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"        while (taskFile.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"            String str \u003d taskFile.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"            add(str);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"        taskFile.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"     * Returns task title of task request.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"     * Substrings input line after start word till end of string.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"     * @param input task request line.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"     * @param start substring after target word.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"     * @return substring-ed title.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException if start word doesn\u0027t exist.","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"    private String cut(String input, String start) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"        String result;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"            result \u003d input.substring(input.indexOf(start) + start.length() + 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ooawagaeri"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(String.format(Messages.EMPTY.toString(), start));","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":"     * Returns task field of task request.","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":"     * Substrings input line between start word and end word.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ooawagaeri"},"content":"     * @param input task request line.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ooawagaeri"},"content":"     * @param start substring after target word.","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"ooawagaeri"},"content":"     * @param end substring before target word.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"ooawagaeri"},"content":"     * @return substring-ed task field.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException If start or end word doesn\u0027t exist.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ooawagaeri"},"content":"    private String cut(String input, String start, String end) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ooawagaeri"},"content":"        String result;","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"ooawagaeri"},"content":"            result \u003d input.substring(input.indexOf(start) + start.length() + 1, input.indexOf(end));","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"ooawagaeri"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(String.format(Messages.EMPTY.toString(), start));","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"ooawagaeri"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"ooawagaeri"},"content":"     * Converts date time string into LocalDateTime.","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"ooawagaeri"},"content":"     * Parses date time by d/M/yyyy (optional HHmm).","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"ooawagaeri"},"content":"     * If optional is empty, default time is 2359.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ooawagaeri"},"content":"     * @param time date time string.","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"ooawagaeri"},"content":"     * @return datetime of date time string.","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException if failed datetime parsing","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"ooawagaeri"},"content":"    private LocalDateTime dateTime(String time) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"ooawagaeri"},"content":"        DateTimeFormatter fmt \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"ooawagaeri"},"content":"                .appendPattern(\"d/M/yyyy\")","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"ooawagaeri"},"content":"                .optionalStart()","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"ooawagaeri"},"content":"                .appendPattern(\" HHmm\")","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"ooawagaeri"},"content":"                .optionalEnd()","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"ooawagaeri"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 23)","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"ooawagaeri"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 59)","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"ooawagaeri"},"content":"                .toFormatter();","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"ooawagaeri"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"ooawagaeri"},"content":"            return LocalDateTime.parse(time, fmt);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"ooawagaeri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(Messages.TIME.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"ooawagaeri"},"content":"     * Adds new task into TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"ooawagaeri"},"content":"     * @param input task to be inserted.","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"ooawagaeri"},"content":"     * @return added task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"ooawagaeri"},"content":"     * @throws DukeException if unable to add task","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"ooawagaeri"},"content":"    public String add(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"ooawagaeri"},"content":"        Task tsk;","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"ooawagaeri"},"content":"        if (input.contains(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"ooawagaeri"},"content":"            String name \u003d cut(input, \"todo\");","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"ooawagaeri"},"content":"            tsk \u003d new Todo(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"ooawagaeri"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"ooawagaeri"},"content":"            String name \u003d cut(input, \"deadline\", \"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"ooawagaeri"},"content":"            LocalDateTime time \u003d dateTime(cut(input, \"/by\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"ooawagaeri"},"content":"            tsk \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"ooawagaeri"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"ooawagaeri"},"content":"            String name \u003d cut(input, \"event\", \"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"ooawagaeri"},"content":"            LocalDateTime time \u003d dateTime(cut(input, \"/at\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"ooawagaeri"},"content":"            tsk \u003d new Event(name, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"ooawagaeri"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"ooawagaeri"},"content":"            throw new DukeException(\"No such task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"ooawagaeri"},"content":"        library.add(tsk);","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"ooawagaeri"},"content":"        return tsk.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"ooawagaeri"},"content":"     * Removes target task from TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"ooawagaeri"},"content":"     * @param index task to be removed.","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"ooawagaeri"},"content":"     * @return returned task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"ooawagaeri"},"content":"    public String remove(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"ooawagaeri"},"content":"        Task tsk \u003d library.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"ooawagaeri"},"content":"        return tsk.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"ooawagaeri"},"content":"     * Marks target task as complete.","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"ooawagaeri"},"content":"     * @param index task to complete.","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"ooawagaeri"},"content":"     * @return marked task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"ooawagaeri"},"content":"    public String done(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"ooawagaeri"},"content":"        Task target \u003d library.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"ooawagaeri"},"content":"        target.setDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"ooawagaeri"},"content":"        return target.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"ooawagaeri"},"content":"     * Returns list of task in TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"ooawagaeri"},"content":"     * @return list of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"ooawagaeri"},"content":"    public String list() {","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"ooawagaeri"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"ooawagaeri"},"content":"        for (int i \u003d 0; i \u003c library.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"ooawagaeri"},"content":"            Task tsk \u003d library.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"ooawagaeri"},"content":"            output.append(String.format(\"%d.%s\\n\", i + 1, tsk));","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"ooawagaeri"},"content":"        return output.toString().trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"ooawagaeri"},"content":"     * Returns task that has search term in name.","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"ooawagaeri"},"content":"     * @param search search term.","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"ooawagaeri"},"content":"     * @return list of found task.","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"ooawagaeri"},"content":"    public String find(String search) {","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"ooawagaeri"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"ooawagaeri"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"ooawagaeri"},"content":"        for (Task tsk : library) {","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"ooawagaeri"},"content":"            if (tsk.getName().contains(search)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"ooawagaeri"},"content":"                output.append(String.format(\"%d.%s\\n\", count++, tsk));","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"ooawagaeri"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"ooawagaeri"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"ooawagaeri"},"content":"        return output.toString().trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"ooawagaeri"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":201,"author":{"gitId":"ooawagaeri"},"content":"        return library;","lastModifiedDate":"2021-08-23"},{"lineNumber":202,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":203,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":204,"author":{"gitId":"ooawagaeri"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":205,"author":{"gitId":"ooawagaeri"},"content":"        return library.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":207}},{"path":"src/main/java/duke/tasklist/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":" * Represents a todo task within chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":" * Inherits from task class.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"     * Constructs todo object.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"     * @param name name of todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     * Includes isDone status and todo task name.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"     * @return task description","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"     * Returns custom string of todo task for saving.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     * @return task save description","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"    public String save() {","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"T | %s\", super.save());","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ooawagaeri":36}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"package duke.ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":" * Represents a user interface (command prompt line) of chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"     * Displays large logo and welcome message.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"     * @return string of logo","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"        String greet \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"                     + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"                     + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"                     + \"____________________________________________________________\";","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"        return logo + greet;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"     * Displays loading error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"     * @return file loading error message","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"        return \"An error occurred when loading file.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"     * Displays goodbye message.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"     * @return goodbye message","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"    public String showBye() {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"     * Displays error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"     * @return error message","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"    public String showError(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"        return \"☹ OOPS!!! \" + message;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"     * Displays a line.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"ooawagaeri"},"content":"     * @return line message","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ooawagaeri"},"content":"    public String showLine() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ooawagaeri"},"content":"        return \"____________________________________________________________\";","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ooawagaeri"},"content":"     * Returns user input of command line.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"ooawagaeri"},"content":"     * @return user\u0027s input","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ooawagaeri"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"ooawagaeri"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"ooawagaeri"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ooawagaeri"},"content":"     * Displays new task added message.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"ooawagaeri"},"content":"     * @param task task added.","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"ooawagaeri"},"content":"     * @param size total size of TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"ooawagaeri"},"content":"    public String showAdded(String task, int size) {","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"ooawagaeri"},"content":"                        + \"%s\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"ooawagaeri"},"content":"                        + \"Now you have %d tasks in the list.\", task, size);","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"ooawagaeri"},"content":"     * Displays task removed message.","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"ooawagaeri"},"content":"     * @param task task added.","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"ooawagaeri"},"content":"     * @param size total size of TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"ooawagaeri"},"content":"    public String showDelete(String task, int size) {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"Got it. I\u0027ve deleted this task:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"ooawagaeri"},"content":"                + \"%s\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"ooawagaeri"},"content":"                + \"Now you have %d tasks in the list.\", task, size);","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"ooawagaeri"},"content":"     * Displays list of tasks found.","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of task found.","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"ooawagaeri"},"content":"    public String showFind(String tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"Here are the matching tasks in your list:\\n%s\", tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"ooawagaeri"},"content":"     * Displays list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"ooawagaeri"},"content":"     * @param tasks list of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"ooawagaeri"},"content":"    public String showList(String tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"Here are the tasks in your list:\\n%s\", tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"ooawagaeri"},"content":"     * Displays task completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"ooawagaeri"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"ooawagaeri"},"content":"     * @param task task completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"ooawagaeri"},"content":"    public String showDone(String task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"ooawagaeri"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task);","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":125}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-padding: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ooawagaeri":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ooawagaeri":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"import java.time.Month;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ooawagaeri"},"content":"import duke.tasklist.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ooawagaeri"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ooawagaeri"},"content":" * Represents JUnit Tester for Duke application.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ooawagaeri"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ooawagaeri"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ooawagaeri"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ooawagaeri"},"content":"     * Tests creating and modifying Deadline object.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ooawagaeri"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ooawagaeri"},"content":"    public void test_create_deadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ooawagaeri"},"content":"        Deadline dl \u003d new Deadline(\"return book \", LocalDateTime.of(2021,","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ooawagaeri"},"content":"                Month.JULY, 29, 12, 0, 0));","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(dl.toString(), \"[D][ ] return book (by: 2021 Jul 29 12.00 PM)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ooawagaeri"},"content":"        dl.setDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(dl.toString(), \"[D][X] return book (by: 2021 Jul 29 12.00 PM)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(dl.save(), \"D | 1 | return book | 2021 Jul 29 12.00 PM\");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ooawagaeri"},"content":"     * Tests creating and modifying Event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ooawagaeri"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ooawagaeri"},"content":"    public void test_create_event() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ooawagaeri"},"content":"        Event ev \u003d new Event(\"project meeting \", LocalDateTime.of(2021,","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ooawagaeri"},"content":"                Month.AUGUST, 2, 14, 0, 0));","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(ev.toString(), \"[E][ ] project meeting (at: 2021 Aug 2 2.00 PM)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ooawagaeri"},"content":"        ev.setDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(ev.toString(), \"[E][X] project meeting (at: 2021 Aug 2 2.00 PM)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(ev.save(), \"E | 1 | project meeting | 2021 Aug 2 2.00 PM\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ooawagaeri"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ooawagaeri"},"content":"     * Tests creating and modifying Todo object.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ooawagaeri"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ooawagaeri"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ooawagaeri"},"content":"    public void test_create_todo() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ooawagaeri"},"content":"        Todo td \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ooawagaeri"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(td.toString(), \"[T][ ] read book\");","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ooawagaeri"},"content":"        td.setDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(td.toString(), \"[T][X] read book\");","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ooawagaeri"},"content":"        assertEquals(td.save(), \"T | 1 | read book\");","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ooawagaeri"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ooawagaeri"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ooawagaeri":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ooawagaeri"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ooawagaeri"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ooawagaeri"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ooawagaeri"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ooawagaeri"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ooawagaeri"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ooawagaeri"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ooawagaeri":7}}]
