[{"path":"src/main/java/ailurus/Ailurus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":" * The main task chatbot class for Ailurus Chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":" * @author Leeroy Liu","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"public class Ailurus {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Ailurus Chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * @param directory directory of the file to store data","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * @param filename filename of the file to store data (with .txt)","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public Ailurus(String directory, String filename) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        this.storage \u003d new Storage(directory, filename);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        } catch (AilurusException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     * Run the chatbot program with the correct environment setups.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"                String command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"                switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"                    this.storage.unload(this.tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"                    this.ui.sayBye();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"                    isExit \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"                    try {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"                        this.ui.sayList(this.tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"                    } catch (AilurusException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"                        this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"                case \"done\":","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"                    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"                        String str \u003d Parser.parseMessage(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                        this.ui.sayDone(this.tasks.done(str));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"                    } catch (AilurusException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"                        this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"                    try {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"                        String todoMessage \u003d Parser.parseMessage(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"                        this.ui.sayAdd(this.tasks.addTask(new Todo(todoMessage)), this.tasks.length());","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"                    } catch (AilurusException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"                        this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"                    try {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"                        String deadlineMessage \u003d Parser.parseMessage(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"                        this.ui.sayAdd(this.tasks.addTask(new Deadline(deadlineMessage)), this.tasks.length());","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"                    } catch (AilurusException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"                        this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                    try {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"                        String eventMessage \u003d Parser.parseMessage(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"                        this.ui.sayAdd(this.tasks.addTask(new Event(eventMessage)), this.tasks.length());","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"                    } catch (AilurusException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"                        this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"                    try {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"                        String str \u003d Parser.parseMessage(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"                        this.ui.sayDelete(this.tasks.deleteTask(str), this.tasks.length());","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"                    } catch (AilurusException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"                        this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"                case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"                    try {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"                        String match \u003d Parser.parseMessage(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"                        this.ui.sayFind(Parser.parseFind(match, this.tasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"                    } catch (AilurusException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"                        this.ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"                    this.ui.sayInvalidCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"            } catch (AilurusException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"        new Ailurus(\"./data/\", \"tasks.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"leeroy999":116}},{"path":"src/main/java/ailurus/AilurusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"public class AilurusException extends IllegalArgumentException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"    private Error error;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"     * List of errors for Ailurus.Ailurus","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    public enum Error {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"        EMPTYLIST, EMPTYTODO, EMPTYEVENT, EMPTYDEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"        EMPTYBY, EMPTYAT, BY, AT, NUMBER, NAN, LOAD, FIND,","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Ailurus.AilurusException","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"     * @param e error to be thrown","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    public AilurusException(Error e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        this.error \u003d e;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * Overriden method to get error message","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     * @return error message string","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        switch (this.error) {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            case EMPTYLIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! No items in list!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            case EMPTYTODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            case EMPTYDEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"            case EMPTYEVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"            case EMPTYBY:","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! The description of /by cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"            case EMPTYAT:","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! The description of /at cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"            case BY:","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! A deadline must have a /by \u003cspecific date or time\u003e.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"            case AT:","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! An event must have a /at \u003cspecific date or time period\u003e.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"            case NUMBER:","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! Invalid number used.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"            case NAN:","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! Not a number.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"            case LOAD:","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! Unable to load tasks...\";","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"            case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"                return \"☹ OOPS!!! Sorry, no matching tasks in your list...\";","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"                return getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":59}},{"path":"src/main/java/ailurus/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"     * Parse message and return command","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"     * @param message message to be parsed","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"     * @return command that is passed","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    public static String parse(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"        return message.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"     * Parse message and return string after command","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     * @param message message to be parsed","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * @return message string that is after command","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public static String parseMessage(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        int index \u003d message.indexOf(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        if (index \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"            return message.substring(index + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            return \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"     * Parse data stored in hard disk by line","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"     * @param data line of data to be parsed","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     * @return task that is parsed from line","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static Task parseData(String data) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        String[] dataArr \u003d data.split(\"[|]\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        switch (dataArr[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"            case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"                if (dataArr.length \u003c 3) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"                    return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"                Task todo \u003d new Todo(dataArr[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"                if (Integer.parseInt(dataArr[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"                    todo.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"                return todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"            case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"                if (dataArr.length \u003c 4) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"                    return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"                Task deadline \u003d new Deadline(dataArr[2] + \"/by \" + dataArr[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"                if (Integer.parseInt(dataArr[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"                return deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"            case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"                if (dataArr.length \u003c 4) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                    return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"                Task event \u003d new Event(dataArr[2] + \"/at \" + dataArr[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"                if (Integer.parseInt(dataArr[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"                    event.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"                return event;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"                return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"     * Parse matching string and return Tasklist of matching string","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"     * @param match matching string","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"     * @return TaskList matching string","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"    public static TaskList parseFind(String match, TaskList tasks) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"            String desc \u003d task.getDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"            if (desc.indexOf(match) !\u003d -1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"                newList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        if (newList.length() !\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"            return newList;","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.FIND);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":95}},{"path":"src/main/java/ailurus/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    private String directoryName;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    private String filename;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    private File directory \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    private File ailurusObj \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    private FileWriter writer \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * Constructor for storage","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * @param directoryName name of directory to be created and for storage of data","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * @param filename name of file to be created and for storage of data","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public Storage(String directoryName, String filename) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        this.directoryName \u003d directoryName;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        this.directory \u003d new File(directoryName);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        this.ailurusObj \u003d new File(directoryName.concat(filename));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            // create new directory","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        if (!ailurusObj.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            // create new file","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"                ailurusObj.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * Reads and loads the tasks in the data file, and creates a FileWriter","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     * that must be followed with unload() to close writer","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     * @return list of tasks that is loaded from data file","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    public ArrayList\u003cTask\u003e load() throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        // load tasks from file","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"            Scanner reader \u003d new Scanner(ailurusObj);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"                Task task \u003d Parser.parseData(reader.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"                    list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"            this.writer \u003d new FileWriter(this.directoryName.concat(this.filename));","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.LOAD);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.LOAD);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        return list;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"     * Unloads and writes all the tasks to file, must be preceded by load()","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"     * @param list list of tasks to be written to the data file","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"    public void unload(TaskList list) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        // write all tasks to file","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        if (this.writer !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                for (int i \u003d 0; i \u003c list.length(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"                    Task task \u003d list.getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"                    task.log(writer);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"                writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"                throw new AilurusException(AilurusException.Error.LOAD);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":93}},{"path":"src/main/java/ailurus/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    private final String CHATBOT \u003d \"Ailurus\";","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    private final String YOU \u003d \"You\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     * Welcomes user to use the chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"        this.say(String.format(\"Hello! I\u0027m %s. What can I do for you?\", this.CHATBOT));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * Read user input","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * @return user input as string","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        System.out.print(this.YOU + \": \");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     * Show user the error","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"     * @param errorMessage Error message to be shown to user","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        this.say(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"     * Customized display for chatbot messages","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"     * @param message display message to be printed","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    public void say(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        System.out.println(String.format(\"%s: %s\", this.CHATBOT, message));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * Printing out of the list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     * @param list TaskList to be said by chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    public void sayList(TaskList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        if (list.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYLIST);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        this.say(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        for(int i \u003d 0; i \u003c list.length(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"            System.out.println(String.format(\"%d.%s\", i + 1, list.getIndexString(i)));","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the task is marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"     * @param task task that is marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"    public void sayDone(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        this.say(String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\", task));","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the task is added","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"     * @param task task that is added","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"    public void sayAdd(Task task, int size) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        this.say(String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"                task.toString(), size));","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the task is deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"     * @param task task that is deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    public void sayDelete(Task task, int size) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        this.say(String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"                task, size));","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that there are matching tasks, and the list of them","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"     * @param tasks list of tasks that are matching","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"    public void sayFind(TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"        this.say(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"        this.sayList(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the command given was invalid","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"    public void sayInvalidCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"        this.say(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that it is the end of chatting","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"    public void sayBye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"        this.say(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":116}},{"path":"src/main/java/ailurus/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Ailurus.Deadline tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task /by specific date or time","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    public Deadline(String description) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"        super(description.split(\"/by\", -1)[0].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        String[] arr \u003d description.split(\"/by\", -1);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        if (arr[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYDEADLINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        } else if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.BY);","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        } else if (arr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYBY);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            this.by \u003d LocalDate.parse(arr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"     * Write data to log task","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"     * @param writer file writer for writing data to file","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public void log(FileWriter writer) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"            writer.write(String.format(\"D|%d|%s|%s\\n\", this.isDone ? 1 : 0, this.description, this.by));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":50}},{"path":"src/main/java/ailurus/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Event tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task /at specific date or time","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    public Event(String description) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"        super(description.split(\"/at\", -1)[0].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        String[] arr \u003d description.split(\"/at\", -1);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        if (arr[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYEVENT);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        } else if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.AT);","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        } else if (arr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYAT);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            this.at \u003d LocalDate.parse(arr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"     * Write data to log task","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"     * @param writer file writer for writing data to file","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public void log(FileWriter writer) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"            writer.write(String.format(\"E|%d|%s|%s\\n\", this.isDone ? 1 : 0, this.description, this.at));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.LOAD);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":50}},{"path":"src/main/java/ailurus/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"abstract public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     * Getting whether task is done or not","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * @return \"X\" if it is done and \" \" if not done","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * Setting task as done","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     * Logs the task by writing data to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"     * @param writer FileWriter to be written into.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    abstract public void log(FileWriter writer);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     * Get the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"     * @return description of task","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        return String.format(\"[%s]%s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leeroy999":55}},{"path":"src/main/java/ailurus/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"     * Constructor for empty TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Tasklist with default tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     * @param tasks default tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        this.list \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"     * Size of arraylist of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * @return length of arraylist","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    public int length() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     * Get the task message of a particular task","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"     * @param i index of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"     * @return task message of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    public String getIndexString(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        return list.get(i).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     * Get a particular task from the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * @param i index of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * @return the particular task","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        return list.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"     * Marking a specific task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"     * @param str String to be converted to integer, representing task number to be marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"     * @return task that has been marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"    public Task done(String str) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"            int taskNo \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"            if (taskNo \u003e list.size() || taskNo \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"                throw new AilurusException(AilurusException.Error.NUMBER);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"                Task task \u003d list.get(taskNo - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"                return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.NAN);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"     * Adding task to list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"     * @param task Ailurus.Task that has been added","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"     * @return task that has been added","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"     * Deleting task from a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"     * @param str String to be converted to integer, representing task number to be deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"     * @return task that has been deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"    public Task deleteTask(String str) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"            int taskNo \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"            if (taskNo \u003e list.size() || taskNo \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"                throw new AilurusException(AilurusException.Error.NUMBER);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"                Task task \u003d list.get(taskNo - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"                list.remove(taskNo - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"                return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.NAN);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":107}},{"path":"src/main/java/ailurus/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Todo","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    public Todo(String description) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"        super(description.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYTODO);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * Write data to log task","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * @param writer file writer for writing data to file","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public void log(FileWriter writer) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"            writer.write(String.format(\"T|%d|%s\\n\", this.isDone ? 1 : 0, this.description.trim()));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":39}},{"path":"src/test/java/AilurusTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"import ailurus.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"import ailurus.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static org.junit.Assert.assertNotEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"public class AilurusTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    public void parseTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"        String command \u003d \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"        String deadlineCorrect \u003d \"deadline CS2103T ip week 2 /by 2021-08-19\";","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"        String deadlineCorrect1 \u003d \"deadline test\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"        String deadlineWrong \u003d \"deadlinetest\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parse(deadlineCorrect), command);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parseMessage(deadlineCorrect), \"CS2103T ip week 2 /by 2021-08-19\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parse(deadlineCorrect1), command);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parseMessage(deadlineCorrect1), \"test\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        assertNotEquals(Parser.parse(deadlineWrong), command);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public void taskTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        Task task1 \u003d new Todo(\"Go grocery shopping\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        Task task2 \u003d new Deadline(\"CS2103T ip week 2 /by 2021-08-19\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        Task task3 \u003d new Event(\"CS2103T lecture /at 2021-08-27\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        String task1String \u003d \"[T][ ]Go grocery shopping\";","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        String task2String \u003d \"[D][ ]CS2103T ip week 2 (by: Aug 19 2021)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        String task3String \u003d \"[E][ ]CS2103T lecture (at: Aug 27 2021)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        assertEquals(task1.toString(), task1String);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        assertEquals(task2.toString(), task2String);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        assertEquals(task3.toString(), task3String);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    public void storageTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        // loading of storage","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        Storage storage \u003d new Storage(\"./data/\", \"testData.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        TaskList tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        assertEquals(tasklist.length(), 0);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        // adding 2 tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        tasklist.addTask(new Todo(\"test1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        tasklist.addTask(new Todo(\"test2\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        // reloading storage with 2 tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        storage.unload(tasklist);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        TaskList newTaskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        assertEquals(newTaskList.length(), 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        // emptying storage with 0 tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        storage.unload(new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        TaskList emptyTaskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        assertEquals(emptyTaskList.length(), 0);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"Go grocery shopping","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"done one","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"done -99","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"todo Go grocery shopping","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"deadline CS2103T ip week 2 /by","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"deadline /by 2021-08-19","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"deadline CS2103T ip week 2 /by 2021-08-19","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"event CS2103T lecture /at","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"event /at 2021-08-27","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"event CS2103T lecture /at 2021-08-27","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"done two","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"delete two","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ailurus\\*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"java -classpath ..\\bin Ailurus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"leeroy999":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"java -classpath ../bin Ailurus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"leeroy999":1}}]
