[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"# AilurusPro","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"\u003eYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"AilurusPro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"* text-based","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"* easy to learn","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"* ~~FAST~~ _SUPER FAST_ to use","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"All you need to do is,","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"1. download it from here.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"2. double-click it. ","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"3. add your tasks. ","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"4. let it manage your tasks for you üòâ","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"And it is **FREE**!","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"Features:","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"- [x] Managing tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"```java","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"public class Main {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":5,"leeroy999":31}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"    mainClassName \u003d \"ailurus.Ailurus\"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"    archiveBaseName \u003d \"ailurus\"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"leeroy999":17}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"ret\u003d0","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    fi","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"done","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"exit $ret","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"leeroy999":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"awk \u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"    BEGIN {","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    {","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"        ret \u003d 1","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    END {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"        exit ret","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"\u0027","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"leeroy999":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"awk \u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"    BEGIN {","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    {","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"            ret \u003d 1","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    END {","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        exit ret","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"\u0027","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"leeroy999":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    fi","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"done","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"exit $ret","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"leeroy999":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"# User Guide for Ailurus","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"![Ui](Ui.png)","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"### Add, delete and list tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"You are able to add, delete and list all the task you have","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"added. There are 3 types of tasks you can add:","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"* **todo**: tasks with no parameters.","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"* **deadline**: tasks with deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"* **event**: tasks that are at a specific date","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"### Mark tasks as done","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"You can mark tasks as done and an `X` will be placed beside","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"### Find task","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"You can search for the task you need with the `find` keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"### `todo` - Add todo task","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"Add a task with no parameters.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"`todo Buy Birthday Gift for James`","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"Adds `Buy Birthday Gift for James` to task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"Tells you how many tasks in the list after the addition.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    [T][ ]Buy Birthday Gift for James","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"### `deadline` - Add deadline task","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"Add a task with deadline date.","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"`deadline Grocery Shopping /by 2021-09-13`","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"Adds `Grocery Shopping` to task list with date `Sep 13 2021`.","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"Tells you how many tasks in the list after the addition.","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"    [D][X]Grocery Shopping (by: Sep 13 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"### `event` - Add event task","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"Add a task with deadline date.","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"`event Coding Workshop /at 2021-09-20`","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"Adds `Coding Workshop` to task list with date `Sep 20 2021`.","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"Tells you how many tasks in the list after the addition.","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"    [E][ ]Coding Workshop (at: Sep 20 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"### `list` - lists all tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"Lists all tasks in database, unless there is none.","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"Loads tasks from `data/tasks` file if not empty.","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"`list`","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"Returns a list of all tasks in task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"1.[T][ ]Buy Birthday Gift for James","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"2.[D][ ]Grocery Shopping (by: Sep 13 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"3.[E][ ]Coding Workshop (at: Sep 20 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"### `done` - mark as done","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"Mark task(s) as done by marking an `X` beside it.","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"Specify the task number(s) you wish to mark as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"`done 2 3`","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"Marks task 2 and task 3 as done","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"    [D][X]Grocery Shopping (by: Sep 13 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"    [E][X]Coding Workshop (at: Sep 20 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"### `delete` - delete task(s)","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"Delete task(s) permanently. Specify the task number(s)","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"you wish to delete.","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"`delete 2 3`","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"Deletes task 2 and task 3, and tells how many tasks you","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"have left in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"    [D][X]Grocery Shopping (by: Sep 13 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"leeroy999"},"content":"    [E][X]Coding Workshop (at: Sep 20 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"leeroy999"},"content":"    ","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"### `find` - find task(s)","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"Find tasks that match keyword. Not case-sensitive.","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"`find buy`","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"Returns the tasks that match the keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"leeroy999"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"leeroy999"},"content":"1.[T][ ]Buy Birthday Gift for James","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":160,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"leeroy999"},"content":"### `bye` - exit program","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"leeroy999"},"content":"Exit program","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"leeroy999"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"leeroy999"},"content":"`bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"leeroy999"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"leeroy999"},"content":"Says goodbye and close program.","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"leeroy999"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"leeroy999"},"content":"```","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"-":29,"leeroy999":146}},{"path":"src/main/java/ailurus/Ailurus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":" * The main task chatbot class for Ailurus Chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":" * @author Leeroy Liu","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"public class Ailurus {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Ailurus Chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     * @param directory directory of the file to store data","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * @param filename filename of the file to store data (with .txt)","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public Ailurus(String directory, String filename) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        storage \u003d new Storage(directory, filename);","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        } catch (AilurusException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"     * Exit JavaFX program","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static void exit() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        isExit \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     * Unload storage to save file","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    public static void unloadStorage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        storage.unload(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     * Returns whether program is ready to exit","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     * @return isExit","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    public static boolean isExit() {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        return isExit;","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"     * Get message and handle response","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     * @param message message to be parsed","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"     * @return response to message","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"    public String getResponse(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"            String command \u003d Parser.parse(message);","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"            return Parser.parseCommand(command, message, ui, storage, tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        } catch (AilurusException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"leeroy999":75}},{"path":"src/main/java/ailurus/AilurusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"public class AilurusException extends IllegalArgumentException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"    private Error error;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"     * List of errors for Ailurus.Ailurus","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    public enum Error {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"        EMPTYLIST, EMPTYTODO, EMPTYEVENT, EMPTYDEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"        EMPTYBY, EMPTYAT, BY, AT, NUMBER, NAN, LOAD, FIND, DATEPARSE, PICNOTFOUND","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Ailurus.AilurusException","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"     * @param e error to be thrown","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    public AilurusException(Error e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        this.error \u003d e;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * Overrides method to get error message","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     * @return error message string","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        switch (this.error) {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        case EMPTYLIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! No items in list!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        case EMPTYTODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        case EMPTYDEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        case EMPTYEVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        case EMPTYBY:","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! The description of /by cannot be empty.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        case EMPTYAT:","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! The description of /at cannot be empty.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        case BY:","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! A deadline must have a /by \u003cspecific date or time\u003e.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        case AT:","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! An event must have a /at \u003cspecific date or time period\u003e.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        case NUMBER:","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! Invalid number used.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        case NAN:","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! Not a number.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        case LOAD:","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! Unable to load tasks...\";","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! Sorry, no matching tasks in your list...\";","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        case DATEPARSE:","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! Please enter date in format yyyy-mm-dd\";","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        case PICNOTFOUND:","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"            return \"(!) OOPS!!! Pictures not found in directory :(\";","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"            return getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":63}},{"path":"src/main/java/ailurus/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"     * Gets dialog box from text and image of user","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"     * @param text text message from user","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"     * @param img image of user","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"     * @return DialogBox of user","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        db.dialog.setStyle(\"-fx-background-color:#ffc300; -fx-padding:10px; -fx-background-radius: 10;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                + \"-fx-border-color:#000000; -fx-border-radius:10\");","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        return db;","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"     * Gets dialog box from text and image of Ailurus","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"     * @param text text message from Ailurus","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"     * @param img image of Ailurus","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"     * @return DialogBox of Ailurus, inverted","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"    public static DialogBox getAilurusDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"        db.dialog.setStyle(\"-fx-background-color:#f0b6b1; -fx-padding:10px; -fx-background-radius: 10;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"                + \"-fx-border-color:#000000; -fx-border-radius:10\");","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leeroy999":78}},{"path":"src/main/java/ailurus/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":" * A GUI for Ailurus using FXML.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    private Ailurus ailurus \u003d new Ailurus(\"./data/\", \"tasks.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAilurus(ailurus);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    public void stop() {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        Ailurus.unloadStorage();","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            Thread.sleep(1000);","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        } catch (InterruptedException ex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leeroy999":44}},{"path":"src/main/java/ailurus/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    private Ailurus ailurus;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    private Image userImage;","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    private Image ailurusImage;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"     * Initialise FXML window","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        InputStream pixelImg \u003d this.getClass().getResourceAsStream(\"/images/Pixel.png\");","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        InputStream ailurusImg \u003d this.getClass().getResourceAsStream(\"/images/Ailurus.png\");","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        assert pixelImg !\u003d null : \"User image cannot be null\";","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        assert ailurusImg !\u003d null : \"Ailurus image cannot be null\";","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        userImage \u003d new Image(pixelImg);","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        ailurusImage \u003d new Image(ailurusImg);","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * Set and initalise Ailurus bot","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     * @param d Ailurus object to be initialised with","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    public void setAilurus(Ailurus d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        ailurus \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        dialogContainer.setStyle(\"-fx-background-image: url(\\\"/images/Ailurus_bg.png\\\"); \");","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        dialogContainer.getChildren().add(DialogBox.getAilurusDialog(ui.showWelcome(), ailurusImage));","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Ailurus\u0027 reply and then appends them to","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        String response \u003d ailurus.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        assert response.length() !\u003d 0 : \"response should not be empty\";","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        assert userImage !\u003d null : \"userImage should not be null\";","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        assert ailurusImage !\u003d null : \"ailurusImage should not be null\";","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"                DialogBox.getAilurusDialog(response, ailurusImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"        if (Ailurus.isExit()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leeroy999":80}},{"path":"src/main/java/ailurus/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     * Parse message and return command","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     * @param message message to be parsed","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     * @return command that is passed","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    public static String parse(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"        return message.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * Parses command and returns the UI message to be sent.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     * @param command command to be used","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     * @param fullCommand full command to be parsed","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"     * @param ui ui object used","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"     * @param storage storage object used","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * @param tasks tasks list used","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     * @return UI message for the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public static String parseCommand(String command, String fullCommand, Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        String message \u003d Parser.parseMessage(fullCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        switch (command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        case \"list\":","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            return ui.sayList(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        case \"done\":","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            return ui.sayDone(tasks.done(message));","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"            return ui.sayAdd(tasks.addTask(new Todo(message)), tasks.length());","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            return ui.sayAdd(tasks.addTask(new Deadline(message)), tasks.length());","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        case \"event\":","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"            return ui.sayAdd(tasks.addTask(new Event(message)), tasks.length());","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"            return ui.sayDelete(tasks.deleteTask(message), tasks.length());","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        case \"find\":","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"            return ui.sayFind(Parser.parseFind(message, tasks));","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"            Ailurus.exit();","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"            return ui.sayBye();","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        default:","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"            return ui.sayInvalidCommand();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"     * Parse message and return string after command","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     * @param message message to be parsed","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     * @return message string that is after command","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"    public static String parseMessage(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        int index \u003d message.indexOf(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        if (index \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"            return message.substring(index + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"            return \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"     * Parse data stored in hard disk by line","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"     * @param data line of data to be parsed","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"     * @return task that is parsed from line","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"    public static Task parseData(String data) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        String[] dataArr \u003d data.split(\"[|]\");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        assert dataArr.length !\u003d 0 : \"dataArr cannot be length 0\";","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        switch (dataArr[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"            assert dataArr.length \u003e 2 : \"todo format incorrect\";","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"            return loadTask(new Todo(dataArr[2]), dataArr[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"        case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"            assert dataArr.length \u003e 3 : \"deadline format incorrect\";","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"            return loadTask(new Deadline(dataArr[2] + \"/by \" + dataArr[3]), dataArr[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"            assert dataArr.length \u003e 3 : \"event format incorrect\";","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"            return loadTask(new Event(dataArr[2] + \"/at \" + dataArr[3]), dataArr[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"            return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"     * Load task with marking as done","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"     * @param task task to be loaded","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"     * @param marked string for whether task is marked","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"     * @return task that is either marked or not marked as done","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"    private static Task loadTask(Task task, String marked) {","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"        if (Integer.parseInt(marked) \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"        return task;","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"     * Parse matching string and return Tasklist of matching string","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"     * @param match matching string","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"     * @param tasks list of tasks to find from","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"     * @return TaskList matching string","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"    public static TaskList parseFind(String match, TaskList tasks) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"            String desc \u003d task.getDescription().toUpperCase();","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"            if (desc.contains(match.toUpperCase())) {","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"                newList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"        if (newList.length() !\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"            return newList;","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.FIND);","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":132}},{"path":"src/main/java/ailurus/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    private String directoryName;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    private String filename;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    private File directory \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    private File ailurusObj \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    private FileWriter writer \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * Constructor for storage","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * @param directoryName name of directory to be created and for storage of data","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * @param filename name of file to be created and for storage of data","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public Storage(String directoryName, String filename) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        this.directoryName \u003d directoryName;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        this.directory \u003d new File(directoryName);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        this.ailurusObj \u003d new File(directoryName.concat(filename));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            // create new directory","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        if (!ailurusObj.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            // create new file","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"                ailurusObj.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * Reads and loads the tasks in the data file, and creates a FileWriter","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     * that must be followed with unload() to close writer","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     * @return list of tasks that is loaded from data file","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    public ArrayList\u003cTask\u003e load() throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        // load tasks from file","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"            Scanner reader \u003d new Scanner(ailurusObj);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"                Task task \u003d Parser.parseData(reader.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"                    list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"            this.writer \u003d new FileWriter(this.directoryName.concat(this.filename));","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.LOAD);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        return list;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"     * Unloads and writes all the tasks to file, must be preceded by load()","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"     * @param list list of tasks to be written to the data file","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"    public void unload(TaskList list) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        // write all tasks to file","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        if (this.writer !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"                for (int i \u003d 0; i \u003c list.length(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                    Task task \u003d list.getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                    task.log(writer);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"                writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"                throw new AilurusException(AilurusException.Error.LOAD);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":91}},{"path":"src/main/java/ailurus/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    private final String chatbot \u003d \"Ailurus\";","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"     * Welcomes user to use the chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     * @return welcome message string","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"        return this.say(String.format(\"Hello! I\u0027m %s. These are your available commands:\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"                + \"todo \u003cdescription\u003e\\n\\t- add todo task\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e\\n\\t- add deadline task with date\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"                + \"event \u003cdescription\u003e /at \u003cyyyy-mm-dd\u003e\\n\\t- add event task with date\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"                + \"list\\n\\t- list all tasks and their task number\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"                + \"done \u003ctask number(s)\u003e\\n\\t- mark task(s) as done (e.g. done 1 2 3)\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"                + \"delete \u003ctask number(s)\u003e\\n\\t- delete task(s) (e.g. delete 1 2 3)\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"                + \"find \u003cmatching word\u003e\\n\\t- find all tasks with matching word\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"                + \"bye\\n\\t- Exit program\", this.chatbot));","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * Show user the error","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     * @param errorMessage Error message to be shown to user","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     * @return error message to be said","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        return this.say(errorMessage);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"     * Customized display for chatbot messages","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"     * @param message display message to be printed","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"     * @return message to be said","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    public String say(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     * Printing out of the list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     * @param list TaskList to be said by chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"     * @return list of tasks as string","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    public String sayList(TaskList list) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        if (list.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYLIST);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        this.say(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        for (int i \u003d 0; i \u003c list.length(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"            message +\u003d String.format(\"%d.%s\\n\", i + 1, list.getIndexString(i));","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the tasks are marked as done","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"     * @param tasks tasks that are marked as done","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"     * @return message that tasks are done","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"    public String sayDone(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"            tasksString +\u003d tasks.get(i) + \"\\n\\t\";","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        return this.say(String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\", tasksString));","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the task is added","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"     * @param task task that is added","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"     * @param size size of task list","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"     * @return message for adding task","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"    public String sayAdd(Task task, int size) {","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        return this.say(String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"                task.toString(), size));","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the tasks are deleted","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"     * @param tasks tasks that are deleted","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"     * @param size size of task list","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"     * @return message for deleting tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"    public String sayDelete(ArrayList\u003cTask\u003e tasks, int size) {","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"            tasksString +\u003d tasks.get(i) + \"\\n\\t\";","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"        return this.say(String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"                tasksString, size));","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that there are matching tasks, and the list of them","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"     * @param tasks list of tasks that are matching","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"     * @return message for finding task","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"    public String sayFind(TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"        String header \u003d this.say(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"        String list \u003d this.sayList(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"        return header + \"\\n\" + list;","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that the command given was invalid","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"     * @return message for invalid command","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"    public String sayInvalidCommand() {","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"        return this.say(\"(!) OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"     * Tell the user that it is the end of chatting","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"     * @return message for exiting","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"    public String sayBye() {","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"        return this.say(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":140}},{"path":"src/main/java/ailurus/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    private final LocalDate by;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Ailurus.Deadline tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task /by specific date or time","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    public Deadline(String description) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        super(description.split(\"/by\", -1)[0].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        String[] arr \u003d description.split(\"/by\", -1);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        handleException(arr);","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"            this.by \u003d LocalDate.parse(arr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.DATEPARSE);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    public void handleException(String... arr) {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        // no description","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        if (arr[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYDEADLINE);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        // no /by argument","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.BY);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        // no /by date","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        if (arr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYBY);","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * Write data to log task","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     * @param writer file writer for writing data to file","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    public void log(FileWriter writer) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"            writer.write(String.format(\"D|%d|%s|%s\\n\", this.isDone ? 1 : 0, this.description, this.by));","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":66}},{"path":"src/main/java/ailurus/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    private final LocalDate at;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Event tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task /at specific date or time","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    public Event(String description) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        super(description.split(\"/at\", -1)[0].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        String[] arr \u003d description.split(\"/at\", -1);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        handleException(arr);","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"            this.at \u003d LocalDate.parse(arr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.DATEPARSE);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public void handleException(String... arr) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        // no description","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        if (arr[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYEVENT);","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        // no /by argument","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.AT);","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        // no /by date","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        if (arr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYAT);","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * Write data to log task","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     * @param writer file writer for writing data to file","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    public void log(FileWriter writer) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"            writer.write(String.format(\"E|%d|%s|%s\\n\", this.isDone ? 1 : 0, this.description, this.at));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.LOAD);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":65}},{"path":"src/main/java/ailurus/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * Getting whether task is done or not","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     * @return \"X\" if it is done and \" \" if not done","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     * Setting task as done","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"     * Logs the task by writing data to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"     * @param writer FileWriter to be written into.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    public abstract void log(FileWriter writer);","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     * Get the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * @return description of task","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    public abstract void handleException(String... arr) throws AilurusException;","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        return String.format(\"[%s]%s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leeroy999":60}},{"path":"src/main/java/ailurus/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"     * Constructor for empty TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Tasklist with default tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * @param tasks default tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        this.list \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"     * Size of arraylist of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     * @return length of arraylist","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public int length() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"     * Get the task message of a particular task","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"     * @param i index of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"     * @return task message of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    public String getIndexString(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        return list.get(i).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     * Get a particular task from the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * @param i index of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     * @return the particular task","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        return list.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"     * Marking a specific task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"     * @param str String to be converted to integer, representing task numbers to be marked as done","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     * @return tasks that has been marked as done","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"    public ArrayList\u003cTask\u003e done(String str) throws AilurusException {","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        String[] arr \u003d str.trim().split(\" \", -1);","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        assert arr.length \u003e 0 : \"string array must have length more than 0\";","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"                int taskNo \u003d Integer.parseInt(arr[i]);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"                if (taskNo \u003e list.size() || taskNo \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"                    throw new AilurusException(AilurusException.Error.NUMBER);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"                    Task task \u003d list.get(taskNo - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"                throw new AilurusException(AilurusException.Error.NAN);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        return tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"     * Adding task to list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"     * @param task Ailurus.Task that has been added","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"     * @return task that has been added","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"     * Deleting tasks from a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"     * @param str String to be converted to integer, representing task numbers to be deleted","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"     * @return tasks that has been deleted","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"    public ArrayList\u003cTask\u003e deleteTask(String str) {","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"        ArrayList\u003cInteger\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"            String[] strArray \u003d str.trim().split(\" \", -1);","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"            assert strArray.length \u003e 0 : \"string array must have length more than 0\";","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"            for (int i \u003d 0; i \u003c strArray.length; i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"                int taskNo \u003d Integer.parseInt(strArray[i]);","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"                if (taskNo \u003e list.size() || taskNo \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"                    throw new AilurusException(AilurusException.Error.NUMBER);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"                    arr.add(taskNo);","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"                    tasks.add(list.get(arr.get(i) - 1));","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"            arr.sort((Integer a, Integer b) -\u003e b - a);","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"            arr.forEach((Integer taskNo) -\u003e list.remove(taskNo - 1));","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.NAN);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"        return tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":124}},{"path":"src/main/java/ailurus/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package ailurus.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import ailurus.AilurusException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"     * Constructor for Todo","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    public Todo(String description) throws AilurusException {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"        super(description.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"        handleException();","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    public void handleException(String... arr) {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"            throw new AilurusException(AilurusException.Error.EMPTYTODO);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"     * Write data to log task","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     * @param writer file writer for writing data to file","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    public void log(FileWriter writer) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            writer.write(String.format(\"T|%d|%s\\n\", this.isDone ? 1 : 0, this.description.trim()));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leeroy999":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ailurus.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leeroy999":19}},{"path":"src/test/java/AilurusTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import ailurus.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import ailurus.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import ailurus.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"public class AilurusTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    public void parseTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"        String command \u003d \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        String deadlineCorrect \u003d \"deadline CS2103T ip week 2 /by 2021-08-19\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        String deadlineCorrect1 \u003d \"deadline test\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        String deadlineWrong \u003d \"deadlinetest\";","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parse(deadlineCorrect), command);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parseMessage(deadlineCorrect), \"CS2103T ip week 2 /by 2021-08-19\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parse(deadlineCorrect1), command);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Parser.parseMessage(deadlineCorrect1), \"test\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        assertNotEquals(Parser.parse(deadlineWrong), command);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public void taskTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        Task task1 \u003d new Todo(\"Go grocery shopping\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        Task task2 \u003d new Deadline(\"CS2103T ip week 2 /by 2021-08-19\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        Task task3 \u003d new Event(\"CS2103T lecture /at 2021-08-27\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        String task1String \u003d \"[T][ ]Go grocery shopping\";","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        String task2String \u003d \"[D][ ]CS2103T ip week 2 (by: Aug 19 2021)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        String task3String \u003d \"[E][ ]CS2103T lecture (at: Aug 27 2021)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        assertEquals(task1.toString(), task1String);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        assertEquals(task2.toString(), task2String);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        assertEquals(task3.toString(), task3String);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"    public void storageTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        // loading of storage","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        Storage storage \u003d new Storage(\"./data/\", \"testData.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"        TaskList tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        assertEquals(tasklist.length(), 0);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        // adding 2 tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        tasklist.addTask(new Todo(\"test1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        tasklist.addTask(new Todo(\"test2\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        // reloading storage with 2 tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        storage.unload(tasklist);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        TaskList newTaskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        assertEquals(newTaskList.length(), 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        // emptying storage with 0 tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        storage.unload(new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        TaskList emptyTaskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        assertEquals(emptyTaskList.length(), 0);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leeroy999":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"Go grocery shopping","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"done one","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"done -99","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"todo Go grocery shopping","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"deadline CS2103T ip week 2 /by","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"deadline /by 2021-08-19","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"deadline CS2103T ip week 2 /by 2021-08-19","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"event CS2103T lecture /at","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"event /at 2021-08-27","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"event CS2103T lecture /at 2021-08-27","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"done two","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"delete two","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leeroy999":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ailurus\\*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"java -classpath ..\\bin Ailurus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"leeroy999":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"java -classpath ../bin Ailurus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"leeroy999":1}}]
