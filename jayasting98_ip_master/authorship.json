[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jayasting98":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Main class of Duke","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"     * Initialises and runs the Duke chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"     * Command line arguments are ignored.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"        DukeChatbot dukeChatbot \u003d new DukeChatbot();","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"        dukeChatbot.printGreeting();","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"        dukeChatbot.listenForInput();","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jayasting98":16,"-":4}},{"path":"src/main/java/duke/DukeChatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import duke.ui.CommandParser;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import duke.ui.CommandType;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"import duke.ui.DukeInvalidCommandException;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"import duke.ui.MessageFormatter;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":" * Represents the Duke chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"public class DukeChatbot {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    private static final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m Duke!\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"    private static final String READ_COMMAND_ERROR_MESSAGE \u003d \"An unexpected error has occurred.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"    private static final String INVALID_COMMAND_ERROR_TEMPLATE \u003d \"This command is invalid.\\n%s\\nPlease try again.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"    private MessageFormatter messageFormatter;","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"     * Creates a Duke chatbot with an initially empty list of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"    public DukeChatbot() {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"        this.messageFormatter \u003d new MessageFormatter();","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"        this.commandParser \u003d new CommandParser();","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"     * Prints the greeting message.","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"        printFormattedMessage(LOGO + GREETING_MESSAGE);","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"     * Listens for inputs for commands and responds accordingly.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"    public void listenForInput() {","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"        String command;","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"        CommandType commandType;","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"        do {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"                command \u003d br.readLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"                commandType \u003d commandParser.getCommandTypeFromCommand(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"                int taskIndex;","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"                switch (commandType) {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"                case EXIT:","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"                    printExitMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"                case ADD_TODO_TASK:","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"                    ToDoTask toDo \u003d commandParser.getToDoTask(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"                    addTask(toDo);","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"                case LIST_TASKS:","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"                    printTasks();","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"                case MARK_TASK_DONE:","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"                    taskIndex \u003d commandParser.getTaskIndexOfTaskMarkedDone(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"                    markTaskDone(taskIndex);","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"                case ADD_DEADLINE_TASK:","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"                    DeadlineTask deadlineTask \u003d commandParser.getDeadlineTask(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"                    addTask(deadlineTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"                case ADD_EVENT_TASK:","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"                    EventTask eventTask \u003d commandParser.getEventTask(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"                    addTask(eventTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"                case DELETE_TASK:","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"                    taskIndex \u003d commandParser.getTaskIndexOfTaskDeleted(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"                    deleteTask(taskIndex);","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"                default:","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"                    // The default case should be unreachable. If this is reached, something is wrong.","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"                    printFormattedMessage(READ_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"                    commandType \u003d CommandType.EXIT;","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"jayasting98"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"                printFormattedMessage(READ_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"            } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":"                printFormattedMessage(String.format(INVALID_COMMAND_ERROR_TEMPLATE, e.getMessage()));","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"                commandType \u003d null;","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"        } while (commandType \u003d\u003d null || !commandType.equals(CommandType.EXIT));","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"jayasting98"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"jayasting98"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"        sb.append(messageFormatter.formatTask(task)).append(\"\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"        sb.append(getListLengthMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"        printFormattedMessage(sb.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"    private void printTasks() {","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"            printFormattedMessage(\"You have no tasks in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"jayasting98"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"jayasting98"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"jayasting98"},"content":"            sb.append(messageFormatter.formatTasksList(tasks));","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"jayasting98"},"content":"            printFormattedMessage(sb.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"    private void markTaskDone(int taskIndex) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"jayasting98"},"content":"        Task task;","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"jayasting98"},"content":"            task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"jayasting98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"The task number does not exist.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"jayasting98"},"content":"        task.markDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"jayasting98"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"jayasting98"},"content":"        sb.append(messageFormatter.formatTask(task));","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"        printFormattedMessage(sb.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"jayasting98"},"content":"    private void deleteTask(int taskIndex) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"        Task task;","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"jayasting98"},"content":"            task \u003d tasks.remove(taskIndex);","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"jayasting98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"The task number does not exist.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"jayasting98"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"jayasting98"},"content":"        sb.append(messageFormatter.formatTask(task)).append(\"\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"jayasting98"},"content":"        sb.append(getListLengthMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"jayasting98"},"content":"        printFormattedMessage(sb.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"jayasting98"},"content":"    private String getListLengthMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"jayasting98"},"content":"        int n \u003d tasks.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"jayasting98"},"content":"        // Check whether singular or plural should be printed.","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"jayasting98"},"content":"        if (n !\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"jayasting98"},"content":"            return String.format(\"Now you have %d tasks in the list.\", n);","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"jayasting98"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"jayasting98"},"content":"            return \"Now you have 1 task in the list.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"jayasting98"},"content":"    private void printExitMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"jayasting98"},"content":"        printFormattedMessage(EXIT_MESSAGE);","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"jayasting98"},"content":"    private void printFormattedMessage(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"jayasting98"},"content":"        System.out.println(messageFormatter.getFormattedMessage(message));","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"jayasting98"},"content":"        System.out.println();","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":173}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.task;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"public class DeadlineTask extends TemporalTask {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    private static final String TYPE_MARK \u003d \"D\";","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"    private static final String TIME_RELATION \u003d \"by\";","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"     * Creates a task with a deadline with the given task description.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"     * @param taskDescription The description of the task with a deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"     * @param time The deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"    public DeadlineTask(String taskDescription, String time) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"        super(taskDescription, time);","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    String getTypeIndicator() {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"        return String.format(\"[%s]\", TYPE_MARK);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    String getTimeRelation() {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"        return TIME_RELATION;","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":32}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.task;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents a task that occurs at a specific time.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"public class EventTask extends TemporalTask {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    private static final String TYPE_MARK \u003d \"E\";","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"    private static final String TIME_RELATION \u003d \"at\";","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"     * Creates an event task with the given task description.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"     * @param taskDescription The description of the event task.","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"     * @param time The time the event occurs.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"    public EventTask(String taskDescription, String time) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"        super(taskDescription, time);","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    String getTypeIndicator() {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"        return String.format(\"[%s]\", TYPE_MARK);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    String getTimeRelation() {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"        return TIME_RELATION;","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.task;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents a user task.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    private static final String DONE_MARK \u003d \"X\";","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"    private String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"     * Creates a task with the given task description.","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"        this.description \u003d taskDescription;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"        sb.append(getTypeIndicator());","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"        sb.append(getDoneIndicator());","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"        sb.append(\" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        sb.append(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"    abstract String getTypeIndicator();","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"    private String getDoneIndicator() {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"            return String.format(\"[%s]\", DONE_MARK);","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jayasting98":51}},{"path":"src/main/java/duke/task/TemporalTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.task;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents a task that has some relation with time.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"public abstract class TemporalTask extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    private String time;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"     * Creates a temporal task with the given task description.","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"     * @param taskDescription The description of the temporal task.","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"     * @param time The time which is related to the temporal task.","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"    public TemporalTask(String taskDescription, String time) {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"     * Obtains the relation of time to the temporal task.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"     * @return The time relation.","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    abstract String getTimeRelation();","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"        String taskRepresentation \u003d super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"        return String.format(\"%s (%s: %s)\", taskRepresentation, getTimeRelation(), time);","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":35}},{"path":"src/main/java/duke/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.task;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents a to-do task.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    private static final String TYPE_MARK \u003d \"T\";","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"     * Creates a to-do task with the given task description.","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"     * @param taskDescription The description of the to-do task.","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    public ToDoTask(String taskDescription) {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    String getTypeIndicator() {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"        return String.format(\"[%s]\", TYPE_MARK);","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":25}},{"path":"src/main/java/duke/ui/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.ui;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":" * Helper class to parse commands.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"public class CommandParser {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    private static final String ADD_TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    private static final String LIST_TASKS_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    private static final String MARK_TASK_DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"    private static final String ADD_DEADLINE_TASK_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"    private static final String ADD_EVENT_TASK_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    private static final String DELETE_TASK_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"     * Parses the commands to get the command name.","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"     * @param command The command.","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"     * @return The type of command.","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"     * @throws DukeInvalidCommandException If the command is empty or the command does not exist.","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    public CommandType getCommandTypeFromCommand(String command) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d command.strip().split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"        if (tokens.length \u003d\u003d 0 || tokens[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"        String commandName \u003d tokens[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"        switch (commandName) {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"        case EXIT_COMMAND:","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"            return CommandType.EXIT;","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        case ADD_TODO_COMMAND:","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"            return CommandType.ADD_TODO_TASK;","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"        case LIST_TASKS_COMMAND:","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"            return CommandType.LIST_TASKS;","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"        case MARK_TASK_DONE_COMMAND:","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"            return CommandType.MARK_TASK_DONE;","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"        case ADD_DEADLINE_TASK_COMMAND:","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"            return CommandType.ADD_DEADLINE_TASK;","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"        case ADD_EVENT_TASK_COMMAND:","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"            return CommandType.ADD_EVENT_TASK;","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"        case DELETE_TASK_COMMAND:","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"            return CommandType.DELETE_TASK;","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"        default:","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command does not exist.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"     * Parses a \"Mark Task Done\" command to get the index of the task to be marked done in the list of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"     * @param command The \"Mark Task Done\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"     * @return The index of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"     * @throws DukeInvalidCommandException If the command is empty, not a \"Mark Task Done\" command, or malformed.","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"    public int getTaskIndexOfTaskMarkedDone(String command) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d command.strip().split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"        if (tokens.length \u003d\u003d 0 || tokens[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"        String commandName \u003d tokens[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"        if (!commandName.equals(MARK_TASK_DONE_COMMAND)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is not a \u0027Mark Task Done\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"        StringBuilder taskNumberSb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"            taskNumberSb.append(tokens[i]);","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"            if (taskNumberSb.length() \u003e 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"        if (taskNumberSb.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"A task number is required for a \u0027Mark Task Done\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"            return Integer.parseInt(taskNumberSb.toString()) - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"The task number is not a number.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"     * Parses a \"Delete Task\" command to get the index of the task to be deleted in the list of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"     * @param command The \"Delete Task\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"     * @return The index of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"     * @throws DukeInvalidCommandException If the command is empty, not a \"Delete Task\" command, or malformed.","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"    public int getTaskIndexOfTaskDeleted(String command) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d command.strip().split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"        if (tokens.length \u003d\u003d 0 || tokens[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"jayasting98"},"content":"        String commandName \u003d tokens[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":"        if (!commandName.equals(DELETE_TASK_COMMAND)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is not a \u0027Delete Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"        StringBuilder taskNumberSb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"            taskNumberSb.append(tokens[i]);","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"            if (taskNumberSb.length() \u003e 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"jayasting98"},"content":"        if (taskNumberSb.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"A task number is required for a \u0027Delete Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"            return Integer.parseInt(taskNumberSb.toString()) - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"The task number is not a number.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"jayasting98"},"content":"     * Parses an \"Add To-do Task\" command to get the to-do task.","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"jayasting98"},"content":"     * @param command The \"Add To-do Task\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"jayasting98"},"content":"     * @return The to-do task.","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"jayasting98"},"content":"     * @throws DukeInvalidCommandException If the command is empty, not an \"Add To-do Task\" command, or malformed.","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"jayasting98"},"content":"    public ToDoTask getToDoTask(String command) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d command.strip().split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"jayasting98"},"content":"        if (tokens.length \u003d\u003d 0 || tokens[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"jayasting98"},"content":"        String commandName \u003d tokens[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"jayasting98"},"content":"        if (!commandName.equals(ADD_TODO_COMMAND)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is not an \u0027Add To-do Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"jayasting98"},"content":"        StringBuilder taskDescriptionSb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"            taskDescriptionSb.append(tokens[i]).append(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"jayasting98"},"content":"        String taskDescription \u003d taskDescriptionSb.toString().strip();","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"jayasting98"},"content":"        if (taskDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"A description is required for an \u0027Add To-do Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"jayasting98"},"content":"        return new ToDoTask(taskDescription);","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"jayasting98"},"content":"     * Parses an \"Add Deadline Task\" command to get the deadline task.","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"jayasting98"},"content":"     * @param command The \"Add Deadline Task\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"jayasting98"},"content":"     * @return The deadline task.","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"jayasting98"},"content":"     * @throws DukeInvalidCommandException If the command is empty, not an \"Add Deadline Task\" command, or malformed.","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"jayasting98"},"content":"    public DeadlineTask getDeadlineTask(String command) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d command.strip().split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"jayasting98"},"content":"        if (tokens.length \u003d\u003d 0 || tokens[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"jayasting98"},"content":"        String commandName \u003d tokens[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"jayasting98"},"content":"        if (!commandName.equals(ADD_DEADLINE_TASK_COMMAND)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is not an \u0027Add Deadline Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"jayasting98"},"content":"        StringBuilder taskDescriptionSb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"jayasting98"},"content":"        int timeStartIndex \u003d tokens.length;","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"jayasting98"},"content":"            String token \u003d tokens[i];","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"jayasting98"},"content":"            if (token.equals(\"/by\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"jayasting98"},"content":"                timeStartIndex \u003d i + 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"jayasting98"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"jayasting98"},"content":"            taskDescriptionSb.append(token).append(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"jayasting98"},"content":"        StringBuilder deadlineSb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d timeStartIndex; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"jayasting98"},"content":"            deadlineSb.append(tokens[i]).append(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"jayasting98"},"content":"        String taskDescription \u003d taskDescriptionSb.toString().strip();","lastModifiedDate":"2021-08-15"},{"lineNumber":179,"author":{"gitId":"jayasting98"},"content":"        String deadline \u003d deadlineSb.toString().strip();","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"jayasting98"},"content":"        if (taskDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"A description is required for an \u0027Add Deadline Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":182,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"jayasting98"},"content":"        if (deadline.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":184,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"A deadline is required for an \u0027Add Deadline Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"jayasting98"},"content":"        return new DeadlineTask(taskDescription, deadline);","lastModifiedDate":"2021-08-15"},{"lineNumber":187,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"jayasting98"},"content":"     * Parses an \"Add Event Task\" command to get the event task.","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"jayasting98"},"content":"     * @param command The \"Add Event Task\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"jayasting98"},"content":"     * @return The event task.","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"jayasting98"},"content":"     * @throws DukeInvalidCommandException If the command is empty, not an \"Add Event Task\" command, or malformed.","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"jayasting98"},"content":"    public EventTask getEventTask(String command) throws DukeInvalidCommandException {","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d command.strip().split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"jayasting98"},"content":"        if (tokens.length \u003d\u003d 0 || tokens[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":199,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":201,"author":{"gitId":"jayasting98"},"content":"        String commandName \u003d tokens[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":202,"author":{"gitId":"jayasting98"},"content":"        if (!commandName.equals(ADD_EVENT_TASK_COMMAND)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":203,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"This command is not an \u0027Add Event Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"jayasting98"},"content":"        StringBuilder taskDescriptionSb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"jayasting98"},"content":"        int timeStartIndex \u003d tokens.length;","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":208,"author":{"gitId":"jayasting98"},"content":"            String token \u003d tokens[i];","lastModifiedDate":"2021-08-15"},{"lineNumber":209,"author":{"gitId":"jayasting98"},"content":"            if (token.equals(\"/at\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"jayasting98"},"content":"                timeStartIndex \u003d i + 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":211,"author":{"gitId":"jayasting98"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":212,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":213,"author":{"gitId":"jayasting98"},"content":"            taskDescriptionSb.append(token).append(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":214,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"jayasting98"},"content":"        StringBuilder timeSb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d timeStartIndex; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"jayasting98"},"content":"            timeSb.append(tokens[i]).append(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":219,"author":{"gitId":"jayasting98"},"content":"        String taskDescription \u003d taskDescriptionSb.toString().strip();","lastModifiedDate":"2021-08-15"},{"lineNumber":220,"author":{"gitId":"jayasting98"},"content":"        String time \u003d timeSb.toString().strip();","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"jayasting98"},"content":"        if (taskDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":222,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"A description is required for an \u0027Add Event Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":223,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":224,"author":{"gitId":"jayasting98"},"content":"        if (time.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":225,"author":{"gitId":"jayasting98"},"content":"            throw new DukeInvalidCommandException(\"An event time is required for an \u0027Add Event Task\u0027 command.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":226,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":227,"author":{"gitId":"jayasting98"},"content":"        return new EventTask(taskDescription, time);","lastModifiedDate":"2021-08-15"},{"lineNumber":228,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":229,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":229}},{"path":"src/main/java/duke/ui/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.ui;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents the different types of commands.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"public enum CommandType {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"    EXIT,","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    ADD_TODO_TASK,","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"    LIST_TASKS,","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"    MARK_TASK_DONE,","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"    ADD_DEADLINE_TASK,","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    ADD_EVENT_TASK,","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    DELETE_TASK","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":16}},{"path":"src/main/java/duke/ui/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.ui;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents an exception that occurs when an invalid command is used as an input for the Duke chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"public class DukeInvalidCommandException extends IllegalArgumentException {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"     * Constructs a DukeInvalidCommandException instance with the given error message.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":17}},{"path":"src/main/java/duke/ui/MessageFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package duke.ui;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":" * Helper class for formatting the Duke chatbot\u0027s messages.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":" * @author Jay Aljelo Saez Ting","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"public class MessageFormatter {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    private static final String INDENTATION_UNIT_STRING \u003d \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    private static final int INDENTATION_UNIT_COUNT \u003d 4;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    private static final String DIVIDER_LINE_UNIT_STRING \u003d \"_\";","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    private static final int DIVIDER_LINE_UNIT_COUNT \u003d 60;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"    private static final int DIVIDER_INDENTATION_UNIT_COUNT \u003d 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"     * Formats the message passed for output.","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"     * @param message The message to be formatted.","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"     * @return The formatted message.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    public String getFormattedMessage(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"        return indent(surroundWithDividerLines(message));","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"     * Creates a formatted String representing the list of tasks passed.","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"     * @param tasks The list of tasks to be formatted.","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"     * @return The formatted String representing the list of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"    public String formatTasksList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        int n \u003d tasks.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"            sb.append(String.format(\"%d.%s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"        return sb.toString().stripTrailing();","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"     * Creates a formatted String representing a single task.","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"     * @return The formatted String representing the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"    public String formatTask(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"        return indent(task.toString(), 2);","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"    private String surroundWithDividerLines(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"        String dividerLine \u003d getDividerLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"        return String.format(\"%s%s\\n%s\", dividerLine,","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"                indent(message, DIVIDER_INDENTATION_UNIT_COUNT).stripTrailing(), dividerLine);","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"    private String getDividerLine() {","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"        return String.format(\"%s\\n\", DIVIDER_LINE_UNIT_STRING.repeat(DIVIDER_LINE_UNIT_COUNT));","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"    private String indent(String string) {","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"        return indent(string, INDENTATION_UNIT_STRING, INDENTATION_UNIT_COUNT);","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"    private String indent(String string, int count) {","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"        return indent(string, INDENTATION_UNIT_STRING, count);","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"    private String indent(String string, String unit, int count) {","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"        String indentation \u003d unit.repeat(count);","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"        for (String line : string.split(\"\\n\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"            if (line.length() \u003e 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"                sb.append(indentation).append(line);","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"        return sb.toString().stripTrailing();","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":84}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"blah","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"todo read book","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"done","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"done blah","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"done 42","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"deadline return book","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"deadline return book /by","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"event project meeting","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"event project meeting /at","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"event graduation /at a long time away TT","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"delete blah","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"delete 42","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"delete 4","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jayasting98":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jayasting98":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"if [ ! -e \"../bin\" ]","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jayasting98":3,"-":35}}]
