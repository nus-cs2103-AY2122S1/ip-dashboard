[{"path":"src/main/java/duke/DateTimeConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * This class converts the input string of date and time into","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" * a better, understandable date and time format.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"public class DateTimeConverter {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     * Empty constructor for DateTimeConverter.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    public DateTimeConverter() {}","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns a string containing a newly formatted date and time.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     * @param datetime String containing the date and time to be","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     *                 changed.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String containing a newly formatted date and time.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    public String convertDateAndTime(String datetime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        String time \u003d datetime.substring(datetime.length() - 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        int actualTime \u003d Integer.parseInt(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        String hour;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        String minute;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        if (actualTime \u003e\u003d 1200) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"            if ((actualTime - 1200) / 100 \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d \"12\";","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d String.valueOf(Math.round((actualTime - 1200) / 100));","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"            minute \u003d String.valueOf(actualTime % 100);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"            if (minute.equals(\"0\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"                minute +\u003d \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"            time \u003d hour + \":\" + minute + \"PM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"            if (actualTime / 100 \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d \"12\";","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d String.valueOf(Math.round(actualTime / 100));","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"            minute \u003d String.valueOf(actualTime % 100);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"            if (minute.equals(\"0\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"                minute +\u003d \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"            time \u003d hour + \":\" + minute + \"AM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"        String date \u003d datetime.substring(0, datetime.length() - 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        LocalDate d1 \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        return d1.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \" + time;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"BenjaminTan99":56}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a special type of Task which has a date and time","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * for which it is to be completed by, using the word \u0027by\u0027.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the Deadline object.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current deadline task.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        String temp \u003d super.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.endsWith(\")\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"            return temp;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(\"deadline \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"        String oldDate \u003d temp.substring(temp.lastIndexOf(\"by\") + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        DateTimeConverter converter \u003d new DateTimeConverter();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"        String newDate \u003d converter.convertDateAndTime(oldDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(oldDate, newDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        int intBeforeBy \u003d temp.lastIndexOf(\"by\") - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.charAt(intBeforeBy) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"            char tempChar \u003d temp.charAt(intBeforeBy);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(String.valueOf(tempChar), \"(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"            return temp + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"        String afterDescription \u003d temp.substring(temp.indexOf(\"by\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        String description \u003d temp.substring(0, temp.indexOf(\"by\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        return description + \"(\" + afterDescription + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current Deadline as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        super.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the current status icon of the current Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Current status icon of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[D]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"     * Return a string containing the Deadline description","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"     * and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String containing the Deadline description","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"     *         and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" * This class is used to simulate an automatic list creator which saves its data and changes it","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":" * when the user interacts with it.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    /** The storage class used to store files for Duke. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /** The UI Duke will use when processing data and user input. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    private static Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /** The list of tasks given to Duke (if any). **/","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"     * @param filePath Path of the file to be used when starting Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"     * Method used to begin processing of Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"    public void run() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        File dukeFile \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"        File parentDir \u003d dukeFile.getParentFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"        if(!parentDir.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"        Ui.importantMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        storage.printStartingFileContents();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"        Scanner newScan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"        Parser.evaluateUserInput(newScan);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"        Storage.writeFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        Ui.successfulWriteFileMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"        tasks.markTasksSaved();","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        Ui.goodbyeMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"BenjaminTan99":58}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a special Task with a designated time","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * and date, using the word \u0027at\u0027.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor of an Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        String temp \u003d super.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.endsWith(\")\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"            return temp;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(\"event \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        String oldDate \u003d temp.substring(temp.lastIndexOf(\"at\") + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"        DateTimeConverter converter \u003d new DateTimeConverter();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"        String newDate \u003d converter.convertDateAndTime(oldDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(oldDate, newDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        int intBeforeBy \u003d temp.lastIndexOf(\"at\") - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.charAt(intBeforeBy) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"            char tempChar \u003d temp.charAt(intBeforeBy);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(String.valueOf(tempChar), \"(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"            return temp + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        String afterDescription \u003d temp.substring(temp.indexOf(\"at\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        String description \u003d temp.substring(0, temp.indexOf(\"at\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"        return description + \"(\" + afterDescription + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current Event as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"        super.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of the","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"     * completion status of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation of the","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"     *         completion status of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation for the Event\u0027s description","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"     * and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation for the Event\u0027s description","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"     *         and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":78}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" * This class deals with making sense of the user input/command","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * when using Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     * Empty constructor for Parser.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    public Parser() {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     * Evaluates user input into understandable code for","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Duke to process. Saves data whenever the TaskList changes.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * @param scanner Scanner used to process user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    public static void evaluateUserInput(Scanner scanner) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"                TaskList.printList();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"            } else if (userInput.startsWith(\"done\") || userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"                try {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"                    if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"                        TaskList.markTaskDone(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"                    } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"                        TaskList.removeTask(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"Invalid input. Requires a number after done (e.g. done 1).\");","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"                } catch (ArrayIndexOutOfBoundsException f) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"Invalid number - Number is larger than list count.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"            } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"                TaskList.findTask(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"                TaskList.addTask(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"            Storage.writeFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":51}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":" * This class deals with loading tasks from the file","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":" * and saving tasks in the file for Duke to process and use later.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"public class Storage {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /** The filepath used to track where the data is being saved to. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    private static String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"     * @param filePath Path of the file where","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"     *                 data of Duke is being stored.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"     * Writes content to the given filepath with given content.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    public static void writeFile() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        ArrayList\u003cTask\u003e currList \u003d TaskList.getList();","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task content : currList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"                FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"                fw.write(content.printTask());","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"                fw.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"                Ui.failToWriteFileMessage(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the file\u0027s contents just as Duke begins loading in the file,","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     * to allow the user to see what contents are in the file that was previously saved.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"    public void printStartingFileContents() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"        File testFile \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        Scanner s;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"            s \u003d new Scanner(testFile);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.printTasksOnLoad(s);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.firstTimeMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"     * Loads in the file from the given filename and retrieves the data from the file,","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"     * processing it and copying the data into Duke and the TaskList for usage and","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"     * processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"     * @return ArrayList to be stored in TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"        File newFile \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"            Scanner readFile \u003d new Scanner(newFile);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"            while (readFile.hasNext()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"                // read file line by line and decipher into arraylist","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"                String nextLine \u003d readFile.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"                char typeOfTask \u003d nextLine.charAt(1);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"                char isTaskDone \u003d nextLine.charAt(4);","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"                String description \u003d nextLine.substring(6);","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"                Task temp \u003d null;","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"                if (typeOfTask \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"                    temp \u003d new Deadline(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"                } else if (typeOfTask \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"                    temp \u003d new Event(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"                } else if (typeOfTask \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"                    temp \u003d new Task(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"                if (isTaskDone \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"                    assert temp !\u003d null;","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"                    temp.markSaved();","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"                newList.add(temp);","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"        return newList;","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":99}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a real life task to be completed and","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * its status of completion. May contain date and time depending on the","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" * type of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /** The description of the task. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    /** Indicates if the task has been completed. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /** Indicates if the task has been saved in a file. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    protected boolean wasSaved;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    public Task (String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        this.wasSaved \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current task.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of status of completion of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation of status of completion of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of the task and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation of the task and its completion status.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"     * Indicates the current task as being saved in the file (using the filepath given).","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"    public void markSaved() {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"        this.wasSaved \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":69}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" * This class contains the task list with operations that can","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * be used on the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"    /** The contents found in the TaskList. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    private static ArrayList\u003cTask\u003e contents;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * @param fileContents Content of the file used to save data.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    public TaskList(ArrayList\u003cTask\u003e fileContents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"        contents \u003d fileContents;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     * Adds a task to the TaskList depending on what kind of task was added,","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"     * checking the user input and acting accordingly.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"     * If input is valid, it is added; otherwise a reminder message is sent to the","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"     * user to show what kind of input is valid.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput Line of user input which contains the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"    public static void addTask(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        if (userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\") ||","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"                userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"            Task newTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"            if (userInput.startsWith(\"deadline\") \u0026\u0026 userInput.contains(\"by\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"                newTask \u003d new Deadline(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"            } else if (userInput.startsWith(\"event\") \u0026\u0026 userInput.contains(\"at\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"                newTask \u003d new Event(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"                newTask \u003d new ToDos(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"            contents.add(newTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.addTaskMessage(newTask, contents.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.invalidTaskMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     * Obtains the list of the current tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"     * @return List of current tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"    public static ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        return contents;","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the list of current tasks. Displays a different","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"     * message if list is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"        if (contents.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.emptyListMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.getCurrentTasks(contents);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current task as done and changes its UI appearance when","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"     * printed out.","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput UserInput which indicates which task is done.","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"    public static void markTaskDone(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"        String index \u003d userInput.substring(5);","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"        int x \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"        Task temp \u003d contents.get(x - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"        temp.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"        Ui.markTaskMessage(temp);","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"     * Removes the task completely from the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput UserInput which indicates which task is to be removed.","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"    public static void removeTask(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"        String index \u003d userInput.substring(7);","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"        int x \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"        Task temp \u003d contents.get(x - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"        contents.remove(temp);","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"        Ui.removeTaskMessage(temp);","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks all tasks as saved to the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"    public void markTasksSaved() {","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task x: contents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"            x.markSaved();","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"     * Finds and returns all tasks containing the userInput.","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput Search request by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"    public static void findTask(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"        String keyword \u003d userInput.substring(5);","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"        ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task x : contents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"            if (x.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"BenjaminTan99"},"content":"                matchingList.add(x);","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"                counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"BenjaminTan99"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.searchFoundNothing();","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"            Ui.searchList(matchingList);","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":126}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a unique type of Task which only has description","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * but no designated deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for ToDos.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the ToDos object.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns description of the current ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current ToDos object.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        return super.getDescription().replace(\"todo \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current ToDos object as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"        super.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the status icon of the current ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Status icon of the current ToDos object.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[T]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the current ToDos\u0027s description and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Current ToDos\u0027s description and completion status.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":55}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * This class deals with interactions with the user by displaying","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" * information when user input is processed.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     * Empty constructor for Ui.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the welcome message upon starting Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"Welcome to Ben\u0027s. How may I help you?\");","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the tasks of the list from the saved file upon starting","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"     * Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"     * @param currList Contents of the file processed into the scanner.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    public static void printTasksOnLoad(Scanner currList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"Current list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"        while (currList.hasNext()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(counter + \". \" + currList.nextLine());","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"            counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints the message when user starts up Duke for the first time","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"     * (where no file has been created and no contents saved).","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    public static void firstTimeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"\\nNote: This is your first time using Duke. \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"                \"We will now create a new file for you.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays vital information for what the user should input into Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     * Displayed upon starting Duke or when user input fails.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"    public static void importantMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"\\nImportant notes: \\n1) For deadlines, it must contain the word \u0027by\u0027\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"                \" and events must contain the word \u0027at\u0027. \");","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"2) Deadlines and events must also contain the date and time as such:\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"                \"after by or at, in the form DATE TIME where the DATE must follow this format:\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"                \"YYYY-MM-DD;\\n   and TIME must follow the 24hr format (e.g. 2pm \u003d 1400)\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"     * Display message for an empty list.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"    public static void emptyListMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"    ***\\n\" + \"    There is currently nothing in the list. \\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"                \"    ***\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the current tasks of the list when using Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     * @param contents Tasks in the TaskList in Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"    public static void getCurrentTasks(ArrayList\u003cTask\u003e contents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"    ***\\n\" + \"    These are your tasks in the list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task x: contents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"            if (x.wasSaved) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"                System.out.println(\"      \" + counter + \". \" + x);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"                System.out.println(\"      \" + counter + \". \" + x.getStatusIcon() + \" \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"                        x.getDescription());","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"                counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"    ***\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays the message when user marks a task as completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"     * @param task Task that was completed by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"    public static void markTaskMessage(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"    ***\\n\" + \"    You have successfully done this task:\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"                \"      \" + task.getStatusIcon() + \" \" + task.getDescription() + \"\\n    ***\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays the message when user adds a task. English slightly differs when list only","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"     * has 1 task.","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"     * @param task Task the user is adding.","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"     * @param count Size of the TaskList currently.","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"BenjaminTan99"},"content":"    public static void addTaskMessage(Task task, int count) {","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(\"    ***\\n\" + \"    Understood. Added the task:\\n\" + \"      \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"                    task.printTask() + \"\\n    You now have \" + count + \" task in the list.\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"                    \"    ***\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(\"    ***\\n\" + \"    Understood. Added the task:\\n\" + \"      \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"                    task.printTask() + \"\\n    You now have \" + count + \" tasks in the list.\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"                    \"    ***\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints a message when a user removes a task from the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"     * @param task Task removed by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"    public static void removeTaskMessage(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"    ***\\n\" + \"    You have successfully removed this task:\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"                \"      \" + task.getStatusIcon() + \" \" + task.getDescription() + \"\\n    ***\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays an error message when user input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"BenjaminTan99"},"content":"    public static void invalidTaskMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"Invalid input. \\nYou may only use the following inputs: \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"                \"(bye, list, done, deadline, event, todo) and any text thereafter.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"        importantMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out a list of Tasks matching the user\u0027s input when searching for a keyword","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"BenjaminTan99"},"content":"     * or characters.","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"     * @param matchingContents List of contents that contain the keywords","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"BenjaminTan99"},"content":"     *                         requested by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"BenjaminTan99"},"content":"    public static void searchList(ArrayList\u003cTask\u003e matchingContents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"BenjaminTan99"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"    ***\\n\" + \"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task x: matchingContents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(\"      \" + counter + \". \" + x.printTask());","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"    ***\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays the message when user is unable to find a matching word in the","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"BenjaminTan99"},"content":"     * TaskList when searching.","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"BenjaminTan99"},"content":"    public static void searchFoundNothing() {","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"No task in the list matches your current search.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a message indicating that contents have been written safely and correctly","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"BenjaminTan99"},"content":"     * to the designated file.","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"BenjaminTan99"},"content":"    public static void successfulWriteFileMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"Successfully written contents to file.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a message indicating that the file was unable to be written.","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"BenjaminTan99"},"content":"     * @param error Error thrown when file is failed to be written to.","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"    public static void failToWriteFileMessage(String error) {","lastModifiedDate":"2021-08-29"},{"lineNumber":173,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"Failed to write to the file. Error: \" + error);","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"BenjaminTan99"},"content":"     * The goodbye message displayed after user exits Duke (i.e. bye).","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"BenjaminTan99"},"content":"    public static void goodbyeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"\\nGoodbye! Have a nice day. :)\");","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":182}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    public void test1() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"        String userInput \u003d \"deadline homework by 2021-02-02 1200\";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"        Deadline test \u003d new Deadline(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"        String output \u003d test.getDescription();","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(\"homework (by 02 Feb 2021 12:00PM)\", output);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    public void test2() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"        String userInput \u003d \"event party at 2021-09-09 1500\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"        Event test \u003d new Event(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"        String output \u003d test.printTask();","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(\"[E][ ] party (at 09 Sep 2021 3:00PM)\", output);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"todo create game","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"deadline project /by next week","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"event project meeting /at Tue 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminTan99":6}}]
