[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    mainClassName \u003d \"seedu.duke.Launcher\"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"BenjaminTan99":15}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"[E][ ] party (at 07 May 2021 8:00PM)","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"BenjaminTan99":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"# User Guide for Baba the Duke","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"To access Baba the Duke: https://github.com/BenjaminTan99/ip","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"    ","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"### Keeping track of various tasks (✓)","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"* Deadlines - tasks to be done ***by*** a certain date and time","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"* Events - tasks happening ***at*** a certain time and date","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"* ToDos - tasks with *no specified time or date*","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"### Show current tasks and filtering them (✓)","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"Display all current tasks and search accordingly.","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"### Mark completed tasks and delete them (✓)","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"Mark tasks as complete and consequently delete them if needed.","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"### Automatic saving and loading of task list (✓)","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"No opening or saving of files required! :)","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"### Shortcuts for experienced users (✓)","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"Saves you time by using short letters as commands.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"### `todo` or `t` - Creates a todo task.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"`todo house chores`","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"Understood. Added the task:","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    [T][] house chores","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"You now have 2 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"### `deadline` or `d` - Creates a deadline task.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"Usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"`deadline task_name /by YYYY-MM-DD HHMM`","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"- *task_name* The name or description of the deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"- */by* - The slash \u0027/\u0027 is optional.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"- *YYYY-MM-DD* - Date format","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"- *HHMM* - Time format in 24HR.","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"Example: `deadline homework by 2021-01-02 2359`","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"Understood. Added the task:","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"    [D][] homework (by 02 Jan 2021 11:59PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"You now have 1 task in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"### `event` or `e` - Creates an event task.","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"Usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"`event task_name /by YYYY-MM-DD HHMM`","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"- *task_name* The name or description of the deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"- */at* - The slash \u0027/\u0027 is optional.","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"- *YYYY-MM-DD* - Date format","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"- *HHMM* - Time format in 24HR.","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"Example: `event party at 2021-05-07 2000`","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"Understood. Added the task:","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"    [E][] party (at 05 Jul 2021 8:00PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"You now have 2 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"### `list` or `l` - Returns the current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"Example usage: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"These are the tasks in the list: ","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"   1. [D][] homework (by 05 Jul 2021 23:59PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"   2. [E][] party at Zac\u0027s (at 09 Sep 2021 4:00PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"### `delete` or `del` or `rm` - Deletes a task.","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"Usage: `delete x` where x refers to the task\u0027s number","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"Example: `delete 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"You have successfully removed this task: ","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"   [D][] homework (by 05 Jul 2021 23:59PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"### `find` or `f` - Finds tasks containing given keyword(s).","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"Example usage: `find party`","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"Here are the matching tasks in your list: ","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"   1. [E][] party (at 05 Jul 2021 8:00PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"   2. [E][] party at Zac\u0027s (at 09 Sep 2021 4:00PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"### `done` - Mark a task as completed.","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"Usage: `done x` where x refers to the task\u0027s number ","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"Example: `done 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"You have successfully done this task: ","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"BenjaminTan99"},"content":"   [E][] party (at 05 Jul 2021 8:00PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"***","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"### `bye` or `b` - Saves all tasks and exits the application.","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"`bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"Goodbye! Have a nice day. :)","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"BenjaminTan99"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"BenjaminTan99"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"-":22,"BenjaminTan99":120}},{"path":"src/main/Resources/View/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BenjaminTan99":16}},{"path":"src/main/Resources/View/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BenjaminTan99":19}},{"path":"src/main/java/duke/DateTimeConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * This class converts the input string of date and time into","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" * a better, understandable date and time format.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"public class DateTimeConverter {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     * Empty constructor for DateTimeConverter.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    public DateTimeConverter() {}","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns a string containing a newly formatted date and time.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     * @param datetime String containing the date and time to be","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     *                 changed.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String containing a newly formatted date and time.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    public String convertDateAndTime(String datetime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        final int noon \u003d 1200;","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        String time \u003d datetime.substring(datetime.length() - 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        String hour;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        String minute;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"        int actualTime \u003d Integer.parseInt(time);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        if (actualTime \u003e\u003d noon) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            // If time is between 12:00 and 12:59PM","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"            if ((actualTime - noon) / 100 \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d \"12\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d String.valueOf(Math.round((actualTime - noon) / 100));","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"            minute \u003d String.valueOf(actualTime % 100);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"            // If time is of XX:00 PM format","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"            if (minute.equals(\"0\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"                minute +\u003d \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"            time \u003d hour + \":\" + minute + \"PM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"            // If time is between 00:00 and 00:59AM","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"            if (actualTime / 100 \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d \"12\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d String.valueOf(Math.round(actualTime / 100));","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"            minute \u003d String.valueOf(actualTime % 100);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"            // If time is of XX:00 AM format","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"            if (minute.equals(\"0\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"                minute +\u003d \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"            time \u003d hour + \":\" + minute + \"AM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"        String date \u003d datetime.substring(0, datetime.length() - 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"        LocalDate d1 \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"        return d1.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \" + time;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"BenjaminTan99":62}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a special type of Task which has a date and time","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * for which it is to be completed by, using the word \u0027by\u0027.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the Deadline object.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current deadline task.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        String temp \u003d super.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.endsWith(\")\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"            return temp;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.startsWith(\"d \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(\"d\", \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(\"deadline \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"        // Obtain the time and date of the deadline","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        String oldDate \u003d temp.substring(temp.lastIndexOf(\"by\") + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"        DateTimeConverter converter \u003d new DateTimeConverter();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"        String newDate \u003d converter.convertDateAndTime(oldDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(oldDate, newDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"        int intBeforeBy \u003d temp.lastIndexOf(\"by\") - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        // Reformat if user types a character before \"by\" like /by","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.charAt(intBeforeBy) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"            char tempChar \u003d temp.charAt(intBeforeBy);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(String.valueOf(tempChar), \"(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"            return temp + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        String afterDescription \u003d temp.substring(temp.indexOf(\"by\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        String description \u003d temp.substring(0, temp.indexOf(\"by\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        return description + \"(\" + afterDescription + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current Deadline as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"        super.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the current status icon of the current Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Current status icon of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[D]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"     * Return a string containing the Deadline description","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"     * and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String containing the Deadline description","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"     *         and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":87}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"    protected DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BenjaminTan99":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":" * This class is used to simulate an automatic list creator which saves its data and changes it","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":" * when the user interacts with it.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    /** Fields for GUI **/","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    private final Image USER \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    private final Image DUKE \u003d new Image(this.getClass().getResourceAsStream(\"/images/Baba.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"    /** The storage class used to store files for Duke. **/","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    /** The list of tasks given to Duke (if any). **/","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"    private static TaskList TASKS;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    /** Boolean to check if first time using Duke. **/","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    public static boolean isFirstTime \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"     * @param filePath Path of the file to be used when starting Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"            Path storagePath \u003d Paths.get(\".\", filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"            // Creating new parent directory if does not exist","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"            File dukeFile \u003d new File(filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"            File parentDir \u003d dukeFile.getParentFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"            if (!Files.exists(storagePath)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"                isFirstTime \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"                Files.createFile(storagePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"            TASKS \u003d new TaskList(Storage.load());","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(\"Failed to create storage file: \" +","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"                    e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the response on Duke application after user has given some input.","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"     * @param input user input that is typed into Duke","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"     * @return message displaying what Duke has done with the user input","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"    public static String getResponse(String input) {","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"        assert input !\u003d null: \"Input cannot be null\";","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"        return \"Baba the Duke says: \" + Parser.evaluateUserInput(input);","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"     * Sets up the \u0027stage\u0027 for the GUI of Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"     * @param stage the stage used to setup the GUI.","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"        // Setting up stage and formatting window to look as expected","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"        setUpStage(stage);","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"        // Handles user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"        });","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"        });","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"        // Allows scrolling to the end if text interactions exceed window height.","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"        // Functionality for handling user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"     * Sets up a stage using JavaFX tools.","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"     * @param stage the stage we are setting up and using for Duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"    private void setUpStage(Stage stage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"        // Container for the content of the chat to scroll.","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"BenjaminTan99"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"BenjaminTan99"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"BenjaminTan99"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"        stage.setResizable(true);","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"BenjaminTan99"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"        stage.show();","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"BenjaminTan99"},"content":"        formatStage(mainLayout);","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"BenjaminTan99"},"content":"     * Formats the stage for better look and sizing.","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"BenjaminTan99"},"content":"     * @param mainLayout the AnchorPane from the stage used in Duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"BenjaminTan99"},"content":"    private void formatStage(AnchorPane mainLayout) {","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"BenjaminTan99"},"content":"        mainLayout.setPrefSize(400.0, 700.0);","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"BenjaminTan99"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"BenjaminTan99"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"BenjaminTan99"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":166,"author":{"gitId":"BenjaminTan99"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"BenjaminTan99"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-10"},{"lineNumber":168,"author":{"gitId":"BenjaminTan99"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-10"},{"lineNumber":169,"author":{"gitId":"BenjaminTan99"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"BenjaminTan99"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":174,"author":{"gitId":"BenjaminTan99"},"content":"     * Method used to begin processing of Duke.","lastModifiedDate":"2021-09-14"},{"lineNumber":175,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":176,"author":{"gitId":"BenjaminTan99"},"content":"    public void run() {","lastModifiedDate":"2021-09-14"},{"lineNumber":177,"author":{"gitId":"BenjaminTan99"},"content":"        Scanner newScan \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-14"},{"lineNumber":178,"author":{"gitId":"BenjaminTan99"},"content":"        Parser.evaluateUserInput(Duke.getResponse(newScan.toString()));","lastModifiedDate":"2021-09-14"},{"lineNumber":179,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":180,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":181,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":182,"author":{"gitId":"BenjaminTan99"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":184,"author":{"gitId":"BenjaminTan99"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-14"},{"lineNumber":185,"author":{"gitId":"BenjaminTan99"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-14"},{"lineNumber":186,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":187,"author":{"gitId":"BenjaminTan99"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-14"},{"lineNumber":188,"author":{"gitId":"BenjaminTan99"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-14"},{"lineNumber":189,"author":{"gitId":"BenjaminTan99"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"BenjaminTan99"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-14"},{"lineNumber":191,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":193,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":194,"author":{"gitId":"BenjaminTan99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-14"},{"lineNumber":195,"author":{"gitId":"BenjaminTan99"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-14"},{"lineNumber":196,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":197,"author":{"gitId":"BenjaminTan99"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"BenjaminTan99"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2021-09-14"},{"lineNumber":199,"author":{"gitId":"BenjaminTan99"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"BenjaminTan99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-14"},{"lineNumber":201,"author":{"gitId":"BenjaminTan99"},"content":"                DialogBox.getUserDialog(userText, USER),","lastModifiedDate":"2021-09-14"},{"lineNumber":202,"author":{"gitId":"BenjaminTan99"},"content":"                DialogBox.getDukeDialog(dukeText, DUKE)","lastModifiedDate":"2021-09-14"},{"lineNumber":203,"author":{"gitId":"BenjaminTan99"},"content":"        );","lastModifiedDate":"2021-09-14"},{"lineNumber":204,"author":{"gitId":"BenjaminTan99"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-14"},{"lineNumber":205,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":206,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":207,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"BenjaminTan99":207}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a special Task with a designated time","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * and date, using the word \u0027at\u0027.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor of an Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        String temp \u003d super.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.endsWith(\")\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"            return temp;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.startsWith(\"e \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(\"e \", \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(\"event \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        // Obtain the time and date of the Event","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"        String oldDate \u003d temp.substring(temp.lastIndexOf(\"at\") + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"        DateTimeConverter converter \u003d new DateTimeConverter();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"        String newDate \u003d converter.convertDateAndTime(oldDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(oldDate, newDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"        // Reformat if user types a character before \"at\" like /at","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"        int intBeforeBy \u003d temp.lastIndexOf(\"at\") - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.charAt(intBeforeBy) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"            char tempChar \u003d temp.charAt(intBeforeBy);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(String.valueOf(tempChar), \"(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"            return temp + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"        String afterDescription \u003d temp.substring(temp.indexOf(\"at\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        String description \u003d temp.substring(0, temp.indexOf(\"at\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        return description + \"(\" + afterDescription + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current Event as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"        super.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of the","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"     * completion status of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation of the","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     *         completion status of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation for the Event\u0027s description","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"     * and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation for the Event\u0027s description","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"     *         and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":88}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BenjaminTan99":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    private final Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"            stage.show();","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"            duke.start(stage);","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"            duke.run();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"BenjaminTan99":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Baba.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"        String welcomeMessage \u003d Ui.welcomeMessage();","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        );","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"        this.duke \u003d d;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"     * Duke\u0027s reply and then appends them to the dialog container.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"        String response \u003d Duke.getResponse(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"BenjaminTan99":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class deals with making sense of the user input/command","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * when using Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     * Empty constructor for Parser.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    public Parser() {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * Evaluates user input into understandable code for","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     * Duke to process. Saves data whenever the TaskList changes.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput what the user inputted into Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    public static String evaluateUserInput(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isQuitDuke \u003d userInput.equals(\"bye\") || userInput.equals(\"b\");","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isListRequest \u003d userInput.equals(\"list\") || userInput.equals(\"l\");","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isTaskCompleted \u003d userInput.startsWith(\"done\");","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isRemoveTask \u003d userInput.startsWith(\"delete\") || userInput.startsWith(\"del \") ||","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"                userInput.startsWith(\"rm \");","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isFindTask \u003d userInput.startsWith(\"find\") || userInput.startsWith(\"f \");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        if (isQuitDuke) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"            TaskList.markTasksSaved();","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.goodbyeMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"        } else if (isListRequest) {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"            return TaskList.printList();","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        } else if (isTaskCompleted) {","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"            return TaskList.markTaskDone(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        } else if (isRemoveTask) {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"            return TaskList.removeTask(userInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        } else if (isFindTask) {","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"            return TaskList.findTask(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        return TaskList.addTask(userInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":44}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":" * This class deals with loading tasks from the file","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":" * and saving tasks in the file for Duke to process and use later.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"public class Storage {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /** The filepath used to track where the data is being saved to. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    private static String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"     * @param filePath Path of the file where","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"     *                 data of Duke is being stored.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"     * Writes content to the given filepath with given content.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    public static String writeFile() {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        ArrayList\u003cTask\u003e currList \u003d TaskList.getList();","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task content : currList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"                FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"                fw.write(content.printTask());","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"                fw.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"                return Ui.failToWriteFileMessage(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"        return Ui.successfulWriteFileMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the file\u0027s contents just as Duke begins loading in the file,","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"     * to allow the user to see what contents are in the file that was previously saved.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    public static String printStartingFileContents() {","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        File testFile \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        Scanner s;","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"            s \u003d new Scanner(testFile);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.printTasksOnLoad(s);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.emptyListMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"     * Loads in the file from the given filename and retrieves the data from the file,","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"     * processing it and copying the data into Duke and the TaskList for usage and","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"     * processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     * @return ArrayList to be stored in TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"    public static ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"        File newFile \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"        Scanner readFile \u003d new Scanner(newFile);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"        while (readFile.hasNext()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"            // read file line by line and decipher into arraylist","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"            String nextLine \u003d readFile.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"            char typeOfTask \u003d nextLine.charAt(1);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"            char taskStatus \u003d nextLine.charAt(4);","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"            String description \u003d nextLine.substring(6);","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"            Task temp;","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"            boolean isDeadLine \u003d typeOfTask \u003d\u003d \u0027D\u0027;","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"            boolean isEvent \u003d typeOfTask \u003d\u003d \u0027E\u0027;","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"            boolean isTaskDone \u003d taskStatus \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"            if (isDeadLine) {","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"                temp \u003d new Deadline(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"            } else if (isEvent) {","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"                temp \u003d new Event(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"                temp \u003d new Task(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"            assert temp !\u003d null: \"Temp will be a Deadline, Event or Task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"            if (isTaskDone) {","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"                temp.markSaved();","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"            newList.add(temp);","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"        return newList;","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":103}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a real life task to be completed and","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * its status of completion. May contain date and time depending on the","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" * type of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /** The description of the task. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    /** Indicates if the task has been completed. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /** Indicates if the task has been saved in a file. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    protected boolean wasSaved;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    public Task (String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        this.wasSaved \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current task.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of status of completion of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation of status of completion of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of the task and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"     * @return String representation of the task and its completion status.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"     * Indicates the current task as being saved in the file (using the filepath given).","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"    public void markSaved() {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"        this.wasSaved \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":69}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":" * This class contains the task list with operations that can","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":" * be used on the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    /** The contents found in the TaskList. **/","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    private static ArrayList\u003cTask\u003e contents;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     * @param fileContents Content of the file used to save data.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    public TaskList(ArrayList\u003cTask\u003e fileContents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"        assert fileContents !\u003d null : \"Tasks are not null but in an arraylist.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"        contents \u003d fileContents;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"     * Adds a task to the TaskList depending on what kind of task was added,","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"     * checking the user input and acting accordingly.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"     * If input is valid, it is added; otherwise a reminder message is sent to the","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"     * user to show what kind of input is valid.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput Line of user input which contains the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"    public static String addTask(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isDeadLine \u003d userInput.startsWith(\"deadline\") || userInput.startsWith(\"d \");","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isEvent \u003d userInput.startsWith(\"event\") || userInput.startsWith(\"e \");","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isToDo \u003d userInput.startsWith(\"todo\") || userInput.startsWith(\"t \");","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isCorrectDeadlineFormat \u003d userInput.contains(\"by\");","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        boolean isCorrectEventFormat \u003d userInput.contains(\"at\");","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"        if (isDeadLine || isEvent || isToDo) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"            Task newTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"            if (isDeadLine \u0026\u0026 isCorrectDeadlineFormat) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"                newTask \u003d new Deadline(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"            } else if (isEvent \u0026\u0026 isCorrectEventFormat) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"                newTask \u003d new Event(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"                newTask \u003d new ToDo(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"            contents.add(newTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"            Storage.writeFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"            assert contents.contains(newTask) : \"Task List should contain newly added Task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.addTaskMessage(newTask, contents.size());","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.invalidTaskMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"     * Obtains the list of the current tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"     * @return List of current tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    public static ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"        return contents;","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the list of current tasks. Displays a different","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"     * message if list is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"    public static String printList() {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"        if (contents.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.emptyListMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.getCurrentTasks(contents);","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current task as done and changes its UI appearance when","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"     * printed out.","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput UserInput which indicates which task is done.","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"    public static String markTaskDone(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"            String index \u003d userInput.substring(5);","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"            int x \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"            Task temp \u003d contents.get(x - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"            temp.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.markTaskMessage(temp);","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.invalidDoneInput();","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (ArrayIndexOutOfBoundsException f) {","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.numberOutsideOfArrayBounds();","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"     * Removes the task completely from the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput UserInput which indicates which task is to be removed.","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"BenjaminTan99"},"content":"    public static String removeTask(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"            String index;","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"            // Users may use delete, del or rm to remove tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"BenjaminTan99"},"content":"            if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"                index \u003d userInput.substring(7);","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"            } else if (userInput.startsWith(\"del\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"                index \u003d userInput.substring(4);","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"                index \u003d userInput.substring(3);","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"            int x \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"            Task temp \u003d contents.get(x - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"            contents.remove(temp);","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"BenjaminTan99"},"content":"            assert !contents.contains(temp) : \"Task List should not contain current Task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.removeTaskMessage(temp);","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.invalidDeleteInput();","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (ArrayIndexOutOfBoundsException f) {","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.numberOutsideOfArrayBounds();","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks all tasks as saved to the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"    public static void markTasksSaved() {","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task x: contents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"            x.markSaved();","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"     * Finds and returns all tasks containing the userInput.","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"     * @param userInput Search request by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"BenjaminTan99"},"content":"    public static String findTask(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"BenjaminTan99"},"content":"            String keyword;","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"BenjaminTan99"},"content":"            if (userInput.startsWith(\"f\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"BenjaminTan99"},"content":"                keyword \u003d userInput.substring(2);","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"BenjaminTan99"},"content":"                keyword \u003d userInput.substring(5);","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"BenjaminTan99"},"content":"            assert keyword !\u003d null : \"Keyword should not be empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"BenjaminTan99"},"content":"            ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"BenjaminTan99"},"content":"            int counter \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"BenjaminTan99"},"content":"            for (Task x : contents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"BenjaminTan99"},"content":"                if (x.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"BenjaminTan99"},"content":"                    matchingList.add(x);","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"BenjaminTan99"},"content":"                    counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"BenjaminTan99"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"BenjaminTan99"},"content":"                return Ui.searchFoundNothing();","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"BenjaminTan99"},"content":"                return Ui.searchList(matchingList);","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.invalidFindInput();","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (ArrayIndexOutOfBoundsException f) {","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"BenjaminTan99"},"content":"            return Ui.numberOutsideOfArrayBounds();","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":173,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":173}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a unique type of Task which only has description","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * but no designated deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description Description of the ToDo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns description of the current ToDo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Description of the current ToDo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        String description \u003d super.getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        if (description.startsWith(\"t \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"            description \u003d description.replace(\"t \", \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"            description \u003d description.replace(\"todo \", \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        return description;","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current ToDo object as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"        super.markDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the status icon of the current ToDo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Status icon of the current ToDo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[T]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the current ToDo\u0027s description and completion status.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"     * @return Current ToDo\u0027s description and completion status.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":61}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":" * This class deals with interactions with the user by displaying","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":" * information when user input is processed.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    private static final String MESSAGE_START \u003d \"\\n    ***\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    private static final String MESSAGE_END \u003d \"    ***\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     * Empty constructor for Ui.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the welcome message upon starting Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"    public static String welcomeMessage() {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        final String startOfWelcomeMessage \u003d \"Welcome to Ben\u0027s. How may I help you?\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        if (Duke.isFirstTime) {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"            return startOfWelcomeMessage + firstTimeMessage()","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"                    + importantMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            return startOfWelcomeMessage + Storage.printStartingFileContents() + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"                    + importantMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the tasks of the list from the saved file upon starting","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"     * Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"     * @param currList Contents of the file processed into the scanner.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"    public static String printTasksOnLoad(Scanner currList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"        String output \u003d \"\\nCurrent list:\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        while (currList.hasNext()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"            output +\u003d counter + \". \" + currList.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"            counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"        return output;","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints the message when user starts up Duke for the first time","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"     * (where no file has been created and no contents saved).","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"    public static String firstTimeMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"        return \"\\nNote: This is your first time using Duke. \" +","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"                \"We will now create a new file for you.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays vital information for what the user should input into Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"     * Displayed upon starting Duke or when user input fails.","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"    public static String importantMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"        return \"\\nImportant notes: \\n1) For deadlines, it must contain the word \u0027by\u0027\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"                \" and events must contain the word \u0027at\u0027. \\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"                \"2) Deadlines and events must also contain the date and time as such: \" +","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"                \"after by or at, in the form DATE TIME where the DATE must follow this format: \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"                \"YYYY-MM-DD; and TIME must follow the 24hr format (e.g. 2pm \u003d 1400)\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"     * Display message for an empty list.","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"    public static String emptyListMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"       return (MESSAGE_START + \"    There is currently nothing in the list. \\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"                MESSAGE_END);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out the current tasks of the list when using Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"     * @param contents Tasks in the TaskList in Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"    public static String getCurrentTasks(ArrayList\u003cTask\u003e contents) {","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"        String output \u003d MESSAGE_START + \"    These are your tasks in the list:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task x: contents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"            if (x.wasSaved) {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"                output +\u003d \"      \" + counter + \". \" + x + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"                output +\u003d \"      \" + counter + \". \" + x.getStatusIcon() + \" \" + x.getDescription() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"                counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"        output +\u003d MESSAGE_END;","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"        return output;","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays the message when user marks a task as completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"     * @param task Task that was completed by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"    public static String markTaskMessage(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"        return MESSAGE_START + \"    You have successfully done this task:\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"BenjaminTan99"},"content":"                \"      \" + task.getStatusIcon() + \" \" + task.getDescription() + \"\\n\" + MESSAGE_END;","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays the message when user adds a task. English slightly differs when list only","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"     * has 1 task.","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"BenjaminTan99"},"content":"     * @param task Task the user is adding.","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"     * @param count Size of the TaskList currently.","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"    public static String addTaskMessage(Task task, int count) {","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"BenjaminTan99"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"            return MESSAGE_START + \"    Understood. Added the task:\\n\" + \"      \" +","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"                    task.printTask() + \"\\n    You now have \" + count + \" task in the list.\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"                    MESSAGE_END;","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"            return MESSAGE_START + \"    Understood. Added the task:\\n\" + \"      \" +","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"                    task.printTask() + \"\\n    You now have \" + count + \" tasks in the list.\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"BenjaminTan99"},"content":"                    MESSAGE_END;","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints a message when a user removes a task from the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"     * @param task Task removed by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"    public static String removeTaskMessage(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"BenjaminTan99"},"content":"        return MESSAGE_START + \"    You have successfully removed this task:\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"                \"      \" + task.getStatusIcon() + \" \" + task.getDescription() + MESSAGE_END;","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays an error message when user input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"BenjaminTan99"},"content":"    public static String invalidTaskMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"BenjaminTan99"},"content":"        return \"\\nInvalid input. \\nYou may only use the following inputs: \" +","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"BenjaminTan99"},"content":"                \"(bye, list, done, deadline, event, todo) and any text thereafter.\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"BenjaminTan99"},"content":"                + importantMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints out a list of Tasks matching the user\u0027s input when searching for a keyword","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"BenjaminTan99"},"content":"     * or characters.","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"BenjaminTan99"},"content":"     * @param matchingContents List of contents that contain the keywords","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"BenjaminTan99"},"content":"     *                         requested by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"BenjaminTan99"},"content":"    public static String searchList(ArrayList\u003cTask\u003e matchingContents) {","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"BenjaminTan99"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"BenjaminTan99"},"content":"        String output \u003d MESSAGE_START + \"    Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task x: matchingContents) {","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"BenjaminTan99"},"content":"            output +\u003d \"      \" + counter + \". \" + x.printTask() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"BenjaminTan99"},"content":"        output +\u003d MESSAGE_END;","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"BenjaminTan99"},"content":"        return output;","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays the message when user is unable to find a matching word in the","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"BenjaminTan99"},"content":"     * TaskList when searching.","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"BenjaminTan99"},"content":"    public static String searchFoundNothing() {","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"        return \"\\nNo task in the list matches your current search.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a message indicating that contents have been written safely and correctly","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"BenjaminTan99"},"content":"     * to the designated file.","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"BenjaminTan99"},"content":"    public static String successfulWriteFileMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"BenjaminTan99"},"content":"        return \"Successfully written contents to file.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a message indicating that the file was unable to be written.","lastModifiedDate":"2021-08-29"},{"lineNumber":185,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":186,"author":{"gitId":"BenjaminTan99"},"content":"     * @param error Error thrown when file is failed to be written to.","lastModifiedDate":"2021-08-30"},{"lineNumber":187,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"BenjaminTan99"},"content":"    public static String failToWriteFileMessage(String error) {","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"BenjaminTan99"},"content":"        return \"Failed to write to the file. Error: \\n\" + error;","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a goodbye message after user exits Duke (i.e. bye).","lastModifiedDate":"2021-09-02"},{"lineNumber":194,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"BenjaminTan99"},"content":"    public static String goodbyeMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"BenjaminTan99"},"content":"        return \"\\nGoodbye! Have a nice day. :)\";","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":199,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays an error message when user inputs a number larger than the list.","lastModifiedDate":"2021-09-07"},{"lineNumber":201,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":202,"author":{"gitId":"BenjaminTan99"},"content":"    public static String numberOutsideOfArrayBounds() {","lastModifiedDate":"2021-09-07"},{"lineNumber":203,"author":{"gitId":"BenjaminTan99"},"content":"        return \"Invalid number - Number is not within list count.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":204,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":205,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":206,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":207,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a error message when user has invalid input for done.","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"BenjaminTan99"},"content":"    public static String invalidDoneInput() {","lastModifiedDate":"2021-09-07"},{"lineNumber":210,"author":{"gitId":"BenjaminTan99"},"content":"        return \"Invalid input. Requires a number after done (e.g. done 1).\";","lastModifiedDate":"2021-09-07"},{"lineNumber":211,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":212,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":213,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":214,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a error message when user has invalid input for delete.","lastModifiedDate":"2021-09-07"},{"lineNumber":215,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":216,"author":{"gitId":"BenjaminTan99"},"content":"    public static String invalidDeleteInput() {","lastModifiedDate":"2021-09-07"},{"lineNumber":217,"author":{"gitId":"BenjaminTan99"},"content":"        return \"Invalid input. Requires a number after delete (e.g. delete 1).\";","lastModifiedDate":"2021-09-07"},{"lineNumber":218,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":220,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":221,"author":{"gitId":"BenjaminTan99"},"content":"     * Displays a error message when user has invalid input for find.","lastModifiedDate":"2021-09-07"},{"lineNumber":222,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":223,"author":{"gitId":"BenjaminTan99"},"content":"    public static String invalidFindInput() {","lastModifiedDate":"2021-09-07"},{"lineNumber":224,"author":{"gitId":"BenjaminTan99"},"content":"        return \"Invalid input. Requires a number after find (e.g. find 1).\";","lastModifiedDate":"2021-09-07"},{"lineNumber":225,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":226,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":226}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    public void test1() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"        String userInput \u003d \"deadline homework by 2021-02-02 1200\";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"        Deadline test \u003d new Deadline(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"        String output \u003d test.getDescription();","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(\"homework (by 02 Feb 2021 12:00PM)\", output);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"    public void test2() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"        String userInput \u003d \"event party at 2021-09-09 1500\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"        Event test \u003d new Event(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"        String output \u003d test.printTask();","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(\"[E][ ] party (at 09 Sep 2021 3:00PM)\", output);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BenjaminTan99":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"todo create game","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"deadline project /by next week","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"event project meeting /at Tue 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminTan99":6}}]
