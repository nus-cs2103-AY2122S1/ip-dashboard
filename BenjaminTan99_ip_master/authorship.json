[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"[T][ ] nothing","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"BenjaminTan99":1}},{"path":"src/main/java/DateTimeConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" * This class converts the input string of date and time into","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":" * a better formatted, understandable date and time.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"public class DateTimeConverter {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     * Empty constructor for DateTimeConverter.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    public DateTimeConverter() {}","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns a string containing a newly formatted date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     * @param datetime the string containing the date and time to be","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     *                 changed","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * @return a string containing a newly formatted date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    public String convertDateAndTime(String datetime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"        String time \u003d datetime.substring(datetime.length() - 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"        int actualTime \u003d Integer.parseInt(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        String hour, minute;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        if (actualTime \u003e\u003d 1200) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"            if ((actualTime - 1200) / 100 \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d \"12\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d String.valueOf(Math.round((actualTime - 1200) / 100));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"            minute \u003d String.valueOf(actualTime % 100);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            if (minute.equals(\"0\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"                minute +\u003d \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"            time \u003d hour + \":\" + minute + \"PM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"            if (actualTime / 100 \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d \"12\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"                hour \u003d String.valueOf(Math.floor(actualTime / 100));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"            minute \u003d String.valueOf(actualTime % 100);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"            if (minute.equals(\"0\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"                minute +\u003d \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"            time \u003d hour + \":\" + minute + \"AM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"        String date \u003d datetime.substring(0, datetime.length() - 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"        LocalDate d1 \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"        return d1.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \" + time;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"BenjaminTan99":52}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a special type of Task which has a date","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":" * for which it is to be completed by.","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description the description of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the description of the current deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"        String temp \u003d super.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(\"deadline \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"        String oldDate \u003d temp.substring(temp.lastIndexOf(\"by\") + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        DateTimeConverter converter \u003d new DateTimeConverter();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        String newDate \u003d converter.convertDateAndTime(oldDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(oldDate, newDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"        int intBeforeBy \u003d temp.lastIndexOf(\"by\") - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.charAt(intBeforeBy) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"            char tempChar \u003d temp.charAt(intBeforeBy);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(String.valueOf(tempChar), \"(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            return temp + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        return \"(\" + temp + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current Deadline as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    public void markedDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        super.markedDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the current status icon of the current Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the current status icon of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[D]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns a string containing the Deadline description","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"     * and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"     * @return a string containing the Deadline description","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     *         and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":64}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":" * This class is used to simulate an automatic list creator which saves its data and changes it","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":" * when the user interacts with it.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"     * Prints the contents of the specified file.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"     * @param filePath The path of the file to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * @throws FileNotFoundException if file is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"        File testFile \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"        Scanner s \u003d new Scanner(testFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"     * Writes content to a file with given content.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"     * @param filePath The path of the file to be written.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"     * @param addedText The text to be written in the file","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"     * @throws IOException if text to be written has errors","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"     *                     while being processed","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"    private static void writeFile(String filePath, String addedText) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        fw.write(addedText);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"Welcome to Ben\u0027s. How may I help you?\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"        File dukeFile \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        filePath \u003d dukeFile.getAbsolutePath();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(\"Current list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"            printFileContents(dukeFile.getAbsolutePath());","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(\"\\nNote: This is your first time using Duke. \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"                    \"We will now create a new file for you.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        File parentDir \u003d dukeFile.getParentFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        if(!parentDir.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"\\nImportant notes: \\n1) For deadlines, it must contain /by ... and events must contain\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"                        \" /at ...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"2) The ... must be in the form DATE TIME where the DATE must be of the form\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"                \"YYYY-MM-DD and the TIME must be of 24hr type (e.g. 2pm \u003d 1400)\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"        Scanner newScan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"        ArrayList\u003cTask\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"        String userInput \u003d newScan.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"                if (contents.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"    ***\\n\" + \"    There is currently nothing in the list. \\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"                            \"    ***\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"                    int counter \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"    ***\\n\" + \"    These are your tasks in the list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"                    for (Task x: contents) {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"                        System.out.println(\"      \" + counter + \". \" + x.getStatusIcon() + \" \" +","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"                                x.getDescription());","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"                        counter++;","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"    ***\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"            } else if (userInput.startsWith(\"done\") || userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"                    if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"                        String index \u003d userInput.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"                        int x \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"                        Task temp \u003d contents.get(x - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"                        temp.markedDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"                        System.out.println(\"    ***\\n\" + \"    You have successfully done this task:\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"                                \"      \" + temp.getStatusIcon() + \" \" + temp.getDescription() + \"\\n    ***\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"                    } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"                        String index \u003d userInput.substring(7);","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"                        int x \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"                        Task temp \u003d contents.get(x - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"                        contents.remove(temp);","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"                        System.out.println(\"    ***\\n\" + \"    You have successfully removed this task:\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"                                \"      \" + temp.getStatusIcon() + \" \" + temp.getDescription() + \"\\n    ***\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"Invalid input. Requires a number.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"                } catch (ArrayIndexOutOfBoundsException f) {","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"Invalid number given. Number is larger than list count.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"BenjaminTan99"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"                Task newTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"                if (userInput.startsWith(\"deadline\") \u0026\u0026 userInput.contains(\"by\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"                    newTask \u003d new Deadline(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"                } else if (userInput.startsWith(\"event\") \u0026\u0026 userInput.contains(\"at\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"BenjaminTan99"},"content":"                    newTask \u003d new Event(userInput);","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"                    newTask \u003d new ToDos(userInput);","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"                    throw new IllegalArgumentException(\"Invalid input. \\nYou may only use the following inputs: \" +","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"                            \"(bye, list, done, deadline, event, todo) and any text thereafter.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"BenjaminTan99"},"content":"                contents.add(newTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"                if (contents.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"    ***\\n\" + \"    Understood. Added the task:\\n\" + \"      \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"                        newTask.printTask() + \"\\n    You now have \" + contents.size() + \" task in the list.\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"BenjaminTan99"},"content":"                        \"    ***\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"                    System.out.println(\"    ***\\n\" + \"    Understood. Added the task:\\n\" + \"      \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"                            newTask.printTask() + \"\\n    You now have \" + contents.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"                            \"    ***\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"BenjaminTan99"},"content":"            userInput \u003d newScan.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"BenjaminTan99"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"        for (Task content : contents) {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"                writeFile(filePath, content.printTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"                count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"BenjaminTan99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"                System.out.println(\"Error with writing to file. Error: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"BenjaminTan99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"BenjaminTan99"},"content":"        if (count \u003d\u003d contents.size() \u0026\u0026 count !\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"            System.out.println(\"Successfully written contents to file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"BenjaminTan99"},"content":"        System.out.println(\"\\nGoodbye! Have a nice day. :)\");","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"BenjaminTan99"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"BenjaminTan99":143}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a special Task with a designated time","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":" * and date (if applicable).","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor of an Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current Event","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the description of the current Event","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"        String temp \u003d super.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(\"event \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        String oldDate \u003d temp.substring(temp.lastIndexOf(\"at\") + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"        DateTimeConverter converter \u003d new DateTimeConverter();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"        String newDate \u003d converter.convertDateAndTime(oldDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        temp \u003d temp.replace(oldDate, newDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        int intBeforeBy \u003d temp.lastIndexOf(\"at\") - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"        if (temp.charAt(intBeforeBy) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"            char tempChar \u003d temp.charAt(intBeforeBy);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"            temp \u003d temp.replace(String.valueOf(tempChar), \"(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"            return temp + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"        return \"(\" + temp + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current Event as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    public void markedDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        super.markedDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of the","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"     * completion status of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the string representation of the","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"     *         completion status of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation for the Event\u0027s description","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"     * and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the string representation for the Event\u0027s description","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"     *         and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":67}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a real life task to be completed and","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":" * its status of completion.","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    public Task (String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the description of the current task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the description of the current task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    public void markedDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of status of completion of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the string representation of status of completion of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the string representation of the task and its completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the string representation of the task and its completion status","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":48}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":" * This class simulates a unique type of Task which only has description","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":" * but no designated deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"     * Constructor of a ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"     * @param description description of the ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns description of the current ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     * @return description of the current ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"        return super.getDescription().replace(\"todo \", \"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"     * Marks the current ToDos object as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"    public void markedDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        super.markedDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the status icon of the current ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the status icon of the current ToDos object.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        return \"[T]\" + super.getStatusIcon();","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the current ToDos\u0027s description and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the current ToDos\u0027s description and completion status.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"BenjaminTan99":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"todo create game","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"deadline project /by next week","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"event project meeting /at Tue 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminTan99":6}}]
