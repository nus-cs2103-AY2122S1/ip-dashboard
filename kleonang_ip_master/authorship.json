[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     * @param by A LocalDateTime indicating when the task is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Deadline task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Deadline\u0027s icon, description and due date.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        return \"D | \" + super.getDataString() + \" | \" + this.by.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Deadline\u0027s icon, description and due date.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":" * This class encapsulates Duke, an interactive task management chat-bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_DELIMITER \u003d \" \\\\| \";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_FILENAME \u003d \"duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_FILEPATH \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    private static void printReply(String string) {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        System.out.println(new Reply(string));","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        printReply(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    private static void add(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        writeData(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        String addMessage \u003d \"Got it. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        printReply(addMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    private static void list() throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"There are currently no tasks in your list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"        StringBuilder tasksBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"        tasksBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"            String counter \u003d String.valueOf(i + 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"            tasksBuilder.append(counter).append(\".\").append(currentTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"                // Append newline for all tasks before last task","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"                tasksBuilder.append(\"\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        printReply(tasksBuilder.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"    private static void done(int counter) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        if (counter \u003c\u003d 0 || counter \u003e tasks.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Sorry, no such task of index \" + counter + \".\");","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        Task doneTask \u003d tasks.get(counter - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        printReply(\"Nice! I\u0027ve marked this task as done:\\n  \" + doneTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"        rewriteData();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"    private static void delete(int counter) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        if (counter \u003c\u003d 0 || counter \u003e tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Sorry, no such task of index \" + counter + \".\");","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        Task taskToRemove \u003d tasks.remove(counter - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        printReply(\"Noted. I\u0027ve removed this task:\\n  \" + taskToRemove","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        rewriteData();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"    private static void readData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"        File directory \u003d new File(DATA_FILEPATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"            File dataFile \u003d new File(DATA_FILEPATH + DATA_FILENAME);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"                String line \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"                String[] data \u003d line.split(DATA_DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"                String taskType \u003d data[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"                String doneStatus \u003d data[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"                Task importedTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"                // Assign correct Task type to importedTask","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"                case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Todo(data[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime deadlineDatetime \u003d LocalDateTime.parse(data[3], FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Deadline(data[2], deadlineDatetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime eventDatetime \u003d LocalDateTime.parse(data[3], FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Event(data[2], eventDatetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"                    throw new IllegalStateException(\"Unexpected Task value: \" + taskType);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"                // Mark imported task as done if doneStatus is 1","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"                if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"                    importedTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"                tasks.add(importedTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"            fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"            printReply(\"duke.txt found. Tasks have been imported.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"                File dataFile \u003d new File(DATA_FILEPATH + DATA_FILENAME);","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"                String message \u003d DATA_FILENAME + \" not found. File has been created.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"                printReply(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"                printReply(ioException.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"    private static void writeData(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_FILEPATH + DATA_FILENAME, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"kleonang"},"content":"            bufferedWriter.write(task.getDataString());","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"kleonang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"kleonang"},"content":"            printReply(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"kleonang"},"content":"    private static void rewriteData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"kleonang"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_FILEPATH + DATA_FILENAME, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"kleonang"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"kleonang"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"kleonang"},"content":"                bufferedWriter.write(task.getDataString());","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"kleonang"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"kleonang"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"kleonang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"kleonang"},"content":"            printReply(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"kleonang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":164,"author":{"gitId":"kleonang"},"content":"        greet();","lastModifiedDate":"2021-08-16"},{"lineNumber":165,"author":{"gitId":"kleonang"},"content":"        readData();","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"kleonang"},"content":"        String readIn;","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"kleonang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":168,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":169,"author":{"gitId":"kleonang"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":170,"author":{"gitId":"kleonang"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"kleonang"},"content":"                readIn \u003d scanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":172,"author":{"gitId":"kleonang"},"content":"                if (readIn.equals(EXIT_COMMAND)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":174,"author":{"gitId":"kleonang"},"content":"                } else if (readIn.equals(LIST_COMMAND)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"kleonang"},"content":"                    list();","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"kleonang"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"kleonang"},"content":"                    String[] commandArguments \u003d readIn.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"kleonang"},"content":"                    String command \u003d commandArguments[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"kleonang"},"content":"                    String arguments \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"kleonang"},"content":"                    if (commandArguments.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"kleonang"},"content":"                        arguments \u003d commandArguments[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"kleonang"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"kleonang"},"content":"                    switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"kleonang"},"content":"                    case \"done\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"kleonang"},"content":"                        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"kleonang"},"content":"                            throw new DukeException(\"☹ OOPS!!! The index of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"kleonang"},"content":"                        int counter \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"kleonang"},"content":"                        done(counter);","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"kleonang"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"kleonang"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"kleonang"},"content":"                    case \"deadline\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"kleonang"},"content":"                        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"kleonang"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"kleonang"},"content":"                        String[] splitTask \u003d arguments.split(\" /by \");","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"kleonang"},"content":"                        if (splitTask.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"kleonang"},"content":"                            throw new DukeException(\"Please indicate a deadline using \u0027/by\u0027.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"kleonang"},"content":"                        String description \u003d splitTask[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"kleonang"},"content":"                        String byString \u003d splitTask[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"kleonang"},"content":"                        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"kleonang"},"content":"                            LocalDateTime by \u003d LocalDateTime.parse(byString, FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"kleonang"},"content":"                            add(new Deadline(description, by));","lastModifiedDate":"2021-08-17"},{"lineNumber":206,"author":{"gitId":"kleonang"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"kleonang"},"content":"                            printReply(\"Datetime should be in YYYY-MM-DD hr:min (24h clock) format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"kleonang"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"kleonang"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"kleonang"},"content":"                    case \"event\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"kleonang"},"content":"                        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"kleonang"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"kleonang"},"content":"                        String[] splitTask \u003d arguments.split(\" /at \");","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"kleonang"},"content":"                        if (splitTask.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"kleonang"},"content":"                            throw new DukeException(\"Please indicate the event time frame using \u0027/at\u0027.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"kleonang"},"content":"                        String description \u003d splitTask[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":220,"author":{"gitId":"kleonang"},"content":"                        String atString \u003d splitTask[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"kleonang"},"content":"                        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"kleonang"},"content":"                            LocalDateTime at \u003d LocalDateTime.parse(atString, FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"kleonang"},"content":"                            add(new Event(description, at));","lastModifiedDate":"2021-08-17"},{"lineNumber":224,"author":{"gitId":"kleonang"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"kleonang"},"content":"                            printReply(\"Datetime should be in YYYY-MM-DD hr:min (24h clock) format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"kleonang"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":228,"author":{"gitId":"kleonang"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"kleonang"},"content":"                    case \"todo\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"kleonang"},"content":"                        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"kleonang"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":232,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"kleonang"},"content":"                        add(new Todo(arguments));","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"kleonang"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"kleonang"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"kleonang"},"content":"                    case \"delete\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"kleonang"},"content":"                        if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"kleonang"},"content":"                            throw new DukeException(\"☹ OOPS!!! The index of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"kleonang"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"kleonang"},"content":"                        int counter \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"kleonang"},"content":"                        delete(counter);","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"kleonang"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"kleonang"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":244,"author":{"gitId":"kleonang"},"content":"                    default:","lastModifiedDate":"2021-08-18"},{"lineNumber":245,"author":{"gitId":"kleonang"},"content":"                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"kleonang"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":247,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":248,"author":{"gitId":"kleonang"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":249,"author":{"gitId":"kleonang"},"content":"                printReply(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":250,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":251,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":252,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":253,"author":{"gitId":"kleonang"},"content":"        printReply(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kleonang":246,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":" * This class encapsulates an exception specific to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"     * @param message A message describing the DukeException that occurred.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kleonang":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" * This class encapsulates an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     * @param at A LocalDateTime indicating when the event is held at.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Event task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Event\u0027s icon, description and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        return \"E | \" + super.getDataString() + \" | \" + this.at.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Event\u0027s icon, description and time.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":44}},{"path":"src/main/java/Reply.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a reply from Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"public class Reply {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    private String content;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"    private final String LINE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Reply.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     * @param content A string containing the contents of Duke\u0027s reply.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    public Reply(String content) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"        this.content \u003d content.replaceAll(\"(?m)^\", \"\\t \");;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     * Formats Duke\u0027s reply on the command-line interface.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     * @return A string containing the formatted reply from Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"        return this.LINE + \"\\n\" + this.content + \"\\n\" + this.LINE;","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"kleonang":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     * Marks this Task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Task\u0027s status icon and description.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        return status + \" | \" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Task\u0027s status icon and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Todo task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Todo\u0027s icon and description.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        return \"T | \" + super.getDataString();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Todo\u0027s icon and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"deadline return book /by 2021-01-01 18:00","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"event project meeting /at 2021-08-06 14:00","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"deadline return more books /by 2021-10-10 23:59","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"event project discussion /at 2021-11-11 16:20","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"delete 5","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"deadline submit code","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"event meet friends","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"deadline donothing /by Dec 31","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kleonang":24}}]
