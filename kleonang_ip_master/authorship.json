[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     * @param by A LocalDateTime indicating when the task is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Deadline task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Deadline\u0027s icon, description and due date.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        return \"D | \" + super.getDataString() + \" | \" + this.by.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Deadline\u0027s icon, description and due date.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":46}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates Duke, an interactive task management chat-bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"        this.storage \u003d new Storage(fileName);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"            this.ui.showLoadingError(fileName);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        this.parser \u003d new Parser(this.tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"                String readIn \u003d this.ui.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"                this.tasks \u003d this.parser.parse(readIn);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"                if (this.parser.toExit()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"                if (this.parser.toRewrite()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"                    this.storage.rewriteData(this.tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"                Ui.printReply(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kleonang":43,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates an exception specific to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     * @param message A message describing the DukeException that occurred.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kleonang":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * This class encapsulates an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     * @param at A LocalDateTime indicating when the event is held at.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Event task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Event\u0027s icon, description and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        return \"E | \" + super.getDataString() + \" | \" + this.at.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Event\u0027s icon, description and time.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":46}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    private boolean toRewriteData;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    private boolean isExit;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        this.toRewriteData \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    public void list() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"There are currently no tasks in your list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        StringBuilder tasksBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        tasksBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"            String counter \u003d String.valueOf(i + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"            tasksBuilder.append(counter).append(\".\").append(currentTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"                // Append newline for all tasks before last task","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"                tasksBuilder.append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        Ui.printReply(tasksBuilder.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    private void done(int counter) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        if (counter \u003c\u003d 0 || counter \u003e tasks.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Sorry, no such task of index \" + counter + \".\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        Task doneTask \u003d tasks.get(counter - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        Ui.printReply(\"Nice! I\u0027ve marked this task as done:\\n  \" + doneTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    public boolean toRewrite() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        return this.toRewriteData;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    public boolean toExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    public TaskList parse(String readIn) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"        if (readIn.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"            Ui.printReply(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        } else if (readIn.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"            list();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"            this.toRewriteData \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"            String[] commandArguments \u003d readIn.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"            String command \u003d commandArguments[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"            String arguments \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"            if (commandArguments.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"                arguments \u003d commandArguments[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"            switch (command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"            case \"done\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The index of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"                int counter \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"                done(counter);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"            case \"deadline\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"                String[] splitTask \u003d arguments.split(\" /by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"                if (splitTask.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"Please indicate a deadline using \u0027/by\u0027.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"                String description \u003d splitTask[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"                String byString \u003d splitTask[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(byString, FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"                    this.tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"                    Ui.printReply(\"Datetime should be in YYYY-MM-DD hr:min (24h clock) format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"            case \"event\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"                String[] splitTask \u003d arguments.split(\" /at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"                if (splitTask.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"Please indicate the event time frame using \u0027/at\u0027.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"                String description \u003d splitTask[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"                String atString \u003d splitTask[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime at \u003d LocalDateTime.parse(atString, FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"                    this.tasks.addTask(new Event(description, at));","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"                    Ui.printReply(\"Datetime should be in YYYY-MM-DD hr:min (24h clock) format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"            case \"todo\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"                tasks.addTask(new Todo(arguments));","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"            case \"delete\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The index of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"                int counter \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"                tasks.deleteTask(counter);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":135}},{"path":"src/main/java/duke/Reply.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a reply from Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class Reply {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    private String content;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    private final String LINE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Reply.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * @param content A string containing the contents of Duke\u0027s reply.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    public Reply(String content) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"        this.content \u003d content.replaceAll(\"(?m)^\", \"\\t \");;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     * Formats Duke\u0027s reply on the command-line interface.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     * @return A string containing the formatted reply from Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        return this.LINE + \"\\n\" + this.content + \"\\n\" + this.LINE;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"kleonang":30}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_FILEPATH \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_DELIMITER \u003d \" \\\\| \";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"        File directory \u003d new File(DATA_FILEPATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"            File dataFile \u003d new File(DATA_FILEPATH + this.fileName);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"                String line \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"                String[] data \u003d line.split(DATA_DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"                String taskType \u003d data[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"                String doneStatus \u003d data[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"                Task importedTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"                // Assign correct Task type to importedTask","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"                case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Todo(data[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime deadlineDatetime \u003d LocalDateTime.parse(data[3], FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Deadline(data[2], deadlineDatetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime eventDatetime \u003d LocalDateTime.parse(data[3], FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Event(data[2], eventDatetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"                    throw new IllegalStateException(\"Unexpected Task value: \" + taskType);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"                // Mark imported task as done if doneStatus is 1","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"                if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"                    importedTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"                tasks.add(importedTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"            fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"            Ui.printReply(\"duke.txt found. Tasks have been imported.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"                File dataFile \u003d new File(DATA_FILEPATH + this.fileName);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"                String message \u003d this.fileName + \" not found. File has been created.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"                Ui.printReply(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"                Ui.printReply(ioException.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"    public void rewriteData(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_FILEPATH + this.fileName, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"                bufferedWriter.write(task.getDataString());","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"            Ui.printReply(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":89}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     * Marks this Task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Task\u0027s status icon and description.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        return status + \" | \" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Task\u0027s status icon and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":52}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"        this.addAll(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"        this.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"        String addMessage \u003d \"Got it. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have \" + this.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"        Ui.printReply(addMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    public void deleteTask(int counter) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        if (counter \u003c\u003d 0 || counter \u003e this.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Sorry, no such task of index \" + counter + \".\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        Task taskToRemove \u003d this.remove(counter - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        Ui.printReply(\"Noted. I\u0027ve removed this task:\\n  \" + taskToRemove","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have \" + this.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":31}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Todo task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Todo\u0027s icon and description.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        return \"T | \" + super.getDataString();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Todo\u0027s icon and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"        printReply(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    public static void printReply(String string) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"        System.out.println(new Reply(string));","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    public void showLoadingError(String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        printReply(fileName + \" not found. File has been created.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public String nextLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"deadline return book /by 2021-01-01 18:00","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"event project meeting /at 2021-08-06 14:00","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"deadline return more books /by 2021-10-10 23:59","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"event project discussion /at 2021-11-11 16:20","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"delete 5","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"deadline submit code","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"event meet friends","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"deadline donothing /by Dec 31","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kleonang":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kleonang":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kleonang":1,"-":37}}]
