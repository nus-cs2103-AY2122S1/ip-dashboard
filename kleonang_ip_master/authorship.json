[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kleonang":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"# User Guide for Duke™","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"  \u003cimg src\u003d\"https://raw.githubusercontent.com/kleonang/ip/master/docs/Ui.png\" width\u003d\"512\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"### A Myriad of Task Types","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"In Duke™, you get to manage 3 distinct types of tasks, they are:","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"- Todos","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"  - Tasks to check off your to-do list  ","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"- Deadlines","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"  - Tasks with an associated deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"- Events","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"  - Tasks that occur at a specified time and date","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"### Load and Store Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"Tasks managed by Duke™ are stored locally in a data file, so you can be sure that Duke™ remembers your tasks, no matter how many there are.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"### Interact with Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"Duke™ enables you to list your tasks, mark tasks as done, find tasks, and even set a priority level to differentiate more important tasks from the rest.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"### Add a Todo task - `todo DESCRIPTION`","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"Adds a Todo task to your tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"`todo watch bee movie`","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"  [T][MEDIUM][ ] watch bee movie","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"### Add a Deadline task - `deadline DESCRIPTION /by YYYY-MM-DD hh:mm`","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"Adds a Deadline task to your tasks. Provide time in `hh:mm`, 24h-clock format (e.g. `23:59`).","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"`deadline finish assignment /by 2021-09-06 16:20`","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"  [D][MEDIUM][ ] finish assignment","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"  (by: Sep 6 2021, 4:20 pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"### Add an Event task - `event DESCRIPTION /at YYYY-MM-DD hh:mm`","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"Adds an Event task to your tasks. Provide time in `hh:mm`, 24h-clock format (e.g. `23:59`).","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"`event National Day Celebration /at 2021-08-09 17:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"  [E][MEDIUM][ ] National Day Celebration","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"  (at: Aug 9 2021, 5:00 pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"### List all tasks - `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"Lists out all current tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"1.[T][MEDIUM][ ] watch bee movie","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"2.[D][MEDIUM][ ] finish assignment","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"  (by: Sep 6 2021, 4:20 pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"3.[E][MEDIUM][ ] National Day Celebration","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"  (at: Aug 9 2021, 5:00 pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"### Mark a task as done - `done INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"Marks the task of the given index as done. `INDEX` is referenced from the `list` command.","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"`done 2`","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"  [D][MEDIUM][X] finish assignment","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"  (by: Sep 6 2021, 4:20 pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"### Find a matching task - `find KEYWORD`","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"Finds a task based on the given keyword.","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"`find bee`","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"1.[T][MEDIUM][ ] watch bee movie","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"### Set priority level for a task - `priority INDEX LEVEL`","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"Sets a priority level for the task of the given index. `INDEX` is referenced from the `list` command. Indicate priority `LEVEL` as `high`, `medium` or `low`. Tasks are marked as `MEDIUM` priority by default.","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"`priority 1 high`","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"Nice! I\u0027ve marked this task as HIGH priority:","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"  [T][HIGH][ ] watch bee movie","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"kleonang"},"content":"### Exit the program - `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"Says goodbye to the user, then exits the program after 3 seconds.","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"kleonang"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"`bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"kleonang"},"content":"Expected output:","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":152,"author":{"gitId":"kleonang"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"kleonang":129,"-":24}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    private static final String taskBadge \u003d \"[D]\";","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * @param by A LocalDateTime indicating when the task is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Deadline task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Deadline\u0027s icon, description and due date.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        return \"D | \" + super.getDataString() + \" | \" + this.by.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Deadline\u0027s icon, description and due date.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        return taskBadge + super.toString() + \"\\n  (by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":47}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a box to contain the dialog between Duke and the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     * Constructor for a DialogBox.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     * @param text The Label containing the dialog text.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    private DialogBox(String text, boolean isDuke) {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"            FXMLLoader fxmlLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"            if (isDuke) {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"                fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/DukeDialogBox.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"                fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     * Gets a DialogBox containing user dialog.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"     * @param text The string containing the user dialog.","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"     * @return A DialogBox with the user dialog.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        return new DialogBox(text, false);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"     * Gets a DialogBox containing Duke\u0027s dialog.","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"     * @param text The string containing Duke\u0027s dialog.","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"     * @return A DialogBox with Duke\u0027s dialog.","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    public static DialogBox getDukeDialog(String text) {","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"        return new DialogBox(text, true);","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kleonang":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":" * This class encapsulates Duke, an interactive task management chat-bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_FILENAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    private static Parser parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     * Empty constructor for Duke to be launched by Launcher.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * Gets response from Parser, then exit or rewrite data if needed.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     * @return The response from Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that may occur when parsing user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    public static String getResponse(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        String response \u003d parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        if (parser.needsToRewrite()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"            storage.rewriteData(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        return response;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     * Starts up the user interface with a given Stage.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     * @param stage A Stage for the user interface.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"            stage.setTitle(\"Duke™ – Your Task Management Assistant\");","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"            fxmlLoader.\u003cUi\u003egetController().printReply(\"Hello, I\u0027m Duke!\\nWhat can I do for you?\");","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"            storage \u003d new Storage(DATA_FILENAME);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"                tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"                fxmlLoader.\u003cUi\u003egetController().showLoadingSuccess(DATA_FILENAME);","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"                tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"                fxmlLoader.\u003cUi\u003egetController().showLoadingError(DATA_FILENAME);","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"            parser \u003d new Parser(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"            stage.show();","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kleonang":68,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates an exception specific to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     * @param message A message describing the DukeException that occurred.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kleonang":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * This class encapsulates an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    private static final String taskBadge \u003d \"[E]\";","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * @param at A LocalDateTime indicating when the event is held at.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Event task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Event\u0027s icon, description and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        return \"E | \" + super.getDataString() + \" | \" + this.at.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Event\u0027s icon, description and time.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        return taskBadge + super.toString() + \"\\n  (at: \" + this.at.format(formatter) + \")\";","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":47}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"     * Launches Duke GUI.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kleonang":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * This class encapsulates the mechanism to parse user commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    private boolean toRewriteData;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    private boolean toFind;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Parser class.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     * @param tasks A TaskList for the Parser to refer to.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"        this.toRewriteData \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        this.toFind \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"     * Lists the tasks in the given TaskList as a string.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     * @param tasks TaskList containing the tasks to list.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     * @return A string representation of the given tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that may occur when listing tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    private String list(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        String matching \u003d this.toFind ? \"matching \" : \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"There are currently no \" + matching + \"tasks in your list.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        StringBuilder tasksBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        tasksBuilder.append(\"Here are the \").append(matching).append(\"tasks in your list:\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"            String counter \u003d String.valueOf(i + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"            tasksBuilder.append(counter).append(\".\").append(currentTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"                // Append newline for all tasks before last task","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"                tasksBuilder.append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"        return tasksBuilder.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"     * Marks the task of the given index as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"     * @return A string containing a success message for marking the task as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that may occur when marking tasks as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"    private String done(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Sorry, no such task of index \" + taskIndex + \".\");","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        Task doneTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + doneTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"     * Finds tasks matching the given keywords.","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"     * @param keywords A string containing one or more keywords.","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"     * @return A string representation of the matching tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that may occur when finding tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"    private String find(String keywords) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        this.toFind \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        String[] splitKeywords \u003d keywords.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        this.tasks.stream().filter(task -\u003e Arrays.stream(splitKeywords)","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"                        .anyMatch(keyword -\u003e task.containsKeyword(keyword) \u0026\u0026 !matchingTasks.contains(task)))","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"                .forEach(matchingTasks::add);","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        return list(matchingTasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"     * Sets a given task to a given priority level.","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"     * @param taskIndex The index of the task to set priority.","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"     * @param priorityToSet A string indicating which priority to set the task to.","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"     * @return A string containing a success message for setting a priority.","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that may occur when setting priority.","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"    private String priority(int taskIndex, String priorityToSet) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e this.tasks.size()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Sorry, no such task of index \" + taskIndex + \".\");","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"        Task taskToSetPriority \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"        taskToSetPriority.setPriority(priorityToSet.toUpperCase());","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"        return \"Nice! I\u0027ve marked this task as \" + taskToSetPriority.getPriority()","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"                + \" priority :\\n  \" + taskToSetPriority;","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"     * Getter for the rewrite status of the last parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"     * @return True if data in Storage needs to be rewritten.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    public boolean needsToRewrite() {","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"        return this.toRewriteData;","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"     * Parses the user input and runs the corresponding command.","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"     * @param userInput A string containing the user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"     * @return A string containing the output to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that occurs when user input is parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"    public String parse(String userInput) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"            return list(this.tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"            String[] commandArguments \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"            String command \u003d commandArguments[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"            String arguments \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"            if (commandArguments.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"                arguments \u003d commandArguments[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"            if (command.equals(\"done\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The index of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"                assert !arguments.equals(\"\") : \"Arguments required, cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"kleonang"},"content":"                this.toRewriteData \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"                int taskIndex \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"                return done(taskIndex);","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"kleonang"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"kleonang"},"content":"                assert !arguments.equals(\"\") : \"Arguments required, cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"kleonang"},"content":"                this.toRewriteData \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"kleonang"},"content":"                String[] splitTask \u003d arguments.split(\" /by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"kleonang"},"content":"                if (splitTask.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"Please indicate a deadline using \u0027/by\u0027.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"kleonang"},"content":"                String description \u003d splitTask[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"kleonang"},"content":"                String byString \u003d splitTask[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"kleonang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(byString, FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"kleonang"},"content":"                    return this.tasks.addTask(new Deadline(description, deadlineDateTime));","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"kleonang"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"Datetime should be in YYYY-MM-DD hr:min (24h clock) format.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"kleonang"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":166,"author":{"gitId":"kleonang"},"content":"                assert !arguments.equals(\"\") : \"Arguments required, cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"kleonang"},"content":"                this.toRewriteData \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"kleonang"},"content":"                String[] splitTask \u003d arguments.split(\" /at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"kleonang"},"content":"                if (splitTask.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"Please indicate the event time frame using \u0027/at\u0027.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"kleonang"},"content":"                String description \u003d splitTask[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"kleonang"},"content":"                String atString \u003d splitTask[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"kleonang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime eventDateTime \u003d LocalDateTime.parse(atString, FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"kleonang"},"content":"                    return this.tasks.addTask(new Event(description, eventDateTime));","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"kleonang"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"Datetime should be in YYYY-MM-DD hr:min (24h clock) format.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"kleonang"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":182,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":184,"author":{"gitId":"kleonang"},"content":"                assert !arguments.equals(\"\") : \"Arguments required, cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":185,"author":{"gitId":"kleonang"},"content":"                this.toRewriteData \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"kleonang"},"content":"                return this.tasks.addTask(new Todo(arguments));","lastModifiedDate":"2021-09-01"},{"lineNumber":187,"author":{"gitId":"kleonang"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":188,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":189,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The index of \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":191,"author":{"gitId":"kleonang"},"content":"                assert !arguments.equals(\"\") : \"Arguments required, cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"kleonang"},"content":"                this.toRewriteData \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"kleonang"},"content":"                int counter \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"kleonang"},"content":"                return this.tasks.deleteTask(counter);","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"kleonang"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":196,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":197,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The keyword to \u0027\" + command + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":199,"author":{"gitId":"kleonang"},"content":"                assert !arguments.equals(\"\") : \"Arguments required, cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"kleonang"},"content":"                this.toRewriteData \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"kleonang"},"content":"                return find(arguments);","lastModifiedDate":"2021-09-07"},{"lineNumber":202,"author":{"gitId":"kleonang"},"content":"            } else if (command.equals(\"priority\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":203,"author":{"gitId":"kleonang"},"content":"                if (commandArguments.length \u003c 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":204,"author":{"gitId":"kleonang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The \u0027\" + command + \"\u0027 level cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":205,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":206,"author":{"gitId":"kleonang"},"content":"                assert !arguments.equals(\"\") : \"Arguments required, cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":207,"author":{"gitId":"kleonang"},"content":"                this.toRewriteData \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"kleonang"},"content":"                String[] splitArguments \u003d arguments.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"kleonang"},"content":"                int taskIndex \u003d Integer.parseInt(splitArguments[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":210,"author":{"gitId":"kleonang"},"content":"                String priorityToSet \u003d splitArguments[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":211,"author":{"gitId":"kleonang"},"content":"                return priority(taskIndex, priorityToSet);","lastModifiedDate":"2021-09-07"},{"lineNumber":212,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":216}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" * This class encapsulates the mechanism of storing data for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_DELIMITER \u003d \" \\\\| \";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_FILEPATH \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d H:mm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Storage class.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     * @param fileName The name of the file to store data in.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     * Loads the data from the data file if available into Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     * @return a List of Tasks saved in the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException An exception specifically encountered in Duke\u0027s operations.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        File directory \u003d new File(DATA_FILEPATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"            File dataFile \u003d new File(DATA_FILEPATH + this.fileName);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"                String line \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"                String[] data \u003d line.split(DATA_DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"                String taskType \u003d data[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"                String priority \u003d data[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"                String doneStatus \u003d data[2];","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"                Task importedTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"                // Assign correct Task type to importedTask","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"                case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Todo(data[3]);","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime deadlineDatetime \u003d LocalDateTime.parse(data[4], FORMATTER);","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Deadline(data[3], deadlineDatetime);","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"                    LocalDateTime eventDatetime \u003d LocalDateTime.parse(data[4], FORMATTER);","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"                    importedTask \u003d new Event(data[3], eventDatetime);","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"                    throw new IllegalStateException(\"Unexpected Task value: \" + taskType);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"                // Mark imported task as done if doneStatus is 1","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"                if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"                    importedTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"                importedTask.setPriority(priority);","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"                tasks.add(importedTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"            fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"                File dataFile \u003d new File(DATA_FILEPATH + this.fileName);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"                String message \u003d this.fileName + \" not found. File has been created.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"                throw new DukeException(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"                throw new DukeException(ioException.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"     * Rewrites the data in the data file with the most recent Tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"     * @param tasks A TaskList containing the most updated tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"    public void rewriteData(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_FILEPATH + this.fileName, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"                bufferedWriter.write(task.getDataString());","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":111}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    private static final String DATA_DELIMITER \u003d \" | \";","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    private final String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    private Priority priority;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    private enum Priority {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"        LOW, MEDIUM, HIGH","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"        this.priority \u003d Priority.MEDIUM;","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        String doneStatus \u003d \"X\";","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        String undoneStatus \u003d \" \";","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        return (isDone ? doneStatus : undoneStatus); // mark done task with X","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     * Marks this Task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Task\u0027s status icon and description.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        return this.getPriority() + DATA_DELIMITER + status + DATA_DELIMITER + this.description;","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"     * Checks if this task\u0027s description contains a given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"     * @param keyword A string keyword to check.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"     * @return True if this task\u0027s description contains the given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"     * Sets this task\u0027s priority to the given priority.","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"     * @param priority A Priority (LOW, MEDIUM or HIGH)","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"    public void setPriority(String priority) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        switch (priority) {","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"        case \"LOW\":","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"            this.priority \u003d Priority.LOW;","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        case \"MEDIUM\":","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"            this.priority \u003d Priority.MEDIUM;","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"        case \"HIGH\":","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"            this.priority \u003d Priority.HIGH;","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Please specify either \u0027low\u0027, \u0027medium\u0027 or \u0027high\u0027 priority.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"     * Gets a string representation of this task\u0027s priority level.","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"     * @return A string representation of this task\u0027s priority level.","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"    public String getPriority() {","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        return this.priority.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Task\u0027s status icon and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"        return \"[\" + this.getPriority() + \"][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":101}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a list of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     * Constructor for a new TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     * Constructor to import existing Tasks into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     * @param tasks A java.util.List of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"        this.addAll(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     * Adds a given task to the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     * @param task The Task to be added into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     * @return A confirmation message indicating the Task has been added.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        this.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have \" + this.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"     * Deletes the task of the given index from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     * @param counter The index of the Task to delete.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that occurs when index is out of bounds.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    public String deleteTask(int counter) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        if (counter \u003c\u003d 0 || counter \u003e this.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"            throw new DukeException(\"Sorry, no such task of index \" + counter + \".\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        assert !this.isEmpty() : \"Cannot delete Task from an empty TaskList.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        Task taskToRemove \u003d this.remove(counter - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + taskToRemove","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have \" + this.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":56}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    private static final String taskBadge \u003d \"[T]\";","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     * Constructor for a Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     * @param description A string describing the Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     * Returns a data string of the Todo task for saving.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     * @return A data string including the Todo\u0027s icon and description.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    public String getDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        return \"T | \" + super.getDataString();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     * @return A string including the Todo\u0027s icon and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        return taskBadge + super.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kleonang":39}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":" * This class encapsulates the UI of Duke and its interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"public class Ui extends AnchorPane {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     * Initializes the main Ui window.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        String response;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"            response \u003d Duke.getResponse(userInput.getText());","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"                DialogBox.getUserDialog(input),","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"                DialogBox.getDukeDialog(response)","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        // Exits after 3 seconds upon receiving bye response","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"                public void run () {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"                    System.exit(0);","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"            }, 3000);","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"     * Prints the given string formatted in a reply.","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"     * @param string The string to format in a reply.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"    public void printReply(String string) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(string));","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"     * Prints an error message formatted in a reply for an input file name that does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"     * @param fileName The name of the file that does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    public void showLoadingError(String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        printReply(fileName + \" not found. File has been created.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"     * Prints a success message formatted in a reply for an input file name that does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"     * @param fileName The name of the file that does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"    public void showLoadingSuccess(String fileName) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"        printReply(\"I found a \" + fileName + \" file!\\nYour tasks have been imported.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kleonang":87}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #25294a;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"         \u003cimage\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"            \u003cImage url\u003d\"@../images/SirDuke.jpg\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"         \u003c/image\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"      \u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-color: #343a68; -fx-background-radius: 5;\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"          \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"                  \u003cFont name\u003d\"Courier New\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"                  \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"                  \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"            \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"      \u003cInsets left\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kleonang":47}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #25294a;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.Ui\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"4.0\" layoutY\u003d\"561.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"320.0\" promptText\u003d\"Enter command here ...\" style\u003d\"-fx-background-color: #1f233e; -fx-text-fill: #ffffff;\" AnchorPane.bottomAnchor\u003d\"4.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"328.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"69.0\" style\u003d\"-fx-background-color: #fe4365;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"            \u003cFont name\u003d\"Helvetica\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #25294a; -fx-background: #25294a;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #25294a;\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kleonang":26}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #25294a#25294a;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"      \u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-color: #a7acdf; -fx-background-radius: 5;\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"          \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#383c60\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"                  \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"                  \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"                  \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"            \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"         \u003cimage\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"            \u003cImage url\u003d\"@../images/PepeJam.png\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"         \u003c/image\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"      \u003cInsets right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kleonang":47}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a unit test for the Parser class.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * Tests the parse method when a list command is given with an empty TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    public void parse_list_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parse(\"list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     * Tests the parse method when a new Deadline is added.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"     * @throws DukeException A Duke-specific exception that may occur when adding a new Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    public void parse_newDeadline_taskAdded() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"                + \"[D][ ] lab 1 (by: Sep 4 2021, 2:00 pm)\"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have 1 tasks in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        assertEquals(expected, parser.parse(\"deadline lab 1 /by 2021-09-04 14:00\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kleonang":38}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" * This class encapsulates a unit test for the Ui class.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":" * @author Kleon Ang","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"     * Tests the addTask method for a valid given input.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    public void addTask_validInput_addSuccess() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"                + \"[T][ ] test\"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"                + \"\\nNow you have 1 tasks in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        assertEquals(expected, tasks.addTask(todo));","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     * Tests the deleteTask method for a given invalid index.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public void deleteTask_invalidIndex_printsErrorMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.deleteTask(3));","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kleonang":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"deadline return book /by 2021-01-01 18:00","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"event project meeting /at 2021-08-06 14:00","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"deadline return more books /by 2021-10-10 23:59","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"event project discussion /at 2021-11-11 16:20","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"delete 5","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"deadline submit code","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"event meet friends","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"deadline donothing /by Dec 31","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kleonang":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kleonang":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kleonang":1,"-":37}}]
