[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiier-pzk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Javiier-pzk"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Javiier-pzk"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Javiier-pzk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Javiier-pzk"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Javiier-pzk"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Javiier-pzk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Javiier-pzk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Javiier-pzk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Javiier-pzk":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiier-pzk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Javiier-pzk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Javiier-pzk"},"content":"        level6DukeBot();","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Javiier-pzk"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Javiier-pzk"},"content":"     * Duke now recognised to dos, events and deadlines and adds them to the list accordingly.","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Javiier-pzk"},"content":"     * Any errors are now handled by Duke also.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Javiier-pzk"},"content":"     * Inputs are taken by a scanner from the user\u0027s keyboard.","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Javiier-pzk"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Javiier-pzk"},"content":"    public static void level6DukeBot() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"Javiier-pzk"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"Javiier-pzk"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Javiier-pzk"},"content":"        System.out.println(\" Hello! I am Duke\");","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Javiier-pzk"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Javiier-pzk"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Javiier-pzk"},"content":"        System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Javiier-pzk"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Javiier-pzk"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"Javiier-pzk"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Javiier-pzk"},"content":"            String[] inputValue \u003d command.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"    -----------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Javiier-pzk"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"    -----------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Javiier-pzk"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Javiier-pzk"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"Javiier-pzk"},"content":"                getList(taskList);","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"Javiier-pzk"},"content":"            } else if (inputValue[0].equals(\"done\") \u0026\u0026 inputValue.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"Javiier-pzk"},"content":"                //treat as unknown command if there is more than 1 number after \"done\".","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"Javiier-pzk"},"content":"                done(taskList, inputValue);","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"Javiier-pzk"},"content":"            } else if (inputValue[0].equals(\"delete\") \u0026\u0026 inputValue.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"Javiier-pzk"},"content":"                //treat as unknown command if there is more than 1 number after \"delete\".","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"Javiier-pzk"},"content":"                delete(taskList, inputValue);","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"Javiier-pzk"},"content":"            } else if (inputValue[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"Javiier-pzk"},"content":"                deadline(taskList, inputValue, command);","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"Javiier-pzk"},"content":"            } else if (inputValue[0].equals(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"Javiier-pzk"},"content":"                event(taskList, inputValue, command);","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"Javiier-pzk"},"content":"            } else if (inputValue[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"Javiier-pzk"},"content":"               toDo(taskList, inputValue, command);","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"Javiier-pzk"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"Javiier-pzk"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"    -----------------------------------------\");","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println();","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"Javiier-pzk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"Javiier-pzk"},"content":"        sc.close();","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"Javiier-pzk"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"Javiier-pzk"},"content":"     * This method allows Duke to store tasks entered by the user and display them back to the user when requested.","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"Javiier-pzk"},"content":"     * @param taskList An ArrayList of type Task used to contain the user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"Javiier-pzk"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"Javiier-pzk"},"content":"    public static void getList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"Javiier-pzk"},"content":"        if (taskList.isEmpty()) { //if list empty","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"    There are no tasks in your list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"Javiier-pzk"},"content":"        } else { //if list !empty","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"Javiier-pzk"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"Javiier-pzk"},"content":"                int currNum \u003d i + 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"Javiier-pzk"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     \" + currNum + \". \" + currTask.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"Javiier-pzk"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"Javiier-pzk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"Javiier-pzk"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"Javiier-pzk"},"content":"     * This method gives Duke the ability to mark tasks as done.","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"Javiier-pzk"},"content":"     * @param taskList An ArrayList of type Task used to contain the user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"Javiier-pzk"},"content":"     * @param inputValue A String[] formed when the user gives an input to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"Javiier-pzk"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"Javiier-pzk"},"content":"    public static void done(ArrayList\u003cTask\u003e taskList, String[] inputValue) {","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"Javiier-pzk"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"Javiier-pzk"},"content":"            int idx \u003d Integer.parseInt(inputValue[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"Javiier-pzk"},"content":"            Task taskToComplete \u003d taskList.get(idx - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"Javiier-pzk"},"content":"            if (taskToComplete.getIsDone()) { //if task is already completed","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     I have already marked this task as completed!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"Javiier-pzk"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"Javiier-pzk"},"content":"                taskToComplete.setIsDone(true);","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"       \" + taskToComplete.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"Javiier-pzk"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"Javiier-pzk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     OOPS!!! Please ensure a number is entered after done (eg: done 2)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"Javiier-pzk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"Javiier-pzk"},"content":"           if (Integer.parseInt(inputValue[1]) \u003c\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     OOPS!!! You do not have any task in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"Javiier-pzk"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"Javiier-pzk"},"content":"               System.out.println(\"     OOPS!!! You do not have \" + inputValue[1] + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"Javiier-pzk"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"Javiier-pzk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"Javiier-pzk"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"Javiier-pzk"},"content":"     * This method gives Duke the ability to delete tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"Javiier-pzk"},"content":"     * @param taskList An ArrayList of type Task used to contain the user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"Javiier-pzk"},"content":"     * @param inputValue A String[] formed when the user gives an input to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"Javiier-pzk"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"Javiier-pzk"},"content":"    public static void delete(ArrayList\u003cTask\u003e taskList, String[] inputValue) {","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"Javiier-pzk"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"Javiier-pzk"},"content":"            int idx \u003d Integer.parseInt(inputValue[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"Javiier-pzk"},"content":"            Task taskToDelete \u003d taskList.remove(idx -1);","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"       \" + taskToDelete.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     Now you have \" + taskList.size()","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"Javiier-pzk"},"content":"                    + (taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"Javiier-pzk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     OOPS!!! Please ensure a number is entered after delete (eg: delete 2)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"Javiier-pzk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"Javiier-pzk"},"content":"            if (Integer.parseInt(inputValue[1]) \u003c\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     OOPS!!! You do not have any task in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"Javiier-pzk"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     OOPS!!! You do not have \" + inputValue[1] + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"Javiier-pzk"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"Javiier-pzk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"Javiier-pzk"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"Javiier-pzk"},"content":"     * This method gives Duke the ability to track Deadlines (a type of Task).","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"Javiier-pzk"},"content":"     * @param taskList An ArrayList of type Task used to contain the user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"Javiier-pzk"},"content":"     * @param inputValue A String[] formed when the user gives an input to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"Javiier-pzk"},"content":"     * @param command An input of type String that the user gave to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"Javiier-pzk"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"Javiier-pzk"},"content":"    public static void deadline(ArrayList\u003cTask\u003e taskList, String[] inputValue, String command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"Javiier-pzk"},"content":"        if (inputValue.length \u003d\u003d 1) { //first check if deadline is empty","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     OOPS!!! The description and date/time of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"Javiier-pzk"},"content":"        } else if (!command.contains(\"/by\")) { //check for date separator","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     Invalid deadline format! \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"Javiier-pzk"},"content":"                    \"Please ensure you specify your date and time after a /by \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"Javiier-pzk"},"content":"                    \"Eg: deadline Submit Assignment /by Thursday 2359\");","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"Javiier-pzk"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"Javiier-pzk"},"content":"            int dateTimeIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-16"},{"lineNumber":149,"author":{"gitId":"Javiier-pzk"},"content":"            String description \u003d command.substring(inputValue[0].length() + 1, dateTimeIndex).strip();","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"Javiier-pzk"},"content":"            String dateTime \u003d command.substring(dateTimeIndex + 3).strip();","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"Javiier-pzk"},"content":"            if (description.equals(\"\") || dateTime.equals(\"\")) { //catches the case if users just type \"deadline /by\"","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     OOPS!!! The description and date/time of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"Javiier-pzk"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"Javiier-pzk"},"content":"                Task deadline \u003d new Deadline(description, dateTime);","lastModifiedDate":"2021-08-16"},{"lineNumber":156,"author":{"gitId":"Javiier-pzk"},"content":"                taskList.add(deadline);","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     Got it. I have added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"       \" + deadline.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":159,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     Now you have \" + taskList.size()","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"Javiier-pzk"},"content":"                        + (taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"Javiier-pzk"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"Javiier-pzk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"Javiier-pzk"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"Javiier-pzk"},"content":"     * This method gives Duke the ability to track Events (a type of Task).","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"Javiier-pzk"},"content":"     * @param taskList An ArrayList of type Task used to contain the user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"Javiier-pzk"},"content":"     * @param inputValue A String[] formed when the user gives an input to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"Javiier-pzk"},"content":"     * @param command An input of type String that the user gave to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"Javiier-pzk"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"Javiier-pzk"},"content":"    public static void event(ArrayList\u003cTask\u003e taskList, String[] inputValue, String command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"Javiier-pzk"},"content":"        if (inputValue.length \u003d\u003d 1) { //first check for empty events","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     OOPS!!! The description and date/time of an event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"Javiier-pzk"},"content":"        } else if (!command.contains(\"/at\")) { //check for date separator","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     Invalid event format! \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"Javiier-pzk"},"content":"                    \"Please ensure you specify your date and time after a /at \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"Javiier-pzk"},"content":"                    \"Eg: event Attend physical lessons /at NUS Monday 0800\");","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"Javiier-pzk"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"Javiier-pzk"},"content":"            int dateTimeIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"Javiier-pzk"},"content":"            String description \u003d command.substring(inputValue[0].length() + 1, dateTimeIndex).strip();","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"Javiier-pzk"},"content":"            String dateTime \u003d command.substring(dateTimeIndex + 3).strip();","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"Javiier-pzk"},"content":"            if (description.equals(\"\") || dateTime.equals(\"\")) { //catches the case if user types \"event /at\"","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     OOPS!!! The description and date/time of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"Javiier-pzk"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"Javiier-pzk"},"content":"                Task event \u003d new Event(description, dateTime);","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"Javiier-pzk"},"content":"                taskList.add(event);","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     Got it. I have added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"       \" + event.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"Javiier-pzk"},"content":"                System.out.println(\"     Now you have \" + taskList.size()","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"Javiier-pzk"},"content":"                        + (taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"Javiier-pzk"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"Javiier-pzk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"Javiier-pzk"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":197,"author":{"gitId":"Javiier-pzk"},"content":"     * This method gives Duke the ability to track ToDos (a type of Task).","lastModifiedDate":"2021-08-17"},{"lineNumber":198,"author":{"gitId":"Javiier-pzk"},"content":"     * @param taskList An ArrayList of type Task used to contain the user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":199,"author":{"gitId":"Javiier-pzk"},"content":"     * @param inputValue A String[] formed when the user gives an input to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":200,"author":{"gitId":"Javiier-pzk"},"content":"     * @param command An input of type String that the user gave to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":201,"author":{"gitId":"Javiier-pzk"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"Javiier-pzk"},"content":"    public static void toDo(ArrayList\u003cTask\u003e taskList, String[] inputValue, String command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"Javiier-pzk"},"content":"        if (inputValue.length \u003d\u003d 1) { //catch empty to do","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":205,"author":{"gitId":"Javiier-pzk"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":206,"author":{"gitId":"Javiier-pzk"},"content":"            String description \u003d command.substring(inputValue[0].length() + 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"Javiier-pzk"},"content":"            Task toDo \u003d new ToDo(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"Javiier-pzk"},"content":"            taskList.add(toDo);","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     Got it. I have added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"       \" + toDo.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"Javiier-pzk"},"content":"            System.out.println(\"     Now you have \" + taskList.size()","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"Javiier-pzk"},"content":"                    + (taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"Javiier-pzk"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Javiier-pzk":205,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiier-pzk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Javiier-pzk"},"content":"    protected String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Javiier-pzk"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Javiier-pzk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Javiier-pzk"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Javiier-pzk"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Javiier-pzk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Javiier-pzk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Javiier-pzk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Javiier-pzk":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiier-pzk"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Javiier-pzk"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Javiier-pzk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Javiier-pzk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Javiier-pzk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Javiier-pzk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Javiier-pzk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Javiier-pzk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Javiier-pzk"},"content":"    public void setIsDone(boolean done) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Javiier-pzk"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Javiier-pzk"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Javiier-pzk"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Javiier-pzk"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Javiier-pzk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Javiier-pzk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Javiier-pzk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Javiier-pzk":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiier-pzk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Javiier-pzk"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Javiier-pzk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Javiier-pzk"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Javiier-pzk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Javiier-pzk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Javiier-pzk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Javiier-pzk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Javiier-pzk":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Javiier-pzk"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Javiier-pzk"},"content":"deadline return book /by Wednesday 8pm","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Javiier-pzk"},"content":"event borrow book again /at National Library Monday 10am","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Javiier-pzk"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Javiier-pzk"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Javiier-pzk"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Javiier-pzk"},"content":"delete 4","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Javiier-pzk"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Javiier-pzk"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Javiier-pzk"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Javiier-pzk"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Javiier-pzk"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Javiier-pzk"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Javiier-pzk"},"content":"delete 0","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Javiier-pzk"},"content":"delete -1","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Javiier-pzk"},"content":"delete y","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Javiier-pzk"},"content":"delete 2 y","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Javiier-pzk"},"content":"event /at","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Javiier-pzk"},"content":"deadline /by","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Javiier-pzk"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Javiier-pzk"},"content":"deadline /","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Javiier-pzk"},"content":"event /","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Javiier-pzk"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Javiier-pzk"},"content":"bye","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Javiier-pzk"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Javiier-pzk":25}}]
