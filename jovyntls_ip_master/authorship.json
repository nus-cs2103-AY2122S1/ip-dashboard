[{"path":"data/duke_storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"T1|borrow book","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"E12021-08-25|project meeting ","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"T0|return book","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":3}},{"path":"src/main/java/ChatbotUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":" * ChatbotUI accepts user input, and outputs a given message.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"public interface ChatbotUI {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"     * Takes in a single line of input from the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"     * @return A string that the user types into the console.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    public static String acceptUserInput(Scanner sc) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"        return userInput;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"     * Prints out a given message in a pretty format.","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"     * @param message The message to be printed out.","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        System.out.println(\"---------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        System.out.println(\"\\t\" + message.replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"        System.out.println(\"---------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":30}},{"path":"src/main/java/DataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import java.io.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"public interface DataHandler {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"     * Reads the text content of a given file.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"     * @param filename The name of the file to read from","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"     * @return An ArrayList of the lines read from a given file.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    public static ArrayList\u003cString\u003e readLinesFromFile(String filename) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"            File file \u003d new File(filename);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"                lines.add(data);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"            sc.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"            System.out.println(\"No save data found.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        return lines;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     * Creates a file with the given filename.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"     * If the file already exists, it will overwrite the existing file with a new file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"     * @param filename The filename to be created.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    public static void overwriteNewFile(String filename) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"            FileWriter fileWriter \u003d new FileWriter(filename, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"     * Writes a given String to a given file, without overwriting existing content.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"     * @param content The content to be written to the file","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"     * @param filename The file that is to be written to","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    public static void writeToFile(String content, String filename) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"            FileWriter fileWriter \u003d new FileWriter(filename, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"            fileWriter.write(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":56}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"    public Deadline(String title, LocalDate timeDue) {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicators.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    public Deadline(String title, LocalDate timeDue, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicators.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     * Returns the string representation of a Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     * @return A string describing the Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        String formattedTimeDue \u003d this.timeDue \u003d\u003d null ? \"\" : this.timeDue.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        return super.toString() + String.format(\" (by: %s)\", formattedTimeDue);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" * A personal assistant chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"public class Duke implements ChatbotUI {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    private static final String FAREWELL_MESSAGE \u003d \"See you soon! :)\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    private static final String FAREWELL_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    private static final String COMPLETE_TASK_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    private static final String DELETE_TASK_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    private static final String CREATE_TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    private static final String CREATE_EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    private static final String CREATE_DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    private final String DATA_STORAGE_PATH \u003d \"../../data/duke_storage.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"     * The entrypoint of the Duke chat bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        duke.greet();","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        duke.taskMode();","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"     * A constructor for Duke chatbot.","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    public Duke() {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        this.loadData();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"     * Loads data that is saved in a given filename, and parses the data to load tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"    public void loadData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        ArrayList\u003cString\u003e lines \u003d DataHandler.readLinesFromFile(this.DATA_STORAGE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"            Task task \u003d Task.parseTaskFromSavedText(lines.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        ChatbotUI.printMessage(\"Loaded tasks from save file!\" + this.taskList.countTasks());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"     * Saves Chatbot data to a given filename.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"    public void saveData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        String content \u003d this.taskList.toSaveData();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        DataHandler.overwriteNewFile(this.DATA_STORAGE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        DataHandler.writeToFile(content, this.DATA_STORAGE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"    public void endDuke() {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        this.saveData();","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        ChatbotUI.printMessage(FAREWELL_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"     * Prints a greeting to the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"    public void greet() {","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"        ChatbotUI.printMessage(GREETING_MESSAGE);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"     * Echoes the user\u0027s input, until the user says \"bye\".","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"    public void echo() {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"        String message \u003d ChatbotUI.acceptUserInput(this.sc);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"        if (message.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"            ChatbotUI.printMessage(FAREWELL_MESSAGE);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"            ChatbotUI.printMessage(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"            echo();","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"     * Gets the description supplied by the user after a command.","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"     * @param command a String that describes the command (e.g. \"event\")","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"     * @param message the String that is input by the user (e.g. \"event Meeting /at tomorrow\")","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"     * @return a String representing the description after the command (e.g. \"Meeting /at tomorrow\")","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"     * @throws DukeException indicates that the description is invalid","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"    public String getStringFrom(String command, String message) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"        if (message.length() \u003c\u003d command.length()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"                String.format(\"The description of a %s cannot be empty.\", command)","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"            );","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"        String description \u003d message.substring(command.length()).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"                String.format(\"The description of a %s cannot be empty.\", command)","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"            );","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"        return description;","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"     * Parses a user-input for a number supplied after a given command.","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"     * @param command A String command that comes before the desired number. (e.g. \"delete\")","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"     * @param message The String that is the full input by the user. (e.g. \"delete 2\")","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"     * @return an int representing the description of the command. (e.g. \"2\")","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"     * @throws DukeException indicates that the description is invalid","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"    public int getIntFrom(String command, String message) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"        return Integer.parseInt(getStringFrom(command, message));","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"     * Handles the logic for managing a user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"    public void taskMode() {","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"        String message \u003d ChatbotUI.acceptUserInput(this.sc).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"        if (message.equals(FAREWELL_COMMAND)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"            this.endDuke();","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"            String output;","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"            if (message.equals(LIST_COMMAND)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"                output \u003d this.taskList.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"            } else if (message.startsWith(COMPLETE_TASK_COMMAND)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"                output \u003d this.taskList.completeTask(getIntFrom(COMPLETE_TASK_COMMAND, message));","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"            } else if (message.startsWith(DELETE_TASK_COMMAND)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"                output \u003d this.taskList.deleteTask(getIntFrom(DELETE_TASK_COMMAND, message));","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"            } else if (message.startsWith(CREATE_TODO_COMMAND)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"                output \u003d this.taskList.addNewTodo(getStringFrom(CREATE_TODO_COMMAND, message));","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"            } else if (message.startsWith(CREATE_EVENT_COMMAND)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"                output \u003d this.taskList.addNewEvent(getStringFrom(CREATE_EVENT_COMMAND, message));","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"            } else if (message.startsWith(CREATE_DEADLINE_COMMAND)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"                output \u003d this.taskList.addNewDeadline(getStringFrom(CREATE_DEADLINE_COMMAND, message));","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"                throw new DukeException(\"I don\u0027t know what that command means.\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"                        \"\\nPlease input a valid command.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"            ChatbotUI.printMessage(output);","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"jovyntls"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"            ChatbotUI.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"        } finally {","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"            taskMode();","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jovyntls":156,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jovyntls":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"    public Event(String title, LocalDate timeDue) {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicators.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    public Event(String title, LocalDate timeDue, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicators.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     * Returns the string representation of a Event.","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     * @return A string describing the Event.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        String formattedTimeDue \u003d this.timeDue \u003d\u003d null ? \"\" : this.timeDue.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        return super.toString() + String.format(\" (at: %s)\", formattedTimeDue);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"    protected String title;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"    protected char typeIndicator;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"    protected LocalDate timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    protected enum TypeIndicators {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        TODO(\u0027T\u0027),","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"        EVENT(\u0027E\u0027),","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"        DEADLINE(\u0027D\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"        public final char indicator;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"        TypeIndicators(char indicator) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"            this.indicator \u003d indicator;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        public void setIndicatorForTask(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"            task.typeIndicator \u003d this.indicator;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a Task.","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the user-input title of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"     * @param taskType the type of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    public Task(String title, TypeIndicators taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        taskType.setIndicatorForTask(this);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"     * A factory method for creating tasks with additional details.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"     * @param taskType a TypeIndicator enum representing the type of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"     * @param isDone a boolean representing whether or not the task has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"     * @param timeDue a String representing when the task is due, if it is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    public static Task createTaskWithDetail(TypeIndicators taskType, boolean isDone, String title, LocalDate timeDue) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"            case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"                return new Todo(title, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"                return new Deadline(title, timeDue, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"            case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"                return new Event(title, timeDue, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        // If the type cannot be parsed, it defaults to TO-DO.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        return new Todo(title, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"     * Parses structured text into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"     * Text must be of the format \u003ctypeIndicator\u003e\u003cdone\u003e\u003cdeadline\u003e|\u003ctitle\u003e","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"     * @param text The text to be parsed into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"     * @return a Task based on the parsed text","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    public static Task parseTaskFromSavedText(String text) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        char typeIndicator \u003d text.charAt(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        char doneIndicator \u003d text.charAt(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        boolean isDone \u003d doneIndicator \u003d\u003d \u00271\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        LocalDate timeDue \u003d LocalDate.parse(text.substring(2, text.indexOf(\u0027|\u0027)));","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        String title \u003d text.substring(text.indexOf(\u0027|\u0027) + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        return createTaskWithDetail(charToTypeEnum(typeIndicator), isDone, title, timeDue);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"     * Convert a task to a String that can be loaded as load data.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"     * @return a String that represents its saved state","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"        int doneIndicator \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        String timeDueString \u003d this.timeDue \u003d\u003d null ? \"\" : this.timeDue.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        return String.format(\"%s%s%s|%s\\n\", this.typeIndicator, doneIndicator, timeDueString, this.title);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"    public static TypeIndicators charToTypeEnum(char t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"        switch (t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"                return TypeIndicators.TODO;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"                return TypeIndicators.DEADLINE;","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"                return TypeIndicators.EVENT;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"        // If the type cannot be inferred, return a TO-DO as default.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"        return TypeIndicators.TODO;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"     * @return A string describing the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"        String doneIndicator \u003d this.isDone ? \"x\" : \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"        return String.format(\"[%s][%s] %s\", typeIndicator, doneIndicator, this.title);","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":115}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a TaskList which contains Tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"            data +\u003d task.toSaveData();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        return data;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"     * Adds an existing task to the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     * @param task The task to be added to the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"     * Given a string, creates a To-do from that string and adds it to the list of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"     * @param taskTitle a String of the title of the To-do to be added.","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"     * @return the newly created Todo.","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    public String addNewTodo(String taskTitle) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        Todo task \u003d new Todo(taskTitle);","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() + this.countTasks();","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"     * Given a string, creates a Deadline from that string and adds it to the list of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"     * @param taskTitle a String of the title of the Deadline to be added.","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"     * @return the newly created Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    public String addNewDeadline(String taskTitle) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        int delimiter \u003d taskTitle.indexOf(\"/by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"        LocalDate due \u003d LocalDate.parse(taskTitle.substring(delimiter + 4));","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        Deadline task \u003d new Deadline(taskTitle.substring(0, delimiter), due);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() + this.countTasks();","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"     * Given a string, creates a Deadline from that string and adds it to the list of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"     * @param taskTitle a String of the title of the Deadline to be added.","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"     * @return the newly created Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    public String addNewEvent(String taskTitle) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        int delimiter \u003d taskTitle.indexOf(\"/at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        LocalDate due \u003d LocalDate.parse(taskTitle.substring(delimiter + 4));","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        Event task \u003d new Event(taskTitle.substring(0, delimiter), due);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() + this.countTasks();","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"     * Given the index number of a task, marks that task as completed.","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"     * @param taskNumber an int representing the index of the task","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"     * @return the String representation of the completed task","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"    public String completeTask(int taskNumber) {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        // Assumes that the task exists.","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        task.completeTask();","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + task.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"     * Tells the user how many tasks there are in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"     * @return A string that contains the number of tasks in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"    public String countTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"        return String.format(\"\\nNow you have %d tasks in the list.\", this.tasks.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"     * Deletes a task when given its index number.","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"     * @param taskNumber an int representing the index of the task","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"     * @return the String representation of the deleted task","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"        // Assumes that the task exists.","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\\t\"","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"                + this.tasks.remove(taskIndex).toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"                + this.countTasks();","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"     * Returns a string representing the list of tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"     * @return A string representing the task list","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"        String output \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"            output +\u003d \"\\n\" + index + \".\" + this.tasks.get(i).toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"        return output;","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":118}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"    public Todo(String title) {","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicators.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"    public Todo(String title, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicators.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":10}},{"path":"text-ui-test/duke-test.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"rm ./data/duke_storage.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"cd text-ui-test","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"echo \"Testing I/O and logic: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"cd test-1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"bash ./runtest.sh","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"cd ..","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"echo \"Testing loading tasks from file: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"cd test-2","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"bash ./runtest-2.sh","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":14}},{"path":"text-ui-test/test-1/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"deadline return book /by 2021-08-24","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"event project meeting /at 2021-08-25","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"invalidcommand","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"todo return book","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jovyntls":16}},{"path":"text-ui-test/test-1/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"java -classpath ../../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"jovyntls":2}},{"path":"text-ui-test/test-2/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"Hello from","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":" ____        _        ","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"\tLoaded tasks from save file!","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"\tNow you have 3 tasks in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"\tWhat can I do for you?","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"\tHere are the tasks in your list:","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"\t1.[T][x] borrow book","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"\t2.[E][x] project meeting  (at: Aug 25 2021)","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"\t3.[T][ ] return book","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"\tSee you soon! :)","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":24}},{"path":"text-ui-test/test-2/input-2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"bye","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":2}},{"path":"text-ui-test/test-2/runtest-2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"# run the program, feed commands from input-2.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"java -classpath ../../bin Duke \u003c input-2.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"jovyntls":3}}]
