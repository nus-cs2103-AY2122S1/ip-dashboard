[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"This is a project for the CS2103 (Software Engineering) Individual Project component. ","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"# Duke Chatbot","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"According to the [nus-cs2103-AY2122S1/ip README.md](https://github.com/nus-cs2103-AY2122S1/ip/blob/master/README.md),","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"\u003e This is a project template for a greenfield Java project. It\u0027s named after the Java mascot Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"## Usage","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"This **chatbot** can be _used by_:","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"* the JAR file, found [here](https://github.com/jovyntls/ip/blob/master/build/libs/ip-1.0-SNAPSHOT-all.jar)","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"* run tests using `bash ./text-ui-test/duke-test.sh`","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"* clone the repo and run the `main` function:","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"```java","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    Duke duke \u003d new Duke(\"../../data/duke_storage.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    duke.greet();","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    duke.taskMode();","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"```","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"(This code is found in `ip/src/main/java/duke/Duke.java`.)","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"## Progress","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"### Milestones","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"1. ~~Week 1~~","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"2. ~~Week 2~~","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"3. ~~Week 3~~","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"4. Week 4","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"### To do","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"- [x] Basic chatbot implementation","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"- [x] Extra features","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"- [ ] GUI","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":":+1: :sparkles: :camel: :tada:","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":":rocket: :metal: :octocat:","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"-":23,"jovyntls":48}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"plugins {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.0.0\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"repositories {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"dependencies {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"test {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"javafx {","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027 ]","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"jar {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    manifest {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        attributes(","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"                \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        )","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jovyntls":51}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"@rem","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"@rem","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"@rem","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"@rem","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"@rem","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"@rem","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"@rem","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"echo.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"echo.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"goto fail","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"echo.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"echo.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"goto fail","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":":execute","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":":end","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":":fail","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"exit /b 1","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":":mainEnd","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":":omega","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jovyntls":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import duke.gui.DukeDialogBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import duke.gui.DukeGui;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import duke.gui.UserDialogBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" * A personal assistant chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class Duke extends DukeGui implements duke.Parser {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    private static final String FAREWELL_MESSAGE \u003d \"I\u0027ve saved your tasks.\\nSee you soon! :)\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    private static final String FAREWELL_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    private static final String COMPLETE_TASK_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    private static final String FIND_TASK_COMMAND \u003d \"find\";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    private static final String DELETE_TASK_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    private static final String CREATE_TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    private static final String CREATE_EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    private static final String CREATE_DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"     * A constructor for Duke chatbot.","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    public Duke() {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        storage \u003d new Storage(\"../../../../data/duke_storage.txt\");","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        loadData();","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"     * Starts the JavaFX GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"     * @param stage The primary stage that JavaFX provides","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        setUpGui(stage);","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"            handleUserInput();","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        });","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"            handleUserInput();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"        });","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        greet();","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"     * Passes user input to Duke and gets a corresponding response from Duke.","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        Label dukeText \u003d new Label(taskMode(userInput.getText()));","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"                new UserDialogBox(userText, new ImageView(user)),","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"                new DukeDialogBox(dukeText, new ImageView(duke))","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"     * Loads data that is saved in a given filename, and parses the data to load tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    public void loadData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"        ArrayList\u003cString\u003e lines \u003d storage.readLinesFromFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"            Task task \u003d Task.parseTaskFromSavedText(lines.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"     * Saves Chatbot data to a given filename.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"    public void saveData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"        String savedData \u003d taskList.toSaveData();","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"        storage.overwriteNewFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"        storage.writeToFile(savedData);","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"     * Prints a greeting to the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"    public void greet() {","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"        Label dukeText \u003d new Label(GREETING_MESSAGE);","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"                new DukeDialogBox(dukeText, new ImageView(duke))","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"        );","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"     * Saves the user\u0027s existing data and informs the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"     * @return A message informing the user that their data is saved.","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    public String endDuke() {","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"        saveData();","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"        return FAREWELL_MESSAGE;","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"     * Handles the logic for managing a user\u0027s tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"    public String taskMode(String msg) {","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"        if (msg.equals(FAREWELL_COMMAND)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"            return endDuke();","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"            if (msg.equals(LIST_COMMAND)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"                return taskList.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"            } else if (msg.startsWith(COMPLETE_TASK_COMMAND)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"                return taskList.completeTask(Parser.getIntFrom(COMPLETE_TASK_COMMAND, msg));","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"            } else if (msg.startsWith(FIND_TASK_COMMAND)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"                return taskList.findTasks(Parser.getStringFrom(FIND_TASK_COMMAND, msg));","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"            } else if (msg.startsWith(DELETE_TASK_COMMAND)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"                return taskList.deleteTask(Parser.getIntFrom(DELETE_TASK_COMMAND, msg));","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"            } else if (msg.startsWith(CREATE_TODO_COMMAND)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"                return taskList.addNewTodo(Parser.getStringFrom(CREATE_TODO_COMMAND, msg));","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"            } else if (msg.startsWith(CREATE_EVENT_COMMAND)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"                return taskList.addNewEvent(Parser.getStringFrom(CREATE_EVENT_COMMAND, msg));","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"            } else if (msg.startsWith(CREATE_DEADLINE_COMMAND)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"                return taskList.addNewDeadline(Parser.getStringFrom(CREATE_DEADLINE_COMMAND, msg));","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"                throw new DukeException(\"I don\u0027t know what that command means.\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"                        \"\\nPlease input a valid command.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jovyntls":144,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":" * DukeException is a RuntimeException that occurs when the user inputs invalid commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jovyntls":13}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jovyntls":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":" * Parser processes user input and commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"public interface Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"     * Gets the description supplied by the user after a command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"     * @param command a String that describes the command (e.g. \"event\")","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"     * @param message the String that is input by the user (e.g. \"event Meeting /at tomorrow\")","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"     * @return a String representing the description after the command (e.g. \"Meeting /at tomorrow\")","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"     * @throws DukeException if that the description is invalid","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    static String getStringFrom(String command, String message) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        assert command.length() \u003e 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        assert message.length() \u003e 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"        if (message.length() \u003c\u003d command.length()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"                    String.format(\"The description of a %s cannot be empty.\", command)","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"            );","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        String description \u003d message.substring(command.length()).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"            throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"                    String.format(\"The description of a %s cannot be empty.\", command)","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"            );","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"     * Parses a user-input for a number supplied after a given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"     * @param command A String command that comes before the desired number. (e.g. \"delete\")","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"     * @param message The String that is the full input by the user. (e.g. \"delete 2\")","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"     * @return an int representing the description of the command. (e.g. \"2\")","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"     * @throws DukeException if the description is invalid","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    static int getIntFrom(String command, String message) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        return Integer.parseInt(getStringFrom(command, message));","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":44}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":" * Storage handles the reading and writing of data to text files.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    private final String dataStoragePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     * A constructor for Duke Storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"     * @param dataStoragePath the path of the file where Duke data is stored.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public Storage(String dataStoragePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        this.dataStoragePath \u003d dataStoragePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     * Reads the text content of a given file.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"     * @return An ArrayList of the lines read from a given file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    public ArrayList\u003cString\u003e readLinesFromFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"            File file \u003d new File(this.dataStoragePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"                lines.add(data);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"            sc.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"            System.out.println(\"No save data found.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        return lines;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"     * Creates a file with the given filename.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"     * If the file already exists, it will overwrite the existing file with a new file.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    public void overwriteNewFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataStoragePath, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"     * Writes a given String to a given file, without overwriting existing content.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"     * @param content The content to be written to the file","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    public void writeToFile(String content) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataStoragePath, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"            fileWriter.write(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":74}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":" * TaskList represents all the tasks contained in a Duke Chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a duke.TaskList which contains Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     * Converts a taskList to a text format that can be saved in a txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"     * @return a String that represents the savable data of a duke.TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"            data +\u003d task.toSaveData();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        return data;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"     * Adds an existing task to the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"     * @param task The task to be added to the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        if (checkDuplicatedTask(task)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"            throw new DukeException(\"This task already exists in your list!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"     * Indicates if a given task already exists in the task list.","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"     * @param task The task to be checked for duplicates","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"     * @return a boolean representing if the task is duplicated","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"    public boolean checkDuplicatedTask(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        return tasks.stream().anyMatch(x -\u003e x.toString().equals(task.toString()));","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"     * Given a string, creates a To-do from that string and adds it to the list of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"     * @param taskTitle a String of the title of the To-do to be added.","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"     * @return the newly created To-do","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    public String addNewTodo(String taskTitle) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        Todo todo \u003d new Todo(taskTitle);","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        addTask(todo);","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + todo.toString() + countTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"     * Given a string, creates a Deadline from that string and adds it to the list of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"     * @param taskTitle a String of the title of the Deadline to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"     * @return the newly created Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"    public String addNewDeadline(String taskTitle) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        int delimiter \u003d taskTitle.indexOf(\"/by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        LocalDate due \u003d LocalDate.parse(taskTitle.substring(delimiter + 4));","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"        Deadline deadline \u003d new Deadline(taskTitle.substring(0, delimiter), due);","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"        addTask(deadline);","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + deadline.toString() + countTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"     * Given a string, creates a Deadline from that string and adds it to the list of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"     * @param taskTitle a String of the title of the Deadline to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"     * @return the newly created Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"    public String addNewEvent(String taskTitle) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"        int delimiter \u003d taskTitle.indexOf(\"/at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"        LocalDate due \u003d LocalDate.parse(taskTitle.substring(delimiter + 4));","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"        Event event \u003d new Event(taskTitle.substring(0, delimiter), due);","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"        addTask(event);","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + event.toString() + countTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"     * Given the index number of a task, marks that task as completed.","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"     * @param taskNumber an int representing the index of the task","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"     * @return the String representation of the completed task","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"    public String completeTask(int taskNumber) {","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"        // Assumes that the task exists.","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"        task.completeTask();","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + task.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"     * Tells the user how many tasks there are in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"     * @return A string that contains the number of tasks in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"    public String countTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"        return String.format(\"\\nNow you have %d tasks in the list.\", this.tasks.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"     * Returns the list of tasks that match a given keyword or phrase.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"     * @param keyword a String that must be contained by tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"     * @return a filtered list of tasks that contain the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"        TaskList filteredList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"            if (task.titleContains(keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"                filteredList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"        return String.format(\"I\u0027ve filtered tasks containing \u0027%s\u0027.\\n\", keyword)","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"                + filteredList.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"     * Deletes a task when given its index number.","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"     * @param taskNumber an int representing the index of the task","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"     * @return the String representation of the deleted task","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"            throw new DukeException(\"The task you are trying to delete does not exist. :(\");","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\\t\"","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"                + tasks.remove(taskIndex).toString()","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"                + countTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"     * Returns a string representing the list of tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"     * @return A string representing the task list","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"        String output \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"jovyntls"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"            int indexNumber \u003d i + 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"            output +\u003d \"\\n\" + indexNumber + \".\" + tasks.get(i).toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"        return output;","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":166}},{"path":"src/main/java/duke/gui/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"public class DukeDialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    private Label text;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a dialog box that represents Duke\u0027s output messages.","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"     * @param l The Label component for the message","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"     * @param iv The ImageView containing Duke\u0027s picture","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    public DukeDialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        text \u003d l;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        this.getChildren().addAll(displayPicture, text);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jovyntls":29}},{"path":"src/main/java/duke/gui/DukeGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"public abstract class DukeGui extends Application {","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    protected ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    protected VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    protected TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    protected Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    protected Scene scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    protected Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    protected Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"     * Creates the Duke GUI from a stage.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"     * @param stage The stage on which to render the scene","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    protected void setUpGui(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        setUpGuiComponents(stage);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        adjustComponentSizes();","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"     * Creates components of the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"     * @param stage The stage on which to render the scene.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"    private void setUpGuiComponents(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        stage.setTitle(\"Duke ChatBot\");","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"     * Sets sizes and scroll settings for components.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    private void adjustComponentSizes() {","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jovyntls":88}},{"path":"src/main/java/duke/gui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    private Label text;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a dialog box that represents the User\u0027s input messages.","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"     * @param l The Label component for the message","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"     * @param iv The ImageView containing user\u0027s picture","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    public UserDialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        text \u003d l;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jovyntls":29}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Deadline is a Task that is due by a specified date.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a Deadline that specifies whether or not it is completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"     * @param timeDue a LocalDate representing time at which the deadline is due","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    public Deadline(String title, LocalDate timeDue) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicator.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a Deadline that specifies whether or not it is completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"     * @param timeDue a LocalDate representing time at which the deadline is due","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"     * @param isDone a boolean representing whether or not the deadline is completed","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    public Deadline(String title, LocalDate timeDue, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicator.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"     * Returns the string representation of a Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"     * @return A string describing the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        String formattedTimeDue \u003d timeDue \u003d\u003d null","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"                ? \"\"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"                : timeDue.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        return super.toString() + String.format(\" (by: %s)\", formattedTimeDue);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Event is a Task that occurs on a specified date.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"     * A constructor for an Event that specifies whether or not it is completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the event","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"     * @param timeDue a LocalDate representing time at which the event is due","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    public Event(String title, LocalDate timeDue) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicator.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     * A constructor for an Event that specifies whether or not it is completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the event","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"     * @param timeDue a LocalDate representing time at which the event is due","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"     * @param isDone a boolean representing whether or not the event is completed","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    public Event(String title, LocalDate timeDue, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicator.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"     * Returns the string representation of a Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"     * @return A string describing the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        String formattedTimeDue \u003d timeDue \u003d\u003d null","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"                ? \"\"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"                : timeDue.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        return super.toString() + String.format(\" (at: %s)\", formattedTimeDue);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Task contains a title and can be completed or not completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    protected String title;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    protected char typeIndicator;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    protected LocalDate timeDue;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    protected enum TypeIndicator {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        TODO(\u0027T\u0027),","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"        EVENT(\u0027E\u0027),","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        DEADLINE(\u0027D\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        private final char indicator;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        TypeIndicator(char indicator) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"            this.indicator \u003d indicator;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        public void setIndicatorForTask(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"            task.typeIndicator \u003d this.indicator;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the user-input title of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"     * @param taskType the type of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    public Task(String title, TypeIndicator taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        taskType.setIndicatorForTask(this);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"     * A factory method for creating tasks with additional details.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"     * @param taskType a TypeIndicator enum representing the type of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"     * @param isDone a boolean representing whether or not the task has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"     * @param timeDue a String representing when the task is due, if it is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"     * @return a Task that is created from the given details","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"    public static Task createTaskWithDetail(","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"            TypeIndicator taskType, boolean isDone, String title, LocalDate timeDue) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"            return new Deadline(title, timeDue, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"            return new Event(title, timeDue, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"            // If the type cannot be parsed, it defaults to TO-DO.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"            return new Todo(title, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"     * Parses structured text into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"     * Text must be of the format [typeIndicator][done][deadline]|[title]","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"     * @param text The text to be parsed into a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"     * @return a Task based on the parsed text","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"    public static Task parseTaskFromSavedText(String text) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        TypeIndicator typeIndicator \u003d charToTypeEnum(text.charAt(0));","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        char doneIndicator \u003d text.charAt(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        boolean isDone \u003d (doneIndicator \u003d\u003d \u00271\u0027);","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        String title \u003d text.substring(text.indexOf(\u0027|\u0027) + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"        String timeDueString \u003d text.substring(2, text.indexOf(\u0027|\u0027));","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"        LocalDate timeDue \u003d timeDueString.length() \u003d\u003d  0","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"                ? null","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"                : LocalDate.parse(timeDueString);","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"        return createTaskWithDetail(typeIndicator, isDone, title, timeDue);","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"     * Convert a task to a String that can be loaded as load data.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"     * @return a String that represents its saved state","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"        int doneIndicator \u003d isDone ? 1 : 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"        String timeDueString \u003d timeDue \u003d\u003d null","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"                ? \"\"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"                : timeDue.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"        return String.format(\"%s%s%s|%s\\n\",","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"                typeIndicator, doneIndicator, timeDueString, this.title);","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"     * Given a char, convert it to a typeIndicator Enum.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"     * @param t The char to be converted to a TypeIndicator Enum","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"     * @return a TypeIndicator enum","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"    public static TypeIndicator charToTypeEnum(char t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"        switch (t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"            return TypeIndicator.DEADLINE;","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"            return TypeIndicator.EVENT;","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"            // If the type cannot be inferred, return a TO-DO as default.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"            return TypeIndicator.TODO;","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"     * Checks if the task title contains a given String.","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"     * @param keyword a String that may be contained in the task title.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"     * @return a boolean representing whether or not the task contains the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"    public boolean titleContains(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"        return title.contains(keyword);","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"     * @return A string describing the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"        String doneIndicator \u003d isDone ? \"x\" : \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"        return String.format(\"[%s][%s] %s\", typeIndicator, doneIndicator, title);","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":145}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":" * Todo is a Task with no due date.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a To-do.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the to-do","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    public Todo(String title) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicator.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     * A constructor for a To-do that sets its completion status.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     * @param title a String representing the title of the to-do","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"     * @param isDone a boolean representing whether or not the To-do is completed","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public Todo(String title, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        super(title, TypeIndicator.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jovyntls":27}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    public void createNewDeadlineTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        Deadline deadline \u003d new Deadline(\"Submission\", LocalDate.parse(\"2021-02-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"        assertEquals(\"[D][ ] Submission (by: Feb 11 2021)\", deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    public void markDeadlineAsDoneTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"        Deadline deadline \u003d new Deadline(\"Submission\", LocalDate.parse(\"2021-02-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        deadline.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        assertEquals(\"[D][x] Submission (by: Feb 11 2021)\", deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":21}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    public void createNewEventTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        Event event \u003d new Event(\"Project meeting\", LocalDate.parse(\"2021-01-01\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"        assertEquals(\"[E][ ] Project meeting (at: Jan 1 2021)\", event.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    public void markEventAsDoneTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"        Event event \u003d new Event(\"Project meeting\", LocalDate.parse(\"2021-01-01\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        event.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        assertEquals(\"[E][x] Project meeting (at: Jan 1 2021)\", event.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":21}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"    public void parseStringFromCommands(){","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"        String instruction \u003d Parser.getStringFrom(\"deadline\", \"deadline Return book /by: 2021-11-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"        assertEquals(\"Return book /by: 2021-11-12\", instruction);","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    public void parseIntFromCommands(){","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"        int instruction \u003d Parser.getIntFrom(\"done\", \"done 123\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"        assertEquals(123, instruction);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":18}},{"path":"text-ui-test/duke-test.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"rm ./data/duke_storage.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"cd text-ui-test","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"echo \"Testing I/O and logic: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"cd test-1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"bash ./runtest.sh","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"cd ..","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"echo \"Testing loading tasks from file: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"cd test-2","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"bash ./runtest-2.sh","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":14}},{"path":"text-ui-test/test-1/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"deadline return book /by 2021-08-24","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"event project meeting /at 2021-08-25","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"invalidcommand","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"todo bookmark pages","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"find book","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jovyntls":17}},{"path":"text-ui-test/test-1/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"if ! javac -cp ../../src/main/java/duke/task -Xlint:none -d ../../bin ../../src/main/java/duke/task/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"then","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    echo \"********** BUILD FAILURE IN TASKS PACKAGE **********\"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    exit 1","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"fi","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"if ! javac -cp ../../bin -Xlint:none -d ../../bin ../../src/main/java/duke/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"java -classpath ../../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"jovyntls":7}},{"path":"text-ui-test/test-2/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"Hello from","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":" ____        _        ","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"\tLoaded tasks from save file!","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"\tNow you have 3 tasks in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"\tWhat can I do for you?","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"\tHere are the tasks in your list:","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"\t1.[T][x] borrow book","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"\t2.[E][x] project meeting  (at: Aug 25 2021)","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"\t3.[T][ ] bookmark pages","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"\tSee you soon! :)","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"---------------------------------------------------------","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":24}},{"path":"text-ui-test/test-2/input-2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"list","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"bye","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jovyntls":2}},{"path":"text-ui-test/test-2/runtest-2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"if ! javac -cp ../../src/main/java/duke/task -Xlint:none -d ../../bin ../../src/main/java/duke/task/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"then","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    echo \"********** BUILD FAILURE IN TASKS PACKAGE **********\"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    exit 1","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"fi","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"if ! javac -cp ../../bin -Xlint:none -d ../../bin ../../src/main/java/duke/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"# run the program, feed commands from input-2.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"java -classpath ../../bin duke.Duke \u003c input-2.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"jovyntls":8}}]
