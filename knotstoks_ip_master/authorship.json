[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"    private String finishByDate;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"     * Constructor for the Deadline task.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"     * @param finishByDate Date to finish the Task by.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"    public Deadline(String name, String finishByDate) {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"        this.finishByDate \u003d finishByDate;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + finishByDate + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"    private String eventDate;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"     * Constructor for the Deadline task.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"     * @param eventDate Date of the Event.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"    public Event(String name, String eventDate) {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventDate + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":17}},{"path":"src/main/java/Pix.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"public class Pix {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"        TODO,","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"        EVENT","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(0);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"     * Does the logic for registering prompts.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"     * @param command The command to be registered.","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"    private static void EnterCommand(String[] command) throws PixException {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"            switch (command[0]) { //Split into cases depending on the length of the command","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"                    if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"                        ExitPix();","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"                    } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"                        NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"                        throw new PixUnknownCommandException();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"                case \"list\":","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"                    if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"knotstoks"},"content":"                        DisplayList();","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"knotstoks"},"content":"                    } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"                        throw new PixUnknownCommandException();","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"                    NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"                case \"done\":","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"                    if (command.length \u003d\u003d 2 \u0026\u0026 isInteger(command[1])) {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"                        CompleteTask(Integer.parseInt(command[1]));","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"                    } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"                        throw new PixUnknownCommandException();","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"                    NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"knotstoks"},"content":"                    ArrayList\u003cString\u003e tempArrayToDo \u003d new ArrayList\u003c\u003e(Arrays.asList(command).subList(1, command.length));","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"                    String taskName \u003d String.join(\" \", tempArrayToDo);","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"knotstoks"},"content":"                    AddTask(taskName, TaskType.TODO, \"\");","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"knotstoks"},"content":"                    NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"knotstoks"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"knotstoks"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"knotstoks"},"content":"                    int splitterDeadline \u003d -1; //Finds where the \"/by\" is","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"knotstoks"},"content":"                    for (int i \u003d 1; i \u003c command.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"knotstoks"},"content":"                        if (command[i].equals(\"/by\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"knotstoks"},"content":"                            splitterDeadline \u003d i;","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"knotstoks"},"content":"                            break;","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"knotstoks"},"content":"                        }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"knotstoks"},"content":"                    if (splitterDeadline !\u003d -1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"knotstoks"},"content":"                        ArrayList\u003cString\u003e tempTaskName \u003d new ArrayList\u003c\u003e(Arrays.asList(command).subList(1, splitterDeadline));","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"knotstoks"},"content":"                        ArrayList\u003cString\u003e tempArray \u003d new ArrayList\u003c\u003e(Arrays.asList(command).subList(splitterDeadline + 1, command.length));","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"knotstoks"},"content":"                        String taskNameDeadline \u003d String.join(\" \", tempTaskName);","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"knotstoks"},"content":"                        String date \u003d String.join(\" \", tempArray);","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"knotstoks"},"content":"                        AddTask(taskNameDeadline, TaskType.DEADLINE, date);","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"knotstoks"},"content":"                    } else { //Cannot find the \"/by\"","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"knotstoks"},"content":"                        throw new PixInvalidTaskException();","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"knotstoks"},"content":"                    NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"knotstoks"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"knotstoks"},"content":"                case \"event\":","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"knotstoks"},"content":"                    int splitterEvent \u003d -1; //Finds where the \"/at\" is","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"knotstoks"},"content":"                    for (int i \u003d 1; i \u003c command.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"knotstoks"},"content":"                        if (command[i].equals(\"/at\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"knotstoks"},"content":"                            splitterEvent \u003d i;","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"knotstoks"},"content":"                            break;","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"knotstoks"},"content":"                        }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"knotstoks"},"content":"                    if (splitterEvent !\u003d -1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"knotstoks"},"content":"                        ArrayList\u003cString\u003e tempTaskName \u003d new ArrayList\u003c\u003e(Arrays.asList(command).subList(1, splitterEvent));","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"knotstoks"},"content":"                        ArrayList\u003cString\u003e tempArray \u003d new ArrayList\u003c\u003e(Arrays.asList(command).subList(splitterEvent + 1, command.length));","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"knotstoks"},"content":"                        String taskNameDeadline \u003d String.join(\" \", tempTaskName);","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"knotstoks"},"content":"                        String date \u003d String.join(\" \", tempArray);","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"knotstoks"},"content":"                        AddTask(taskNameDeadline, TaskType.EVENT, date);","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"knotstoks"},"content":"                    } else { //Cannot find the \"/at\"","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"knotstoks"},"content":"                        throw new PixInvalidTaskException();","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"knotstoks"},"content":"                    NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"knotstoks"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"knotstoks"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"knotstoks"},"content":"                    if (command.length \u003d\u003d 2 \u0026\u0026 isInteger(command[1])) {","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"knotstoks"},"content":"                        DeleteTask(Integer.parseInt(command[1]));","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"knotstoks"},"content":"                    } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"knotstoks"},"content":"                        throw new PixUnknownCommandException();","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"knotstoks"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"knotstoks"},"content":"                    NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"knotstoks"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"knotstoks"},"content":"                default:","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"knotstoks"},"content":"                    throw new PixUnknownCommandException();","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"knotstoks"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"knotstoks"},"content":"        } catch (PixUnknownCommandException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"knotstoks"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"knotstoks"},"content":"            NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"knotstoks"},"content":"        } catch (PixInvalidTaskException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"knotstoks"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"knotstoks"},"content":"            NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"knotstoks"},"content":"     * Displays the itemList.","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"knotstoks"},"content":"    private static void DisplayList() {","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"knotstoks"},"content":"        System.out.println(\"Why can\u0027t you keep track of these yourself:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"knotstoks"},"content":"        for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"knotstoks"},"content":"            System.out.println(i + \". \" + taskList.get(i - 1).toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"knotstoks"},"content":"     * Adds the Task to the taskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"knotstoks"},"content":"     * @param item The task to be added to the taskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"knotstoks"},"content":"     * @param type The type of task to be added.","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"knotstoks"},"content":"     * @param date The date/time of the task (if applicable)","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"knotstoks"},"content":"    private static void AddTask(String item, TaskType type, String date) throws PixException {","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"knotstoks"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"knotstoks"},"content":"            if (item.equals(\"\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"knotstoks"},"content":"                throw new PixInvalidTaskException();","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"knotstoks"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"knotstoks"},"content":"                switch (type) {","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"knotstoks"},"content":"                    case TODO:","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"knotstoks"},"content":"                        ToDo toDo \u003d new ToDo(item);","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"knotstoks"},"content":"                        taskList.add(toDo);","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"knotstoks"},"content":"                        System.out.println(\" this task: \\n\" + toDo);","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"knotstoks"},"content":"                        System.out.println(\"You now have \" + taskList.size() + \" task(s) in your list\");","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"knotstoks"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"knotstoks"},"content":"                    case DEADLINE:","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"knotstoks"},"content":"                        Deadline deadline \u003d new Deadline(item, date);","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"knotstoks"},"content":"                        taskList.add(deadline);","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"knotstoks"},"content":"                        System.out.println(\"Added this task: \\n\" + deadline);","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"knotstoks"},"content":"                        System.out.println(\"You now have \" + taskList.size() + \" task(s) in your list\");","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"knotstoks"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"knotstoks"},"content":"                    case EVENT:","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"knotstoks"},"content":"                        Event event \u003d new Event(item, date);","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"knotstoks"},"content":"                        taskList.add(event);","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"knotstoks"},"content":"                        System.out.println(\"Added this task: \\n\" + event);","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"knotstoks"},"content":"                        System.out.println(\"You now have \" + taskList.size() + \" task(s) in your list\");","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"knotstoks"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"knotstoks"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"knotstoks"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"knotstoks"},"content":"        } catch (PixInvalidTaskException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"knotstoks"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"knotstoks"},"content":"            NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"knotstoks"},"content":"     * Sets the selected task to be completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"knotstoks"},"content":"     * @param n The number of the Task to be completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"knotstoks"},"content":"    private static void CompleteTask(int n) {","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"knotstoks"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"knotstoks"},"content":"            taskList.get(n - 1).CompleteTask();","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"knotstoks"},"content":"            System.out.println(\"Wow. You did it. Yay.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"knotstoks"},"content":"            System.out.println(taskList.get(n - 1));","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"knotstoks"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"knotstoks"},"content":"            System.out.println(\"You can\u0027t complete what literally isn\u0027t there!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"knotstoks"},"content":"     * Deletes the selected task from the Task List.","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"knotstoks"},"content":"     * @param n The number of the Task to be deleted.","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"knotstoks"},"content":"    private static void DeleteTask(int n) {","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"knotstoks"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":179,"author":{"gitId":"knotstoks"},"content":"            Task taskToDelete \u003d taskList.get(n - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"knotstoks"},"content":"            System.out.println(\"Given up already? Task removed:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"knotstoks"},"content":"            System.out.println(taskToDelete);","lastModifiedDate":"2021-08-15"},{"lineNumber":182,"author":{"gitId":"knotstoks"},"content":"            taskList.remove(n - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"knotstoks"},"content":"            System.out.println(\"You now have \" + taskList.size() + \" task(s) in your list\");","lastModifiedDate":"2021-08-15"},{"lineNumber":184,"author":{"gitId":"knotstoks"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"knotstoks"},"content":"            System.out.println(\"You can\u0027t delete what literally isn\u0027t there!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":187,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"knotstoks"},"content":"     * Reads the input from the user and triggers the logic for the command.","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"knotstoks"},"content":"    private static void NextCommand() throws PixException {","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"knotstoks"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"knotstoks"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"knotstoks"},"content":"        String[] splitInput \u003d input.split(\" \", 0);","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"knotstoks"},"content":"        EnterCommand(splitInput);","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":199,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"knotstoks"},"content":"     * Closes and exits Pix.","lastModifiedDate":"2021-08-15"},{"lineNumber":201,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":202,"author":{"gitId":"knotstoks"},"content":"    private static void ExitPix() {","lastModifiedDate":"2021-08-15"},{"lineNumber":203,"author":{"gitId":"knotstoks"},"content":"        System.out.println(\"Please don\u0027t come back...\");","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"knotstoks"},"content":"     * Checks if the String is an integer.","lastModifiedDate":"2021-08-15"},{"lineNumber":208,"author":{"gitId":"knotstoks"},"content":"     * @param str String to be tested.","lastModifiedDate":"2021-08-15"},{"lineNumber":209,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"knotstoks"},"content":"    private static boolean isInteger(String str) {","lastModifiedDate":"2021-08-15"},{"lineNumber":211,"author":{"gitId":"knotstoks"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":212,"author":{"gitId":"knotstoks"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2021-08-15"},{"lineNumber":213,"author":{"gitId":"knotstoks"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":214,"author":{"gitId":"knotstoks"},"content":"            return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"knotstoks"},"content":"        return true;","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":219,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":220,"author":{"gitId":"knotstoks"},"content":"    public static void main(String[] args) throws PixException {","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":222,"author":{"gitId":"knotstoks"},"content":"        System.out.println(\"This is Pix. Why did you summon me AGAIN...\");","lastModifiedDate":"2021-08-15"},{"lineNumber":223,"author":{"gitId":"knotstoks"},"content":"        System.out.println(\"What do want now?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":224,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":225,"author":{"gitId":"knotstoks"},"content":"        NextCommand();","lastModifiedDate":"2021-08-15"},{"lineNumber":226,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":227,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":227}},{"path":"src/main/java/PixException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":" * The General Exception class that signals any errors.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"public class PixException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"    public PixException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"    public PixException(String errorMessage) {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":12}},{"path":"src/main/java/PixInvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"public class PixInvalidTaskException extends PixException {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"        return \"(ಠ ∩ಠ) The format to enter the specified task is wrong\";","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":7}},{"path":"src/main/java/PixUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":" * Triggers when the user inputs an unknown command.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"public class PixUnknownCommandException extends PixException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"        return \"(ಠ ∩ಠ) Unknown Command: Do you even know what you\u0027re typing..?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"    protected String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"     * Constructor for the Task.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"     * Sets the Task to complete.","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"    public void CompleteTask() {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"        done \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"        if (done) {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"knotstoks":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"     * Constructor for the ToDo task.","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"knotstoks":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"java -classpath ..\\bin Pix \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"knotstoks":1,"-":20}}]
