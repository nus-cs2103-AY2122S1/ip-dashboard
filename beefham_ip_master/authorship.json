[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beefham":2,"-":22}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"public class AddDeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    LocalDate deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    public AddDeadlineCommand(String desc, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"        Deadline newDeadline \u003d new Deadline(this.desc, this.isDone, this.deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"        taskList.addTask(newDeadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"        ui.printAddTask(newDeadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"            storage.writeTasksToFile(taskList, storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"            ui.printFileWriteFail(storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":29}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"public class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    String time;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    public AddEventCommand(String desc, Boolean isDone, String time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"        Event newEvent \u003d new Event(this.desc, this.isDone, this.time);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"        taskList.addTask(newEvent);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"        ui.printAddTask(newEvent);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"            storage.writeTasksToFile(taskList, storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"            ui.printFileWriteFail(storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":29}},{"path":"src/main/java/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":" * This command adds a task to the taskList, given a description and flag.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":" * TODO: Will split further to account for to-do, deadline and event.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"public class AddTaskCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    String desc;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    public AddTaskCommand(String desc, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"        Task newTask \u003d new Task(this.desc, this.isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"        ui.printAddTask(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"            storage.writeTasksToFile(taskList, storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"            ui.printFileWriteFail(storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() { return false; }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":36}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"public class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    public AddTodoCommand(String desc, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        Todo newTodo \u003d new Todo(this.desc, this.isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"        taskList.addTask(newTodo);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"        ui.printAddTask(newTodo);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"            storage.writeTasksToFile(taskList, storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"            ui.printFileWriteFail(storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":26}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":" * The Command interface models a command given by the user through","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":" * the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":" * Each command has an execute method that acts on the duke.Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":" * Each command also has a method which tells duke.Duke whether to quit, but","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":" * only the commands.QuitCommand will return true in general.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"public interface Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    void execute(Ui ui, TaskList taskList, Storage storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    boolean isQuit();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":19}},{"path":"src/main/java/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"            Task t \u003d taskList.getTask(this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"            taskList.deleteTask(this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"            ui.printDeleteTask(t, this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"            storage.writeTasksToFile(taskList, storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"            if (taskList.numberOfTasks() \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"                System.out.println(\"Invalid index given, enter a number from 1 to \" + taskList.numberOfTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"            } else if (taskList.numberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"                System.out.println(\"You cannot delete any task because you have no tasks!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"            ui.printFileWriteFail(storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":39}},{"path":"src/main/java/commands/DisplayTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"public class DisplayTasksCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"        if (taskList.numberOfTasks() \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"            System.out.println(\"Here are your tasks!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"            for (int i \u003d 0; i \u003c taskList.numberOfTasks(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"                System.out.println((i + 1) + \". \" + taskList.getTask(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"            System.out.println(\"You have no tasks! Nice.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() { return false; }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":21}},{"path":"src/main/java/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"public class ErrorCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    String msg;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    public ErrorCommand(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"        this.msg \u003d message;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":23}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"        ui.printHelp();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":18}},{"path":"src/main/java/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":" * This command marks a task in the task list as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"public class MarkDoneCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    // The index of the task to be marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"            Task t \u003d taskList.getTask(this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"            taskList.getTask(this.index).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"            ui.printTaskDone(t, this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"            storage.writeTasksToFile(taskList, storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"            if (taskList.numberOfTasks() \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"                System.out.println(\"Invalid index given, enter a number from 1 to \" + taskList.numberOfTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"            } else if (taskList.numberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"                System.out.println(\"You cannot mark any task as done because you have no tasks!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"            ui.printFileWriteFail(storage.getTaskFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() {return false;}","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":40}},{"path":"src/main/java/commands/QuitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"public class QuitCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    };","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() { return true; }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":13}},{"path":"src/main/java/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"public class UnknownCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"        ui.printUnknownCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    public boolean isQuit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    private Storage store;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    private boolean isRunning;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"        this.store \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"        this.taskList \u003d new TaskList(this.store.readFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"        this.ui.greet();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"        while (this.isRunning) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"            Command c \u003d this.ui.parseInput(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"            this.ui.printSepLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"            c.execute(this.ui, this.taskList, this.store);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"            this.ui.printSepLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"            this.isRunning \u003d !c.isQuit();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"        return this.taskList.numberOfTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"beefham"},"content":"        d.run();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"beefham":48,"-":2}},{"path":"src/main/java/duke/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import commands.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":" * This class handles the parsing of the user input into duke.Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":" * Generally, it parses the command and returns a Command object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"public class DukeParser {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    public Command parse(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"            String[] parsedInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"            String command \u003d parsedInput[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"                return new DisplayTasksCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"                return new QuitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"help\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"                // assume command is in the form \"done x\"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"                Integer index \u003d Integer.parseInt(parsedInput[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"                // subtract 1 as task list is 0-indexed but on display it is 1-indexed.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"                return new MarkDoneCommand(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"                // assume command is in the form \"delete x\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"                Integer index \u003d Integer.parseInt(parsedInput[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"                // subtract 1 as task list is 0-indexed but on display it is 1-indexed.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"                return new DeleteTaskCommand(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"                String desc \u003d parsedInput[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"                return new AddTodoCommand(desc, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"                String[] details \u003d parsedInput[1].split(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"                String desc \u003d details[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"                String time \u003d details[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"beefham"},"content":"                return new AddEventCommand(desc, false, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"beefham"},"content":"                String[] details \u003d parsedInput[1].split(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"beefham"},"content":"                String desc \u003d details[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"beefham"},"content":"                LocalDate time \u003d LocalDate.parse(details[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"beefham"},"content":"                return new AddDeadlineCommand(desc, false, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"beefham"},"content":"            return new UnknownCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"beefham"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"beefham"},"content":"            System.out.println(\"It seems like you have entered an invalid task number\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"beefham"},"content":"            System.out.println(\"Please enter the task number as shown in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"beefham"},"content":"            return new ErrorCommand(\"An exception occurred! See details above.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"beefham"},"content":"        } catch (Exception e) { //TODO DANGEROUS! please change","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"beefham"},"content":"            return new ErrorCommand(\"An exception occurred!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"beefham"},"content":"    /*","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"beefham"},"content":"    String[] next \u003d sc.nextLine().split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"beefham"},"content":"            String command \u003d next[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"beefham"},"content":"            if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"beefham"},"content":"                System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"beefham"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"beefham"},"content":"                    // Mark a task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"beefham"},"content":"                    // We assume the command is of the form \"done xxx\" where xxx is an integer","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"beefham"},"content":"                    Integer taskNum \u003d Integer.parseInt(next[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"beefham"},"content":"                    tasks.Task taskToComplete \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"beefham"},"content":"                    taskToComplete.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"The task has been marked as done!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"beefham"},"content":"                    System.out.println(taskToComplete);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"beefham"},"content":"                    StringBuilder textString \u003d new StringBuilder(100);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"beefham"},"content":"                    for (tasks.Task t : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"beefham"},"content":"                        textString.append(t.saveText());","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"beefham"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"beefham"},"content":"                    duke.Duke.writeLineToFile(textString.toString(), taskFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"beefham"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"It seems like you have entered an invalid number for done.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Please enter the task number as shown in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"beefham"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"That task number does not exist in your list of tasks.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"beefham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Failed to write to file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"beefham"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"beefham"},"content":"                System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"beefham"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"beefham"},"content":"                    Integer taskNum \u003d Integer.parseInt(next[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"beefham"},"content":"                    tasks.Task taskToDelete \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"The task has been deleted!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"beefham"},"content":"                    System.out.println(taskToDelete);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"beefham"},"content":"                    taskList.remove(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"beefham"},"content":"                    StringBuilder textString \u003d new StringBuilder(100);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"beefham"},"content":"                    for (tasks.Task t : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"beefham"},"content":"                        textString.append(t.saveText());","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"beefham"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"beefham"},"content":"                    duke.Duke.writeLineToFile(textString.toString(), taskFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"beefham"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"It seems like you have entered an invalid number to delete.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Please enter the task number as shown in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"beefham"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"That task number does not exist in your list of tasks.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"beefham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Failed to write to file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"beefham"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"help\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"beefham"},"content":"                String helpMessage \u003d sepLine + \"\\n HELP \\n\" + sepLine + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"beefham"},"content":"                        + \"Available commands: \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"beefham"},"content":"                        + \"\u0027help\u0027 - Opens this dialog. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"beefham"},"content":"                        + \"\u0027list\u0027 - Opens your list of tasks. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"beefham"},"content":"                        + \"\u0027todo (desc)\u0027 - Adds a todo item with the given description. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"beefham"},"content":"                        + \"\u0027deadline (desc) /by (due date)\u0027 - Adds a deadline item to your task list \"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"beefham"},"content":"                        + \"with the given description and due date. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"beefham"},"content":"                        + \"\u0027event (desc) /at (timing)\u0027 - Adds a event item to your task list \"","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"beefham"},"content":"                        + \"with the given description and timing. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"beefham"},"content":"                        + \"\u0027done (x)\u0027 - Marks the task with number x as done \"","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"beefham"},"content":"                        + \"according to the list given by the command \u0027list\u0027 \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"beefham"},"content":"                        + \"\u0027delete (x)\u0027 - Deletes the task with number x \"","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"beefham"},"content":"                        + \"according to the list given by the command \u0027list\u0027 \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"beefham"},"content":"                        + \"\u0027bye\u0027 - Quits this program. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"beefham"},"content":"                        + sepLine + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"beefham"},"content":"                        + \"To use any command, follow the structure as shown, entering your values \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"beefham"},"content":"                        + \"in place of anything in brackets. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"beefham"},"content":"                        + sepLine;","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"beefham"},"content":"                System.out.println(helpMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"beefham"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"beefham"},"content":"                // tasks.Task is added to task list","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"beefham"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"beefham"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"beefham"},"content":"                        tasks.Todo todo \u003d new tasks.Todo(next[1], false);","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"beefham"},"content":"                        taskList.add(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"beefham"},"content":"                        System.out.println(sepLine + \"\\n added: \" + todo + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"beefham"},"content":"                        System.out.println(\"You now have \" + taskList.size() + \" tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"beefham"},"content":"                        System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"beefham"},"content":"                    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"beefham"},"content":"                        // Add a deadline to the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"beefham"},"content":"                        String[] text \u003d next[1].split(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"beefham"},"content":"                        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"beefham"},"content":"                            String desc \u003d text[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"beefham"},"content":"                            LocalDate dueDate \u003d LocalDate.parse(text[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"beefham"},"content":"                            tasks.Deadline dl \u003d new tasks.Deadline(desc, false, dueDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"beefham"},"content":"                            taskList.add(dl);","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine + \"\\n added: \" + dl + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"beefham"},"content":"                            System.out.println(\"You now have \" + taskList.size() + \" tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"beefham"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"beefham"},"content":"                            throw new exceptions.MissingFieldException();","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"beefham"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"beefham"},"content":"                            System.out.println(\"Failed to parse date given\");","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"beefham"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"beefham"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"beefham"},"content":"                        // Add an event to the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"beefham"},"content":"                        String[] text \u003d next[1].split(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"beefham"},"content":"                        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"beefham"},"content":"                            String desc \u003d text[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"beefham"},"content":"                            String time \u003d text[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"beefham"},"content":"                            tasks.Event event \u003d new tasks.Event(desc, false, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"beefham"},"content":"                            taskList.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine + \"\\n added: \" + event + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"beefham"},"content":"                            System.out.println(\"You now have \" + taskList.size() + \" tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"beefham"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"beefham"},"content":"                            throw new exceptions.MissingFieldException();","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"beefham"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"beefham"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"beefham"},"content":"                        System.out.println(sepLine + \"\\n I did not understand that command.\"","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"beefham"},"content":"                                + \" Type \u0027help\u0027 for more info \\n\" + sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"beefham"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":180}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"import commands.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":" * This class is responsible for reading and writing to the file for a duke.Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"    private File taskFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"    Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"        String localDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"        this.taskFile \u003d new File(localDir + File.separator + filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"            taskFile.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"                System.out.println(\"Failed to create new file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"     * Takes in a line from the task file saved in disk and process it","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"     * @param taskLine A line from the file that is being read from.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"    private void process(String taskLine, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"        String[] parsedLine \u003d taskLine.split(\" \\\\| \", 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"beefham"},"content":"        String command \u003d parsedLine[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"beefham"},"content":"        Boolean isDone \u003d parsedLine[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"beefham"},"content":"        String next \u003d parsedLine[2];","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"beefham"},"content":"        if (command.equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"beefham"},"content":"            Todo todo \u003d new Todo(next, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"beefham"},"content":"            taskList.add(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"beefham"},"content":"        } else if (command.equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"beefham"},"content":"            String[] details \u003d next.split(\" \\\\| \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"beefham"},"content":"            String desc \u003d details[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"beefham"},"content":"            LocalDate dueDate \u003d LocalDate.parse(details[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"beefham"},"content":"            Deadline dl \u003d new Deadline(desc, isDone, dueDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"beefham"},"content":"            taskList.add(dl);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"beefham"},"content":"        } else if (command.equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"beefham"},"content":"            String[] details \u003d next.split(\" \\\\| \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"beefham"},"content":"            String desc \u003d details[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"beefham"},"content":"            String time \u003d details[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"beefham"},"content":"            Event e \u003d new Event(desc, isDone, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"beefham"},"content":"            taskList.add(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"beefham"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"beefham"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"beefham"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"beefham"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(this.taskFile))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"beefham"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"beefham"},"content":"            String line;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"beefham"},"content":"            while ((line \u003d br.readLine()) !\u003d null \u0026\u0026 !line.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"beefham"},"content":"                this.process(line, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"beefham"},"content":"            return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"beefham"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"beefham"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"beefham"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"beefham"},"content":"            System.out.println(\"IO Exception occurred\");","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"beefham"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"beefham"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"beefham"},"content":"            System.out.println(\"Invalid command found in file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"beefham"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"beefham"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"beefham"},"content":"            System.out.println(\"Invalid file format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"beefham"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"beefham"},"content":"    public void writeTasksToFile(TaskList taskList, File taskFile) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"beefham"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.taskFile));","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"beefham"},"content":"        for (int i \u003d 0; i \u003c taskList.numberOfTasks(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"beefham"},"content":"            String line \u003d taskList.getTask(i).saveText();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"beefham"},"content":"            writer.write(line);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"beefham"},"content":"        writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"beefham"},"content":"    public File getTaskFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"beefham"},"content":"        return this.taskFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":106}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import commands.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":" * This class encapsulates a duke.Duke task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":" * It is responsible for maintaining the tasks in an instance of duke.Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    // Default constructor","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    // If there is already a saved task list","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"    TaskList(ArrayList\u003cTask\u003e initialTaskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"        this.taskList \u003d initialTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"     * Adds a task to the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"     * Removes a task from the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"     * Get the task from the specified index","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"     * @param index The index of the task to get.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"beefham"},"content":"     * @return","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"beefham"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"beefham"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"beefham"},"content":"     * Returns the total number of tasks in the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"beefham"},"content":"     * @return Number of tasks in the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"beefham"},"content":"    public int numberOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"beefham"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":62}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import commands.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"import tasks.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":" * This class is responsible for the printing to console","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":" * and accepting responses from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":" * Responses are passed on to a parser which will parse the user input","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    private static final String SEP_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    private DukeParser parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"        this.parser \u003d new DukeParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"    public void greet() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"        System.out.println(\"Hello! I\u0027m Duke. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"                + \"What can I do for you? \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"                + SEP_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"    public void printHelp() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"        String helpMessage \u003d \"HELP \\n\" + SEP_LINE + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"                + \"Available commands: \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"                + \"\u0027help\u0027 - Opens this dialog. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"                + \"\u0027list\u0027 - Opens your list of tasks. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"                + \"\u0027todo (desc)\u0027 - Adds a todo item with the given description. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"                + \"\u0027deadline (desc) /by (due date)\u0027 - Adds a deadline item to your task list \"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"                + \"with the given description and due date. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"                + \"\u0027event (desc) /at (timing)\u0027 - Adds a event item to your task list \"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"                + \"with the given description and timing. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"                + \"\u0027done (x)\u0027 - Marks the task with number x as done \"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"                + \"according to the list given by the command \u0027list\u0027 \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"                + \"\u0027delete (x)\u0027 - Deletes the task with number x \"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"                + \"according to the list given by the command \u0027list\u0027 \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"                + \"\u0027bye\u0027 - Quits this program. \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"                + SEP_LINE + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"                + \"To use any command, follow the structure as shown, entering your values \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"                + \"in place of anything in brackets. \\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"beefham"},"content":"        System.out.println(helpMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"beefham"},"content":"    public void printSepLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"beefham"},"content":"        System.out.println(SEP_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"beefham"},"content":"    public void printAddTask(Task t) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"beefham"},"content":"        System.out.println(\"The following task has been added! \\n\" + t);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"beefham"},"content":"    public void printTaskDone(Task t, int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"beefham"},"content":"        System.out.println(\"The task has been marked as done! \\n\" + (index + 1) + \". \" + t);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"beefham"},"content":"    public void printDeleteTask(Task t, int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"beefham"},"content":"        System.out.println(\"The task has been removed! \\n\" + (index + 1) + \". \" + t);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"beefham"},"content":"    public void printUnknownCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"beefham"},"content":"        System.out.println(\"I did not understand that command. Type \u0027help\u0027 for more info.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"beefham"},"content":"    public void printFileWriteFail(File file) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"beefham"},"content":"        System.out.println(\"Failed to write to file at \" + file);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"beefham"},"content":"    public Command parseInput(String s) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"beefham"},"content":"        return this.parser.parse(s);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":77}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":" * This class is meant for exceptions that may occur","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":" * during the runtime of duke.Duke, when attempting to","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":" * parse the commands given.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":11}},{"path":"src/main/java/exceptions/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":" * This Exception is thrown when the description given","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":" * for a task is a blank String (using String.isBlank())","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"public class EmptyDescException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":9}},{"path":"src/main/java/exceptions/MissingFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":" * This Exception is thrown when either:","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":" * \"deadline\" is called without passing in a due date with \"/by\"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":" * or \"event\" is called without passing in a timing with \"/at\"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"public class MissingFieldException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":11}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    LocalDate dueDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    public Deadline(String desc, Boolean isDone, LocalDate time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"        this.dueDate \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    public String saveText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"        return \"D | \" + isDone + \" | \" + desc + \" | \" + dueDate + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"        return \"[D]\" + this.completionStatus() + desc + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"                + dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"beefham":26}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"    String time;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"    public Event(String desc, Boolean isDone, String time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    public String saveText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        return \"E | \" + isDone + \" | \" + desc + \" | \" + time + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"       return \"[E]\" + this.completionStatus() + desc + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"beefham":22}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import exceptions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":" * A tasks.Task object represent a task in duke.Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":" * A tasks.Task contains a description and a check for whether it has been done","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    // The string that describes the task","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    String desc;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    public Task(String desc, Boolean isDone) throws EmptyDescException {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        if (desc.isBlank()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"            throw new EmptyDescException();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"     * Sets the task as done","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"     * Sets the task as not done","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"    public void markAsUndone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"    String completionStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"    public String saveText() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"        return \"T | \" + isDone + \" | \" + desc + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"beefham"},"content":"        return this.completionStatus() + desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"beefham":51}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"    public Todo(String desc, Boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    public String saveText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"        return \"T | \" + isDone + \" | \" + desc + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        return \"[T]\" + this.completionStatus() + desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"beefham":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"        assertEquals(d.getNumberOfTasks(), 0);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":14}},{"path":"src/test/java/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    public void saveText_completedTodo_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"        Todo todo \u003d new Todo(\"Dummy description\", true);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"        assertEquals(todo.saveText(), \"T | 1 | Dummy description\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    public void markAsDone_newTodo_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        Todo todo \u003d new Todo(\"Test 2\", false);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"        assertEquals(todo.isDone, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"        assertEquals(todo.toString(), \"[T][X] Test 2\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"beefham":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"todo test1","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"deadline test2 /by Mon","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"event test3 /at August 2021","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beefham":1,"-":20}}]
