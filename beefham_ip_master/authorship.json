[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"T | 1 | test no file start","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"beefham":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"import java.time.format.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"    LocalDate dueDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    Deadline(String desc, Boolean isDone, LocalDate time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"        this.dueDate \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    public String saveText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"        return \"D | \" + isDone + \" | \" + desc + \" | \" + dueDate + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"        return \"[D]\" + this.completionStatus() + desc + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"                + dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"beefham":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"import java.io.File;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"     * Takes in a line from the task file saved in disk and process it","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"     * @param taskLine A line from the file that is being read from.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"    private static void process(String taskLine, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"        String[] parsedLine \u003d taskLine.split(\" \\\\| \", 3);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"        String command \u003d parsedLine[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"        Boolean isDone \u003d parsedLine[1].equals(\"1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"        String next \u003d parsedLine[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"        if (command.equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"            Todo todo \u003d new Todo(next, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"            taskList.add(todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"        } else if (command.equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"            String[] details \u003d next.split(\" \\\\| \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"            String desc \u003d details[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"            LocalDate dueDate \u003d LocalDate.parse(details[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"            Deadline dl \u003d new Deadline(desc, isDone, dueDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"            taskList.add(dl);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"        } else if (command.equals(\"E\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"            String[] details \u003d next.split(\" \\\\| \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"            String desc \u003d details[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"            String time \u003d details[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"            Event e \u003d new Event(desc, isDone, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"            taskList.add(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"beefham"},"content":"    private static void writeLineToFile(String line, File taskFile) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"beefham"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(taskFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"beefham"},"content":"        writer.write(line);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"beefham"},"content":"        writer.newLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"beefham"},"content":"        writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"beefham"},"content":"        // Initial values","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"beefham"},"content":"        String sepLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"beefham"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"beefham"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"beefham"},"content":"        String start \u003d \"Hello! I\u0027m Duke. \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"beefham"},"content":"                + \"What can I do for you? \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"beefham"},"content":"                + sepLine;","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"beefham"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"beefham"},"content":"        // Gets the task file and reads the lines","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"beefham"},"content":"        String localDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"beefham"},"content":"        File taskFile \u003d new File(localDir + File.separator + \"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"beefham"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"beefham"},"content":"            taskFile.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"beefham"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"beefham"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"beefham"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"beefham"},"content":"                System.out.println(\"Failed to create new file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"beefham"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(taskFile))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"beefham"},"content":"            String line;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"beefham"},"content":"            while ((line \u003d br.readLine()) !\u003d null \u0026\u0026 !line.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"beefham"},"content":"                Duke.process(line, taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"beefham"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"beefham"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"beefham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"beefham"},"content":"            System.out.println(\"IO Exception occurred\");","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"beefham"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"beefham"},"content":"            System.out.println(\"Invalid command found in file\");","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"beefham"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"beefham"},"content":"            System.out.println(\"Invalid file format\");","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"beefham"},"content":"        System.out.println(start);","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"beefham"},"content":"        // Main loop for commands","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"beefham"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"beefham"},"content":"            // split the input string into two parts:","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"beefham"},"content":"            // first part is the command (list, to-do, deadline, etc.)","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"beefham"},"content":"            // second part is any extra information based on what command was given","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"beefham"},"content":"            String[] next \u003d sc.nextLine().split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"beefham"},"content":"            String command \u003d next[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"beefham"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"beefham"},"content":"                System.out.println(sepLine + \"\\n\" + \"Bye. Hope to see you again soon!\" + \"\\n\" + sepLine);","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"beefham"},"content":"                isRunning \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"beefham"},"content":"                System.out.println(sepLine);","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"beefham"},"content":"                System.out.println(\"These are your tasks! \\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"beefham"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"beefham"},"content":"                    System.out.print(i + 1 + \". \" + taskList.get(i) + \"\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"beefham"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"beefham"},"content":"                System.out.println(sepLine);","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"beefham"},"content":"                System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"beefham"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"beefham"},"content":"                    // Mark a task as done","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"beefham"},"content":"                    // We assume the command is of the form \"done xxx\" where xxx is an integer","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"beefham"},"content":"                    Integer taskNum \u003d Integer.parseInt(next[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"beefham"},"content":"                    Task taskToComplete \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"beefham"},"content":"                    taskToComplete.markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"The task has been marked as done!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"beefham"},"content":"                    System.out.println(taskToComplete);","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"beefham"},"content":"                    StringBuilder textString \u003d new StringBuilder(100);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"beefham"},"content":"                    for (Task t : taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"beefham"},"content":"                        textString.append(t.saveText());","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"beefham"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"beefham"},"content":"                    Duke.writeLineToFile(textString.toString(), taskFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"beefham"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"It seems like you have entered an invalid number for done.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Please enter the task number as shown in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"beefham"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"That task number does not exist in your list of tasks.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"beefham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Failed to write to file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"beefham"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"beefham"},"content":"                System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"beefham"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"beefham"},"content":"                    Integer taskNum \u003d Integer.parseInt(next[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"beefham"},"content":"                    Task taskToDelete \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"The task has been deleted!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"beefham"},"content":"                    System.out.println(taskToDelete);","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"beefham"},"content":"                    taskList.remove(taskNum - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"beefham"},"content":"                    StringBuilder textString \u003d new StringBuilder(100);","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"beefham"},"content":"                    for (Task t : taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"beefham"},"content":"                        textString.append(t.saveText());","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"beefham"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"beefham"},"content":"                    Duke.writeLineToFile(textString.toString(), taskFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"beefham"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"It seems like you have entered an invalid number to delete.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Please enter the task number as shown in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"beefham"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"That task number does not exist in your list of tasks.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"beefham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Failed to write to file.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"beefham"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"beefham"},"content":"            } else if (command.equals(\"help\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"beefham"},"content":"                String helpMessage \u003d sepLine + \"\\n HELP \\n\" + sepLine + \"\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"beefham"},"content":"                        + \"Available commands: \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"beefham"},"content":"                        + \"\u0027help\u0027 - Opens this dialog. \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"beefham"},"content":"                        + \"\u0027list\u0027 - Opens your list of tasks. \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"beefham"},"content":"                        + \"\u0027todo (desc)\u0027 - Adds a todo item with the given description. \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"beefham"},"content":"                        + \"\u0027deadline (desc) /by (due date)\u0027 - Adds a deadline item to your task list \"","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"beefham"},"content":"                        + \"with the given description and due date. \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"beefham"},"content":"                        + \"\u0027event (desc) /at (timing)\u0027 - Adds a event item to your task list \"","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"beefham"},"content":"                        + \"with the given description and timing. \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"beefham"},"content":"                        + \"\u0027done (x)\u0027 - Marks the task with number x as done \"","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"beefham"},"content":"                        + \"according to the list given by the command \u0027list\u0027 \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"beefham"},"content":"                        + \"\u0027delete (x)\u0027 - Deletes the task with number x \"","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"beefham"},"content":"                        + \"according to the list given by the command \u0027list\u0027 \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"beefham"},"content":"                        + \"\u0027bye\u0027 - Quits this program. \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"beefham"},"content":"                        + sepLine + \"\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"beefham"},"content":"                        + \"To use any command, follow the structure as shown, entering your values \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"beefham"},"content":"                        + \"in place of anything in brackets. \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"beefham"},"content":"                        + sepLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"beefham"},"content":"                System.out.println(helpMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"beefham"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"beefham"},"content":"                // Task is added to task list","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"beefham"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"beefham"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"beefham"},"content":"                        Todo todo \u003d new Todo(next[1], false);","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"beefham"},"content":"                        taskList.add(todo);","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"beefham"},"content":"                        System.out.println(sepLine + \"\\n added: \" + todo + \"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"beefham"},"content":"                        System.out.println(\"You now have \" + taskList.size() + \" tasks\");","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"beefham"},"content":"                        System.out.println(sepLine);","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"beefham"},"content":"                    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":191,"author":{"gitId":"beefham"},"content":"                        // Add a deadline to the task list","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"beefham"},"content":"                        String[] text \u003d next[1].split(\" /by \");","lastModifiedDate":"2021-08-16"},{"lineNumber":193,"author":{"gitId":"beefham"},"content":"                        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"beefham"},"content":"                            String desc \u003d text[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":195,"author":{"gitId":"beefham"},"content":"                            LocalDate dueDate \u003d LocalDate.parse(text[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"beefham"},"content":"                            Deadline dl \u003d new Deadline(desc, false, dueDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"beefham"},"content":"                            taskList.add(dl);","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine + \"\\n added: \" + dl + \"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"beefham"},"content":"                            System.out.println(\"You now have \" + taskList.size() + \" tasks\");","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine);","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"beefham"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"beefham"},"content":"                            throw new MissingFieldException();","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"beefham"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"beefham"},"content":"                            System.out.println(\"Failed to parse date given\");","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"beefham"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"beefham"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"beefham"},"content":"                        // Add an event to the task list","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"beefham"},"content":"                        String[] text \u003d next[1].split(\" /at \");","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"beefham"},"content":"                        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"beefham"},"content":"                            String desc \u003d text[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"beefham"},"content":"                            String time \u003d text[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"beefham"},"content":"                            Event event \u003d new Event(desc, false, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"beefham"},"content":"                            taskList.add(event);","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine + \"\\n added: \" + event + \"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":215,"author":{"gitId":"beefham"},"content":"                            System.out.println(\"You now have \" + taskList.size() + \" tasks\");","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"beefham"},"content":"                            System.out.println(sepLine);","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"beefham"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"beefham"},"content":"                            throw new MissingFieldException();","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"beefham"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"beefham"},"content":"                    } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":221,"author":{"gitId":"beefham"},"content":"                        System.out.println(sepLine + \"\\n I did not understand that command.\"","lastModifiedDate":"2021-08-16"},{"lineNumber":222,"author":{"gitId":"beefham"},"content":"                                + \" Type \u0027help\u0027 for more info \\n\" + sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":223,"author":{"gitId":"beefham"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":224,"author":{"gitId":"beefham"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"beefham"},"content":"                        StringBuilder textString \u003d new StringBuilder(100);","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"beefham"},"content":"                        for (Task t : taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"beefham"},"content":"                            textString.append(t.saveText());","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"beefham"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"beefham"},"content":"                        Duke.writeLineToFile(textString.toString(), taskFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"beefham"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"beefham"},"content":"                        throw new IOException();","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"beefham"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":233,"author":{"gitId":"beefham"},"content":"                } catch (MissingFieldException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Please fill in a timing for your deadline / event.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Use \u0027/by\u0027 for deadlines and \u0027/at\u0027 for events.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"beefham"},"content":"                } catch (EmptyDescException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Please fill in a description for your task.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"beefham"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"It seems like your command was not formatted properly.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"beefham"},"content":"                    System.out.println(sepLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"beefham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"beefham"},"content":"                    System.out.println(\"Failed to save to file.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"beefham"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"beefham"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":247,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":248,"author":{"gitId":"beefham"},"content":"        sc.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"beefham":246,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":" * This class is meant for exceptions that may occur","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":" * during the runtime of Duke, when attempting to","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":" * parse the commands given.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":9}},{"path":"src/main/java/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":" * This Exception is thrown when the description given","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":" * for a task is a blank String (using String.isBlank())","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"public class EmptyDescException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"    String time;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"    Event(String desc, Boolean isDone, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    public String saveText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"        return \"E | \" + isDone + \" | \" + desc + \" | \" + time + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"       return \"[E]\" + this.completionStatus() + desc + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"beefham":20}},{"path":"src/main/java/MissingFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":" * This Exception is thrown when either:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":" * \"deadline\" is called without passing in a due date with \"/by\"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":" * or \"event\" is called without passing in a timing with \"/at\"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"public class MissingFieldException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":" * A Task object represent a task in Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":" * A Task contains a description and a check for whether it has been done","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    // The string that describes the task","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"    String desc;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"    boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"    Task(String desc, Boolean isDone) throws EmptyDescException {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"        if (desc.isBlank()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"            throw new EmptyDescException();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"beefham"},"content":"     * Sets the task as done","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"beefham"},"content":"    void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"beefham"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"beefham"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"beefham"},"content":"     * Sets the task as not done","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"beefham"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"beefham"},"content":"    void markAsUndone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"beefham"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"beefham"},"content":"    String completionStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"beefham"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"beefham"},"content":"    String saveText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"beefham"},"content":"        return \"T | \" + isDone + \" | \" + desc + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"beefham"},"content":"        return this.completionStatus() + desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"beefham":47}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"    Todo(String desc, Boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"        super(desc, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"    public String saveText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"beefham"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"beefham"},"content":"        return \"T | \" + isDone + \" | \" + desc + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"beefham"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"beefham"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"beefham"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"beefham"},"content":"        return \"[T]\" + this.completionStatus() + desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"beefham"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"beefham"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"beefham":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beefham"},"content":"todo test1","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"beefham"},"content":"deadline test2 /by Mon","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"beefham"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"beefham"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"beefham"},"content":"event test3 /at August 2021","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"beefham"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"beefham"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"beefham"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"beefham":8}}]
