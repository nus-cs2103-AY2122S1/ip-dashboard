[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"# Duke","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"Duke is an application that allows you to manage your tasks more efficiently!!! üòÑ","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"* Text-based","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"* Quick and easy to use","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"* ~Easy~ Very easy to learn!","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"* USE TODAY!!! :joy: :joy: :joy:","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"## Features","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"- [X] Add tasks such as todos, deadlines or events","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"- [X] Mark them as done","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"- [X] Find tasks using specific key words","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"- [X] Delete tasks","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"- [X] List out all your tasks","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"## Setup","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"1. Click [here](https://github.com/mukundrs/ip/releases/tag/A-Jar) and download the jar file.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"2. Run java -jar ip.jar in command prompt. Yoou should see this output: ","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"   _______________________________________________","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"   Hello!","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"   ","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"   I\u0027m Duke! How can I help you?","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"   _______________________________________________","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"```java","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        Duke duke \u003d new Duke(\"tasklist.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"        duke.run();","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mukundrs":32,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":" * Class that contains Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"public class Duke {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"    /** List of tasks that is used in Duke */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    /** The interactions used by Duke with the user */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"    /** Storage for Duke to store data */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    private DukeStorage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"     * Constructor that initializes the tasklist, ui and storage of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     * @param path The destination of the stored data","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"    public Duke(String path) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"        this.storage \u003d new DukeStorage(path);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"            this.taskList \u003d this.storage.readTasks();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"            ui.loadErrorMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"     * Method that starts Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    public void run() {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        ui.startMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"                String strCommand \u003d scanner.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"                Command command \u003d Parser.parse(strCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"                ui.errorMessage(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"     * Main method that starts Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"     * @param args Command line for arguments passed","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"        Duke duke \u003d new Duke(\"tasklist.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"mukundrs"},"content":"        duke.run();","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":68}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":" * Exception thrown by Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"     * Constructor for DukeException","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"     * @param errorMessage String error message outputted by the error","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mukundrs":17}},{"path":"src/main/java/duke/DukeStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":" * Class that defines the storage for the data needed for Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"public class DukeStorage {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"    /** The destination of the stored data */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    public String path;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"     * Constructor that initializes the storage for Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     * @param path The destination of the stored data","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"    public DukeStorage(String path) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"     * Method to read tasks from storage","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"     * @return List of tasks read from storage","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"     * @throws DukeException Error thrown if file cannot be read","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    public TaskList readTasks() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"                TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"                String data \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"                while(sc.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"                    data +\u003d sc.nextLine() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"                if (data.equals(\"\")){","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"                    sc.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"                    return new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"                String[] strArray \u003d data.split(\"\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"                for (String str : strArray) {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"                    String[] parseTask \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"                    String taskType \u003d parseTask[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"                    boolean isDone \u003d parseTask[1].equals(\"1\") ? true : false;","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"                    String taskDescr \u003d parseTask[2];","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"                        Todo task \u003d new Todo(taskDescr);","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"                        if (isDone) {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"mukundrs"},"content":"                            task.setDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"                        }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"                        taskList.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"                    } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"                        Deadline task \u003d new Deadline(taskDescr, parseTask[3]);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"                        if (isDone) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"mukundrs"},"content":"                            task.setDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"                        }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"mukundrs"},"content":"                        taskList.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"mukundrs"},"content":"                    } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"mukundrs"},"content":"                        Event task \u003d new Event(taskDescr, parseTask[3]);","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"mukundrs"},"content":"                        if (isDone) {","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"mukundrs"},"content":"                            task.setDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"mukundrs"},"content":"                        }","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"mukundrs"},"content":"                        taskList.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"mukundrs"},"content":"                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"mukundrs"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"mukundrs"},"content":"                sc.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"mukundrs"},"content":"                return taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"mukundrs"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"File error! Please try again.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"mukundrs"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"mukundrs"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"mukundrs"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"mukundrs"},"content":"                return new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"mukundrs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"File error! Please try again.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"mukundrs"},"content":"     * Method to write task data into storage","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks to be written","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"mukundrs"},"content":"     * @throws DukeException Error thrown if file cannot be written","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"mukundrs"},"content":"    public void writeTasks(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"mukundrs"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"mukundrs"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"mukundrs"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"mukundrs"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"mukundrs"},"content":"            String data \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"mukundrs"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"mukundrs"},"content":"                data +\u003d taskList.get(i).getFileString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"mukundrs"},"content":"            FileWriter w \u003d new FileWriter(file);","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"mukundrs"},"content":"            w.write(data);","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"mukundrs"},"content":"            w.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"mukundrs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"mukundrs"},"content":"            throw new DukeException(\"File error! Please try again.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"mukundrs":127}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.commands.*;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" * Class that parses incoming input","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"     * Method that parses incoming input and returns relevant commands","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"     * @param inputString The input from Duke user","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"     * @return Command to be executed","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     * @throws DukeException Error thrown if there is an invalid input","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"    public static Command parse(String inputString) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"        String command \u003d inputString.split(\" \")[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"        if (inputString.equals(\"bye\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"        } else if (inputString.equals(\"list\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"        } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"                String[] inputStringArr \u003d inputString.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"                if (inputStringArr.length !\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"                    throw new DukeException(\"OOPS!!! Invalid input.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"                return new DoneCommand(Integer.parseInt(inputStringArr[1]));","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input a number after done.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"            String[] inputStringArr \u003d inputString.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"            if (inputStringArr.length \u003c 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input description.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"            String todoDescr \u003d inputString.substring(5);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"            return new TodoCommand(todoDescr);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"            String[] inputStringArr \u003d inputString.split(\" /by \");","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"            if (inputStringArr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input a description\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"            if (inputStringArr.length !\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input a valid date.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"            String deadlineDescr \u003d inputStringArr[0].substring(9);","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(inputStringArr[1], formatter);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"            return new DeadlineCommand(deadlineDescr, dateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"mukundrs"},"content":"            String[] inputStringArr \u003d inputString.split(\" /at \");","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"            if (inputStringArr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input a description\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"mukundrs"},"content":"            if (inputStringArr.length !\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input a valid date.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"mukundrs"},"content":"            String eventDescr \u003d inputStringArr[0].substring(6);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"mukundrs"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(inputStringArr[1], formatter);","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"mukundrs"},"content":"            return new EventCommand(eventDescr, dateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"mukundrs"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"mukundrs"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"mukundrs"},"content":"                String[] inputStringArr \u003d inputString.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"mukundrs"},"content":"                if (inputStringArr.length !\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"mukundrs"},"content":"                    throw new DukeException(\"OOPS!!! Invalid Input.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"mukundrs"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"mukundrs"},"content":"                return new DeleteCommand(Integer.parseInt(inputStringArr[1]));","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"mukundrs"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input a number after delete.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"mukundrs"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"mukundrs"},"content":"            String[] inputStringArr \u003d inputString.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"            if (inputStringArr.length \u003c 2) {","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"mukundrs"},"content":"                throw new DukeException(\"OOPS!!! Please input a string after find.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"mukundrs"},"content":"            return new FindCommand(inputString.substring(5));","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"mukundrs"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"mukundrs"},"content":"            throw new DukeException(\"Invalid input. Please try again\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":105}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":" * Class that contains the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"    /** ArrayList of tasks */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    /** Counter to track tasklist size */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    private int counter \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     * Constructor to initialize tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     * Method to add task to tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"     * @param task The task to be added to tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"        if (!taskList.contains(task)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"            this.taskList.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"            this.counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     * Method to delete task from tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"     * @param index The index of the task in the tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"     * @return Deleted task","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"        Task deletedTask \u003d this.taskList.get(index - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"        this.taskList.remove(index - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"        this.counter--;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"        return deletedTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"     * Method to get task from tasklist given the index","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"     * @param index The index of the task in tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"     * @return The required task","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"     * Method to get size of tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"     * @return Integer size of the tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"    public int size() {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"        return this.counter;","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"     * Method to get the tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"     * @return The tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"mukundrs"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"mukundrs"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"mukundrs"},"content":"     * Method to set specified task as done","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"mukundrs"},"content":"     * @param index The index of the task to be set as done in tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"mukundrs"},"content":"     * @return The task set as done","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"mukundrs"},"content":"    public Task setDone(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"mukundrs"},"content":"        this.taskList.get(index - 1).setDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"mukundrs"},"content":"        return this.taskList.get(index - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"mukundrs"},"content":"     * Method to find all tasks whose description match the input string","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"mukundrs"},"content":"     * @param searchedString The input string","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"mukundrs"},"content":"     * @return Tasklist of all tasks whose description match input string","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"mukundrs"},"content":"    public TaskList findTasks(String searchedString) {","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"        String[] searchedStrArr \u003d searchedString.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"mukundrs"},"content":"        TaskList tasksFound \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"mukundrs"},"content":"        for (int i \u003d 0; i \u003c searchedStrArr.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"mukundrs"},"content":"            String string \u003d searchedStrArr[i];","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"mukundrs"},"content":"            for (int j \u003d 0; j  \u003c taskList.size(); j++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"mukundrs"},"content":"                Task task \u003d taskList.get(j);","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"mukundrs"},"content":"                if (task.getDescription().contains(string)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"mukundrs"},"content":"                    tasksFound.add(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"mukundrs"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"mukundrs"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"mukundrs"},"content":"        return tasksFound;","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"mukundrs"},"content":"     * String representation of the tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of the tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"mukundrs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"mukundrs"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"mukundrs"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"mukundrs"},"content":"            tasks +\u003d (i + 1) + \". \" + this.taskList.get(i) + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"mukundrs"},"content":"        return tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":129}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":" * Class for the ui responsible for interactions with the user","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"    private static String DIVIDER \u003d \"_______________________________________________\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"     * Constructor that initializes ui","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    public Ui(){}","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     * Method that prints the start message","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    public void startMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"        String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"                + \"\\nHello!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"                + LOGO","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"                + \"\\nI\u0027m Duke! How can I help you?\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     * Method that prints the exit message","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    public void byeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        System.out.println(\"Bye! See you next time!\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"     * Method that prints message stating that task has been added","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The tasklist that the task has been added to","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"     * @param task The task added","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"    public void addedMessage(TaskList taskList, Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"                + \"\\t\"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"                + task.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"                +\"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"                + taskList.size()","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"                +\" tasks in your list\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"     * Method that prints message stating that task has been deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The tasklist that the task has been deleted from","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"     * @param task The task deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"    public void deleteMessage(TaskList taskList, Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"                + \"\\t\"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"mukundrs"},"content":"                + task.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"mukundrs"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"mukundrs"},"content":"                + taskList.size()","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"mukundrs"},"content":"                + \" tasks in your list\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"mukundrs"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"mukundrs"},"content":"     * Method that prints message stating that task has been set as done","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"mukundrs"},"content":"     * @param task The task set as done","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"mukundrs"},"content":"    public void doneMessage(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"mukundrs"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"mukundrs"},"content":"                + \"\\t\"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"mukundrs"},"content":"                + task.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"mukundrs"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"mukundrs"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"mukundrs"},"content":"     * Method that prints out all tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks to be printed","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"mukundrs"},"content":"    public void listTasks(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"mukundrs"},"content":"        System.out.println(taskList.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"mukundrs"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"mukundrs"},"content":"     * Method that prints the list of tasks matching input string","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"mukundrs"},"content":"     * @param taskList List of tasks matching input string","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"mukundrs"},"content":"    public void listFoundTasks(TaskList taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"mukundrs"},"content":"        System.out.println(\"Here are your matching entries!\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"mukundrs"},"content":"                + taskList.toString()","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"mukundrs"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"mukundrs"},"content":"     * Method that prints divider","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"mukundrs"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"mukundrs"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"mukundrs"},"content":"     * Method that prints file load error message","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"mukundrs"},"content":"    public void loadErrorMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"mukundrs"},"content":"        System.out.println(\"File could not be read.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER);","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"mukundrs"},"content":"     * Method that prints error message","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"mukundrs"},"content":"     * @param error Error whose message needs to be printed","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"mukundrs"},"content":"    public void errorMessage(DukeException error) {","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"mukundrs"},"content":"        System.out.println(error.getMessage()","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"mukundrs"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"mukundrs"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":146}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" * An abstract class that all commands inherit from","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"     * Method to execute the command that is called","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     * @throws DukeException An error thrown if there are any issues while executing the command","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"    public abstract void execute(TaskList taskList, Ui ui, DukeStorage storage) throws DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns true if Duke is to be exited and false if otherwise","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":30}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":" * Class that contains the deadline command","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    /** The description of the deadline command */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    private String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    /** The date and time for the deadline command */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the deadline command class","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     * @param description The description of the deadline command","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     * @param byDateTime The date and time for the deadline command","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    public DeadlineCommand(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"     * Method to execute deadline command","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"        Deadline deadline \u003d new Deadline(description, byDateTime.format(formatter));","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"        taskList.add(deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"        ui.addedMessage(taskList, deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns false","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":58}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" * Class that contains the delete command","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"    /** The index of the task to be deleted */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    private int index;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the delete command class","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     * @param index The index of the task to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     * Method to execute the delete command","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"        if (this.index \u003c 1 || this.index \u003e taskList.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid index number :(\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"        Task deleted \u003d taskList.delete(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"        ui.deleteMessage(taskList, deleted);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns false","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":54}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" * Class that contains the done command","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"    /** The index of the task to be marked done */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    private int index;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the done command class","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     * @param index The index of the task to be marked done","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     * Method to execute the done command","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"        if (this.index \u003c 1 || this.index \u003e taskList.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid index number :(\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"        Task done \u003d taskList.setDone(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"        ui.doneMessage(done);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns false","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":54}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":" * Class that contains the event command","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    /** The description of the event command */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    private String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    /** The date and time for the event command */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"    private LocalDateTime atDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the event command class","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     * @param description The description of the event command","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     * @param atDateTime The date and time for the event command","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    public EventCommand(String description, LocalDateTime atDateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"     * Method that executes the event command","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"        Event event \u003d new Event(description, atDateTime.format(formatter));","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"        taskList.add(event);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"        ui.addedMessage(taskList, event);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns false","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":58}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" * Class that contains the exit command","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the exit command class","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    public ExitCommand(){}","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     * Method that executes the exit command","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"            ui.byeMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"            storage.writeTasks(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     * Method that returns boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns true","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"        return true;","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":47}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" * Class that contains find command","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    /** Input string to be searched for in the tasklist */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"    private String searchedString;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the find command class","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     * @param searchedString Input string to be searched for in the tasklist","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"    public FindCommand(String searchedString) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"        this.searchedString \u003d searchedString;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     * Method to execute find command","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"        ui.listFoundTasks(taskList.findTasks(searchedString));","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns false","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"        return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"mukundrs":47}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":" * Class that contains the list command","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the list command class","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    public ListCommand(){};","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     * Method that executes the list command","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"        ui.listTasks(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns false","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":40}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":" * Class that contains the to-do command","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    /** The description of the to-do command */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"    private String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the to do command class","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     * @param description The description of the to-do command","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     * Method to execute the to-do command","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"     * @param taskList The list of tasks that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"     * @param ui The UI that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"     * @param storage The storage that is associated with the instance of Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"    public void execute(TaskList taskList, Ui ui, DukeStorage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"        Todo todo \u003d new Todo(this.description);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"        taskList.add(todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"        ui.addedMessage(taskList, todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"     * Method to return boolean depending on if Duke is to be exited","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"     * @return boolean that returns false","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":49}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":" * Class that initializes the deadline task","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"    /** String that defines the date and time for the deadline */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the deadline class","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"     * @param description String that defines the description of the task","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     * @param by String that defines the date and time for the deadline","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     * the task data to be written into the storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be written into storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"        return \"D | \" + i + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"     * the task data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mukundrs":45}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":" * Class that initializes the event task","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"    /** String that defines date and time for event */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"     * Constructor for event task class","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"     * @param description String that defines the description of the task","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     * @param at String that defines date and time for event","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     * the task data to be written into the storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be written into storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"        return \"E | \" + i + \" | \" + this.description + \" | \" + this.at;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"     * the task data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mukundrs":45}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":" * Class that initializes a task","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"    /** String for description of the task */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"    /** Boolean that states if the task is done or not */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"     * Constructor for the task class","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"     * @param description String for the description of the task","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"     * Method to get task description","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"     * @return Task description string","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"        return this.description;","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"     * Method that returns whether the task has been done or not","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"     * @return String \"X\" if task is done and \" \" if it is not done","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"     * Method that returns whether the task has been done or not","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"     * @return String \"X\" if task is done and \" \" if it is not done","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"     * the task data to be written into the storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be written into storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"        return \"T | \" + i + \" | \" + this.description;","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"     * the task data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mukundrs":72}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":" * Class that initializes the to-do task","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"     * Constructor for to-do task class","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"     * @param description String that defines the description of the task","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"     * the task data to be written into the storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be written into storage file","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"        return \"T | \" + i + \" | \" + this.description;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"     * Method that returns the string representation of","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"     * the task data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"     * @return String representation of data to be outputted","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mukundrs":40}},{"path":"src/test/java/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.DukeStorage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"public class CommandTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    public void todoCommandTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"        DukeStorage storage \u003d new DukeStorage(\"tasklist.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"        TodoCommand todo \u003d new TodoCommand(\"test todo\");","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"        todo.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"        assertEquals(\"1. [T][ ] test todo\\n\", taskList.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    public void deadlineCommandTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"        DukeStorage storage \u003d new DukeStorage(\"tasklist.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"        DeadlineCommand deadline \u003d new DeadlineCommand(\"test deadline\",","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"                LocalDateTime.of(2021,01,12,01,00));","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"        deadline.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"        assertEquals(\"1. [D][ ] test deadline (by: Jan 12 2021 01:00)\\n\", taskList.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    public void eventCommandTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"        DukeStorage storage \u003d new DukeStorage(\"tasklist.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"        EventCommand event \u003d new EventCommand(\"test event\",","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"                LocalDateTime.of(2021,01,12,01,00));","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"        event.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"        assertEquals(\"1. [E][ ] test event (at: Jan 12 2021 01:00)\\n\", taskList.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":53}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"    public void todoTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"        Todo todo \u003d new Todo(\"test todo\");","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"        assertEquals(\"T | 0 | test todo\", todo.getFileString());","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"    public void deadlineTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"        Deadline deadline \u003d new Deadline(\"test deadline\", \"Jan 12 2021 01:00\");","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"        assertEquals(\"D | 0 | test deadline | Jan 12 2021 01:00\", deadline.getFileString());","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    public void eventTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"        Event event \u003d new Event(\"test event\",\"Jan 12 2021 01:00\");","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"        assertEquals(\"E | 0 | test event | Jan 12 2021 01:00\", event.getFileString());","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":27}},{"path":"tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"D | 0 | return book | Sep 12 2021 12:00","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mukundrs":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mukundrs":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mukundrs":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mukundrs":1,"-":37}}]
