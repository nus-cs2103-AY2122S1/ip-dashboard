[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"plugins {","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"repositories {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"dependencies {","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"    String javaFxVersion \u003d \"11\"","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"test {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"    testLogging {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"        showExceptions true","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"        showCauses true","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"        showStackTraces true","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"application {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"    mainClassName \u003d \"duke.Ui.Ui\"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"javafx {","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"    version \u003d \"17\"","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"run{","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"davelowqx":55}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"@rem","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"@rem","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"@rem","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"@rem","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"@rem","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"@rem","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"@rem","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"@rem Find java.exe","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"echo.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"echo.","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"goto fail","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"echo.","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"echo.","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"davelowqx"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"davelowqx"},"content":"goto fail","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"davelowqx"},"content":":execute","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"davelowqx"},"content":"@rem Setup the command line","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"davelowqx"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"davelowqx"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"davelowqx"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"davelowqx"},"content":":end","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"davelowqx"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"davelowqx"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"davelowqx"},"content":":fail","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"davelowqx"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"davelowqx"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"davelowqx"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"davelowqx"},"content":"exit /b 1","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"davelowqx"},"content":":mainEnd","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"davelowqx"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"davelowqx"},"content":":omega","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"davelowqx":89}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"public enum Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"    EXIT,","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"    CREATE_DEADLINE,","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"    CREATE_EVENT,","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"    CREATE_TODO,","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"    READ,","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"    UPDATE_MARKASDONE,","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"    DELETE,","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"    FIND,","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"    SNOOZE","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"davelowqx":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import java.util.List;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"import static javafx.application.Application.launch;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":" * Duke is the main entity coordinating the user interface, program state, persistent storage and list of tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"    public Duke() throws java.io.IOException {","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"        this.storage \u003d new Storage( \"data/tasks.txt\");","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"    public void init() throws DukeException, java.io.IOException {","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"        ArrayList\u003cString\u003e lines \u003d this.storage.readFile();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"            this.tasks.addTaskFromRepr(line);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"        Task t;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"        int i;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"            Pair p \u003d Parser.parseInput(userInput);","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"            Command cmd \u003d p.getCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"            List\u003cString\u003e varargs \u003d p.getList();","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"            switch (cmd) {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"            case EXIT:","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"            case READ:","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"                return this.tasks.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"            case FIND:","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"                TaskList filteredTasks \u003d this.tasks.filter(varargs.get(0));","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"                return String.format(\"Here are the matching tasks in your list:\\n%s\",","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"                    filteredTasks.toString());","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"            case UPDATE_MARKASDONE:","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"                i \u003d Integer.parseInt(varargs.get(0));","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"                t \u003d this.tasks.markAsComplete(i);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"                this.storage.writeFile(this.tasks.toRepr());","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"                return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", t);","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"            case DELETE:","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"                i \u003d Integer.parseInt(varargs.get(0));","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"                t \u003d this.tasks.deleteTask(i);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"                this.storage.writeFile(this.tasks.toRepr());","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"                return String.format(\"Noted. I\u0027ve removed this task:\\n%s\", t);","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"            case SNOOZE:","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"                i \u003d Integer.parseInt(varargs.get(0));","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"                int numberOfDays \u003d Integer.parseInt(varargs.get(1));","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"                t \u003d this.tasks.snoozeTask(i, numberOfDays);","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"                this.storage.writeFile(this.tasks.toRepr());","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"                return String.format(\"Noted. I\u0027ve snoozed this task:\\n%s\\nfor %d days\", t, numberOfDays);","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"            case CREATE_DEADLINE:","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"davelowqx"},"content":"                t \u003d new Task.Deadline(false, varargs.get(0), varargs.get(1));","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"davelowqx"},"content":"                this.tasks.addTask(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"davelowqx"},"content":"                this.storage.appendFile(t.getRepr());","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"davelowqx"},"content":"                return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n\",","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"davelowqx"},"content":"                        t, tasks.numberOfTasks());","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"davelowqx"},"content":"            case CREATE_EVENT:","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"davelowqx"},"content":"                t \u003d new Task.Event(false, varargs.get(0), varargs.get(1));","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"davelowqx"},"content":"                this.tasks.addTask(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"davelowqx"},"content":"                this.storage.appendFile(t.getRepr());","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"davelowqx"},"content":"                return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n\",","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"davelowqx"},"content":"                        t, tasks.numberOfTasks());","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"davelowqx"},"content":"            case CREATE_TODO:","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"davelowqx"},"content":"                t \u003d new Task.Todo(false, varargs.get(0));","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"davelowqx"},"content":"                this.tasks.addTask(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"davelowqx"},"content":"                this.storage.appendFile(t.getRepr());","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"davelowqx"},"content":"                return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n\",","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"davelowqx"},"content":"                        t, tasks.numberOfTasks());","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"davelowqx"},"content":"            default:","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.UnknownInputException();","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"davelowqx"},"content":"        } catch (DukeException | java.io.IOException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"davelowqx"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"davelowqx":86,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"    public DukeException(String s) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"        super(\"OOPS!!! \" + s);","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"    public static class EmptyTaskDescriptionException extends DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"        public EmptyTaskDescriptionException() {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"            super(\"The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"    public static class UnknownInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"        public UnknownInputException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"            super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"    public static class MissingArgumentException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"        public MissingArgumentException(String arg) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"            super(\"Missing argument(s): \" +  arg);","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"    public static class InvalidReprException extends DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"        public InvalidReprException(String s) {","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"            super(\"Invalid repr: \" + s);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"    public static class DateException extends DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"        public DateException() {","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"            super(\"I cannot snooze this event! :(\");","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"davelowqx":35}},{"path":"src/main/java/duke/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"import java.util.List;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":" * Pair encapsulates a Command Enum value and a List of string arguments, facilitating communication between classes.","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"public class Pair {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"    private Command cmd;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"    private List\u003cString\u003e lst;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"    public Pair(Command cmd, List\u003cString\u003e lst) {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"        assert cmd !\u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"        assert lst !\u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"        this.lst \u003d lst;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"    public Command getCommand() {","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"        return this.cmd;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    public java.util.List\u003cString\u003e getList() {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"        return this.lst;","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"davelowqx":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import java.util.List;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"public abstract class Parser {","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"     * Parses user input and returns the command with the supplied arguments","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"     * @param input a line of string from stdin","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"     * @return a pair Comprised of a Command and a List of arguments","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"     * @throws DukeException if the input is invalid","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"    public static Pair parseInput(String input) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"        if (input.matches(\"bye\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.EXIT, List.of());","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"find.*\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"            if (!input.matches(\"find .+\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.MissingArgumentException(\"keyword to look for\");","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.FIND, List.of(input.substring(\"find \".length())));","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"list\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.READ, List.of());","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"done.*\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"            if (!input.matches(\"done \\\\d+\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.MissingArgumentException(\"index of task to be marked as done\");","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.UPDATE_MARKASDONE,","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"                    List.of(input.substring(\"done \".length())));","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"delete.*\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"            if (!input.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.MissingArgumentException(\"index of task to be deleted\");","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.DELETE, List.of(","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"                    input.substring(\"delete \".length())));","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"snooze.*\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"            if (!input.matches(\"snooze \\\\d+ \\\\d+\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.MissingArgumentException(\"index of task, number of days for task to be snoozed\");","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.SNOOZE, Arrays.asList(input.split(\" \")).subList(1,3));","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"event.*\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"            int k \u003d input.indexOf(\"/at\");","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"            if (k \u003c 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.MissingArgumentException(\"/at\");","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.CREATE_EVENT,","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"                    List.of(input.substring(\"event\".length(), k).trim(),","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"                    input.substring(k + 3).trim()));","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"deadline.*\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"            int k \u003d input.indexOf(\"/by\");","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"            if (k \u003c 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.MissingArgumentException(\"/by\");","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"            return new Pair(Command.CREATE_DEADLINE,","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"                    List.of(","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"                        input.substring(\"deadline\".length(), k).trim(),","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"                        input.substring(k + 3).trim()));","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"        } else if (input.matches(\"todo.*\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"            return new Pair(","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"                    Command.CREATE_TODO,","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"                    List.of(input.substring(\"todo\".length())));","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"            throw new DukeException.UnknownInputException();","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"davelowqx":65}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"import java.io.File;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":" * Storage is concerned with the persisting of the program state in a specified location of the computer\u0027s storage","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"public class Storage {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"    File file;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"    public Storage(String filePath) throws java.io.IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"            f.createNewFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"        this.file \u003d f;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"     * reads file line by line","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"     * @return ArrayList of lines read from file","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"     * @throws java.io.IOException if there is error accessing file","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"    public ArrayList\u003cString\u003e readFile() throws java.io.IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"        Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"            arr.add(s.nextLine());","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"        return arr;","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"     * writes to file line by line","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"     * @param lines ArrayList of lines to be written to file","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"     * @throws java.io.IOException if there is error accessing file","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"    public void writeFile(ArrayList\u003cString\u003e lines) throws java.io.IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"        FileWriter fw \u003d new FileWriter(this.file, false);","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"        for (String line: lines) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"            data +\u003d (line + \"\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"        fw.write(data);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"        fw.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"     * appends line to file","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"     * @param line to be appended to file","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"     * @throws java.io.IOException","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"    public void appendFile(String line) throws java.io.IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"        FileWriter fw \u003d new FileWriter(this.file, true);","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"        fw.write(line); // write each task","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"        fw.write(\"\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"        fw.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"davelowqx":62}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":" * Task is a base class encapsulating a description and its completion status","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"    protected String desc;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"    protected boolean isComplete;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"    public Task(boolean isComplete, String desc) throws DukeException.EmptyTaskDescriptionException {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"        this.desc \u003d desc.trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"        if (desc.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"            throw new DukeException.EmptyTaskDescriptionException();","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"    public void markAsComplete() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"    public String getRepr() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"        return String.format(\"%d|%s\", this.isComplete ? 1 : 0, this.desc);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"    };","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"    public static Task fromRepr(String s) throws DukeException.InvalidReprException, DukeException.EmptyTaskDescriptionException {","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"        if (!s.matches(\"[TED][|][01][|].+[|].*\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"            throw new DukeException.InvalidReprException(s);","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"        String[] arr \u003d s.split(\"[|]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"        char ch \u003d arr[0].charAt(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"        boolean isComplete \u003d arr[1].charAt(0) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"        String desc \u003d arr[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"        String extra \u003d arr[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"        Task t;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"        switch (ch) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"            t \u003d new Event(isComplete, desc, extra);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"            t \u003d new Deadline(isComplete, desc, extra);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"            t \u003d new Todo(isComplete, desc);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"            throw new DukeException.InvalidReprException(s); // shouldnt come here","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"        return t;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"        return String.format(\"[%c] %s\", this.isComplete ? \u0027X\u0027 : \u0027 \u0027, this.desc);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"davelowqx"},"content":"    public static class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"davelowqx"},"content":"        String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"davelowqx"},"content":"        public Event(boolean isComplete, String desc, String at) throws DukeException.EmptyTaskDescriptionException {","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"davelowqx"},"content":"            super(isComplete, desc);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"davelowqx"},"content":"            this.at \u003d at;","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"davelowqx"},"content":"        @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"davelowqx"},"content":"        public String getRepr() {","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"davelowqx"},"content":"            return String.format(\"E|%s|%s\", super.getRepr(), this.at);","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"davelowqx"},"content":"        @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"davelowqx"},"content":"        public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"davelowqx"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"davelowqx"},"content":"     * Represents a task with a deadline, given in the form of YYYY-MM-DD","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"davelowqx"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"davelowqx"},"content":"        String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"davelowqx"},"content":"        Optional\u003cLocalDate\u003e date;","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"davelowqx"},"content":"        public Deadline(boolean isComplete, String desc, String by) throws DukeException.EmptyTaskDescriptionException {","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"davelowqx"},"content":"            super(isComplete, desc);","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"davelowqx"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"davelowqx"},"content":"                this.date \u003d Optional.of(LocalDate.parse(by));","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"davelowqx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"davelowqx"},"content":"                this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"davelowqx"},"content":"                this.date \u003d Optional.empty();","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"davelowqx"},"content":"        private String getDate(String pattern) {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"davelowqx"},"content":"            return this.date.map((date) -\u003e date.format(DateTimeFormatter.ofPattern(pattern)))","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"davelowqx"},"content":"                    .orElse(this.by);","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"davelowqx"},"content":"        public void snooze(int numberOfDays) throws DukeException.DateException {","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"davelowqx"},"content":"            if (this.date.isPresent()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"davelowqx"},"content":"                this.date \u003d this.date.map(localDate -\u003e localDate.plusDays(numberOfDays));","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"davelowqx"},"content":"            } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"davelowqx"},"content":"                throw new DukeException.DateException();","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"davelowqx"},"content":"        @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"davelowqx"},"content":"        public String getRepr() {","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"davelowqx"},"content":"            return String.format(\"D|%s|%s\", super.getRepr(), this.getDate(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"davelowqx"},"content":"        @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"davelowqx"},"content":"        public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"davelowqx"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), this.getDate(\"MMM dd yyyy\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"davelowqx"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"davelowqx"},"content":"        public Todo(boolean isComplete, String desc) throws DukeException.EmptyTaskDescriptionException {","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"davelowqx"},"content":"            super(isComplete, desc);","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"davelowqx"},"content":"        @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"davelowqx"},"content":"        public String getRepr() {","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"davelowqx"},"content":"            return String.format(\"T|%s|null\", super.getRepr());","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"davelowqx"},"content":"        @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"davelowqx"},"content":"        public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"davelowqx"},"content":"            return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"davelowqx":138}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":" * TaskList manages all access of the list of Tasks, namely reading, adding, updating and deleting","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"public class TaskList {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"     * Creates and adds a Task to the list from the given String representation","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"     * @param repr the String representation of the Task","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"     * @return true if task is successfully added, else false","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"     * @throws DukeException if the the String representation is invalid","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    public boolean addTaskFromRepr(String repr) throws DukeException.EmptyTaskDescriptionException, DukeException.InvalidReprException {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"            Task t \u003d Task.fromRepr(repr);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"            return tasks.add(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"     * adds a Task to the list","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"     * @param t the Task to be added","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"     * @return true if the task is successfully added, else false","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"    public boolean addTask(Task t) {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"        return tasks.add(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"     * marks the task at 1-based index i as complete","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"     * @param i the 1-based index of the task to be marked as complete","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"     * @return the task that is marked as complete","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"    public Task markAsComplete(int i) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"        Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"        t.markAsComplete();","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"        return t;","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"     * deletes the task at 1-based index i","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"     * @param i the 1-based index of the task to be deleted","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"     * @return the task that is deleted","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"    public Task deleteTask(int i)  throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"        return tasks.remove(i - 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"    public Task snoozeTask(int i, int numberOfDays) throws IndexOutOfBoundsException, DukeException.DateException {","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"        Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"        if (t instanceof Task.Deadline) {","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"            ((Task.Deadline) t).snooze(numberOfDays);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"davelowqx"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"davelowqx"},"content":"            throw new DukeException.DateException();","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"davelowqx"},"content":"        return t;","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"davelowqx"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"davelowqx"},"content":"    public int numberOfTasks() {","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"davelowqx"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"davelowqx"},"content":"     * creates a new TaskList containing only tasks from current list that match given string","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"davelowqx"},"content":"     * @param keyword string to search for","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"davelowqx"},"content":"     * @return new TaskList containing tasks that have description matching given string","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"davelowqx"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"davelowqx"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"davelowqx"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"davelowqx"},"content":"            if (t.desc.matches(String.format(\".*\\\\b%s\\\\b.*\", keyword))) {","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"davelowqx"},"content":"                filteredTasks.addTask(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"davelowqx"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"davelowqx"},"content":"        return filteredTasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"davelowqx"},"content":"     * @return a formatted String of all tasks for writing to file","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"davelowqx"},"content":"    public ArrayList\u003cString\u003e toRepr() {","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"davelowqx"},"content":"        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"davelowqx"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"davelowqx"},"content":"            arr.add(t.getRepr());","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"davelowqx"},"content":"        return arr;","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"davelowqx"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"davelowqx"},"content":"        String s \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"davelowqx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"davelowqx"},"content":"            s +\u003d String.format(\"%d.%s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"davelowqx"},"content":"        return s;","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"davelowqx":110}},{"path":"src/main/java/duke/Ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"class DialogBox extends HBox {","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"    private Label text;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"    private ImageView dp;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"    private DialogBox(String str, Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"        this.text \u003d new Label(str);","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"        this.dp \u003d new ImageView(img);","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"        this.text.setWrapText(true);","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"        this.dp.setFitWidth(99);","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"        this.dp.setFitHeight(99);","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"    public static DialogBox UserDialogBox(String str, Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"        DialogBox db \u003d new DialogBox(str, img);","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"        db.getChildren().addAll(db.text, db.dp);","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"        return db;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"    public static DialogBox DukeDialogBox(String str, Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"        DialogBox db \u003d new DialogBox(str, img);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"        db.getChildren().addAll(db.dp, db.text);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"        return db;","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"davelowqx":34}},{"path":"src/main/java/duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package duke.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":" * Ui bridges the user and the software, providing output, input and error channels","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"public class Ui extends Application {","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"    private ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"    private VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"    private TextField userInputField \u003d new TextField();","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"    private Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    private Image userImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"    private Image dukeImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"        this.duke \u003d new Duke();","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"        this.scrollPane.setContent(this.dialogContainer);","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"        this.duke.init();","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"        this.dialogContainer.","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"                getChildren().add(","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"                    DialogBox.DukeDialogBox(\"hi i\u0027m Duke, what do you want?\",","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"                            this.dukeImg));","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"        mainLayout.getChildren().addAll(this.scrollPane, this.userInputField, this.sendButton);","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"        this.scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"        stage.show();","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"        this.scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"        this.scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"        this.scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"        this.scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"        this.scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"        this.dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"        this.userInputField.setPrefWidth(325.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"        this.sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"        AnchorPane.setTopAnchor(this.scrollPane, 1.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"        AnchorPane.setBottomAnchor(this.sendButton, 1.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"        AnchorPane.setRightAnchor(this.sendButton, 1.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"        AnchorPane.setLeftAnchor(this.userInputField , 1.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"        AnchorPane.setBottomAnchor(this.userInputField, 1.0);","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"davelowqx"},"content":"        this.sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"davelowqx"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"davelowqx"},"content":"        });","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"davelowqx"},"content":"        this.userInputField.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"davelowqx"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"davelowqx"},"content":"        });","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"davelowqx"},"content":"        this.dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"davelowqx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"davelowqx"},"content":"        String userInput \u003d this.userInputField.getText();","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"davelowqx"},"content":"        String dukeResponse \u003d this.duke.getResponse(userInput);","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"davelowqx"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"davelowqx"},"content":"                DialogBox.UserDialogBox(userInput, userImg),","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"davelowqx"},"content":"                DialogBox.DukeDialogBox(dukeResponse, dukeImg)","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"davelowqx"},"content":"        );","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"davelowqx"},"content":"        this.userInputField.clear();","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"davelowqx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"davelowqx"},"content":"        launch();","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"davelowqx":87}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"public class StorageTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"    Storage s;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"    public void storageTest_invalidPath_exceptionThrown() {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"            s \u003d new Storage(\"Z:/data/tasks.txt\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"            fail();","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"    public void storageTest_validPath_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"            s \u003d new Storage(\"a/b/c/tasks.txt\");","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"            fail();","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"davelowqx":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"list","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"davelowqx":4}}]
