[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * Current Progress: Level 8. Date and Times","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" * Description:","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" * On running the program, Duke greets the user and awaits for inputted commands:","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027todo x\u0027 -\u003e adds a ToDo task of x with no date/time attached","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027deadline x /by a b\u0027 -\u003e adds a Deadline task of x that needs to be done by date a and time b (time is optional)","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027event x /at a b c\u0027 -\u003e adds an Event task of x that is on date a and starts at time b and ends at time c","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027list\u0027 -\u003e displays current list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027check x\u0027 -\u003e displays list of tasks due on date x","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027done x\u0027 -\u003e marks Task x as done","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027delete x\u0027 -\u003e deletes Task x from the task list","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027bye\u0027 -\u003e exits the program","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":" *   - any other String of different patterns -\u003e throws an exception","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"public class Duke {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        // Initialise program","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        TaskList tasksList \u003d new TaskList(storage.retrieveData(), storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        Parser parser \u003d new Parser(tasksList);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        // Greets user","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        Ui.showWelcome();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        Ui.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"        // Carries out commands inputted by user into the Scanner","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"                Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"                Command command \u003d parser.getCommand(input);","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"                command.execute();","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"                Ui.displayMessage(new String[] {e.toString()});","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"            } finally {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"                Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"                Ui.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":63}},{"path":"src/main/java/duke/DukeStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * Current Progress: Level 8. Date and Times","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" * Description:","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" * On running the program, Duke greets the user and awaits for inputted commands:","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027todo x\u0027 -\u003e adds a ToDo task of x with no date/time attached","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027deadline x /by a b\u0027 -\u003e adds a Deadline task of x that needs to be done by date a and time b (time is optional)","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027event x /at a b c\u0027 -\u003e adds an Event task of x that is on date a and starts at time b and ends at time c","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027list\u0027 -\u003e displays current list of tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027check x\u0027 -\u003e displays list of tasks due on date x","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027done x\u0027 -\u003e marks Task x as done","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027delete x\u0027 -\u003e deletes Task x from the task list","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":" *   - \u0027bye\u0027 -\u003e exits the program","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":" *   - any other String of different patterns -\u003e throws an exception","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"public class DukeStub {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        // Initialise program","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        TaskList tasksList \u003d new TaskList(null, storage); // remove file dependency","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        Parser parser \u003d new Parser(tasksList);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        // Greets user","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        Ui.showWelcome();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        Ui.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"        // Carries out commands inputted by user into the Scanner","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"                Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"                Command command \u003d parser.getCommand(input);","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"                command.execute();","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"                Ui.displayMessage(new String[] {e.toString()});","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"            } finally {","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"                Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"                Ui.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"benedictchuajj":60,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    private String task;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    private String type;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    public AddCommand(TaskList taskList, String task, String type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     * Adds the given task into the task list and prints the outcome using displayMessage.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     * @param task description of task","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"     * @param typeOfTask type of task from ToDo, Deadline, Event. Handled by switch case.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    public void execute() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        Ui.displayMessage(this.taskList.addToList(this.task, this.type));","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"        return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    public abstract void execute();","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":9}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    private int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"    public DeleteCommand(TaskList taskList, int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    public void execute() {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"        Ui.displayMessage(this.taskList.deleteTask(this.index));","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":19}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    private int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"    public DoneCommand(TaskList taskList, int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     * Marks task in the given index as completed (done) and prints the outcome using displayMessage.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     * @param index index of task to be mark as completed (indexing starts from 1)","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    public void execute() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        Ui.displayMessage(this.taskList.markTaskAsDone(this.index));","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":24}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"    public ExitCommand() { }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public void execute() {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        Ui.bidFarewell();","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":17}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"    private String input;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidCommand(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    public void execute() {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"        throw new InvalidCommandException(this.input);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":16}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"    private String dateString;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public ListCommand(TaskList taskList, String dateString) {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    public void execute() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        taskList.printList(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":18}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    String message;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        return this.message;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":23}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! The description of a task cannot be empty!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":16}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! I don\u0027t understand this command!\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"                String.format(\"     Command: %s\\n\", command) +","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"                \"     You might want to check for spelling and potential whitespaces!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":18}},{"path":"src/main/java/duke/exception/InvalidDateInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidDateInputException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidDateInputException(String dateString) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! I don\u0027t understand this Date input!\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"                String.format(\"     Date: %s\\n\", dateString) +","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"                \"     It should be a valid date in the form dd-mm-yyyy, dd/mm/yyyy or yyyy-mm-dd!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":17}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidIndexException(int numOfTasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        super(String.format(\"BAKA! Input a valid index!! You have %d tasks currently!\", numOfTasks));","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":15}},{"path":"src/main/java/duke/exception/InvalidTimeInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidTimeInputException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidTimeInputException(String timeString) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! I don\u0027t understand this Time input!\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"                String.format(\"     Time: %s\\n\", timeString) +","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"                \"     It should be a valid time in the form HH:MM or HHMM!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":18}},{"path":"src/main/java/duke/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public MissingArgumentException(String tag, String type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        super(String.format(\"BAKA! You\u0027re missing the %s argument to add a %s!\", tag, type));","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":16}},{"path":"src/main/java/duke/exception/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when Duke is run.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * Names of exception should be self-explanatory in describing when it should be used.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class MissingIndexException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public MissingIndexException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! You need to provide an index so I know which task you are referring to!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" * The Deadline Class represents a task that needs to be done before a specific date/time.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" * - dueDate","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" * - dueTime","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    private LocalTime dueTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d dueDate.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        this.dueDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        this.dueTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    public Deadline(String completed, String description, String dueDate) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d dueDate.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        this.dueDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        this.dueTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        if (completed.equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"            super.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    public String formatDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        return dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"    public boolean onDate(String date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        return this.dueDate.equals(Parser.parseDate(date));","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"    public String saveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        return super.formatString(\"D\", String.format(\"%s %s\", this.dueDate, this.dueTime));","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[D]%s (by: %s %s)\", super.toString(), formatDate(), dueTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" * The Event Class represents a task that starts and ends at specific timings.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" * - eventDate","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" * - startTime","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" * - endTime","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d eventTime.split(\" \", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        this.eventDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        this.startTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        this.endTime \u003d Parser.parseTime(dateInfo[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    public Event(String completed, String description, String eventTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d eventTime.split(\" \", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        this.eventDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        this.startTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        this.endTime \u003d Parser.parseTime(dateInfo[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        if (completed.equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"            super.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"    public String formatDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        return eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    public boolean onDate(String date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        return this.eventDate.equals(Parser.parseDate(date));","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"    public String saveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        return super.formatString(\"E\", String.format(\"%s %s %s\", this.eventDate, this.startTime, this.endTime));","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[E]%s (by: %s %s-%s)\", super.toString(), formatDate(), startTime, endTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":71}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The Task Class is a representation of a task that Duke is keeping track of.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    private String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    public abstract String saveAsString();","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"     * @param description The name of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     * Returns the status of whether the task has been completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     * @return \"X\" if is completed, \" \" if not completed","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if task is done and marks task as done if not already completed","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"     * @return description of task if it has been marked as completed, else message that task is already done previously.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    public String markTaskAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        if (!this.isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"            return \"  \" + this.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"            return \"Wait...  You\u0027ve already completed this task before you dummy!\";","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    public String formatString(String ...args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        switch (args.length) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        case 1:","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"            // returns type of task, completion and description as a string","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"            return String.format(\"%s | %d | %s\", args[0], this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        case 2:","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"            // returns additional date element","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"            return String.format(\"%s | %d | %s | %s\", args[0], this.isDone ? 1 : 0, this.description, args[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"            // should NOT reach default as this function is only called in corresponding children of Tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    public boolean onDate(String date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":74}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The ToDo Class represents a task without any date/time attached to it.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    public ToDo(String completed, String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"        if (completed.equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"            super.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    public String saveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        return super.formatString(\"T\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":34}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     * From the input given by the user, returns the Command (first keyword) in it.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"     * @param input the String that the user enters into Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"     * @return the corresponding Command in the input.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public Command getCommand(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        switch (input.split(\" \")[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        case \"list\":","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"            return new ListCommand(this.taskList, null);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        case \"check\":","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"            return new ListCommand(this.taskList, filterTaskDescription(input));","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        case \"done\":","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"            return new DoneCommand(this.taskList, filterTaskIndex(input));","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"            return new AddCommand(this.taskList, filterTaskDescription(input), \"ToDo\");","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"            return new AddCommand(this.taskList, filterTaskDescription(input), \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        case \"event\":","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"            return new AddCommand(this.taskList, filterTaskDescription(input), \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"            return new DeleteCommand(this.taskList, filterTaskIndex(input));","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"            return new InvalidCommand(input);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in the original inputted command and filters it for the task description.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"     * The description is the command string minus the first word which is the command itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"     * Throws an EmptyDescriptionException when description is missing (including if it contains only white space).","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"     * @param command the original command inputted by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"     * @return the filtered String that contains only the description of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"     * @throws EmptyDescriptionException when description is missing","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    public static String filterTaskDescription(String command) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        String[] commandItems \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"        if (commandItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"        String filteredDescription  \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        if (filteredDescription.trim().isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        return filteredDescription.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in the original inputted command and filters and parses it for the given index.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"     * The index is the command string minus the first word which is the command itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"     * Throws an MissingIndexException when index is missing (including if it contains only white space).","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"     * @param command the original command inputted by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"     * @return the filtered and parsed int that refers to the index of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"     * @throws MissingIndexException when index is missing","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"    public static int filterTaskIndex(String command) throws MissingIndexException {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"        String[] commandItems \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"        if (commandItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"        String indexString  \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"        if (indexString.trim().isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"        return parseInt(indexString);","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"    public static LocalDate parseDate(String dateString) throws InvalidDateInputException {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"            if (dateString.matches(\"\\\\d{2}-\\\\d{2}-\\\\d{4}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"                // in the form dd-mm-yyyy","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"                String[] d \u003d dateString.split(\"-\", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"                return LocalDate.parse(String.format(\"%s-%s-%s\", d[2], d[1], d[0]));","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"            } else if (dateString.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"                // in the form dd/mm/yyyy","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"                String[] d \u003d dateString.split(\"/\", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"                return LocalDate.parse(String.format(\"%s-%s-%s\", d[2], d[1], d[0]));","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"            } else if (dateString.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"                // in the form yyyy-mm-dd","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"                return LocalDate.parse(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"                throw new InvalidDateInputException(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidDateInputException(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"    public static LocalTime parseTime(String timeString) throws InvalidTimeInputException {","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"            if (timeString.indexOf(\u0027:\u0027)  \u003d\u003d -1 \u0026\u0026 timeString.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"                // in the form hhmm","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"                String[] t \u003d {timeString.substring(0, 2), timeString.substring(2)};","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"                return LocalTime.parse(String.format(\"%s:%s\", t[0], t[1]));","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"            } else if (timeString.indexOf(\u0027:\u0027)  \u003d\u003d 2 \u0026\u0026 timeString.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"                //in the form hh:mm","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"                return LocalTime.parse(timeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"                // Maybe throw exception","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"                throw new InvalidTimeInputException(timeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidTimeInputException(timeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"    public static String[] parseDeadlineDate(String task) throws MissingArgumentException {","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"        String[] deadlineDetails \u003d task.split(\" /by \");","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"        if (deadlineDetails.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"\u0027/by\u0027\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"benedictchuajj"},"content":"        return deadlineDetails;","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"benedictchuajj"},"content":"    public static String[] parseEventDate(String task) throws MissingArgumentException {","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"benedictchuajj"},"content":"        String[] eventDetails \u003d task.split(\" /at \");","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"benedictchuajj"},"content":"        if (eventDetails.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"\u0027/at\u0027\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"benedictchuajj"},"content":"        return eventDetails;","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":148}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private static final String DIRECTORY_PATH \u003d \"../../../../../data\";","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    private boolean isDirectoryExists;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    private boolean isFileExists;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    public Storage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        this.isDirectoryExists \u003d directory.exists();","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        this.isFileExists \u003d file.exists();","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public ArrayList\u003cString\u003e retrieveData() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        if (isFileExists) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"                File f \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"                Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"                ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"                    taskList.add(sc.nextLine());","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"                return taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                System.out.println(\"Something went wrong:  \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"                return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    public void writeToFile(String allTasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        // Checks if directory exists, creates if it doesn\u0027t","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"        if (!isDirectoryExists) {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"            File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        // Write to file","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"            fw.write(allTasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"            fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"            System.out.println(\"Something went wrong:  \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":63}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * The TaskList Class is a representation of a list of tasks that Duke is keeping track of.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * Tasks can be added into the list via Duke and the list can be displayed as well.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    public TaskList(ArrayList\u003cString\u003e existingTask, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        if (existingTask !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"            for (String taskString : existingTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"                String[] taskDetails \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"                switch (taskDetails[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"                case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"                    taskList.add(new ToDo(taskDetails[1], taskDetails[2]));","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"                case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"                    taskList.add(new Deadline(taskDetails[1], taskDetails[2], taskDetails[3]));","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"                case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                    taskList.add(new Event(taskDetails[1], taskDetails[2], taskDetails[3]));","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"                default:","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"                    // Unrecognised string -\u003e do something next time?","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"                    // Ignore for now.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"    private String convertListToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        String allTasks \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"            allTasks \u003d allTasks + task.saveAsString() + \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        return allTasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"     * Adds a given task to the tasks list.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"     * @param task the task to add to the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"     * @return String representation of messages stating that the task has been added","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    public String[] addToList(String task, String typeOfTask) throws MissingArgumentException {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        case \"ToDo\":","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"            taskList.add(new ToDo(task));","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"        case \"Deadline\":","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"            String[] deadlineDetails \u003d Parser.parseDeadlineDate(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"            taskList.add(new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"        case \"Event\":","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"            String[] eventDetails \u003d Parser.parseEventDate(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"            taskList.add(new Event(eventDetails[0], eventDetails[1]));","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"            // will NOT execute as Duke calls this function to add a task and it only calls them based on","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"            // the same switch cases.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"        storage.writeToFile(convertListToString());","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"        return new String[] {","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"                String.format(\"  %s\", taskList.get(taskList.size() - 1)),","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"                String.format(\"Now you have %d %s in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"                        taskList.size(), taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"        };","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"     * Prints the tasks in the list with indexing starting from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"    public void printList(String dateString) {","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"        if (dateString !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"                if (currTask.onDate(dateString)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"                    System.out.println(INDENTATION + String.format(\"%d:%s\", index, currTask));","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"                    index++;","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"                System.out.println(INDENTATION + String.format(\"%d:%s\", i + 1, currTask));","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"     * Marks tasks (based on index) as done if it exists.","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"     * @param index index given by the User for Task in the TaskList (starts from 1).","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"     * @return message of the completion of the Task if it exists, else user will be informed that no such task exists.","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"    public String[] markTaskAsDone(int index) throws InvalidIndexException {","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidIndexException(taskList.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"        String[] message \u003d {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"                \"You completed a task! Maybe you aren\u0027t so incompetent after all.\",","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"                taskList.get(index - 1).markTaskAsDone()","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"        };","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"        storage.writeToFile(convertListToString());","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"        return message;","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"benedictchuajj"},"content":"    public String[] deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"benedictchuajj"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidIndexException(taskList.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"benedictchuajj"},"content":"        Task deletedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"benedictchuajj"},"content":"        String[] message \u003d {","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve deleted this task so show me some gratitude!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"benedictchuajj"},"content":"                String.format(\"  %s\", deletedTask),","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"benedictchuajj"},"content":"                String.format(\"Now you have %d %s in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"benedictchuajj"},"content":"                        taskList.size(), taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"benedictchuajj"},"content":"        };","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"benedictchuajj"},"content":"        storage.writeToFile(convertListToString());","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"benedictchuajj"},"content":"        return message;","lastModifiedDate":"2021-08-21"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":156}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"    private static final String LINE_SEPARATOR \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"    private static final String[] GREETING \u003d {\"Hey! I\u0027m Duke (Tsun)!\", \"What do you want?\",","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"            \"...It\u0027s not like I want to help you or anything!\"};","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    private static final String[] GOODBYE \u003d {\"Hmph! It\u0027s not like I want to see you again or anything!\"};","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"     * Prints messages line by line enclosed within line separators.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"     * @param messages an array of String that contains the messages to be printed","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    public static void displayMessage(String[] messages) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"            System.out.println(INDENTATION + message);","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    public static void showLine() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public static void newLine() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        System.out.println();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    public static void showWelcome() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        displayMessage(GREETING);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    public static void bidFarewell() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        displayMessage(GOODBYE);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":36}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"import duke.DukeStub;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.io.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    // referenced from https://stackoverflow.com/questions/1119385/junit-test-for-system-out-println","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    public void setUpStreams() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    @AfterEach","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    public void testMain() {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        final InputStream original \u003d System.in;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"            // Get expected output","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"            String expectedOutput \u003d Files.readString(Path.of(\"../../text-ui-test/EXPECTED.TXT\"), StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"            // Feed in input to Duke","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"            File file \u003d new File(\"../../text-ui-test/input.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"            final FileInputStream fips \u003d new FileInputStream(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"            System.setIn(fips);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"            DukeStub.main(null);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"            System.setIn(original);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":56}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\",\"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[D][ ] return book (by: Aug 23 2021 20:00)\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public void testSaveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"1\", \"return book\",\"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"D | 1 | return book | 2021-08-23 20:00\", task.saveAsString());","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"1\", \"return book\",\"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\",\"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[D][X] return book (by: Aug 23 2021 20:00)\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_sameDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\",\"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(true, task.onDate(\"2021-08-23\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_differentDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\",\"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(false, task.onDate(\"2021-08-21\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":43}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"public class EventTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\",\"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[E][ ] project meeting (by: Aug 23 2021 20:00-22:00)\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public void testSaveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"1\", \"project meeting\",\"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"E | 1 | project meeting | 2021-08-23 20:00 22:00\", task.saveAsString());","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"1\", \"project meeting\",\"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\",\"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[E][X] project meeting (by: Aug 23 2021 20:00-22:00)\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_sameDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\",\"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(true, task.onDate(\"2021-08-23\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_differentDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\",\"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(false, task.onDate(\"2021-08-21\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":43}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[T][ ] read book\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public void testSaveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"1\", \"read book\");","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"T | 1 | read book\", task.saveAsString());","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"1\", \"read book\");","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"1\", \"read book\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[T][X] read book\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(false, task.onDate(\"2021-08-23\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":37}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetCommand_byeCommand_returnsExitCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        Parser parser \u003d new Parser(new TaskList(null, null));","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(parser.getCommand(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseTestDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"return book\", Parser.filterTaskDescription(\"todo return book\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseTaskIndex() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(4, Parser.filterTaskIndex(\"done 4\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(LocalDate.parse(\"2021-08-21\"), Parser.parseDate(\"21/08/2021\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(LocalTime.parse(\"21:00\"), Parser.parseTime(\"2100\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseDeadlineDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[] {\"return book\", \"21/08/2021 2100\"},","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"                Parser.parseDeadlineDate(\"return book /by 21/08/2021 2100\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseEventDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[] {\"project meeting\", \"21/08/2021 1400 1600\"},","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"                Parser.parseEventDate(\"project meeting /at 21/08/2021 1400 1600\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":51}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    // referenced from https://stackoverflow.com/questions/1119385/junit-test-for-system-out-println","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    public void setUpStreams() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    @AfterEach","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    TaskList taskList \u003d new TaskList(null, storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_toDo_success() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[] {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                \"  [T][ ] return book\",","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"                \"Now you have 1 task in the list. Do your best doing them okay?\"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        }, taskList.addToList(\"return book\", \"ToDo\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_deadline_success() {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[]{","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"                \"  [D][ ] return book (by: Aug 23 2021 00:00)\",","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"                \"Now you have 1 task in the list. Do your best doing them okay?\"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"        }, taskList.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_deadline_exceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"            assertArrayEquals(new String[]{","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"                    \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"                    \"  [D][ ] return book (by: Aug 23 2021 00:00)\",","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"                    \"Now you have 1 task in the list. Do your best doing them okay?\"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"            }, taskList.addToList(\"return book /by 23/08/2021\", \"Deadline\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(\"BAKA! You\u0027re missing the Date or Time argument to add a Deadline!\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_event_success() {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[]{","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"                \"  [E][ ] return book (by: Aug 23 2021 00:00-01:00)\",","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"                \"Now you have 1 task in the list. Do your best doing them okay?\"","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"        }, taskList.addToList(\"return book /at 23/08/2021 0000 0100\", \"Event\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_event_exceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"            assertArrayEquals(new String[]{","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"                    \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"                    \"  [D][ ] return book (by: Aug 23 2021 00:00)\",","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"                    \"Now you have 1 task in the list. Do your best doing them okay?\"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"            }, taskList.addToList(\"return book /by 23/08/2021 0000 0100\", \"Event\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(\"BAKA! You\u0027re missing the \u0027/at\u0027 argument to add a Event!\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[] {","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"                \"You completed a task! Maybe you aren\u0027t so incompetent after all.\",","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"                \"  [T][X] return book\"","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"        }, taskList.markTaskAsDone(1));","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[] {","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve deleted this task so show me some gratitude!\",","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"                \"  [T][ ] return book\",","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"                \"Now you have 0 tasks in the list. Do your best doing them okay?\"","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"        }, taskList.deleteTask(1));","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"    public void testPrintList_noDateFiltering() {","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"project meeting /at 2021-08-23 1400 1600\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"        taskList.printList(null);","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"     1:[T][ ] read book\\n     2:[D][ ] return book (by: Aug 23 2021 00:00)\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"                + \"     3:[E][ ] project meeting (by: Aug 23 2021 14:00-16:00)\\n\",","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"    public void testPrintList_withDateFiltering() {","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"        taskList.addToList(\"project meeting /at 2021-08-23 1400 1600\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"        taskList.printList(\"2021-08-23\");","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"     1:[D][ ] return book (by: Aug 23 2021 00:00)\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"                        + \"     2:[E][ ] project meeting (by: Aug 23 2021 14:00-16:00)\\n\",","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":134}},{"path":"src/test/java/duke/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"public class UiTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    // referenced from https://stackoverflow.com/questions/1119385/junit-test-for-system-out-println","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    public void setUpStreams() {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    @AfterEach","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    public void testShowLine() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        Ui.showLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"    ____________________________________________________________\\n\",","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    public void testNewLine() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        Ui.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"\\n\", outContent.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    public void testDisplayMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        Ui.displayMessage(new String[] {\"Hi\", \"Test\"});","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"     Hi\\n     Test\\n\", outContent.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"deadline return book /by 23/08/2021 0000","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"event project meeting /at 2021-08-23 1400 1600","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"event lecture /at 20-08-2021 16:00 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"todo graduate","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"check 23/08/2021","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"deadline submit assignment","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"event x\u0027mas /at 25/12/2021 0000 2500","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"done 5","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"baka","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"delete 4","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"benedictchuajj":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"# delete saved output from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"if [ -e \"../../../data/duke.txt\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    rm ../../../data/duke.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"benedictchuajj":6,"-":38}},{"path":"text-ui-test/runtestfromsrc.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"if [ ! -d \"../../../bin\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"    mkdir ../../../bin","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"# delete output from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"if [ -e \"../../../text-ui-test/ACTUAL.TXT\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    rm ../../../text-ui-test/ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"# delete saved output from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"if [ -e \"../../../data/duke.txt\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    rm ../../../data/duke.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"if ! javac  -classpath . -Xlint:none -d ../../../bin duke/Duke.java","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    exit 1","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"java -classpath ../../../bin Duke \u003c ../../../text-ui-test/input.txt \u003e ../../../text-ui-test/ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"# convert to UNIX format","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"cp ../../../text-ui-test/EXPECTED.TXT ../../../text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"dos2unix ../../../text-ui-test/ACTUAL.TXT ../../../text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"# compare the output to the expected output","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"diff ../../../text-ui-test/ACTUAL.TXT ../../../text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"    exit 0","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"else","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"    exit 1","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":44}}]
