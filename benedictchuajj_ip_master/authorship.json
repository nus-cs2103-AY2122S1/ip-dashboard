[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"benedictchuajj":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"Duke is an application for managing your tasks via a CLI while having the benefits of a simple GUI that is easy to use.","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"## Quick start","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"1. Ensure you have Java 11 or higher installed in your computer.","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"2. Download the latest release of `duke.jar` from [here](https://github.com/benedictchuajj/ip/releases)","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"3. Double-click on the jar file to start the application. You will see a GUI that is similar to this:","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"   \u003cimg src\u003d\"https://raw.githubusercontent.com/benedictchuajj/ip/master/docs/StartUi.png\" width\u003d\"426\" height\u003d\"650\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"   ","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"4. Input some commands to start using Duke! Here are some simple commands you can try:","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    * `todo try app` : Adds a ToDo task named `try app` to the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    * `list` : lists all tasks in the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    * `bye` : closes the application. ","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"      ","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"You can check out the [Features](https://github.com/benedictchuajj/ip/tree/master/docs#features) section for an extensive list of the commands available in Duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"### Add Tasks:","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"There are 3 types of tasks that you can add to the task list and this is how you can add them:","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"#### ToDo","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"ToDo is a task that is not assigned to any dates.","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"To add a Todo to the list:","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"`todo task_name`","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"#### Deadline","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"Deadline is a task that has a deadline.","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"To add a Deadline to the list:","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"`deadline task_name /by dueDate dueTime`","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"where `dueDate` is given in *dd/mm/yyyy* and `dueTime` is given in the 24-hour format.","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"#### Event","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"Event is a task that occurs during a stipulated timing.","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"To add an Event to the list:","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"`event task_name /by eventDate startTime endTime`","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"where `eventDate` is given in *dd/mm/yyyy* and `startTime` \u0026 `endTime` is given in the 24-hour format.","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"### Display Tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"Displays the tasks in the current task lists. There are a few ways to display the task with various filtering.","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"#### List all tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"To list all tasks without any filtering:","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"`list`","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"#### Filter by date - List all tasks that occurs on a particular date","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"To list the tasks with a filtering based on a date:","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"`check filterDate`","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"where `filterDate` is given in *dd/mm/yyyy*.","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"#### Filter by description - List all tasks that has a keyword in the description","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"To list the tasks with a filtering based on a keyword:","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"`find filterKeyword`","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"where `filterKeyword` the text that you want to find in the task\u0027s description.","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"#### Reminders - List upcoming tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"There are a few ways you can get reminders:","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"`remind x`","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"where `x` is one of the 3 arguments below:","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"* next - the next upcoming task","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"* today - all upcoming tasks in the next 24 hours","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"* week - all upcoming tasks in the coming week","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"### Complete Tasks:","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"Tasks can be marked as being completed by inputting:","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"`done x` where `x` is the index of the task in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"You can also input multiple indexes to mark multiple tasks as completed:","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"`done i j k` where `i`, `j` and `k` are the indexes of the task in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"### Remove Tasks:","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"Tasks can be removed from the list by inputting:","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"`delete x` where `x` is the index of the task in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"### Exiting the program:","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"Close the application by inputting:","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"`bye`","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"## Command Summary","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"| Action | Format, Examples |","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"| --- | --- |","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"| Add ToDo | `todo TASK`\u003cbr /\u003ee.g., `todo try app` |","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"| Add Deadline | `deadline TASK /by DATE TIME`\u003cbr /\u003ee.g., `deadline assignment submission /by 16/09/2021 1300` |","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"| Add Event | `event TASK /at DATE sTIME eTIME`\u003cbr /\u003ee.g., `event team meeting /at 11/09/2021 1200 1400` |","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"| List | `list` |","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"| Check | `check DATE`\u003cbr /\u003ee.g., `check 25/12/2021` |","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"| Find | `find KEYWORD`\u003cbr /\u003ee.g., `find meeting` |","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"| Reminder | `remind METHOD`\u003cbr /\u003ee.g., `remind next`, `remind today`, `remind week` |","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"| Done | `done INDEX(ES)`\u003cbr /\u003ee.g., `done 2`, `done 1 3 5` |","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"| Delete | `delete INDEX`\u003cbr /\u003ee.g., `delete 2` |","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"| Exit | `bye` |","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"## Acknowledgements:","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"Images used in Duke are from the following sources:","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"* [backgroundImage](https://www.enjpg.com/nice-18/)","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"* [Duke profile image](https://twitter.com/suisei_hosimati/status/1435255188818853893/photo/1)","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"* [User profile image](https://www.google.com/search?q\u003dkaigainiki+face\u0026tbm\u003disch\u0026ved\u003d2ahUKEwiXvoXHjPTyAhVChUsFHfnJBBcQ2-cCegQIABAA\u0026oq\u003dkaigainiki+face\u0026gs_lcp\u003dCgNpbWcQAzIFCAAQgAQ6BggAEAUQHjoGCAAQChAYUMFAWOxDYLZEaABwAHgAgAFDiAGBApIBATWYAQCgAQGqAQtnd3Mtd2l6LWltZ8ABAQ\u0026sclient\u003dimg\u0026ei\u003dBCY7YZesO8KKrtoP-ZOTuAE\u0026bih\u003d919\u0026biw\u003d1920#imgrc\u003dDIAvV7AqZsT0OM)","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"Referenced User Guide format from:","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"* [AB-3 User Guide](https://se-education.org/addressbook-level3/UserGuide.html)","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"* [WeiJie96](https://github.com/WeiJie96/ip/tree/master/docs)","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"benedictchuajj":104,"-":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" * TsunDuke is a chatbot that keeps track of your tasks for you, with a sassy personality for those who enjoy it.","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" * Description:","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * On running the program, TsunDuke greets the user and awaits for the user to input commands","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"public class Duke {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    private static final String ERROR_PREFIX \u003d \"BAKA!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"     * Initialises the classes that are necessary for Duke to run.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        tasks \u003d new TaskList(storage.retrieveData(), storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"     * Gets the response from Duke upon receiving user\u0027s input command.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"     * @param input String containing the user\u0027s input command.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"     * @return String containing Duke\u0027s response to the user\u0027s input command.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"            Command command \u003d parser.getCommand(input);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"            return command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"            return e.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if the response from Duke is an error message.","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"     * @param message String containing Duke\u0027s response.","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"     * @return boolean of whether Duke\u0027s response is an error message.","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"    public boolean checkIfErrorMessage(String message) {","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        return message.startsWith(ERROR_PREFIX);","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":59}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * The entry point to the application.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"benedictchuajj":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"            //@@author Uluk Biy","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"            //Reused from https://stackoverflow.com/questions/9738146/javafx-how-to-set-scene-background-image","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"            // with minor modifications in CSS file","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"            scene.getStylesheets().addAll(this.getClass().getResource(\"/view/application.css\").toExternalForm());","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"            stage.setTitle(\"TsunDuke\");","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"benedictchuajj":39}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * Class that represents the Command to add to the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    private String task;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    private String taskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     * @param tasks TaskList containing current tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     * @param task The Task to be added to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     * @param taskType Type of Task to be added (ToDo, Deadline, Event).","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    public AddCommand(TaskList tasks, String task, String taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"        assert taskType.matches(\"ToDo|Deadline|Event\") : \"Invalid taskType\";","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"     * This executes the add task command.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    public String execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        return this.tasks.addToList(this.task, this.taskType);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":39}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * Class that encapsulates the command inputted by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"     * Returns a boolean to mark if the command is going to cause the program to exit.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"     * @return boolean of whether the program will exit with this command.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     * Executes the command and runs any methods that is related to the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"     * @return the String result of the execution of the command.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    public abstract String execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * Class that represents the Command to delete from the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    private int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     * @param tasks TaskList containing current tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     * @param index The index pointing to the Task in TaskList to operate on, starting from 1.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    public DeleteCommand(TaskList tasks, int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"     * This executes the delete command.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    public String execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        return this.tasks.deleteTask(this.index);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":34}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * Class that represents the Command to mark a Task as completed from the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    private int[] index;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for DoneCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     * @param tasks TaskList containing current tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     * @param index The index pointing to the Task in TaskList to operate on, starting from 1.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    public DoneCommand(TaskList tasks, int[] index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"     * This executes the mark as done command.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    public String execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        return this.tasks.markTaskAsDone(this.index);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * Class that represents the Command to exit from the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public ExitCommand() { }","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     * This executes the exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    public String execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"        return \"Hmph! It\u0027s not like I want to see you again or anything!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":25}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * Class that represents the an invalid Command that is not recognised.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private String input;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for InvalidCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     * @param input String of the command inputted by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidCommand(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        assert !command.matches(\"bye|list|check|find|done|todo|deadline|event|delete\")","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"            : \"Command is wrongly categorised as invalid\";","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     * This throws an invalid command exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    public String execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        throw new InvalidCommandException(this.input);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * Class that represents the Command to displays tasks from the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    private String filterType;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    private String filterCondition;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for ListCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     * @param tasks TaskList containing current tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     * @param filterType Type of filtering to do when listing tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     * @param filterCondition Condition to filter tasks before listing.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    public ListCommand(TaskList tasks, String filterType, String filterCondition) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"        assert filterType.matches(\"all|date|keyword\") : \"Invalid filterType\";","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        this.filterType \u003d filterType;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        this.filterCondition \u003d filterCondition;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"     * This executes the list tasks command.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    public String execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        return tasks.listTasks(this.filterType, this.filterCondition);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":39}},{"path":"src/main/java/duke/command/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * Class that represents the Command to displays tasks from the TaskList.","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    private String reminderType;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    private String filterType \u003d \"reminder\";","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for ReminderCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     * @param tasks TaskList containing current tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"     * @param reminderType Type of filtering to do when listing tasks for reminder.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    public RemindCommand(TaskList tasks, String reminderType) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        assert reminderType.matches(\"today|week|next\") : \"Invalid reminderType\";","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        this.reminderType \u003d reminderType;","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     * This executes the list tasks command.","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    public String execute() {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        switch (this.reminderType) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        case \"today\":","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"            return tasks.listTasks(this.filterType, \"0\");","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        case \"week\":","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"            return tasks.listTasks(this.filterType, \"6\");","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        case \"next\":","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"            return tasks.getNextDueTask();","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(\"ReminderType is invalid\");","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"benedictchuajj":46}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The DukeException is an exception that is thrown when an error happens when Duke is running.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains the exceptions that are thrown due to wrong inputs given and is specific to this version of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private String message;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"     * Creates for DukeException.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     * @param message String containing the error message to be shown to the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        return this.message;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":27}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The EmptyDescriptionException is thrown when user attempts to add a task without descriptions.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! The description of a task cannot be empty!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":13}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The InvalidArgumentException is thrown when user types in a argument that is unrecognisable by Duke.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for InvalidArgumentException.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"     * @param command String containing the incorrect argument that the user has inputted.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidArgumentException(String command) {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! I don\u0027t understand this argument in your command!\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"                + String.format(\"Argument: %s\\n\", command)","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"                + \"You might want to check for spelling and potential whitespaces!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"benedictchuajj":20}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The InvalidCommandException is thrown when user types in a command that is unrecognisable by Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for InvalidCommandException.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"     * @param command String containing the incorrect command that the user has inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! I don\u0027t understand this command!\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"                + String.format(\"Command: %s\\n\", command)","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"                + \"You might want to check for spelling and potential whitespaces!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":20}},{"path":"src/main/java/duke/exception/InvalidDateInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The InvalidDateInputException is thrown when the user gives a date that is not valid or not in an acceptable form.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidDateInputException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for InvalidDateInputException.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"     * @param dateString String containing the date inputted in an incorrect format by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidDateInputException(String dateString) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! I don\u0027t understand this Date input!\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"                + String.format(\"Date: %s\\n\", dateString)","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"                + \"It should be a valid date in the form dd-mm-yyyy, dd/mm/yyyy or yyyy-mm-dd!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":19}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The InvalidIndexException is thrown when user inputs an index that is out of bounds of the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidIndexException(int numOfTasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        super(String.format(\"BAKA! Input a valid index!! You have %d tasks currently!\", numOfTasks));","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":12}},{"path":"src/main/java/duke/exception/InvalidTimeInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The InvalidTimeInputException is thrown when user gives a time that is not valid or in an acceptable form.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class InvalidTimeInputException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for InvalidTimeInputException.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"     * @param timeString String containing the time inputted in a wrong format by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public InvalidTimeInputException(String timeString) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! I don\u0027t understand this Time input!\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"                + String.format(\"Time: %s\\n\", timeString)","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"                + \"It should be a valid time in the form HH:MM or HHMM!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":20}},{"path":"src/main/java/duke/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The MissingArgumentException is thrown when the user did not input relevant arguments for their commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public MissingArgumentException(String tag, String type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        super(String.format(\"BAKA! You\u0027re missing the %s argument to add a %s!\", tag, type));","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":13}},{"path":"src/main/java/duke/exception/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The MissingIndexException is thrown when the user did not input the index for certain commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class MissingIndexException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public MissingIndexException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        super(\"BAKA! You need to provide an index so I know which task you are referring to!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":13}},{"path":"src/main/java/duke/task/CompletionStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"public enum CompletionStatus {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"    COMPLETED, INCOMPLETE","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"benedictchuajj":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" * The Deadline Class represents a task that needs to be done before a specific date/time.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" * - dueDate","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" * - dueTime","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    private static final String DEADLINE_IDENTIFIER \u003d \"D\";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    private LocalTime dueTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"     * Constructs a new Deadline task from the given description and dueDate.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     * @param description String of the task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"     * @param dueDate String of the given due date and time.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        assert !description.trim().isEmpty() : \"Event was created with empty description\";","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d dueDate.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        this.dueDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        this.dueTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"     * Constructs a Deadline task from an existing task description, dueDate and completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"     * Used when loading from a save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"     * @param completionStatus String indicating the status of completion: 1 if done, 0 if not.","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"     * @param description String of the task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"     * @param dueDate String of the given due date and time.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"    public Deadline(CompletionStatus completionStatus, String description, String dueDate) {","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        assert !description.trim().isEmpty() : \"Event was created with empty description\";","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d dueDate.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"        this.dueDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        this.dueTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"        if (completionStatus.equals(CompletionStatus.COMPLETED)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"            super.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"     * Formats date into a String for printing.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"     * @return String of the formatted date in the form Mmm d yyyy.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"    private String formatDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"        return dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isOnDate(String date) {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"        return this.dueDate.equals(Parser.parseDate(date));","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"    public String convertToString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"        return super.formatString(DEADLINE_IDENTIFIER, String.format(\"%s %s\", this.dueDate, this.dueTime));","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"        return this.dueDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"        return this.dueTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"    public boolean checkDueBeforeDate(LocalDate date) {","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"        LocalDate dateNow \u003d LocalDate.now();","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"        boolean isNotOverdue \u003d this.dueDate.isAfter(dateNow) || this.dueDate.isEqual(dateNow);","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"        boolean isBeforeDate \u003d this.dueDate.isEqual(date) || this.dueDate.isBefore(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"        return isNotOverdue \u0026\u0026 isBeforeDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[%s]%s (by: %s %s)\", DEADLINE_IDENTIFIER, super.toString(), formatDate(), dueTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":124}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" * The Event Class represents a task that starts and ends at specific timings.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" * - eventDate","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" * - startTime","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" * - endTime","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    private static final String EVENT_IDENTIFIER \u003d \"E\";","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     * Constructs a new Eveent task from the given description and eventTime.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     * @param description String of the task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"     * @param eventTime String of the given event date, startTime and endTime.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        assert !description.trim().isEmpty() : \"Event was created with empty description\";","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d eventTime.split(\" \", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        this.eventDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        this.startTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        this.endTime \u003d Parser.parseTime(dateInfo[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"     * Constructs a new Eveent task from the given description, eventTime and completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"     * Used when loading from a save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"     * @param completionStatus String indicating the status of completion: 1 if done, 0 if not.","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"     * @param description String of the task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"     * @param eventTime String of the given event date, startTime and endTime.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"    public Event(CompletionStatus completionStatus, String description, String eventTime) {","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        assert !description.trim().isEmpty() : \"Event was created with empty description\";","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        String[] dateInfo \u003d eventTime.split(\" \", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"        if (dateInfo.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"Date or Time\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"        this.eventDate \u003d Parser.parseDate(dateInfo[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        this.startTime \u003d Parser.parseTime(dateInfo[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"        this.endTime \u003d Parser.parseTime(dateInfo[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        if (completionStatus.equals(CompletionStatus.COMPLETED)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"            super.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"     * Formats date into a String for printing.","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"     * @return String of the formatted date in the form Mmm d yyyy.","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"    private String formatDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"        return eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isOnDate(String date) {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"        return this.eventDate.equals(Parser.parseDate(date));","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"    public String convertToString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"        return super.formatString(EVENT_IDENTIFIER, String.format(\"%s %s %s\", this.eventDate, this.startTime,","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"            this.endTime));","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"        return this.eventDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"     * Returns the start time of the Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"        return this.startTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"    public boolean checkDueBeforeDate(LocalDate date) {","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"        LocalDate dateNow \u003d LocalDate.now();","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"        boolean isNotOverdue \u003d this.eventDate.isAfter(dateNow) || this.eventDate.isEqual(dateNow);","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"        boolean isBeforeDate \u003d this.eventDate.isEqual(date) || this.eventDate.isBefore(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"        return isNotOverdue \u0026\u0026 isBeforeDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[%S]%s (by: %s %s-%s)\", EVENT_IDENTIFIER, super.toString(), formatDate(), this.startTime,","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"            this.endTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":131}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * The Task Class is a representation of a task that Duke is keeping track of.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    private static final String INDENTATION \u003d \"  \";","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    private String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"     * @param description The name of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     * Convert the Task into a suitable String for saving into file.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"     * To be overridden by child classes to call formatString in a suitable way.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"     * @return String of the formatted Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    public abstract String convertToString();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"     * Gets the date of the task.","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"     * Default null if type of task doesn\u0027t support date.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"     * @return LocalDate of task.","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"     * Gets the time of the task.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"     * Default null if type of task doesn\u0027t support time.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"     * @return LocalTime of task.","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if the task is due before the given date.","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"     * Defaults to false for tasks without dates.","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"     * @param date LocalDate to be checked against","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"     * @return boolean of the result from the check.","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"    public boolean checkDueBeforeDate(LocalDate date) {","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"        return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"     * Returns the status of whether the task has been completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"     * @return \"✓\" if is completed, \"✗\" if not completed","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"        String doneIcon \u003d \"✓\";","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"        String incompleteIcon \u003d \"✗\";","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"        return (this.isDone ? doneIcon : incompleteIcon);","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if task is done and marks task as done if task is not done","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"     * @return String containing the description of task if not already done, else message that action is redundant.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"    public String markTaskAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"        if (!this.isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"            return Task.INDENTATION + this.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"            return String.format(\"...Wait.  You\u0027ve already completed this task: \u0027%s\u0027 before you dummy!\",","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"                this.description","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"            );","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"     * Formats the task into a suitable String for saving.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"     * @return String containing formatted Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"    public String formatString(String ...args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"        switch (args.length) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"        case 1:","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"            // returns type of task, completion and description as a string","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"            return String.format(\"%s | %d | %s\", args[0], this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"        case 2:","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"            // returns additional date element","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"            return String.format(\"%s | %d | %s | %s\", args[0], this.isDone ? 1 : 0, this.description, args[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(\"Too many arguments for formatting String of Task\");","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if task is completed and returns the result.","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"     * @return boolean of whether task is completed or not.","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"    public boolean checkIsCompleted() {","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if task is due on the given date and returns the result.","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"     * @param date String containing the date in the form dd/mm/yyyy, dd-mm-yyyy or yyyy-mm-dd.","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"     * @return boolean of the result.","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isOnDate(String date) {","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"        return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if tasks description contains the keyword given and returns the result.","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"benedictchuajj"},"content":"     * Both description and keyword will be case insensitive for check.","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"benedictchuajj"},"content":"     * @param keyword String of the keyword to be checked against the description.","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"benedictchuajj"},"content":"     * @return boolean of whether description contains the keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"benedictchuajj"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"benedictchuajj"},"content":"        int result \u003d this.description.toLowerCase().indexOf(keyword.toLowerCase());","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"benedictchuajj"},"content":"        return result !\u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"benedictchuajj"},"content":"     * Compares this task to the other task and returns a value based on which is more urgent.","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"benedictchuajj"},"content":"     * Urgency of a task depends on:","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"benedictchuajj"},"content":"     *   1. isDone","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"benedictchuajj"},"content":"     *   2. dueDate (tasks with due dates are more urgent than tasks without)","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"benedictchuajj"},"content":"     *   3. order of task in the TaskList","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"benedictchuajj"},"content":"     * @param other the other Task to compare to","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"     * @return","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"benedictchuajj"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"benedictchuajj"},"content":"        if (this.isDone \u0026\u0026 !other.isDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"benedictchuajj"},"content":"            return 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"benedictchuajj"},"content":"        } else if (this.isDone \u0026\u0026 other.isDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"benedictchuajj"},"content":"            return -1;","lastModifiedDate":"2021-09-04"},{"lineNumber":162,"author":{"gitId":"benedictchuajj"},"content":"        } else if (!this.isDone \u0026\u0026 other.isDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"benedictchuajj"},"content":"            return -1;","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"benedictchuajj"},"content":"        if (this instanceof ToDo \u0026\u0026 other instanceof ToDo) {","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"benedictchuajj"},"content":"            return -1;","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"benedictchuajj"},"content":"        } else if (this instanceof ToDo \u0026\u0026 !(other instanceof ToDo)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"benedictchuajj"},"content":"            return 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"benedictchuajj"},"content":"            assert !(this instanceof ToDo) : \"This class is a ToDo\";","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"benedictchuajj"},"content":"            int compareDate \u003d this.getDate().compareTo(other.getDate());","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"benedictchuajj"},"content":"            if (compareDate \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"benedictchuajj"},"content":"                return this.getTime().compareTo(other.getTime());","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"benedictchuajj"},"content":"            return compareDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":184,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":185,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2021-08-21"},{"lineNumber":186,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":187,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":187}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":" * The ToDo Class represents a task without any date/time attached to it.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * It contains information relating to the task:","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" * - description","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":" * - isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    private static final String TODO_IDENTIFIER \u003d \"T\";","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"     * Constructs a new ToDo task from the given description.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"     * @param description String of the task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        assert !description.trim().isEmpty() : \"ToDo was created with empty description\";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"     * Constructs a ToDo task from an existing task description and completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"     * Used when loading from a save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"     * @param completionStatus String indicating the status of completion: 1 if done, 0 if not.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"     * @param description String of the task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    public ToDo(CompletionStatus completionStatus, String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        assert !description.trim().isEmpty() : \"ToDo was created with empty description\";","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        if (completionStatus.equals(CompletionStatus.COMPLETED)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"            super.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    public String convertToString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        return super.formatString(TODO_IDENTIFIER);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"[%s]%s\", TODO_IDENTIFIER, super.toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":53}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    private HBox dialogBubble;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    private Circle clip;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    private DialogBox(String text, Image img, Insets labelMargin, Paint backgroundColor, Paint textColor) {","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        // Initialisation","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"        dialog.setTextFill(textColor);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        // Set circle clip for ImageView","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        clip \u003d new Circle(50, 50, 50); // Circular clip for image","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        // Add custom styling for dialog bubbles","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"        dialog.setBackground(new Background(new BackgroundFill(backgroundColor, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        dialogBubble.setPadding(labelMargin);","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"     * Factory method to create a DialogBox for the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"     * @param text String containing the user\u0027s original input command.","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"     * @param img Image of the user\u0027s profile picture.","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"     * @return DialogBox containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"        return new DialogBox(text, img, new Insets(0, 16, 0, 0), Color.LIGHTBLUE, Color.BLACK);","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"     * Factory method to create a DialogBox for Duke\u0027s usual response when the command is successful.","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"     * @param text String containing Duke\u0027s response to the user\u0027s input command.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"     * @param img Image of Duke\u0027s profile picture.","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"     * @return DialogBox containing Duke\u0027s response.","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"        DialogBox db \u003d new DialogBox(text, img, new Insets(0, 0, 0, 16),","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"            Color.LIGHTGRAY, Color.BLACK","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"        db.flip();","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"        return db;","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"     * Factory method to create a DialogBox for Duke\u0027s response when the command results in an error.","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"     * @param text String containing Duke\u0027s response to the user\u0027s input command.","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"     * @param img Image of Duke\u0027s profile picture.","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"     * @return DialogBox containing Duke\u0027s response.","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"    public static DialogBox getDukeErrorDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"        DialogBox db \u003d new DialogBox(text, img, new Insets(0, 0, 0, 16),","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"            Color.LIGHTGRAY, Color.RED","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"benedictchuajj":112}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/KaigainikiUser.jpeg\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/SuiseiDuke.jpeg\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"     * Initializes the GUI upon startup of the application.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        String greetings \u003d \"Hey! I\u0027m TsunDuke!\\nWhat do you want?\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"            + \"...It\u0027s not like I want to help you or anything!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"            DialogBox.getDukeDialog(greetings, dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"     * Sets an instance of Duke to be used for the application.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"     * @param d The Duke to be set.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        DialogBox dukeDialog \u003d duke.checkIfErrorMessage(response)","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"            ? DialogBox.getDukeErrorDialog(response, dukeImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"            : DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"            dukeDialog","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"        if (response.equals(\"Hmph! It\u0027s not like I want to see you again or anything!\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            //@@author James_D","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            //Reused from","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            // https://stackoverflow.com/questions/27334455/how-to-close-a-stage-after-a-certain-amount-of-time-javafx","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            // with minor modifications","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            delay.play();","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            //@author","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"benedictchuajj":73,"-":13}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.RemindCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.InvalidDateInputException;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.InvalidTimeInputException;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingIndexException;","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":" * Class to deal with making sense of the user\u0027s inputted command.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"     * Returns the Command based on the first keyword from the full command (input) given by the user,.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"     * Command will contain relevant info from the rest of the input if applicable.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"     * @param input the String that the user enters into Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"     * @return the corresponding Command based from the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    public Command getCommand(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        switch (input.split(\" \")[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        case \"list\":","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"            return new ListCommand(this.tasks, \"all\", null);","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"        case \"check\":","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"            return new ListCommand(this.tasks, \"date\", getTaskDescription(input));","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        case \"find\":","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"            return new ListCommand(this.tasks, \"keyword\", getTaskDescription(input));","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        case \"remind\":","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"            return new RemindCommand(this.tasks, getRemindArgument(input));","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        case \"done\":","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"            return new DoneCommand(this.tasks, getAllTaskIndexes(input));","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"            return new AddCommand(this.tasks, getTaskDescription(input), \"ToDo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"            return new AddCommand(this.tasks, getTaskDescription(input), \"Deadline\");","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        case \"event\":","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"            return new AddCommand(this.tasks, getTaskDescription(input), \"Event\");","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"            return new DeleteCommand(this.tasks, getTaskIndex(input));","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"            return new InvalidCommand(input);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in the original inputted command and filters it for the task description.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"     * The description is the command string minus the first word which is the command itself.","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"     * @param command the original command inputted by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"     * @return the filtered String that contains only the description of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"     * @throws EmptyDescriptionException when description is missing (including if it contains only white space).","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"    public static String getTaskDescription(String command) throws EmptyDescriptionException {","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"        String[] commandItems \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"        if (commandItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"        String filteredDescription \u003d commandItems[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"        if (filteredDescription.trim().isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"        return filteredDescription.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in the original inputted command for a reminder and filters it for the command argument.","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"     * The argument is the command string minus the first word which is the command itself.","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"     * @param command the original command inputted by the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"     * @return the filtered String that contains the reminder argument.","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"     * @throws InvalidArgumentException when description is missing (including if it contains only white space).","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"    public static String getRemindArgument(String command) throws InvalidArgumentException {","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"        String[] commandItems \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"        if (commandItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidArgumentException(\"empty\");","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"        String argument \u003d commandItems[1].trim();","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidArgumentException(argument);","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"        if (!argument.matches(\"today|week|next\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidArgumentException(argument);","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"        return argument;","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in the original inputted command and filters and parses it for the given integer index.","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"     * The index is the full command string minus the first word which is the command itself.","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"     * @param command the original command inputted by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"     * @return the filtered and parsed int that refers to the index of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"     * @throws InvalidArgumentException when index given (in String) is invalid.","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"     * @throws MissingIndexException when index is missing (including if it contains only white space).","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"    public static int getTaskIndex(String command) throws InvalidArgumentException, MissingIndexException {","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"        String[] commandItems \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"        if (commandItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"        String indexString \u003d commandItems[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"benedictchuajj"},"content":"        if (indexString.trim().isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"benedictchuajj"},"content":"            return parseInt(indexString);","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"benedictchuajj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidArgumentException(indexString);","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in the original inputted command and filters and parses it for the given integer index.","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"benedictchuajj"},"content":"     * The index is the full command string minus the first word which is the command itself.","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"benedictchuajj"},"content":"     * @param command the original command inputted by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"benedictchuajj"},"content":"     * @return the filtered and parsed int that refers to the index of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"benedictchuajj"},"content":"     * @throws InvalidArgumentException when index given (in String) is invalid.","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"benedictchuajj"},"content":"     * @throws MissingIndexException when index is missing (including if it contains only white space).","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"    public static int[] getAllTaskIndexes(String command) throws InvalidArgumentException, MissingIndexException {","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"        ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"benedictchuajj"},"content":"        // Do checks","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"benedictchuajj"},"content":"        String[] commandItems \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"benedictchuajj"},"content":"        if (commandItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"benedictchuajj"},"content":"        String indexString \u003d commandItems[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"benedictchuajj"},"content":"        if (indexString.trim().isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"benedictchuajj"},"content":"        // Store all valid indexes","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"benedictchuajj"},"content":"        String[] stringIndexes \u003d command.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"benedictchuajj"},"content":"        for (int i \u003d 1; i \u003c stringIndexes.length; i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"benedictchuajj"},"content":"            if (!stringIndexes[i].isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":173,"author":{"gitId":"benedictchuajj"},"content":"                try {","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"benedictchuajj"},"content":"                    indexes.add(parseInt(stringIndexes[i]));","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"benedictchuajj"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"benedictchuajj"},"content":"                    throw new InvalidArgumentException(stringIndexes[i]);","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"benedictchuajj"},"content":"        return indexes.stream().mapToInt(Integer::intValue).toArray();","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in a date in the form of a string and parses it to return a LocalDate object.","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"benedictchuajj"},"content":"     * The date is recognised if given in the form dd/mm/yyyy, dd-mm-yyyy or yyyy-mm-dd.","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"benedictchuajj"},"content":"     * @param dateString String containing the date in the form dd/mm/yyyy, dd-mm-yyyy or yyyy-mm-dd.","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"benedictchuajj"},"content":"     * @return LocalDate that is parsed from the given dateString.","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"benedictchuajj"},"content":"     * @throws InvalidDateInputException if date is in the wrong form or an invalid date is given.","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"benedictchuajj"},"content":"    public static LocalDate parseDate(String dateString) throws InvalidDateInputException {","lastModifiedDate":"2021-08-21"},{"lineNumber":193,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":194,"author":{"gitId":"benedictchuajj"},"content":"            if (dateString.matches(\"\\\\d{2}-\\\\d{2}-\\\\d{4}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":195,"author":{"gitId":"benedictchuajj"},"content":"                // in the form dd-mm-yyyy","lastModifiedDate":"2021-08-21"},{"lineNumber":196,"author":{"gitId":"benedictchuajj"},"content":"                String[] d \u003d dateString.split(\"-\", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":197,"author":{"gitId":"benedictchuajj"},"content":"                return LocalDate.parse(String.format(\"%s-%s-%s\", d[2], d[1], d[0]));","lastModifiedDate":"2021-08-21"},{"lineNumber":198,"author":{"gitId":"benedictchuajj"},"content":"            } else if (dateString.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":199,"author":{"gitId":"benedictchuajj"},"content":"                // in the form dd/mm/yyyy","lastModifiedDate":"2021-08-21"},{"lineNumber":200,"author":{"gitId":"benedictchuajj"},"content":"                String[] d \u003d dateString.split(\"/\", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"benedictchuajj"},"content":"                return LocalDate.parse(String.format(\"%s-%s-%s\", d[2], d[1], d[0]));","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"benedictchuajj"},"content":"            } else if (dateString.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":203,"author":{"gitId":"benedictchuajj"},"content":"                // in the form yyyy-mm-dd","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"benedictchuajj"},"content":"                return LocalDate.parse(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":205,"author":{"gitId":"benedictchuajj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":206,"author":{"gitId":"benedictchuajj"},"content":"                throw new InvalidDateInputException(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":207,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":208,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":209,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidDateInputException(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":210,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":211,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":212,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":213,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"benedictchuajj"},"content":"     * Takes in a time in the form of a string and parses it to return a LocalTime object.","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"benedictchuajj"},"content":"     * The time is recognised if it is in the 24-hour format and given in the form hhmm or hh:mm.","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":217,"author":{"gitId":"benedictchuajj"},"content":"     * @param timeString String containing the time (in 24hr format) in the form hhmm or hh:mm.","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"benedictchuajj"},"content":"     * @return LocalTime that is parsed from the given timeString.","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"benedictchuajj"},"content":"     * @throws InvalidTimeInputException if time is in the wrong form or an invalid time is given.","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"benedictchuajj"},"content":"    public static LocalTime parseTime(String timeString) throws InvalidTimeInputException {","lastModifiedDate":"2021-08-21"},{"lineNumber":222,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":223,"author":{"gitId":"benedictchuajj"},"content":"            if (timeString.indexOf(\u0027:\u0027) \u003d\u003d -1 \u0026\u0026 timeString.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":224,"author":{"gitId":"benedictchuajj"},"content":"                // in the form hhmm","lastModifiedDate":"2021-08-21"},{"lineNumber":225,"author":{"gitId":"benedictchuajj"},"content":"                String[] t \u003d {timeString.substring(0, 2), timeString.substring(2)};","lastModifiedDate":"2021-08-21"},{"lineNumber":226,"author":{"gitId":"benedictchuajj"},"content":"                return LocalTime.parse(String.format(\"%s:%s\", t[0], t[1]));","lastModifiedDate":"2021-08-21"},{"lineNumber":227,"author":{"gitId":"benedictchuajj"},"content":"            } else if (timeString.indexOf(\u0027:\u0027) \u003d\u003d 2 \u0026\u0026 timeString.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-21"},{"lineNumber":228,"author":{"gitId":"benedictchuajj"},"content":"                //in the form hh:mm","lastModifiedDate":"2021-08-21"},{"lineNumber":229,"author":{"gitId":"benedictchuajj"},"content":"                return LocalTime.parse(timeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":230,"author":{"gitId":"benedictchuajj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":231,"author":{"gitId":"benedictchuajj"},"content":"                throw new InvalidTimeInputException(timeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":232,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":233,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":234,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidTimeInputException(timeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":235,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":236,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":237,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":238,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"benedictchuajj"},"content":"     * Parses the actual task description and date \u0026 time given from a full Deadline task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":240,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":241,"author":{"gitId":"benedictchuajj"},"content":"     * @param task full description for the given Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"benedictchuajj"},"content":"     * @return String[] containing the actual task description and date \u0026 time","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"benedictchuajj"},"content":"     * @throws MissingArgumentException if description is missing the /by argument","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"benedictchuajj"},"content":"    public static String[] parseDeadlineDate(String task) throws MissingArgumentException {","lastModifiedDate":"2021-08-21"},{"lineNumber":246,"author":{"gitId":"benedictchuajj"},"content":"        String[] deadlineDetails \u003d task.split(\" /by \");","lastModifiedDate":"2021-08-21"},{"lineNumber":247,"author":{"gitId":"benedictchuajj"},"content":"        if (deadlineDetails.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":248,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"\u0027/by\u0027\", \"Deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":249,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":250,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":251,"author":{"gitId":"benedictchuajj"},"content":"        return deadlineDetails;","lastModifiedDate":"2021-08-21"},{"lineNumber":252,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":253,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":254,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"benedictchuajj"},"content":"     * Parses the actual task description and date \u0026 time given from a full Event task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":256,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":257,"author":{"gitId":"benedictchuajj"},"content":"     * @param task full description for the given Eveent task.","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"benedictchuajj"},"content":"     * @return String[] containing the actual task description and date \u0026 time","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"benedictchuajj"},"content":"     * @throws MissingArgumentException if description is missing the /at argument","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"benedictchuajj"},"content":"    public static String[] parseEventDate(String task) throws MissingArgumentException {","lastModifiedDate":"2021-08-21"},{"lineNumber":262,"author":{"gitId":"benedictchuajj"},"content":"        String[] eventDetails \u003d task.split(\" /at \");","lastModifiedDate":"2021-08-21"},{"lineNumber":263,"author":{"gitId":"benedictchuajj"},"content":"        if (eventDetails.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":264,"author":{"gitId":"benedictchuajj"},"content":"            throw new MissingArgumentException(\"\u0027/at\u0027\", \"Event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":265,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":266,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":267,"author":{"gitId":"benedictchuajj"},"content":"        return eventDetails;","lastModifiedDate":"2021-08-21"},{"lineNumber":268,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":269,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":269}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" * Class that deals with loading tasks from save file and saving tasks in the file.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    private boolean isDirectoryCreated;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    private boolean isFileCreated;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"     * Checks if directory and file exists when created.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    public Storage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        this.isDirectoryCreated \u003d directory.exists();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        this.isFileCreated \u003d file.exists();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"     * Loads tasks from the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"     * @return Tasks from the saved file in an ArrayList of String","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    public ArrayList\u003cString\u003e retrieveData() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        if (isFileCreated) {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"                File f \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"                Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"                ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"                    tasks.add(sc.nextLine());","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"                return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"                System.out.println(\"Something went wrong:  \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"                return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"     * Saves tasks into the save file from a given String of Tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"     * @param tasks String containing all the tasks to save.","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    public void writeToFile(String tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        // Checks if directory exists, creates if it doesn\u0027t","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        if (!this.isDirectoryCreated) {","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"            File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"            this.isDirectoryCreated \u003d directory.exists();","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"        // Checks if file exists, creates if it doesn\u0027t","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"        if (!this.isFileCreated) {","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"            boolean isCreationSuccess;","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"                isCreationSuccess \u003d file.createNewFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"                this.isFileCreated \u003d isCreationSuccess;","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"                System.out.println(\"Something went wrong:  \" + e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"        // Write to file","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"            fw.write(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"            fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"            System.out.println(\"Something went wrong:  \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":95}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.CompletionStatus;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":" * The TaskList Class is a representation of a list of tasks that Duke is keeping track of.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":" * Contains functions to add/remove Tasks in the list and to display the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":" * @author Benedict Chua","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    /** Constants for formatting messages of Duke\u0027s response */","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    private static final String TASK_INDENT \u003d \"  \";","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    private static final String ADD_MESSAGE \u003d \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    private static final String COMPLETE_SINGULAR_MESSAGE \u003d \"You completed a task! \"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        + \"Maybe you aren\u0027t so incompetent after all.\\n%s\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    private static final String COMPLETE_MULTIPLE_MESSAGE \u003d \"You completed some tasks! \"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        + \"Maybe you aren\u0027t so incompetent after all.\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    private static final String DELETE_MESSAGE \u003d \"I\u0027ve deleted this task so show me some gratitude!\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    private static final String NO_DUE_TASK \u003d \"Great job! You don\u0027t have any remaining tasks.\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    private static final String REMINDER_MESSAGE \u003d \"Reminder:\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"     * Constructs a TaskList with the given arguments.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"     * If existing task is empty, creates an empty ArrayList of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"     * Otherwise, parses the Tasks from the saved file and adds it to the ArrayList of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"     * @param existingTasks Tasks in the formatted into a String from the saved file.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"     * @param storage Storage object to use to save state of TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    public TaskList(ArrayList\u003cString\u003e existingTasks, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"        if (existingTasks !\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"            for (String taskString : existingTasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"                String[] taskDetails \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"                int completionNumber \u003d parseInt(taskDetails[1]);","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"                CompletionStatus completionStatus \u003d completionNumber \u003d\u003d 1","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"                    ? CompletionStatus.COMPLETED","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"                    : CompletionStatus.INCOMPLETE;","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"                switch (taskDetails[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"                case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"                    tasks.add(new ToDo(completionStatus, taskDetails[2]));","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"                case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"                    tasks.add(new Deadline(completionStatus, taskDetails[2], taskDetails[3]));","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"                case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"                    tasks.add(new Event(completionStatus, taskDetails[2], taskDetails[3]));","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"                default:","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"                    // Assertion for control-flow invariant","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"                    throw new AssertionError(String.format(\"Letter representing task is invalid: %s\", taskDetails[0]));","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"     * Converts and formats current TaskList into a String suitable to write into saved file.","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"     * @return Formatted TaskList in the form of a String.","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"    protected String convertListToString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"        return tasks.stream().map(task -\u003e String.format(\"%s\\n\", task.convertToString())).collect(Collectors.joining());","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"     * Gets the task information of the task that is being operated on and returns it as a String.","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"     * @param task Task being operated on.","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"     * @return Formatted String of task information.","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"    private String getTaskInfo(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"%s%s\\n\", TASK_INDENT, task);","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"     * Gets number of tasks remaining in the TaskList and returns it in a formatted message.","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"     * @return Formatted String of remaining tasks in the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"    private String getNumberOfTasksRemaining() {","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"        return String.format(\"Now you have %d %s in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"            tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"     * Adds a given task to the tasks list.","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"     * Task can be in the from of ToDo, Deadline or Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"     * @param task the task to add to the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"     * @return String representation of messages stating that the task has been added","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"    public String addToList(String task, String typeOfTask) throws MissingArgumentException {","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"        case \"ToDo\":","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"            tasks.add(new ToDo(task));","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"        case \"Deadline\":","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"            String[] deadlineDetails \u003d Parser.parseDeadlineDate(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"            tasks.add(new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"        case \"Event\":","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"            String[] eventDetails \u003d Parser.parseEventDate(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"            tasks.add(new Event(eventDetails[0], eventDetails[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"            // Assertion for control-flow invariant","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(String.format(\"Type of task is invalid: %s\", typeOfTask));","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"        storage.writeToFile(convertListToString());","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"        return ADD_MESSAGE + getTaskInfo(tasks.get(tasks.size() - 1)) + getNumberOfTasksRemaining();","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"benedictchuajj"},"content":"     * Prints the tasks in the list with indexing starting from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"benedictchuajj"},"content":"     * If dateString is not null, prints tasks that are due on that date.","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"benedictchuajj"},"content":"     * Otherwise, prints all tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"benedictchuajj"},"content":"     * @param filterType the type of filtering to be done when displaying list","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"benedictchuajj"},"content":"     * @param filterCondition String containing the respective filtering condition (expects date or keyword).","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"benedictchuajj"},"content":"    public String listTasks(String filterType, String filterCondition) {","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"benedictchuajj"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"benedictchuajj"},"content":"        switch (filterType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"benedictchuajj"},"content":"        case \"all\":","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"benedictchuajj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"benedictchuajj"},"content":"                Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"benedictchuajj"},"content":"                tasksString \u003d tasksString + String.format(\"%d:%s\\n\", i + 1, currTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"        case \"date\":","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"            int dateIndex \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"benedictchuajj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"benedictchuajj"},"content":"                Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"benedictchuajj"},"content":"                if (currTask.isOnDate(filterCondition)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"benedictchuajj"},"content":"                    tasksString \u003d tasksString + String.format(\"%d:%s\\n\", dateIndex, currTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"benedictchuajj"},"content":"                    dateIndex++;","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"benedictchuajj"},"content":"        case \"keyword\":","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"benedictchuajj"},"content":"            int keywordIndex \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"benedictchuajj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"benedictchuajj"},"content":"                Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"benedictchuajj"},"content":"                if (currTask.containsKeyword(filterCondition)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"benedictchuajj"},"content":"                    tasksString \u003d tasksString + String.format(\"%d:%s\\n\", keywordIndex, currTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"benedictchuajj"},"content":"                    keywordIndex++;","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":175,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"benedictchuajj"},"content":"        case \"reminder\":","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"benedictchuajj"},"content":"            int reminderIndex \u003d 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"benedictchuajj"},"content":"            int numOfDays \u003d parseInt(filterCondition);","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"benedictchuajj"},"content":"            LocalDate remindDate \u003d LocalDate.now().plusDays(numOfDays);","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"benedictchuajj"},"content":"            tasksString \u003d REMINDER_MESSAGE;","lastModifiedDate":"2021-09-10"},{"lineNumber":181,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"benedictchuajj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"benedictchuajj"},"content":"                Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"benedictchuajj"},"content":"                boolean isBeforeRemindDate \u003d currTask.checkDueBeforeDate(remindDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"benedictchuajj"},"content":"                boolean isNotDone \u003d !currTask.checkIsCompleted();","lastModifiedDate":"2021-09-04"},{"lineNumber":186,"author":{"gitId":"benedictchuajj"},"content":"                if (isBeforeRemindDate \u0026\u0026 isNotDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":187,"author":{"gitId":"benedictchuajj"},"content":"                    tasksString \u003d tasksString + String.format(\"%d:%s\\n\", reminderIndex, currTask);","lastModifiedDate":"2021-09-04"},{"lineNumber":188,"author":{"gitId":"benedictchuajj"},"content":"                    reminderIndex++;","lastModifiedDate":"2021-09-04"},{"lineNumber":189,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":190,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"benedictchuajj"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":192,"author":{"gitId":"benedictchuajj"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"benedictchuajj"},"content":"            // Assertion for control-flow invariant","lastModifiedDate":"2021-09-03"},{"lineNumber":194,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(String.format(\"Filter type is invalid: %s\", filterType));","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":196,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"benedictchuajj"},"content":"        return tasksString.isEmpty()","lastModifiedDate":"2021-09-03"},{"lineNumber":198,"author":{"gitId":"benedictchuajj"},"content":"            ? \"You have no tasks currently.\"","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"benedictchuajj"},"content":"            : tasksString;","lastModifiedDate":"2021-08-29"},{"lineNumber":200,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":203,"author":{"gitId":"benedictchuajj"},"content":"     * Gets the next most urgent task (that is not done) in the task list.","lastModifiedDate":"2021-09-04"},{"lineNumber":204,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":205,"author":{"gitId":"benedictchuajj"},"content":"     * @return String of the result containing the next most urgent task.","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":207,"author":{"gitId":"benedictchuajj"},"content":"    public String getNextDueTask() {","lastModifiedDate":"2021-09-04"},{"lineNumber":208,"author":{"gitId":"benedictchuajj"},"content":"        Task mostUrgentTask \u003d tasks.get(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":209,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":210,"author":{"gitId":"benedictchuajj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":211,"author":{"gitId":"benedictchuajj"},"content":"            Task compareTask \u003d tasks.get(i);","lastModifiedDate":"2021-09-04"},{"lineNumber":212,"author":{"gitId":"benedictchuajj"},"content":"            if (mostUrgentTask.compareTo(compareTask) \u003e 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":213,"author":{"gitId":"benedictchuajj"},"content":"                mostUrgentTask \u003d compareTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":214,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":215,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":216,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":217,"author":{"gitId":"benedictchuajj"},"content":"        if (mostUrgentTask.checkIsCompleted()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":218,"author":{"gitId":"benedictchuajj"},"content":"            return NO_DUE_TASK;","lastModifiedDate":"2021-09-04"},{"lineNumber":219,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":220,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":221,"author":{"gitId":"benedictchuajj"},"content":"        return REMINDER_MESSAGE + TASK_INDENT + mostUrgentTask.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":222,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":223,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":224,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":225,"author":{"gitId":"benedictchuajj"},"content":"     * Marks tasks based on index as done if it exists.","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":227,"author":{"gitId":"benedictchuajj"},"content":"     * @param indexes index(es) given by the User for Task in the TaskList starting from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":228,"author":{"gitId":"benedictchuajj"},"content":"     * @return message of the completion of the Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"benedictchuajj"},"content":"     * @throws InvalidIndexException if index given does not exist in the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":230,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":231,"author":{"gitId":"benedictchuajj"},"content":"    public String markTaskAsDone(int... indexes) throws InvalidIndexException {","lastModifiedDate":"2021-08-29"},{"lineNumber":232,"author":{"gitId":"benedictchuajj"},"content":"        String message;","lastModifiedDate":"2021-08-29"},{"lineNumber":233,"author":{"gitId":"benedictchuajj"},"content":"        if (indexes.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":234,"author":{"gitId":"benedictchuajj"},"content":"            if (indexes[0] \u003c\u003d 0 || indexes[0] \u003e tasks.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":235,"author":{"gitId":"benedictchuajj"},"content":"                throw new InvalidIndexException(tasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":236,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":237,"author":{"gitId":"benedictchuajj"},"content":"            message \u003d String.format(COMPLETE_SINGULAR_MESSAGE, tasks.get(indexes[0] - 1).markTaskAsDone());","lastModifiedDate":"2021-09-03"},{"lineNumber":238,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":239,"author":{"gitId":"benedictchuajj"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":240,"author":{"gitId":"benedictchuajj"},"content":"            message \u003d COMPLETE_MULTIPLE_MESSAGE;","lastModifiedDate":"2021-09-03"},{"lineNumber":241,"author":{"gitId":"benedictchuajj"},"content":"            // Assertion for internal invariant","lastModifiedDate":"2021-09-03"},{"lineNumber":242,"author":{"gitId":"benedictchuajj"},"content":"            assert indexes.length \u003e 0 : \"No indexes have been specified\";","lastModifiedDate":"2021-09-03"},{"lineNumber":243,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":244,"author":{"gitId":"benedictchuajj"},"content":"            for (int index : indexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":245,"author":{"gitId":"benedictchuajj"},"content":"                if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":246,"author":{"gitId":"benedictchuajj"},"content":"                    throw new InvalidIndexException(tasks.size());","lastModifiedDate":"2021-08-27"},{"lineNumber":247,"author":{"gitId":"benedictchuajj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":248,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":249,"author":{"gitId":"benedictchuajj"},"content":"                message \u003d message + String.format(\"%s\\n\", tasks.get(index - 1).markTaskAsDone());","lastModifiedDate":"2021-09-02"},{"lineNumber":250,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":251,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":252,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":253,"author":{"gitId":"benedictchuajj"},"content":"        storage.writeToFile(convertListToString());","lastModifiedDate":"2021-08-21"},{"lineNumber":254,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":255,"author":{"gitId":"benedictchuajj"},"content":"        return message;","lastModifiedDate":"2021-08-21"},{"lineNumber":256,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":257,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":258,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":259,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"benedictchuajj"},"content":"     * Deletes a task based on index if it exists.","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":262,"author":{"gitId":"benedictchuajj"},"content":"     * @param index index given by the User for Task in the TaskList starting from 1.","lastModifiedDate":"2021-08-22"},{"lineNumber":263,"author":{"gitId":"benedictchuajj"},"content":"     * @return message of the deletion of the Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"benedictchuajj"},"content":"     * @throws InvalidIndexException if index given does not exist in the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"benedictchuajj"},"content":"    public String deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2021-08-29"},{"lineNumber":267,"author":{"gitId":"benedictchuajj"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":268,"author":{"gitId":"benedictchuajj"},"content":"            throw new InvalidIndexException(tasks.size());","lastModifiedDate":"2021-08-27"},{"lineNumber":269,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":270,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":271,"author":{"gitId":"benedictchuajj"},"content":"        Task deletedTask \u003d tasks.remove(index - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":272,"author":{"gitId":"benedictchuajj"},"content":"        String message \u003d DELETE_MESSAGE + getTaskInfo(deletedTask) + getNumberOfTasksRemaining();","lastModifiedDate":"2021-09-03"},{"lineNumber":273,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":274,"author":{"gitId":"benedictchuajj"},"content":"        storage.writeToFile(convertListToString());","lastModifiedDate":"2021-08-21"},{"lineNumber":275,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":276,"author":{"gitId":"benedictchuajj"},"content":"        return message;","lastModifiedDate":"2021-08-21"},{"lineNumber":277,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":278,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":279,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":279}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"\u003cfx:root","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"        alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"        maxHeight\u003d\"Infinity\"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        \u003cHBox","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"                fx:id\u003d\"dialogBubble\"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"                alignment\u003d\"TOP_LEFT\"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        \u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"            \u003cLabel","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"                    fx:id\u003d\"dialog\"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"                    text\u003d\"Label\"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"                    wrapText\u003d\"true\"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"                    style\u003d\"-fx-label-padding: 4 10 4 10;\"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"            /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        \u003cImageView","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"                fx:id\u003d\"displayPicture\"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"                fitHeight\u003d\"99.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"                fitWidth\u003d\"99.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"                pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"                preserveRatio\u003d\"true\"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        \u003cInsets","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"                bottom\u003d\"15.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"                left\u003d\"5.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"                right\u003d\"5.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"                top\u003d\"15.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"benedictchuajj":46}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"\u003cAnchorPane","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"        id\u003d\"pane\"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"        maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"        prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"        xmlns\u003d\"http://javafx.com/javafx/16\"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        fx:controller\u003d\"duke.ui.MainWindow\"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        \u003cTextField","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"                fx:id\u003d\"userInput\"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"                opacity\u003d\"0.88\"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"                prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                textFill\u003d\"#0703f0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        \u003cScrollPane","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"                fx:id\u003d\"scrollPane\"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"                hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"                hvalue\u003d\"1.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"                prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"                prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"                vvalue\u003d\"1.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        \u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"                \u003cVBox","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"                        fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"                        prefHeight\u003d\"552.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"                        prefWidth\u003d\"388.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"                /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"benedictchuajj":58}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\", \"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[D][✗] return book (by: Aug 23 2021 20:00)\", task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    public void testSaveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(CompletionStatus.COMPLETED, \"return book\", \"23/08/2021 2000\");","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"D | 1 | return book | 2021-08-23 20:00\", task.convertToString());","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(CompletionStatus.COMPLETED, \"return book\", \"23/08/2021 2000\");","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"✓\", task.getStatusIcon());","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        LocalDate date \u003d LocalDate.of(2021, 9, 4);","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\", \"04/09/2021 2000\");","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(date, task.getDate());","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        LocalTime time \u003d LocalTime.of(20, 0);","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\", \"04/09/2021 2000\");","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(time, task.getTime());","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\", \"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[D][✓] return book (by: Aug 23 2021 20:00)\", task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_sameDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\", \"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(true, task.isOnDate(\"2021-08-23\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_differentDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"        Deadline task \u003d new Deadline(\"return book\", \"23/08/2021 2000\");","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(false, task.isOnDate(\"2021-08-21\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":61}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class EventTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\", \"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[E][✗] project meeting (by: Aug 23 2021 20:00-22:00)\", task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    public void testSaveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(CompletionStatus.COMPLETED, \"project meeting\",","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"            \"23/08/2021 2000 2200\");","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"E | 1 | project meeting | 2021-08-23 20:00 22:00\", task.convertToString());","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(CompletionStatus.COMPLETED, \"project meeting\",","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"            \"23/08/2021 2000 2200\");","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"✓\", task.getStatusIcon());","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        LocalDate date \u003d LocalDate.of(2021, 9, 4);","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\", \"04/09/2021 2000 2200\");","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(date, task.getDate());","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        LocalTime time \u003d LocalTime.of(20, 0);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\", \"04/09/2021 2000 2200\");","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(time, task.getTime());","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\", \"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[E][✓] project meeting (by: Aug 23 2021 20:00-22:00)\", task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_sameDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\", \"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(true, task.isOnDate(\"2021-08-23\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate_differentDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"        Event task \u003d new Event(\"project meeting\", \"23/08/2021 2000 2200\");","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(false, task.isOnDate(\"2021-08-21\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":63}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[T][✗] read book\", task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    public void testSaveAsString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(CompletionStatus.COMPLETED, \"read book\");","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"T | 1 | read book\", task.convertToString());","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(CompletionStatus.COMPLETED, \"read book\");","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"✓\", task.getStatusIcon());","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(null, task.getDate());","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(null, task.getTime());","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"    public void testCheckDueBeforeDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(false, task.checkDueBeforeDate(date));","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(CompletionStatus.COMPLETED, \"read book\");","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"[T][✓] read book\", task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"    public void testOnDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        ToDo task \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(false, task.isOnDate(\"2021-08-23\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":59}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetCommand_byeCommand_returnsExitCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        Parser parser \u003d new Parser(new TaskList(null, null));","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(parser.getCommand(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseTestDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"return book\", Parser.getTaskDescription(\"todo return book\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseRemindArguments_inputToday_returnsToday() {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"today\", Parser.getRemindArgument(\"remind today\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseRemindArguments_inputWeek_returnsWeek() {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"week\", Parser.getRemindArgument(\"remind week\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseRemindArguments_inputNext_returnsNext() {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"next\", Parser.getRemindArgument(\"remind next\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseRemindArguments_invalidInput_throwsException() {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(\"tomorrow\", Parser.getRemindArgument(\"remind tomorrow\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"            fail();","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(\"BAKA! I don\u0027t understand this argument in your command!\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"                + \"Argument: tomorrow\\n\" + \"You might want to check for spelling and potential whitespaces!\",","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"                e.getMessage()","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"            );","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseTaskIndex() {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(4, Parser.getTaskIndex(\"done 4\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseMultipleTaskIndex() {","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new int[] {4, 5}, Parser.getAllTaskIndexes(\"done 4 5\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(LocalDate.parse(\"2021-08-21\"), Parser.parseDate(\"21/08/2021\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(LocalTime.parse(\"21:00\"), Parser.parseTime(\"2100\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseDeadlineDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[] {\"return book\", \"21/08/2021 2100\"},","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"                Parser.parseDeadlineDate(\"return book /by 21/08/2021 2100\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"    public void testParseEventDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"        assertArrayEquals(new String[] {\"project meeting\", \"21/08/2021 1400 1600\"},","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"                Parser.parseEventDate(\"project meeting /at 21/08/2021 1400 1600\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":87}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    private TaskList tasks \u003d new TaskList(null, storage);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_toDo_success() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"            \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"                + \"  [T][✗] return book\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"                + \"Now you have 1 task in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"            tasks.addToList(\"return book\", \"ToDo\")","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_deadline_success() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"            \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"                + \"  [D][✗] return book (by: Aug 23 2021 00:00)\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"                + \"Now you have 1 task in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"            tasks.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\")","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_deadline_exceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                    + \"  [D][✗] return book (by: Aug 23 2021 00:00)\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"                    + \"Now you have 1 task in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"                tasks.addToList(\"return book /by 23/08/2021\", \"Deadline\")","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"            );","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(\"BAKA! You\u0027re missing the Date or Time argument to add a Deadline!\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_event_success() {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"            \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"                + \"  [E][✗] return book (by: Aug 23 2021 00:00-01:00)\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"                + \"Now you have 1 task in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"            tasks.addToList(\"return book /at 23/08/2021 0000 0100\", \"Event\")","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"    public void testAddToList_event_exceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"                \"I\u0027ve added this task but it\u0027s not like I did it for you or anything!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"                    + \"  [D][✗] return book (by: Aug 23 2021 00:00)\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"                    + \"Now you have 1 task in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"                tasks.addToList(\"return book /by 23/08/2021 0000 0100\", \"Event\")","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"            );","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"            assertEquals(\"BAKA! You\u0027re missing the \u0027/at\u0027 argument to add a Event!\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkTaskAsDone_singleUncompletedTask() {","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"            \"You completed a task! Maybe you aren\u0027t so incompetent after all.\\n  [T][✓] return book\\n\",","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"            tasks.markTaskAsDone(1)","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkTaskAsDone_singleCompletedTask() {","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"        tasks.markTaskAsDone(1);","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"            \"You completed a task! Maybe you aren\u0027t so incompetent after all.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"                + \"...Wait.  You\u0027ve already completed this task: \u0027return book\u0027 before you dummy!\\n\",","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"            tasks.markTaskAsDone(1)","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"    public void testMarkTaskAsDone_multipleNewTasks() {","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\");","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"            \"You completed some tasks! Maybe you aren\u0027t so incompetent after all.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"                + \"  [T][✓] return book\\n  [D][✓] return book (by: Aug 23 2021 00:00)\\n\",","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"            tasks.markTaskAsDone(1, 2)","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetNextDueTask_noIncompleteTasks() {","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"        tasks.markTaskAsDone(1, 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"Great job! You don\u0027t have any remaining tasks.\\n\", tasks.getNextDueTask());","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetNextDueTask_multipleToDos() {","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"Reminder:\\n  [T][✗] read book\", tasks.getNextDueTask());","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"    public void testGetNextDueTask_nonToDos() {","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book /by 23/08/2021 1800\", \"Deadline\");","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"project meeting /at 2021-08-23 1400 1600\", \"Event\");","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"Reminder:\\n  [E][✗] project meeting (by: Aug 23 2021 14:00-16:00)\",","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"            tasks.getNextDueTask()","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"benedictchuajj"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book\", \"ToDo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"benedictchuajj"},"content":"            \"I\u0027ve deleted this task so show me some gratitude!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"benedictchuajj"},"content":"                + \"  [T][✗] return book\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"benedictchuajj"},"content":"                + \"Now you have 0 tasks in the list. Do your best doing them okay?\",","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"benedictchuajj"},"content":"            tasks.deleteTask(1)","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"benedictchuajj"},"content":"    public void testListTasks_noFiltering() {","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"project meeting /at 2021-08-23 1400 1600\", \"Event\");","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"benedictchuajj"},"content":"            \"1:[T][✗] read book\\n2:[D][✗] return book (by: Aug 23 2021 00:00)\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"                + \"3:[E][✗] project meeting (by: Aug 23 2021 14:00-16:00)\\n\",","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"            tasks.listTasks(\"all\", null)","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"benedictchuajj"},"content":"    public void testListTasks_emptyList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"benedictchuajj"},"content":"            \"You have no tasks currently.\",","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"benedictchuajj"},"content":"            tasks.listTasks(\"all\", null)","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"benedictchuajj"},"content":"    public void testListTasks_withDateFiltering() {","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"project meeting /at 2021-08-23 1400 1600\", \"Event\");","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":173,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"benedictchuajj"},"content":"            \"1:[D][✗] return book (by: Aug 23 2021 00:00)\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"benedictchuajj"},"content":"                    + \"2:[E][✗] project meeting (by: Aug 23 2021 14:00-16:00)\\n\",","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"benedictchuajj"},"content":"            tasks.listTasks(\"date\", \"2021-08-23\")","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":179,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"benedictchuajj"},"content":"    public void testListTasks_withKeywordFiltering() {","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"project meeting /at 2021-08-23 1400 1600\", \"Event\");","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"benedictchuajj"},"content":"            \"1:[T][✗] read book\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"benedictchuajj"},"content":"                + \"2:[D][✗] return book (by: Aug 23 2021 00:00)\\n\",","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"benedictchuajj"},"content":"            tasks.listTasks(\"keyword\", \"re\")","lastModifiedDate":"2021-08-29"},{"lineNumber":190,"author":{"gitId":"benedictchuajj"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":193,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-09-03"},{"lineNumber":194,"author":{"gitId":"benedictchuajj"},"content":"    public void testConvertListToString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"read book\", \"ToDo\");","lastModifiedDate":"2021-09-03"},{"lineNumber":196,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"return book /by 23/08/2021 0000\", \"Deadline\");","lastModifiedDate":"2021-09-03"},{"lineNumber":197,"author":{"gitId":"benedictchuajj"},"content":"        tasks.addToList(\"project meeting /at 2021-08-23 1400 1600\", \"Event\");","lastModifiedDate":"2021-09-03"},{"lineNumber":198,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":199,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(\"T | 0 | read book\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":200,"author":{"gitId":"benedictchuajj"},"content":"            + \"D | 0 | return book | 2021-08-23 00:00\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":201,"author":{"gitId":"benedictchuajj"},"content":"            + \"E | 0 | project meeting | 2021-08-23 14:00 16:00\\n\",","lastModifiedDate":"2021-09-03"},{"lineNumber":202,"author":{"gitId":"benedictchuajj"},"content":"            tasks.convertListToString());","lastModifiedDate":"2021-09-03"},{"lineNumber":203,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":204,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":204}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"deadline return book /by 23/08/2021 0000","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"event project meeting /at 2021-08-23 1400 1600","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"event lecture /at 20-08-2021 16:00 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"todo graduate","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"check 23/08/2021","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"find re","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"deadline submit assignment","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"event x\u0027mas /at 25/12/2021 0000 2500","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"done 5","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"baka","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"delete 4","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"benedictchuajj":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"# delete saved output from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"if [ -e \"../../../data/duke.txt\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    rm ../../../data/duke.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"benedictchuajj":6,"-":38}},{"path":"text-ui-test/runtestfromsrc.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"if [ ! -d \"../../../bin\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"    mkdir ../../../bin","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"# delete output from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"if [ -e \"../../../text-ui-test/ACTUAL.TXT\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"    rm ../../../text-ui-test/ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"# delete saved output from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"if [ -e \"../../../data/duke.txt\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    rm ../../../data/duke.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"if ! javac  -classpath . -Xlint:none -d ../../../bin duke/Duke.java","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    exit 1","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"java -classpath ../../../bin Duke \u003c ../../../text-ui-test/input.txt \u003e ../../../text-ui-test/ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"# convert to UNIX format","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"cp ../../../text-ui-test/EXPECTED.TXT ../../../text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"dos2unix ../../../text-ui-test/ACTUAL.TXT ../../../text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"# compare the output to the expected output","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"diff ../../../text-ui-test/ACTUAL.TXT ../../../text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"    exit 0","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"else","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"    exit 1","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"fi","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benedictchuajj":44}}]
