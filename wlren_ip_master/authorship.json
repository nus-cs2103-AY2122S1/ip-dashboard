[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wlren":2,"-":22}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":" * Respective enum representation of types of commands that user has access to.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"public enum CommandType {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"    Exit,","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"    List,","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"    MarkAsDone,","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"    DeleteTask,","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    Find,","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"    Error,","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"    AddToDo,","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"    AddDeadline,","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"    AddEvent","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wlren":16}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":" * Represents a task with a specific deadline to be completed by.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"     * Constructor for deadline task.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"     * @param description The string description of deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"     * @param deadline The LocalDate of a specific day.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"    public Deadline(String description, LocalDate deadline, boolean isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"    private String formatDate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"        return deadline.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"     * String representation of deadline task.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"     * @return String form of deadline task.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + formatDate() + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"wlren":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":" * Contains main() method for Duke chatbot for IP of CS2103 2021","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":" * @author: Ren Weilin A0216723J","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"public class Duke extends Application{","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"    private final UI userInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"     * Constructor which initializes the necessary components for Duke to function.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"    public Duke() {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"        Storage storage \u003d new Storage(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"        userInterface \u003d new UI(parser, storage, taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wlren"},"content":"     * Start of Duke chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wlren"},"content":"     * @param args","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"wlren"},"content":"        Duke dukeInstance \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wlren"},"content":"        dukeInstance.userInterface.start();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"wlren"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"wlren"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"wlren"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"wlren"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"wlren"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"wlren"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"wlren"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"wlren"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"wlren"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"wlren"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"wlren"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"wlren"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"wlren"},"content":"        stage.show();","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wlren":66,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":" * Basic unique exception for Duke chatbot","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"        super(msg);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"wlren":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":" * Represents a task with a specific date which it is occurring.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    protected LocalDate eventDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"     * Constructor for event task.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"     * @param description The string description of event.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"     * @param eventDate The LocalDate of a specific day.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"    public Event(String description, LocalDate eventDate, boolean isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"    private String formatDate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"        return eventDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"     * String representation of event task.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"     * @return String form of event task.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + formatDate() + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"wlren":38}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":" * Contains logic and methods relating to parsing user input from CLI.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    private String currentCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"    private CommandType currentType;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"    public Parser() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"     * Matches first word of line of input with current available commands.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"     * @return CommandType The command type of the next line of input","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"    public CommandType nextCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"        currentCommand \u003d scanner.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"        String command \u003d currentCommand.split(\" \")[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"        switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"            return CommandType.Exit;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"            return CommandType.DeleteTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"        case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"            return CommandType.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"            currentType \u003d CommandType.AddToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"            return CommandType.AddToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"            currentType \u003d CommandType.AddDeadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"            return CommandType.AddDeadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wlren"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"wlren"},"content":"            currentType \u003d CommandType.AddEvent;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wlren"},"content":"            return CommandType.AddEvent;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"wlren"},"content":"        case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"wlren"},"content":"            return CommandType.MarkAsDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"wlren"},"content":"        case \"find\":","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wlren"},"content":"            return CommandType.Find;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"wlren"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"wlren"},"content":"            return CommandType.Error;","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"wlren"},"content":"    public String getSearchTerm() {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"wlren"},"content":"        return currentCommand.split(\" \")[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"wlren"},"content":"     * Uses current command type to decide how to parse the description of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"wlren"},"content":"     * @return Task Either ToDo/Deadline/Event task based on command.","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"wlren"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"wlren"},"content":"    public Task generateTask() throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"wlren"},"content":"        if (currentType \u003d\u003d CommandType.AddToDo) {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"wlren"},"content":"            String description \u003d currentCommand.split(\"/by \")[0].substring(5);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"wlren"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"wlren"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"wlren"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"wlren"},"content":"            return new ToDo(description, false);","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"wlren"},"content":"        } else if (currentType \u003d\u003d CommandType.AddDeadline) {","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"wlren"},"content":"            String description \u003d currentCommand.split(\"/by \")[0].substring(9);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"wlren"},"content":"            String by \u003d currentCommand.split(\"/by \")[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"wlren"},"content":"            LocalDate deadline  \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"wlren"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"wlren"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"wlren"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"wlren"},"content":"            return new Deadline(description, deadline, false);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"wlren"},"content":"        } else if (currentType \u003d\u003d CommandType.AddEvent) {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"wlren"},"content":"            String description \u003d currentCommand.split(\"/at \")[0].substring(6);","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"wlren"},"content":"            String by \u003d currentCommand.split(\"/at \")[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"wlren"},"content":"            LocalDate eventDate  \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"wlren"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"wlren"},"content":"                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"wlren"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"wlren"},"content":"            return new Event(description, eventDate, false);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"wlren"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"wlren"},"content":"            throw new DukeException(\"Generate task called with wrong command type\");","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"wlren"},"content":"     * Only called in event of Delete/Done.","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"wlren"},"content":"     * @return int Index of task to be deleted/marked as complete.","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"wlren"},"content":"    public int getIndex() {","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"wlren"},"content":"        return Integer.parseInt(currentCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wlren":97}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"public class Storage {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"    private final File dataFile;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"     * Constructor for storage, includes hardcoded file path for duke.txt.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"     * @param taskList","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"        String DIR_NAME \u003d \"data\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"        String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"        dataFile \u003d retrieveFile(DIR_NAME, FILE_NAME);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"            loadData();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"            System.out.println(\"Error loading duke.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"    private void loadData() throws IOException, DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"        Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"            String taskString \u003d scanner.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"            boolean isDone \u003d taskString.charAt(4) !\u003d \u0027 \u0027;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"            String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"            String dateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wlren"},"content":"            int timeStart;","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"wlren"},"content":"            LocalDate date;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wlren"},"content":"            switch (taskString.charAt(1)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"wlren"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"wlren"},"content":"                description \u003d taskString.substring(7) + \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"wlren"},"content":"                taskList.addTask(new ToDo(description, isDone));","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"wlren"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"wlren"},"content":"                timeStart \u003d taskString.indexOf(\"at: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"wlren"},"content":"                description \u003d taskString.substring(7, timeStart - 2) + \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"wlren"},"content":"                dateTime \u003d taskString.substring(timeStart + 4, taskString.length() - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"                date \u003d LocalDate.parse(dateTime, DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"wlren"},"content":"                taskList.addTask(new Event(description, date, isDone));","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"wlren"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"wlren"},"content":"                timeStart \u003d taskString.indexOf(\"by: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"wlren"},"content":"                description \u003d taskString.substring(7, timeStart - 2) + \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"wlren"},"content":"                dateTime \u003d taskString.substring(timeStart + 4, taskString.length() - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"wlren"},"content":"                date \u003d LocalDate.parse(dateTime, DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"wlren"},"content":"                taskList.addTask(new Deadline(description, date, isDone));","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"wlren"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"wlren"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"wlren"},"content":"    private File retrieveFile(String directory, String filename) {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"wlren"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"wlren"},"content":"        if (!dir.exists()) dir.mkdirs();","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"wlren"},"content":"        File dataFile \u003d new File(directory + \"/\" + filename);","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"wlren"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"wlren"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"wlren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"wlren"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"wlren"},"content":"        return dataFile;","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"wlren"},"content":"     * Writes data down into duke.txt on \u0027bye\u0027 command.","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"wlren"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"wlren"},"content":"    public void writeData() throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"wlren"},"content":"        FileWriter writer \u003d new FileWriter(dataFile.getPath());","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"wlren"},"content":"        for (Task task: taskList.getTasks()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"wlren"},"content":"            writer.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"wlren"},"content":"        writer.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wlren":89}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":" * Parent task class as abstraction for ToDo, Deadline, Event.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":" * @author Ren Weilin","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"     * Marks this tasks as completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"        if (!isDone) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"            System.out.println(\"  Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"            System.out.println(\"    \" + this);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"     * Helper method for toString(), returns X or Space depending on completion status.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"     * @return String \"X\" or \" \" for complete or incomplete task.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"wlren":41}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":" * List of current tasks and methods supporting list operations.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"     * Initial capacity of 100 (Given default number)","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"        tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"     * Adds task to the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"     * @param task","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"     * Deletes task at index from the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"     * @param index","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"     * Marks the task at index as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wlren"},"content":"     * @param index","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wlren"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"wlren"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"wlren"},"content":"     * Retrieves the size of task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"wlren"},"content":"     * @return int Size of task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"    public int getListSize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"wlren"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"wlren"},"content":"     * Gets the string representation of task at index.","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"wlren"},"content":"     * @param index","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"wlren"},"content":"     * @return String toString() of task at index.","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"wlren"},"content":"    public String getTaskString(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"wlren"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"wlren"},"content":"     * Exposes the task list for operations.","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"wlren"},"content":"     * @return ArrayList\u003cTask\u003e Duke\u0027s task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"wlren"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"wlren"},"content":"        return tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wlren":72}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":" * Represents a task to be completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"     * String representation of todo task.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"     * @return String form of todo task.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"wlren":20}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":" * Main logic of Duke chatbot on responding to commands and showing output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"public class UI {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"     * Necessary fields for commands to be executed.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"     * @param parser","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"     * @param storage","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"     * @param taskList","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"    public UI(Parser parser, Storage storage, TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"        //Greet","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"wlren"},"content":"     * Main method to be constantly taking in commands until \"bye\".","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wlren"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wlren"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wlren"},"content":"    public void start() throws DukeException{","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wlren"},"content":"        welcomeMsg();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"wlren"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"            CommandType command \u003d parser.nextCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"wlren"},"content":"            int taskIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wlren"},"content":"            String searchTerm;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"wlren"},"content":"            Task newTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"wlren"},"content":"            switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wlren"},"content":"            case Exit:","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"wlren"},"content":"                isExit \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"wlren"},"content":"                exitMsg();","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"wlren"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"wlren"},"content":"                    storage.writeData();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"wlren"},"content":"                    System.out.println(\"Error saving file\");","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"wlren"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"wlren"},"content":"            case List:","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"wlren"},"content":"                listMsg();","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"wlren"},"content":"            case DeleteTask:","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"wlren"},"content":"                taskIndex \u003d parser.getIndex();","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"wlren"},"content":"                deleteMsg(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"wlren"},"content":"                taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"wlren"},"content":"            case MarkAsDone:","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"wlren"},"content":"                taskIndex \u003d parser.getIndex();","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"wlren"},"content":"                printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"wlren"},"content":"                taskList.markAsDone(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"wlren"},"content":"                printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"wlren"},"content":"            case AddToDo:","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"wlren"},"content":"            case AddEvent:","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"wlren"},"content":"            case AddDeadline:","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"wlren"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"wlren"},"content":"                    newTask \u003d parser.generateTask();","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"wlren"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"wlren"},"content":"                    addTaskMsg(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"wlren"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"wlren"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"wlren"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"wlren"},"content":"            case Find:","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"wlren"},"content":"                searchTerm \u003d parser.getSearchTerm();","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"wlren"},"content":"                ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"wlren"},"content":"                for (Task task : taskList.getTasks()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"wlren"},"content":"                    if (task.description.indexOf(searchTerm) \u003e\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"wlren"},"content":"                        matchingTasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"wlren"},"content":"                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"wlren"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"wlren"},"content":"                findMsg(matchingTasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"wlren"},"content":"            case Error:","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"wlren"},"content":"                printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"wlren"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"wlren"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"wlren"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"wlren"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"wlren"},"content":"    private void addTaskMsg(Task newTask) {","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  \" + newTask.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"wlren"},"content":"        System.out.printf(\"  Now you have %d tasks in the list.%n\", taskList.getListSize());","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"wlren"},"content":"    private void exitMsg() {","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"wlren"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"wlren"},"content":"    private void welcomeMsg() {","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"wlren"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"wlren"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"wlren"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"wlren"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"wlren"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"wlren"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  What can I do for you?\");","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"wlren"},"content":"    private void listMsg() {","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  Here are the tasks in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"wlren"},"content":"        for (int i \u003d 1; i \u003c taskList.getListSize() + 1; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"wlren"},"content":"            System.out.printf(\"  %d. %s%n\", i, taskList.getTaskString(i - 1));","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"wlren"},"content":"    private void findMsg(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"wlren"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"wlren"},"content":"            System.out.printf(\"  %d. %s%n\", i, tasks.get(i - 1).toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"wlren"},"content":"    private void deleteMsg(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"wlren"},"content":"        System.out.println(\"  \" + taskList.getTaskString(index));","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"wlren"},"content":"        System.out.printf(\"  Now you have %d tasks in the list.%n\", taskList.getListSize() - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"wlren"},"content":"        printBreakLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"wlren"},"content":"    private void printBreakLine() {","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"wlren"},"content":"        for (int i \u003d 0; i \u003c 12; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"wlren"},"content":"            System.out.print(\"\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"wlren"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"wlren"},"content":"        System.out.println();","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wlren":158}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"    public void testTaskListMax() throws NoSuchFieldException, IllegalAccessException {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"        Field taskListField \u003d Duke.class.getDeclaredField(\"taskList\");","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"        taskListField.setAccessible(true);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"        TaskList taskList \u003d (TaskList) taskListField.get(duke);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"        Field arrayField \u003d ArrayList.class.getDeclaredField(\"elementData\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"        arrayField.setAccessible(true);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"        Object[] internalArray \u003d (Object[])arrayField.get(taskList.getTasks());","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wlren"},"content":"        assertEquals(100, internalArray.length);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wlren":26}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"import duke.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"import duke.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wlren"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"        Task newTask \u003d new ToDo(\"TEST ADD TASK\", false);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"        assertEquals(\"[T][ ] TEST ADD TASK\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wlren":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wlren"},"content":"todo individual project","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"wlren"},"content":"event meaningful event /at sometime in my life","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"wlren"},"content":"deadline get a life /by hopefully tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"wlren"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"wlren":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wlren":1,"-":20}}]
