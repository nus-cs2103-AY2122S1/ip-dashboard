[{"path":"DoneCommandTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"[T][X] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":6}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"benluiwj":2}},{"path":"TaskListtest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"[T][X] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"[T][ ] read books","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"benluiwj":9}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"[T][ ] hello","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"[T][ ] read book","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"benluiwj":2}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"benluiwj"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":" * Class that kick-starts duke.Duke.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    private final String filePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    private Scene scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"     * Constructor for initialising duke.Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"    String displayWelcome() {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"        return ui.showWelcome(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"    /*/**","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"     * Starts duke.Duke running.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"    /*public void run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"benluiwj"},"content":"        ui.showWelcome(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"benluiwj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"benluiwj"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"benluiwj"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"benluiwj"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"benluiwj"},"content":"                Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"benluiwj"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"benluiwj"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"benluiwj"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"benluiwj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"benluiwj"},"content":"    }*/","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"benluiwj"},"content":"     * duke.Main function to initialise duke.Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"benluiwj"},"content":"     * @param args None required","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"benluiwj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"benluiwj"},"content":"        //new duke.Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"benluiwj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"benluiwj"},"content":"        // step 1","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"benluiwj"},"content":"        //duke.Duke d \u003d new duke.Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"benluiwj"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"benluiwj"},"content":"        dialogContainer \u003d new VBox(new Label(ui.showWelcome(tasks)));","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"benluiwj"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"benluiwj"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"benluiwj"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"benluiwj"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"benluiwj"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"benluiwj"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"benluiwj"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"benluiwj"},"content":"        stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"benluiwj"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"benluiwj"},"content":"        stage.setTitle(\"duke.Duke\");","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"benluiwj"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"benluiwj"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"benluiwj"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"benluiwj"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"benluiwj"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"benluiwj"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"benluiwj"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"benluiwj"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"benluiwj"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"benluiwj"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"benluiwj"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"benluiwj"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"benluiwj"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"benluiwj"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"benluiwj"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"benluiwj"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"benluiwj"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"benluiwj"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"benluiwj"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"benluiwj"},"content":"            handleUserInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"benluiwj"},"content":"        });","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"benluiwj"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"benluiwj"},"content":"            handleUserInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"benluiwj"},"content":"        });","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"benluiwj"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"benluiwj"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"benluiwj"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"benluiwj"},"content":"            handleUserInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"benluiwj"},"content":"        });","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"benluiwj"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"benluiwj"},"content":"            handleUserInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"benluiwj"},"content":"        });","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"benluiwj"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"benluiwj"},"content":"     * Iteration 2:","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"benluiwj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"benluiwj"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"benluiwj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"benluiwj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"benluiwj"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"benluiwj"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"benluiwj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"benluiwj"},"content":"                DialogBox.getUserDialog(userText.getText(), user),","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"benluiwj"},"content":"                DialogBox.getDukeDialog(dukeText.getText(), duke)","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"benluiwj"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"benluiwj"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"benluiwj"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"benluiwj"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"benluiwj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"benluiwj"},"content":"        String fullCommand \u003d input;","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"benluiwj"},"content":"        Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"benluiwj"},"content":"        return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":180}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":" * Launcher for GUI","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChildren();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"    public void setChildren() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.displayWelcome(), dukeImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":59}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" * Contains the executables when the user uses the \u0027bye\u0027 command.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     * Executes the bye command.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"        return ui.showBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * Overrides the isExit function to tell duke.Duke to exit.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * Command class that handles user commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    Command() { }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     * Function for the children of the command class to implement when a command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * @param tasks the list of tasks that duke.Duke has","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     * @param ui the UI components available","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"     * @param storage the location to write the file back to (if necessary)","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * Returns a boolean to indicate whether the command allows duke.Duke to exit.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     * @return a boolean indicating whether duke.Duke can exit","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":31}},{"path":"src/main/java/duke/command/DeadLineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" * Contains the executables when the user uses the \u0027deadline\u0027 command.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"public class DeadLineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    private String task;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the DeadLine Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * @param task the task that is to be a DeadLine","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    public DeadLineCommand(String task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * Executes the deadline command. If there is no task specified, nothing is","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     * added to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        if (task.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"            return ui.showError(\"OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        char[] data \u003d task.toCharArray();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"        String taskWithDeadLine \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"        String by \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"            if (data[index] \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"                taskWithDeadLine +\u003d data[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"        // Add 3 to index to avoid \"by \"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"        index +\u003d 3;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"            by +\u003d data[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"        DeadLine deadLine \u003d new DeadLine(taskWithDeadLine, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"        taskList.add(deadLine);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"        return ui.addMessage() + ui.showTask(deadLine) + ui.showListLength(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":57}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * Contains the executables when the user uses the \u0027delete\u0027 command.","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the delete command class","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * @param taskNumber the task to be deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * Executes the delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        Task removed \u003d taskList.delete(taskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"        return ui.deletedMsg() + ui.showTask(removed) + ui.showListLength(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":33}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * Contains the executables when the user uses the \u0027done\u0027 command.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    private int taskNum;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     * @param taskNumber the task that is to be marked as done","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        this.taskNum \u003d taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"     * Executes the done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"        taskList.done(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"            return ui.doneTask(taskList.getAllTasks().get(taskNum));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"        } catch (IndexOutOfBoundsException ioobe) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"            return \"That task doesn\u0027t exist!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":35}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * Contains the executables when the user inputs an invalid command.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"     * Executes the error command if an invalid command is used.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        return ui.showError(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":20}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * Contains the executables for the \u0027event\u0027 command.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    private String task;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    public EventCommand(String task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"        if (task.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"            return ui.showError(\"OOPS!!! The description of an event cannot be empty.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"        char[] data \u003d task.toCharArray();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"        String eventTask \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"        String by \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"            if (data[index] \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"                eventTask +\u003d data[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"        // Add 3 to index to avoid \"by \"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        index +\u003d 3;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"            by +\u003d data[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"        Event event \u003d new Event(eventTask, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"        taskList.add(event);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"        return ui.addMessage() + ui.showTask(event) + ui.showListLength(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":48}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * Contains the executables when the user uses the \u0027Find\u0027 command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    private String[] keyword;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the find command.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     * @param keyword the keyword to search for","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    public FindCommand(String ... keyword) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     * Executes the Find command.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"        for (String keyword : this.keyword) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"            for (Task tsk : tasks.getAllTasks()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"                String currTask \u003d tsk.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"                if (currTask.contains(keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"                    res.add(tsk);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        return ui.matchingTasks() + ui.listView(res);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"benluiwj":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * Contains the executables for the \u0027list\u0027 command.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"     * Executes the list command.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        return ui.listView(taskList.getAllTasks());","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":20}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" * Contains the executables when the user uses the \u0027Todo\u0027 command.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"    private String task;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the to do command","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     * @param task to do task to be added to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    public ToDoCommand(String task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     * Executes the to do command.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        if (task.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"            return ui.showError(\"OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        Todo taskToDo \u003d new Todo(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        taskList.add(taskToDo);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"        return ui.addMessage() + ui.showTask(taskToDo) + ui.showListLength(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":39}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.command.DeadLineCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":" * Processes the commands from duke.Duke and initialises the appropriate command for it.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"     * Processes the commands from duke.Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     * @param command the command from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * @return a command based on the commands from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    public Command parse(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        } else if (command.contains(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"            return prepToDo(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"        } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"            return prepDeadLine(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"        } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"            return prepEvent(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"        } else if (command.contains(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"            return prepDone(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"            return prepDelete(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        } else if (command.contains(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"            return prepFind(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"        return new ErrorCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"     * Initialises the ToDo command.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"     * @param command the ToDo command from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"     * @return ToDo command to be executed","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"    Command prepToDo(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"        int startIndex \u003d \"todo\".length();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"benluiwj"},"content":"        int endIndex \u003d command.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"benluiwj"},"content":"        String task \u003d command.substring(startIndex, endIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"benluiwj"},"content":"        return new ToDoCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"benluiwj"},"content":"     * Initialises the DeadLine command.","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"benluiwj"},"content":"     * @param command the DeadLine command from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"benluiwj"},"content":"     * @return DeadLine command to be executed","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"benluiwj"},"content":"    Command prepDeadLine(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"benluiwj"},"content":"        int startIndex \u003d \"deadline\".length();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"benluiwj"},"content":"        int endIndex \u003d command.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"benluiwj"},"content":"        String task \u003d command.substring(startIndex, endIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"benluiwj"},"content":"        return new DeadLineCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"benluiwj"},"content":"     * Initialises the Event command.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"benluiwj"},"content":"     * @param command the Event command from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"benluiwj"},"content":"     * @return Event command to be executed","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"benluiwj"},"content":"    Command prepEvent(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"benluiwj"},"content":"        int startIndex \u003d \"event\".length();","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"benluiwj"},"content":"        int endIndex \u003d command.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"benluiwj"},"content":"        String task \u003d command.substring(startIndex, endIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"benluiwj"},"content":"        return new EventCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"benluiwj"},"content":"     * Initialises the Done command.","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"benluiwj"},"content":"     * @param command the Done command from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"benluiwj"},"content":"     * @return Done command to be executed","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"benluiwj"},"content":"    Command prepDone(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"benluiwj"},"content":"        int i \u003d Integer.parseInt(","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"benluiwj"},"content":"                String.valueOf(","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"benluiwj"},"content":"                    command.toCharArray()[command.length() - 1])) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"benluiwj"},"content":"        return new DoneCommand(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"benluiwj"},"content":"     * Initialises the Delete command.","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"benluiwj"},"content":"     * @param command the Delete command from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"benluiwj"},"content":"     * @return Delete command to be executed","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"benluiwj"},"content":"    Command prepDelete(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"benluiwj"},"content":"        int i \u003d Integer.parseInt(","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"benluiwj"},"content":"                String.valueOf(","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"benluiwj"},"content":"                    command.toCharArray()[command.length() - 1])) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"benluiwj"},"content":"        return new DeleteCommand(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"benluiwj"},"content":"     * Initialises the Find command.","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"benluiwj"},"content":"     * @param command the Find command from duke.Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"benluiwj"},"content":"     * @return Find command to be executed","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"benluiwj"},"content":"    Command prepFind(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"benluiwj"},"content":"        int startIndex \u003d \"find\".length();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"benluiwj"},"content":"        int endIndex \u003d command.length();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"benluiwj"},"content":"        String task \u003d command.substring(startIndex, endIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"benluiwj"},"content":"        return new FindCommand(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":125}},{"path":"src/main/java/duke/storage/DesAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":" * Separates the date/time from the task, depending on the nature of the task.","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"public class DesAndTime {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    private String timing;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    private String task;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     * Constructor of the class.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * @param task the task to be processed","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    DesAndTime(String task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * Processes the task if it is a deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    void deadLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        char[] arr \u003d task.toCharArray();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c arr.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"            if (arr[index] \u003d\u003d \u0027(\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"            description +\u003d arr[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        index +\u003d 4;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c arr.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"            if (arr[index] \u003d\u003d \u0027)\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"            time +\u003d arr[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"        LocalDate date \u003d LocalDate.parse(time.trim(), formatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"        this.timing \u003d date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"     * Processes the task if its an event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"    void event() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"        char[] arr \u003d task.toCharArray();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"        String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"benluiwj"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c arr.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"benluiwj"},"content":"            if (arr[index] \u003d\u003d \u0027(\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"benluiwj"},"content":"            description +\u003d arr[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"benluiwj"},"content":"        index +\u003d 4;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c arr.length) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"benluiwj"},"content":"            if (arr[index] \u003d\u003d \u0027)\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"benluiwj"},"content":"            time +\u003d arr[index];","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"benluiwj"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"benluiwj"},"content":"        this.timing \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"benluiwj"},"content":"    String getDes() {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"benluiwj"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"benluiwj"},"content":"    String getTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"benluiwj"},"content":"        return timing;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":87}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * Contains the logic for file operations.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    final Path path;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"        this.path \u003d Paths.get(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * Loads the file at the desired path. If a file is not found,","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     * then a new file is created.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     * @return an ArrayList of tasks in the file","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        return TaskListDecoder.decodeTaskList(Files.readAllLines(path));","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"     * Saves all the task from the current list of tasks to the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"     * @param taskList the list of tasks to be saved","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"            Files.write(path, encodedTaskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"            System.out.println(\"Error writing to file\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":45}},{"path":"src/main/java/duke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":" * Decodes the class from a list of strings in the file to an Array list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"public class TaskListDecoder {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"     * Decodes the list of string into a TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"     * @param encodedTaskList the tasks when read directly from the file","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     * @return a TaskList object for further tasks operations","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    public static TaskList decodeTaskList(List\u003cString\u003e encodedTaskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"        final ArrayList\u003cTask\u003e decodedTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"            decodedTasks.add(decodeTaskFromString(encodedTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"        return new TaskList(decodedTasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"     * Decodes the task from string to create a Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"     * @param task the task to be decoded","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"     * @return the task that has been to decoded as a Task object","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"    static Task decodeTaskFromString(String task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"        task.trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"        String type \u003d task.substring(1, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"        String done \u003d task.substring(4, 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"        String taskDescription \u003d task.substring(7, task.length()).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"        switch (type) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"        case \"T\" :","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"            return new Todo(taskDescription, done);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        case \"D\" :","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"            DesAndTime deadLineDetails \u003d new DesAndTime(taskDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"            deadLineDetails.deadLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"            return new DeadLine(deadLineDetails.getDes(), deadLineDetails.getTime(), done);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"        case \"E\" :","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"            DesAndTime eventDetails \u003d new DesAndTime(taskDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"            eventDetails.event();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"            return new Event(eventDetails.getDes(), eventDetails.getTime(), done);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"            return new Task(\"Invalid Task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":60}},{"path":"src/main/java/duke/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" * Encodes a list of task and saves it in a text file.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public class TaskListEncoder {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"     * Encodes the list of tasks to be saved into a text file.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     * @param toSave the list of tasks to be saved","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     * @return a list of strings from the original list of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    public static List\u003cString\u003e encodeTaskList(TaskList toSave) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        final List\u003cString\u003e encodedTasks \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"        toSave.getAllTasks().forEach(task -\u003e encodedTasks.add(task.toString()));","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"        return encodedTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":23}},{"path":"src/main/java/duke/task/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" * DeadLine class for implementing tasks that have a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * Only accepts date inputs of the format yyyy-mm-dd.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     * Constructor of the Deadline class.","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     * @param by when is the dateline of the task in the format yyyy-mm-dd","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    public DeadLine(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"        this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     * Constructor fo the Deadline class.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"     * @param description name of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"     * @param by when is the deadline of the task in the format yyyy-mm-dd","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"     * @param isDone whether the deadline task is done, based on its status icon","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"    public DeadLine(String description, String by, String isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":" * Event class for implementing tasks that are events.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"    protected String start;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"     * Constructor of the event class.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the event","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     * @param start the time which the event starts","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    public Event(String description, String start) {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     * Constructor of the event class.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     * @param start the time which the event starts","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     * @param isDone whether the event is done, based on its status icon","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    public Event(String description, String start, String isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + start + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":" * Task class to represent the tasks in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":" * It supports (i) getting status icon","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":" * and (ii) marking a task as done","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the Task class,","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     * initially the task is not done.","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"     * @param isDone whether the task is done, based on its status icon","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    public Task(String description, String isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        if (isDone.equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"     * Returns the status icon of the Task.","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"     * @return the status icon based on whether the task is completed","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"     * Sets the status of the current task to done.","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"        String base \u003d \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"        return base;","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":57}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":" * Contains the list of tasks from the text file that was saved. Various methods","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":" * implemented to manipulate the list of tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the TaskList class when there is no tasks in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the TaskList class to use a current list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"     * @param lst the list to be used for the list of tasks manipulation","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    public TaskList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"        listOfTasks \u003d lst;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"     * @param task task to be added to the list","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"     * Removes a particular task from the list based on its task number on the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"     * @param taskNumber the task number of the task to be removed","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"     * @return the task that was removed","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"    public Task delete(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"        boolean inList;","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"        assert inList \u003d listOfTasks.size() - 1 \u003e taskNumber : \"task doesn\u0027t exist\";","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"        return listOfTasks.remove(taskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"     * Marks the task at the task number as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"     * @param taskNumber the task to be marked as done","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"    public void done(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"            Task currTask \u003d listOfTasks.get(taskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"            currTask.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"        } catch (IndexOutOfBoundsException ioobe) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"            System.out.println(\"Index out of bounds\");","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"benluiwj"},"content":"     * Returns the number of tasks currently in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"benluiwj"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"benluiwj"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"benluiwj"},"content":"        return listOfTasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"benluiwj"},"content":"     * Returns the list of tasks as an array list.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"benluiwj"},"content":"     * @return the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"benluiwj"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"benluiwj"},"content":"        return listOfTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":77}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":" * Todo class for implementing tasks that are to be done.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"     * @param description name of the task to be done","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"     * @param description name of the task to be done","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"     * @param isDone whether the task is done based on its status icon","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    public Todo(String description, String isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":30}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"package duke.ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" * Contains the logic to display the UI for the user to see.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * @author Benjamin Lui","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"    private final Scanner in;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"     * Displays the welcome text for duke.Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"     * @param taskList to output the list of tasks duke.Duke currently has at start","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    public String showWelcome(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"        String currTasks \u003d \"These are the current tasks I have:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        String lst \u003d listView(taskList.getAllTasks());","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"        return greeting + currTasks + lst;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"     * Reads a command from the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"     * @return a string command of the user input","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        String inputCommand \u003d in.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        return inputCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"     * Displays the bye text for duke.Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"    public String showBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"     * Displays an error text based on the error message.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"     * @param errorMsg error message to be displayed","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"    public String showError(String errorMsg) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"        return errorMsg;","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"     * Displays a text when the user adds a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"    public String addMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"benluiwj"},"content":"        return \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"benluiwj"},"content":"     * Displays the task\u0027s toString() method with a new line at the end.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"benluiwj"},"content":"     * @param task task to be displayed","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"benluiwj"},"content":"    public String showTask(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"benluiwj"},"content":"        return task.toString() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"benluiwj"},"content":"     * Displays the number of tasks that duke.Duke currently has.","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"benluiwj"},"content":"     * @param lst the list of tasks needed to output the number of items in it","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"benluiwj"},"content":"    public String showListLength(TaskList lst) {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"benluiwj"},"content":"        return \"Now you have \" + lst.size() + \" tasks in the list\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"benluiwj"},"content":"     * Displays a message when a task has been removed.","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"benluiwj"},"content":"    public String deletedMsg() {","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"benluiwj"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"benluiwj"},"content":"     * Displays a list view of the tasks that duke.Duke has.","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"benluiwj"},"content":"     * @param lst the list of tasks to be displayed","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"benluiwj"},"content":"    public String listView(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"benluiwj"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"benluiwj"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"benluiwj"},"content":"        for (Task tsk : lst) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"benluiwj"},"content":"            list +\u003d counter + \". \" + tsk.toString() + System.lineSeparator();","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"benluiwj"},"content":"            counter++;","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"benluiwj"},"content":"        return \"Here are the tasks in your list:\\n\" + list;","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"benluiwj"},"content":"     * Displays a message when a task is marked done.","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"benluiwj"},"content":"     * @param tsk the task that was done","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"benluiwj"},"content":"    public String doneTask(Task tsk) {","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"benluiwj"},"content":"        String initialMsg \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"benluiwj"},"content":"        return initialMsg + tsk.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"benluiwj"},"content":"     * Displays a message if the file had error loading.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"benluiwj"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"benluiwj"},"content":"        System.out.println(\"error loading!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"benluiwj"},"content":"     * Displays a message for the matching tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"benluiwj"},"content":"    public String matchingTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"benluiwj"},"content":"        return \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":123}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\" \u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"benluiwj":19}},{"path":"src/test/java/DoneCommandTester.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"public class DoneCommandTester {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    DoneCommandTester() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        this.storage \u003d new Storage(\"DoneCommandTest.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    void executeCommand(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"        Command c \u003d new Parser().parse(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        c.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"    void testDoneCommandWhenNothingInList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        executeCommand(\"done 1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        assertEquals(taskList.size(), 0);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"    void testDoneCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        executeCommand(\"todo read books\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"        executeCommand(\"done 1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"        assertEquals(taskList.getAllTasks().get(0).getStatusIcon(), \"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":43}},{"path":"src/test/java/TaskListTester.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"public class TaskListTester {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    TaskListTester() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        this.storage \u003d new Storage(\"TaskListtest.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    void executeCommand(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"        Command c \u003d new Parser().parse(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"        c.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"    void testInvalidCommannd() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        executeCommand(\"foo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        assertEquals(taskList.size(), 0);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"    void testDoneCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        executeCommand(\"todo read books\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"        executeCommand(\"done 1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"        assertEquals(taskList.getAllTasks().get(0).getStatusIcon(), \"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"benluiwj":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"todo read books","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"deadline return book /by 2020-01-05","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"deadline return book /by 2020-01-06","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"deadline do homework /by 2020-02-07","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"benluiwj":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"benluiwj":1}}]
