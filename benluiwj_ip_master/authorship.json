[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"[T][X] read books","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"[D][ ] return book (by:Jan 05 2020)","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"[T][ ] borrow book","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"[D][ ] return book (by:Jan 06 2020)","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"[D][ ] do homework (by:Feb 07 2020)","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"benluiwj":6}},{"path":"src/main/java/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":" * DeadLine class for implementing tasks that have a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":" * Only accepts date inputs of the format yyyy-mm-dd.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"     * Constructor of the Deadline class.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     * @param by when is the dateline of the task in the formate yyyy-mm-dd","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"    public DeadLine(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        super(description, TypeOfTasks.DEADLINE);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + formattedDate + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":" * Duke class contains the main method that takes","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":" * in inputs.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"    protected static String pathAddress \u003d \"../data/duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    protected static File dataFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"     * Creates a duke.txt file if it does\u0027t exist","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    public static void createFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        File testFile \u003d new File(pathAddress);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"            testFile.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"            dataFile \u003d testFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"            System.out.println(\"error creating file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"     * Main method for the Duke class.","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"     * @params the inputs from the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        Response response \u003d new Response();","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"        System.out.println(\"These are the current tasks I have:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"        createFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"            Scanner textFile \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"            while (textFile.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"                System.out.println(textFile.nextLine());","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"            Scanner inputs \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"            while (inputs.hasNext()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"                System.out.println(response.output(inputs.nextLine()));","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"            textFile.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"            inputs.close();","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"            System.out.println(\"File wasnt found!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"benluiwj":52}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":" * Event class for implementing tasks that are events.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"    protected String start;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"     * Constructor of the event class.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the event","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"     * @param start the time which the event starts","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"    public Event(String description, String start) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"        super(description, TypeOfTasks.EVENT);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + start + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":22}},{"path":"src/main/java/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":" * Response class contains the logic for processing the commands from Duke.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":" * It supports (i) the list command, (ii) the bye command,","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":" * (iii) adding different types of tasks to the list, (iv) and marking the tasks as done,","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":" * (v) removing tasks. Currently, the only tasks that can be changed are those","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":" * added in the same session. Tasks from previous sessions cannot be changed.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":" * Additionally, uses the list of tasks from previous sessions","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"public class Response {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"    private ArrayList\u003cTask\u003e lstOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"     * Writes text to duke.txt.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"     * @param text the text to be written to the file","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"    void writeToFile(String text) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"            FileWriter temp \u003d new FileWriter(Duke.pathAddress, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"            temp.write(text + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"            temp.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"            System.out.println(\"error writing to file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"     * Modifies entire duke.txt file when a recently added event is done or removed","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"     * @param task the list of tasks that we are modifying","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"    void modifyTaskInFile(ArrayList\u003cTask\u003e task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"            Files.deleteIfExists(Paths.get(Duke.pathAddress));","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"            FileWriter fileWriter \u003d new FileWriter(Duke.pathAddress, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"            for (Task t : task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"                fileWriter.append(t.toString() + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"benluiwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"benluiwj"},"content":"            System.out.println(\"error modifying file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"benluiwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"benluiwj"},"content":"     * Returns a farewell statement to the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"benluiwj"},"content":"     * @return A string to bids farewell to the user","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"benluiwj"},"content":"    String bye() {","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"benluiwj"},"content":"        modifyTaskInFile(lstOfTasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"benluiwj"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"benluiwj"},"content":"     * Returns a numbered list with the Tasks that were added.","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"benluiwj"},"content":"     * @return A numbered list with the Tasks that were added","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"benluiwj"},"content":"    String list() {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"benluiwj"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"benluiwj"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"benluiwj"},"content":"            Scanner textFile \u003d new Scanner(Duke.dataFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"benluiwj"},"content":"            while (textFile.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"benluiwj"},"content":"                res +\u003d counter + \". \" + textFile.nextLine() + System.lineSeparator();","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"benluiwj"},"content":"                counter++;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"benluiwj"},"content":"            textFile.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"benluiwj"},"content":"            return \"Here are the tasks in your list:\\n\" + res;","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"benluiwj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"benluiwj"},"content":"            return \"File not found!\";","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"benluiwj"},"content":"     * Returns a string that shows the Task that has been completed.","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"benluiwj"},"content":"     * @param taskNumber the Task number on the list of Tasks","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"benluiwj"},"content":"     * @return A string that shows the Task that has been completed","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"benluiwj"},"content":"    String done(int taskNumber) {","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"benluiwj"},"content":"        String res \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"benluiwj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"benluiwj"},"content":"            Task currTask \u003d lstOfTasks.get(taskNumber);","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"benluiwj"},"content":"            currTask.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"benluiwj"},"content":"            res +\u003d \" [\" + currTask.getStatusIcon() + \"] \" + currTask.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"benluiwj"},"content":"            return res;","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"benluiwj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"benluiwj"},"content":"            return \"Sorry item was not recently added and hence can\u0027t be removed! :(\";","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"benluiwj"},"content":"     * Returns a string that show the ToDo task has been added.","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"benluiwj"},"content":"     * Unless no description is provided, then an error message is displayed","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"benluiwj"},"content":"     * @param task String representation of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"benluiwj"},"content":"     * @return A string that shows the ToDo task has been added","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"benluiwj"},"content":"    String todo(String task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"benluiwj"},"content":"        if (task.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"benluiwj"},"content":"            return \"OOPS!!! The description of a todo cannot be empty.\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"benluiwj"},"content":"        Todo taskToDo \u003d new Todo(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"benluiwj"},"content":"        lstOfTasks.add(taskToDo);","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"benluiwj"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + taskToDo.toString() + \"\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"benluiwj"},"content":"            + \"Now you have \" + lstOfTasks.size() + \" tasks in the list\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"benluiwj"},"content":"     * Returns a string that show the Deadline task has been added.","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"benluiwj"},"content":"     * Unless no description is provided, then an error message is displayed","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"benluiwj"},"content":"     * @param task String representation of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"benluiwj"},"content":"     * @return A string that shows the Deadline task has been added","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"benluiwj"},"content":"    String deadline(String task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"benluiwj"},"content":"        if (task.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"benluiwj"},"content":"            return \"OOPS!!! The description of a deadline cannot be empty.\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"benluiwj"},"content":"        char[] data \u003d task.toCharArray();","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"benluiwj"},"content":"        String taskWithDeadLine \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"benluiwj"},"content":"        String by \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"benluiwj"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"benluiwj"},"content":"            if (data[index] \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"benluiwj"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"benluiwj"},"content":"                taskWithDeadLine +\u003d data[index];","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"benluiwj"},"content":"        // Add 3 to index to avoid \"by \"","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"benluiwj"},"content":"        index +\u003d 3;","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"benluiwj"},"content":"            by +\u003d data[index];","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"benluiwj"},"content":"        DeadLine deadLine \u003d new DeadLine(taskWithDeadLine, by);","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"benluiwj"},"content":"        lstOfTasks.add(deadLine);","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"benluiwj"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + deadLine.toString() + \"\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"benluiwj"},"content":"            + \"Now you have \" + lstOfTasks.size() + \" tasks in the list\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"benluiwj"},"content":"     * Returns a string that show the Event task has been added.","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"benluiwj"},"content":"     * Unless no description is provided, then an error message is displayed","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"benluiwj"},"content":"     * @param task String representation of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"benluiwj"},"content":"     * @return A string that shows the Event task has been added","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"benluiwj"},"content":"    String event(String task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"benluiwj"},"content":"        if (task.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"benluiwj"},"content":"            return \"OOPS!!! The description of an event cannot be empty.\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"benluiwj"},"content":"        char[] data \u003d task.toCharArray();","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"benluiwj"},"content":"        String eventTask \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"benluiwj"},"content":"        String by \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"benluiwj"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"benluiwj"},"content":"            if (data[index] \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"benluiwj"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"benluiwj"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"benluiwj"},"content":"                eventTask +\u003d data[index];","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"benluiwj"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"benluiwj"},"content":"        // Add 3 to index to avoid \"by \"","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"benluiwj"},"content":"        index +\u003d 3;","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"benluiwj"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"benluiwj"},"content":"            by +\u003d data[index];","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"benluiwj"},"content":"            index++;","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"benluiwj"},"content":"        Event event \u003d new Event(eventTask, by);","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"benluiwj"},"content":"        lstOfTasks.add(event);","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"benluiwj"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + event.toString() + \"\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"benluiwj"},"content":"            + \"Now you have \" + lstOfTasks.size() + \" tasks in the list\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"benluiwj"},"content":"     * Returns a string notifying the user that a task has been deleted.","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"benluiwj"},"content":"     * @param taskNum the task number to be removed","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"benluiwj"},"content":"     * @return a string notifying the user that a task has been removed","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"benluiwj"},"content":"    String delete(int taskNum) {","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"benluiwj"},"content":"        Task removed \u003d lstOfTasks.remove(taskNum);","lastModifiedDate":"2021-08-21"},{"lineNumber":192,"author":{"gitId":"benluiwj"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + removed.toString() + \"\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":193,"author":{"gitId":"benluiwj"},"content":"            + \"Now you have \" + lstOfTasks.size() + \" in the list.\";","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"benluiwj"},"content":"     * Handles the input commands from Duke.","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"benluiwj"},"content":"     * Unless an invalid command is provided, then an error message is displayed","lastModifiedDate":"2021-08-17"},{"lineNumber":199,"author":{"gitId":"benluiwj"},"content":"     * @param string the command input from Duke","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"benluiwj"},"content":"     * @return a numbered list, a farewell, or an added message ","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"benluiwj"},"content":"    String output(String string) {","lastModifiedDate":"2021-08-16"},{"lineNumber":203,"author":{"gitId":"benluiwj"},"content":"        if (string.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":204,"author":{"gitId":"benluiwj"},"content":"            return list();","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":206,"author":{"gitId":"benluiwj"},"content":"        } else if (string.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"benluiwj"},"content":"            return bye();","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":209,"author":{"gitId":"benluiwj"},"content":"        } else if (string.contains(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":210,"author":{"gitId":"benluiwj"},"content":"            int startIndex \u003d \"todo\".length();","lastModifiedDate":"2021-08-17"},{"lineNumber":211,"author":{"gitId":"benluiwj"},"content":"            int endIndex \u003d string.length();","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"benluiwj"},"content":"            String task \u003d string.substring(startIndex, endIndex);","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"benluiwj"},"content":"            return todo(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":214,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":215,"author":{"gitId":"benluiwj"},"content":"        } else if (string.contains(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":216,"author":{"gitId":"benluiwj"},"content":"            int startIndex \u003d \"deadline\".length();","lastModifiedDate":"2021-08-17"},{"lineNumber":217,"author":{"gitId":"benluiwj"},"content":"            int endIndex \u003d string.length();","lastModifiedDate":"2021-08-17"},{"lineNumber":218,"author":{"gitId":"benluiwj"},"content":"            String task \u003d string.substring(startIndex, endIndex);","lastModifiedDate":"2021-08-17"},{"lineNumber":219,"author":{"gitId":"benluiwj"},"content":"            return deadline(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":220,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":221,"author":{"gitId":"benluiwj"},"content":"        } else if (string.contains(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":222,"author":{"gitId":"benluiwj"},"content":"            int startIndex \u003d \"event\".length();","lastModifiedDate":"2021-08-17"},{"lineNumber":223,"author":{"gitId":"benluiwj"},"content":"            int endIndex \u003d string.length();","lastModifiedDate":"2021-08-17"},{"lineNumber":224,"author":{"gitId":"benluiwj"},"content":"            String task \u003d string.substring(startIndex, endIndex);","lastModifiedDate":"2021-08-17"},{"lineNumber":225,"author":{"gitId":"benluiwj"},"content":"            return event(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":226,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":227,"author":{"gitId":"benluiwj"},"content":"        } else if (string.contains(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":228,"author":{"gitId":"benluiwj"},"content":"            int i \u003d Integer.parseInt(","lastModifiedDate":"2021-08-17"},{"lineNumber":229,"author":{"gitId":"benluiwj"},"content":"                    String.valueOf(","lastModifiedDate":"2021-08-17"},{"lineNumber":230,"author":{"gitId":"benluiwj"},"content":"                        string.toCharArray()[string.length() - 1])) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":231,"author":{"gitId":"benluiwj"},"content":"            return done(i);","lastModifiedDate":"2021-08-17"},{"lineNumber":232,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":233,"author":{"gitId":"benluiwj"},"content":"        } else if (string.contains(\"delete\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":234,"author":{"gitId":"benluiwj"},"content":"            int i \u003d Integer.parseInt(","lastModifiedDate":"2021-08-17"},{"lineNumber":235,"author":{"gitId":"benluiwj"},"content":"                    String.valueOf(","lastModifiedDate":"2021-08-17"},{"lineNumber":236,"author":{"gitId":"benluiwj"},"content":"                        string.toCharArray()[string.length() - 1])) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":237,"author":{"gitId":"benluiwj"},"content":"            return delete(i);","lastModifiedDate":"2021-08-17"},{"lineNumber":238,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":239,"author":{"gitId":"benluiwj"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":240,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":241,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"benluiwj":241}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":" * Task class to represent the tasks in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":" * It supports (i) getting status icon","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":" * and (ii) marking a task as done","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"    protected TypeOfTasks type;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the Task class,","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"     * initially the task is not done.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"    public Task(String description, TypeOfTasks type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"benluiwj"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"benluiwj"},"content":"     * Returns the status icon of the Task.","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"     * @return the status icon based on whether the task is completed","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"benluiwj"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"benluiwj"},"content":"     * Sets the status of the current task to done.","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"benluiwj"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"benluiwj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"benluiwj"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"benluiwj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"benluiwj"},"content":"        String base \u003d \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"benluiwj"},"content":"        switch (type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"benluiwj"},"content":"            case TODO :","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"benluiwj"},"content":"                return \"[T]\" + base;","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"benluiwj"},"content":"            default:","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"benluiwj"},"content":"                return base;","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"benluiwj"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":47}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":" * Todo class for implementing tasks that are to be done.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"     * @param description name of the task to be done","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"        super(description, TypeOfTasks.TODO);","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":12}},{"path":"src/main/java/TypeOfTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":" * Enum class for the different types of Tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"public enum TypeOfTasks {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benluiwj"},"content":"todo read books","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"benluiwj"},"content":"deadline return book /by 2020-01-05","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"benluiwj"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"benluiwj"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"benluiwj"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"benluiwj"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"benluiwj"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"benluiwj"},"content":"deadline return book /by 2020-01-06","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"benluiwj"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"deadline do homework /by 2020-02-07","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"benluiwj"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"benluiwj":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"benluiwj"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"benluiwj":1}}]
