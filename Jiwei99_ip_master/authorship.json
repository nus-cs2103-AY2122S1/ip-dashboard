[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task and the deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task to be done.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"     * @param date Deadline by which the task needs to be done.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"    public Deadline(String task, LocalDate date) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"        super(task, \"D\");","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task, whether the task was completed and the deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task to be done.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"     * @param completed Whether the task has been completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"     * @param date Deadline by which the task needs to be done.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"    public Deadline(String task, boolean completed, LocalDate date) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"        super(task, completed,\"D\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"     * Returns the dateline of the task in a pre-defined format.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"     * @return Deadline of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\", this.getTaskType(), this.getCompletedMarker(),","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"                this.getTask(), this.getDate());","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"    public String parseForStorage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"        return String.format(\"%s | %d | %s | %s\", this.getTaskType(), this.getIsCompleted() ? 1 : 0,","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"                this.getTask(), this.getDate());","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Jiwei99":52}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":" * Represents a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    public Duke() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"     * Runs the Duke Personal Assistant Chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"        boolean terminate \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"        this.ui.welcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"        while (!terminate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"                parser.executeCommand(ui, tasks, input);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"                terminate \u003d parser.getToTerminate();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"                ui.handleException(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"        duke.run();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jiwei99":41,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":" * Represents exceptions thrown by Duke Personal Assistant Chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"        return \"DukeException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where task description is not found.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"class DescriptionNotFoundException extends DukeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"    DescriptionNotFoundException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"        return \"DescriptionNotFoundException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where ToDo task description is not found.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"class ToDoDescriptionNotFoundException extends DescriptionNotFoundException{","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"    ToDoDescriptionNotFoundException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"        return \"ToDoDescriptionNotFoundException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where Deadline task description is not found.","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"class DeadlineDescriptionNotFoundException extends DescriptionNotFoundException{","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Jiwei99"},"content":"    DeadlineDescriptionNotFoundException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Jiwei99"},"content":"        return \"DeadlineDescriptionNotFoundException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where Event task description is not found.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Jiwei99"},"content":"class EventDescriptionNotFoundException extends DescriptionNotFoundException{","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"Jiwei99"},"content":"    EventDescriptionNotFoundException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"Jiwei99"},"content":"        return \"EventDescriptionNotFoundException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where an invalid command is entered.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Jiwei99"},"content":"class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"Jiwei99"},"content":"    InvalidCommandException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"Jiwei99"},"content":"        return \"InvalidCommandException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where Deadline was not entered.","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"Jiwei99"},"content":"class DeadlineNotFoundException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"Jiwei99"},"content":"    DeadlineNotFoundException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"Jiwei99"},"content":"        return \"DeadlineNotFoundException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where Event date and time was not entered.","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"Jiwei99"},"content":"class EventTimeNotFoundException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"Jiwei99"},"content":"    EventTimeNotFoundException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"Jiwei99"},"content":"        return \"EventTimeNotFoundException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"Jiwei99"},"content":" * Represents exception where task index is out of range.","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"Jiwei99"},"content":"class TaskIndexOutOfBoundException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"Jiwei99"},"content":"    TaskIndexOutOfBoundException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"Jiwei99"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"Jiwei99"},"content":"        return \"TaskIndexOutOfBoundException: \" + this.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Jiwei99":136}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":" * Represents an Event task.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task and the event date and time.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"     * @param task Event to attend.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"     * @param time Date and time of event.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"    public Event(String task, LocalDateTime time) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"        super(task, \"E\");","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task and the event date and time","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"     * @param task Event to attend.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"     * @param completed Whether the event has been attended.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"     * @param time Date and time of event.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"    public Event(String task, boolean completed, LocalDateTime time) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"        super(task, completed, \"E\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"     * Returns the date and time of the event in a pre-defined format.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"     * @return Date and time of Event.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"        return String.format(\"[%s][%s] %s (at: %s)\", this.getTaskType(), this.getCompletedMarker(),","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"                this.getTask(), this.getTime());","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"    public String parseForStorage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"        return String.format(\"%s | %d | %s | %s\", this.getTaskType(), this.getIsCompleted() ? 1 : 0,","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"                this.getTask(), this.getTime());","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Jiwei99":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":" * Represents a parser that parses user input and commands.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    public enum Command {BYE, LIST, DONE, TODO, DEADLINE, EVENT, DELETE, CLEAR, FIND}","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"    boolean toTerminate \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"    public Parser() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    public boolean getToTerminate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"        return this.toTerminate;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"     * Parses and executes the command that the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"     * @param input Input that user entered.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"     * @throws DukeException If an error occurs.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"    public void executeCommand(Ui ui, TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"        Parser.Command command;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"            command \u003d Parser.Command.valueOf(parsedInput[0].toUpperCase());","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"            throw new InvalidCommandException(\"Invalid Command\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"        switch (command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"        case BYE:","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"            this.terminate(ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"        case LIST:","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"            ui.listTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"        case DONE:","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"            if (parsedInput.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"                throw new TaskIndexOutOfBoundException(\"Missing Task Number!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"            this.markDone(tasks, ui, Integer.parseInt(parsedInput[1]) - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Jiwei99"},"content":"        case TODO:","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Jiwei99"},"content":"            this.addTodo(tasks, ui, input);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Jiwei99"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Jiwei99"},"content":"            this.addDeadline(tasks, ui, input);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Jiwei99"},"content":"        case EVENT:","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Jiwei99"},"content":"            this.addEvent(tasks, ui, input);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Jiwei99"},"content":"        case DELETE:","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Jiwei99"},"content":"            if (parsedInput.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Jiwei99"},"content":"                throw new TaskIndexOutOfBoundException(\"Missing Task Number!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Jiwei99"},"content":"            this.delete(tasks, ui,Integer.parseInt(parsedInput[1]) - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Jiwei99"},"content":"        case CLEAR:","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Jiwei99"},"content":"            this.clear(tasks, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Jiwei99"},"content":"        case FIND:","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Jiwei99"},"content":"            this.findTasks(tasks, ui, parsedInput[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Jiwei99"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Jiwei99"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Jiwei99"},"content":"            throw new InvalidCommandException(\"Invalid Command\");","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Jiwei99"},"content":"        tasks.saveList();","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Jiwei99"},"content":"     * Terminates the Duke Personal Assistant Chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Jiwei99"},"content":"    public void terminate(Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Jiwei99"},"content":"        this.toTerminate \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Jiwei99"},"content":"        ui.terminateMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"Jiwei99"},"content":"     * Clears all tasks in the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"Jiwei99"},"content":"    public void clear(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Jiwei99"},"content":"        tasks.clear();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Jiwei99"},"content":"        ui.clearMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"Jiwei99"},"content":"     * Adds a ToDo task to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"Jiwei99"},"content":"     * @param input Input that user entered.","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"Jiwei99"},"content":"     * @throws ToDoDescriptionNotFoundException If user did not enter a task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"Jiwei99"},"content":"    public void addTodo(TaskList tasks, Ui ui, String input) throws ToDoDescriptionNotFoundException {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Jiwei99"},"content":"        if (input.length() \u003c\u003d 5 || input.substring(5).stripLeading().length() \u003c\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Jiwei99"},"content":"            throw new ToDoDescriptionNotFoundException(\"Missing Description!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"Jiwei99"},"content":"        String toDo \u003d input.substring(5);","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"Jiwei99"},"content":"        ToDo newToDo \u003d new ToDo(toDo);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"Jiwei99"},"content":"        tasks.addTask(newToDo);","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Jiwei99"},"content":"        ui.addMessage(newToDo, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Jiwei99"},"content":"     * Adds a Deadline task to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"Jiwei99"},"content":"     * @param input Input that user entered.","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"Jiwei99"},"content":"     * @throws DeadlineDescriptionNotFoundException If user did not enter a task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"Jiwei99"},"content":"     * @throws DeadlineNotFoundException If user did not enter a deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"Jiwei99"},"content":"    public void addDeadline(TaskList tasks, Ui ui, String input) throws DeadlineDescriptionNotFoundException,","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Jiwei99"},"content":"            DeadlineNotFoundException{","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"Jiwei99"},"content":"        if (input.length() \u003c\u003d 9 || input.substring(9).stripLeading().length() \u003c\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Jiwei99"},"content":"            throw new DeadlineDescriptionNotFoundException(\"Missing Description!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Jiwei99"},"content":"        } else if (!input.contains(\" /by \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"Jiwei99"},"content":"            throw new DeadlineNotFoundException(\"Deadline Missing!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Jiwei99"},"content":"        int delimiter \u003d input.indexOf(\" /by \");","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Jiwei99"},"content":"        String task \u003d input.substring(9, delimiter);","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"Jiwei99"},"content":"        String date \u003d input.substring(delimiter + 5);","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"Jiwei99"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Jiwei99"},"content":"        Deadline newDeadline \u003d new Deadline(task, parsedDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"Jiwei99"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"Jiwei99"},"content":"        ui.addMessage(newDeadline, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"Jiwei99"},"content":"     * Adds an Event task to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"Jiwei99"},"content":"     * @param input Input that user entered.","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"Jiwei99"},"content":"     * @throws EventDescriptionNotFoundException If user did not enter a task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"Jiwei99"},"content":"     * @throws EventTimeNotFoundException If user did not enter date and time of event.","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"Jiwei99"},"content":"    public void addEvent(TaskList tasks, Ui ui, String input) throws EventDescriptionNotFoundException,","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"Jiwei99"},"content":"            EventTimeNotFoundException {","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"Jiwei99"},"content":"        if (input.length() \u003c\u003d 6 || input.substring(6).stripLeading().length() \u003c\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"Jiwei99"},"content":"            throw new EventDescriptionNotFoundException(\"Missing Description!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"Jiwei99"},"content":"        } else if (!input.contains(\" /at \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"Jiwei99"},"content":"            throw new EventTimeNotFoundException(\"Event Time Missing!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"Jiwei99"},"content":"        int delimiter \u003d input.indexOf(\" /at \");","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"Jiwei99"},"content":"        String task \u003d input.substring(6, delimiter);","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"Jiwei99"},"content":"        String time \u003d input.substring(delimiter + 5);","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"Jiwei99"},"content":"        LocalDateTime parsedTime \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"Jiwei99"},"content":"        Event newEvent \u003d new Event(task, parsedTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"Jiwei99"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"Jiwei99"},"content":"        ui.addMessage(newEvent, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"Jiwei99"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"Jiwei99"},"content":"     * @param index Index of the task to be marked as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"Jiwei99"},"content":"     * @throws TaskIndexOutOfBoundException If no task bears the index.","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"Jiwei99"},"content":"    public void markDone(TaskList tasks, Ui ui, int index) throws TaskIndexOutOfBoundException{","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"Jiwei99"},"content":"        if (index \u003e\u003d tasks.getListSize()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"Jiwei99"},"content":"            throw new TaskIndexOutOfBoundException(\"Task index is invalid!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"Jiwei99"},"content":"        Task task \u003d tasks.setComplete(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"Jiwei99"},"content":"        ui.doneMessage(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"Jiwei99"},"content":"     * Deletes a task.","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"Jiwei99"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"Jiwei99"},"content":"     * @throws TaskIndexOutOfBoundException If no task bears the index.","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"Jiwei99"},"content":"    public void delete(TaskList tasks, Ui ui, int index) throws TaskIndexOutOfBoundException{","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"Jiwei99"},"content":"        if (index \u003e\u003d tasks.getListSize()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"Jiwei99"},"content":"            throw new TaskIndexOutOfBoundException(\"Task index is invalid!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"Jiwei99"},"content":"        Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"Jiwei99"},"content":"        ui.deleteMessage(task, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"Jiwei99"},"content":"     * Finds tasks that contains keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList object that contains the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"Jiwei99"},"content":"     * @param ui UI object to render output to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"Jiwei99"},"content":"     * @param keyword Keyword to be searched.","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"Jiwei99"},"content":"    public void findTasks(TaskList tasks, Ui ui, String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"Jiwei99"},"content":"        ui.findMessage(tasks.findTasks(keyword));","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jiwei99":203}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":" * Stores the TaskList to a local file","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    private static String FILE_DIRECTORY \u003d \"./data\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"    private static String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"     * Creates directory and file to store the TaskList if it is not found.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"    public static void createFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"            Path path \u003d Paths.get(FILE_DIRECTORY);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"            if (!Files.isDirectory(path)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"                Files.createDirectory(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"            Path file \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"                Files.createFile(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"     * Reads the TaskList from local storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"     * @return List containing the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"    public static List\u003cTask\u003e readData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"        Storage.createFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"            Scanner sc \u003d new Scanner(new File(FILE_PATH));","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Jiwei99"},"content":"                String[] values \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Jiwei99"},"content":"                switch(values[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Jiwei99"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Jiwei99"},"content":"                    list.add(new ToDo(values[2], values[1].equals(\"1\")));","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Jiwei99"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Jiwei99"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Jiwei99"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(values[3], DateTimeFormatter","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Jiwei99"},"content":"                            .ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Jiwei99"},"content":"                    list.add(new Event(values[2], values[1].equals(\"1\"), dateTime));","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Jiwei99"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Jiwei99"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Jiwei99"},"content":"                    LocalDate date \u003d LocalDate.parse(values[3], DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Jiwei99"},"content":"                    list.add(new Deadline(values[2], values[1].equals(\"1\"), date));","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Jiwei99"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Jiwei99"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Jiwei99"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Jiwei99"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Jiwei99"},"content":"        return list;","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Jiwei99"},"content":"     * Writes the TaskList into local storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Jiwei99"},"content":"     * @param list List of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Jiwei99"},"content":"    public static void writeData(List\u003cTask\u003e list) {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Jiwei99"},"content":"        Storage.createFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Jiwei99"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Jiwei99"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Jiwei99"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Jiwei99"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Jiwei99"},"content":"                String parsedTask \u003d task.parseForStorage();","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Jiwei99"},"content":"                if (i \u003c list.size() - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Jiwei99"},"content":"                    parsedTask +\u003d \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Jiwei99"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Jiwei99"},"content":"                fw.write(parsedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Jiwei99"},"content":"            fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Jiwei99"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Jiwei99"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jiwei99":96}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":" * Represents a task.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"    private String task;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"    private String taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    public Task(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"        this.taskType \u003d \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task description and the task type.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"     * @param taskType Task type.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"    public Task(String task, String taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task description, if the task was completed and the task type.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"     * @param isCompleted Whether the task is completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"     * @param taskType Task type.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"    public Task(String task, boolean isCompleted, String taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"     * Returns a marker to represent if the task has been completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"     * @return String marker denoting if task has been completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"    public String getCompletedMarker() {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Jiwei99"},"content":"        return (this.isCompleted ? \"X\" : \" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"Jiwei99"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Jiwei99"},"content":"        return this.taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Jiwei99"},"content":"     * Checks if task description contains keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Jiwei99"},"content":"     * @param keyword Keyward to be found.","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Jiwei99"},"content":"     * @return true if task description contains keyword, else false.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Jiwei99"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Jiwei99"},"content":"        return task.contains(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Jiwei99"},"content":"    public boolean setCompleted() {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"Jiwei99"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Jiwei99"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"Jiwei99"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"Jiwei99"},"content":"        return this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Jiwei99"},"content":"     * Parses the task to the appropriate format for local storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Jiwei99"},"content":"     * @return String representation of task for storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Jiwei99"},"content":"    public abstract String parseForStorage();","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jiwei99":83}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":" * Represents a list that store tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"        this.list \u003d Storage.readData();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"        return this.list;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"        list.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"        return this.list.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"     * Marks a task as complete","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"     * @param index Index of the task in the TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"     * @return Completed Task","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"    public Task setComplete(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"        this.list.get(index).setCompleted();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"     * Saves the TaskList to storage","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"    public void saveList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"        Storage.writeData(this.list);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"    public int getListSize() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Jiwei99"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Jiwei99"},"content":"     * Returns a String indicating the number of tasks in the TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Jiwei99"},"content":"     * @return String representation of the number of tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Jiwei99"},"content":"    public String getListSizeString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Jiwei99"},"content":"        return String.format(\"\\n Now you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Jiwei99"},"content":"                list.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Jiwei99"},"content":"    public void clear() {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Jiwei99"},"content":"        this.list.clear();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Jiwei99"},"content":"     * Finds tasks that contains the keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Jiwei99"},"content":"     * @param keyword Keyword to be found.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Jiwei99"},"content":"     * @return TaskList containing filtered tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Jiwei99"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Jiwei99"},"content":"        return new TaskList(list.stream().filter(task -\u003e task.containsKeyword(keyword))","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Jiwei99"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Jiwei99"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Jiwei99"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Jiwei99"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Jiwei99"},"content":"            str +\u003d String.format(\" %d.%s\", i + 1, task.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Jiwei99"},"content":"            if (i \u003c this.list.size() - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Jiwei99"},"content":"                str +\u003d \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Jiwei99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Jiwei99"},"content":"        return str;","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jiwei99":92}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":" * Represents a ToDo task.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task description.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    public ToDo(String task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"        super(task, \"T\");","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the task description and if the task has been completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task description","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"     * @param completed Whether the task has been completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    public ToDo(String task, boolean completed) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"        super(task, completed,\"T\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"        return String.format(\"[%s][%s] %s\", this.getTaskType(), this.getCompletedMarker(), this.getTask());","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"    public String parseForStorage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"        return String.format(\"%s | %d | %s\", this.getTaskType(), this.getIsCompleted() ? 1 : 0, this.getTask());","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Jiwei99":34}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":" * Represents the User Interface which interacts with the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"    Scanner sc;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"     * Class constructor specifying the Scanner object to read user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"     * Prints welcome message.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"    public void welcome() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"        String message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"                        \" Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"                        \" What can I do for you?\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"                        \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"     * Prints a list of all the tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList containing the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"     * Prints terminating message.","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"    public void terminateMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"        String message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"                        \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Jiwei99"},"content":"                        \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Jiwei99"},"content":"     * Prints message to confirm all tasks has been cleared.","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Jiwei99"},"content":"    public void clearMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Jiwei99"},"content":"        String message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Jiwei99"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Jiwei99"},"content":"                        \" List is cleared!\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Jiwei99"},"content":"                        \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Jiwei99"},"content":"     * Prints message indicating task has been added successfully.","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task that was added","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Jiwei99"},"content":"    public void addMessage(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Jiwei99"},"content":"        String message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Jiwei99"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Jiwei99"},"content":"                        \" Got it. I\u0027ve added this task:\\n   \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Jiwei99"},"content":"                        task.toString() +","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"Jiwei99"},"content":"                        tasks.getListSizeString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Jiwei99"},"content":"                        \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Jiwei99"},"content":"     * Prints message indicating that task has been marked as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task to be marked as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"Jiwei99"},"content":"    public void doneMessage(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Jiwei99"},"content":"        String message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Jiwei99"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Jiwei99"},"content":"                        \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Jiwei99"},"content":"                        String.format(\"   [%s] %s\\n\", task.getCompletedMarker(), task.getTask()) +","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Jiwei99"},"content":"                        \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"Jiwei99"},"content":"     * Prints message indicating that task has been completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"Jiwei99"},"content":"     * @param task Task to be deleted.","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"Jiwei99"},"content":"    public void deleteMessage(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"Jiwei99"},"content":"        String message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Jiwei99"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Jiwei99"},"content":"                        \" Noted. I\u0027ve removed this task:\\n   \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Jiwei99"},"content":"                        task.toString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Jiwei99"},"content":"                        String.format(\"\\n Now you have %d tasks in the list.\\n\", tasks.getListSize()) +","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Jiwei99"},"content":"                        \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"Jiwei99"},"content":"     * Prints tasks containing specified keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"Jiwei99"},"content":"     * @param tasks TaskList containing filtered tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"Jiwei99"},"content":"    public void findMessage(TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"Jiwei99"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"Jiwei99"},"content":"     * Prints the appropriate error handling message.","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"Jiwei99"},"content":"     * @param e Exception caught.","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Jiwei99"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"Jiwei99"},"content":"    public void handleException(Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Jiwei99"},"content":"        String message;","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Jiwei99"},"content":"        if (e instanceof InvalidCommandException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"Jiwei99"},"content":"        } else if (e instanceof ToDoDescriptionNotFoundException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"Jiwei99"},"content":"        } else if (e instanceof EventDescriptionNotFoundException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! The description of an event cannot be empty.\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"Jiwei99"},"content":"        } else if (e instanceof DeadlineDescriptionNotFoundException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"Jiwei99"},"content":"        } else if (e instanceof DeadlineNotFoundException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! The date of the deadline cannot be empty.\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"Jiwei99"},"content":"        } else if (e instanceof EventTimeNotFoundException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! The time of an event cannot be empty.\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"Jiwei99"},"content":"        } else if (e instanceof TaskIndexOutOfBoundException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! The task number is invalid.\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"Jiwei99"},"content":"        } else if (e instanceof DateTimeParseException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! The date is in the wrong format. Please use the following format\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"Jiwei99"},"content":"                            \" For event: dd-MM-yyyy HHmm\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"Jiwei99"},"content":"                            \" For deadline: dd-MM-yyyy\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"Jiwei99"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"Jiwei99"},"content":"            message \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"Jiwei99"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"Jiwei99"},"content":"                            \" ☹ OOPS!!! An unknown error has occurred!\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"Jiwei99"},"content":"                            \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"Jiwei99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"Jiwei99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jiwei99":178}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateDeadline1() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"        Task deadline \u003d new Deadline(\"testInstantiateDeadline1\", LocalDate.parse(\"27-08-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[D][ ] testInstantiateDeadline1 (by: 27 Aug 2021)\", deadline.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateDeadline2() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"        Task deadline \u003d new Deadline(\"testInstantiateDeadline2\", false, LocalDate.parse(\"28-08-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[D][ ] testInstantiateDeadline2 (by: 28 Aug 2021)\", deadline.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateDeadline3() {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"        Task deadline \u003d new Deadline(\"testInstantiateDeadline3\", true, LocalDate.parse(\"29-08-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[D][X] testInstantiateDeadline3 (by: 29 Aug 2021)\", deadline.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage1() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"        Task deadline \u003d new Deadline(\"testParseForStorage1\", LocalDate.parse(\"27-08-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"D | 0 | testParseForStorage1 | 27 Aug 2021\", deadline.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage2() {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"        Task deadline \u003d new Deadline(\"testParseForStorage2\", false, LocalDate.parse(\"28-08-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"D | 0 | testParseForStorage2 | 28 Aug 2021\", deadline.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage3() {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"        Task deadline \u003d new Deadline(\"testParseForStorage3\", true, LocalDate.parse(\"29-08-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"D | 1 | testParseForStorage3 | 29 Aug 2021\", deadline.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"    public void testGetDate() {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"        Deadline deadline \u003d new Deadline(\"testGetDate\", true, LocalDate.parse(\"29-08-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"29 Aug 2021\", deadline.getDate());","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Jiwei99":52}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateEvent1() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"        Task event \u003d new Event(\"testInstantiateEvent1\", LocalDateTime.parse(\"27-08-2021 2211\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[E][ ] testInstantiateEvent1 (at: 27 Aug 2021 22:11)\", event.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateEvent2() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"        Task event \u003d new Event(\"testInstantiateEvent2\", false, LocalDateTime.parse(\"28-08-2021 1259\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[E][ ] testInstantiateEvent2 (at: 28 Aug 2021 12:59)\", event.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateEvent3() {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"        Task event \u003d new Event(\"testInstantiateEvent3\", true, LocalDateTime.parse(\"26-08-2021 0331\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[E][X] testInstantiateEvent3 (at: 26 Aug 2021 03:31)\", event.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage1() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"        Task event \u003d new Event(\"testParseForStorage1\", LocalDateTime.parse(\"29-08-2021 0000\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"E | 0 | testParseForStorage1 | 29 Aug 2021 00:00\", event.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage2() {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"        Task event \u003d new Event(\"testParseForStorage2\", false, LocalDateTime.parse(\"30-08-2021 2359\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"E | 0 | testParseForStorage2 | 30 Aug 2021 23:59\", event.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage3() {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"        Task event \u003d new Event(\"testParseForStorage3\", true, LocalDateTime.parse(\"29-08-2021 0000\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"E | 1 | testParseForStorage3 | 29 Aug 2021 00:00\", event.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"Jiwei99"},"content":"    public void testGetTime() {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Jiwei99"},"content":"        Event event \u003d new Event(\"testGetTime\", true, LocalDateTime.parse(\"29-08-2021 0000\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"29 Aug 2021 00:00\", event.getTime());","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Jiwei99":52}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Jiwei99":12}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateToDo1() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"        Task todo \u003d new ToDo(\"testInstantiateToDo1\");","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[T][ ] testInstantiateToDo1\", todo.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateToDo2() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Jiwei99"},"content":"        Task todo \u003d new ToDo(\"testInstantiateToDo2\", true);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[T][X] testInstantiateToDo2\", todo.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Jiwei99"},"content":"    public void testInstantiateToDo3() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Jiwei99"},"content":"        Task todo \u003d new ToDo(\"testInstantiateToDo3\", false);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"[T][ ] testInstantiateToDo3\", todo.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage1() {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Jiwei99"},"content":"        Task todo \u003d new ToDo(\"testParseForStorage1\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"T | 0 | testParseForStorage1\", todo.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage2() {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Jiwei99"},"content":"        Task todo \u003d new ToDo(\"testParseForStorage2\", false);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"T | 0 | testParseForStorage2\", todo.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Jiwei99"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Jiwei99"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Jiwei99"},"content":"    public void testParseForStorage3() {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Jiwei99"},"content":"        Task todo \u003d new ToDo(\"testParseForStorage3\", true);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Jiwei99"},"content":"        assertEquals(\"T | 1 | testParseForStorage3\", todo.parseForStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Jiwei99"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Jiwei99"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Jiwei99":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jiwei99"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Jiwei99"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Jiwei99"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Jiwei99"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Jiwei99"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Jiwei99"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Jiwei99"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Jiwei99"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Jiwei99"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Jiwei99"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Jiwei99"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Jiwei99":11}}]
