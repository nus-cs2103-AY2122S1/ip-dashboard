[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":" * The Command class encapsulates all commands behaviour for a bot.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"public class Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"    private String name;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"    private ArrayList\u003cTask\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"     * Constructor for command.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"     * @param name name of bot.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"    public Command(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"alinaleehx"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"alinaleehx"},"content":"     * Returns greeting message for bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"alinaleehx"},"content":"     * @return greeting message for bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"alinaleehx"},"content":"    public String greeting() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"Hihi! This is %1$s! \\n\\tHow can I help?\\n\\t\", name);","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"alinaleehx"},"content":"     * Returns added message for command to-do.","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"alinaleehx"},"content":"     * @param description description of to-do task.","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"alinaleehx"},"content":"     * @return added message for command to-do.","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"alinaleehx"},"content":"     * @throws DukeException if description is empty.","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"alinaleehx"},"content":"    public String todo(String description) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"alinaleehx"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"alinaleehx"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"alinaleehx"},"content":"        Todo toAdd \u003d new Todo(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"alinaleehx"},"content":"        records.add(toAdd);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\\t %1$s \\n\\t\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"alinaleehx"},"content":"                        \"Now you have %2$d tasks in the list.\\n\\t\", toAdd.toString(), records.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"alinaleehx"},"content":"     * Returns added message for command event.","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"alinaleehx"},"content":"     * @param description description of event task.","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"alinaleehx"},"content":"     * @param at string of event date/time.","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"alinaleehx"},"content":"     * @return added message for command event.","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"alinaleehx"},"content":"     * @throws DukeException if description or date/time is empty.","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"alinaleehx"},"content":"    public String event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"alinaleehx"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"alinaleehx"},"content":"        } else if (at.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(\"OOPS!!! No date for event! Use format of event description /at date\");","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"alinaleehx"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"alinaleehx"},"content":"        Event toAdd \u003d new Event(description, at);","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"alinaleehx"},"content":"        records.add(toAdd);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\\t %1$s \\n\\t\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"alinaleehx"},"content":"                        \"Now you have %2$d tasks in the list.\\n\\t\", toAdd.toString(), records.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"alinaleehx"},"content":"     * Returns added message for command deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"alinaleehx"},"content":"     * @param description description of deadline task.","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"alinaleehx"},"content":"     * @param by string of deadline date/time.","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"alinaleehx"},"content":"     * @return added message for command deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"alinaleehx"},"content":"     * @throws DukeException if description or date/time is empty.","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"alinaleehx"},"content":"    public String deadline(String description, String by) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"alinaleehx"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"alinaleehx"},"content":"        } else if (by.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(\"OOPS!!! No date for deadline! Use format of deadline description /by date\");","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"alinaleehx"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"alinaleehx"},"content":"        Deadline toAdd \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"alinaleehx"},"content":"        records.add(toAdd);","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\\t %1$s \\n\\t\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"alinaleehx"},"content":"                        \"Now you have %2$d tasks in the list.\\n\\t\", toAdd.toString(), records.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"alinaleehx"},"content":"     * Returns message representing list of all items user added.","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"alinaleehx"},"content":"     * @return formatted string representing elements in records array.","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"alinaleehx"},"content":"    public String list() {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"alinaleehx"},"content":"        final StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\\t\");","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"alinaleehx"},"content":"        records.forEach((el) -\u003e sb.append(","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"alinaleehx"},"content":"                String.format(\"%1$d. %2$s \\n\\t\",","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"alinaleehx"},"content":"                        records.indexOf(el) + 1, el.toString())));","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"alinaleehx"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"alinaleehx"},"content":"     * Returns delete message for bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"alinaleehx"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"alinaleehx"},"content":"     * @return delete message for bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"alinaleehx"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"alinaleehx"},"content":"    public String delete(int index) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"alinaleehx"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(\"OOPS!!! Index must be greater than 0\");","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"alinaleehx"},"content":"        } else if (index \u003e\u003d records.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(String.format(\"OOPS!!! You only have %1$d tasks\",records.size()));","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"alinaleehx"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"alinaleehx"},"content":"        Task removed \u003d records.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"Noted! I\u0027ve removed this task:\\n\\t %1$s\\n\\t\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"alinaleehx"},"content":"                \"Now you have %2$d tasks in the list.\\n\\t\", removed.toString(), records.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"alinaleehx"},"content":"     * Return task mark as done message.","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"alinaleehx"},"content":"     * @param index index of task that is done.","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"alinaleehx"},"content":"     * @return task mark as done message.","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"alinaleehx"},"content":"     * @throws DukeException if index \u003c 0 or index points to null value.","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"alinaleehx"},"content":"    public String done(int index) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"alinaleehx"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(\"OOPS!!! Index must be greater than 0\");","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"alinaleehx"},"content":"        } else if (index \u003e\u003d records.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"alinaleehx"},"content":"            throw new DukeException(String.format(\"OOPS!!! You only have %1$d tasks\",records.size()));","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"alinaleehx"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"alinaleehx"},"content":"        Task done \u003d records.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"alinaleehx"},"content":"        done.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t %1$s \\n\\t\", done.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"alinaleehx"},"content":"     * Returns ending message for bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"alinaleehx"},"content":"     * @return ending message for bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"alinaleehx"},"content":"    public String end() {","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"alinaleehx"},"content":"        return \"Bye bye!\\n\\t\";","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"alinaleehx"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"alinaleehx":140}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":" * The Deadline class extends Task class and encapsulate a deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":" * that need to be done before a specific date/time.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"    protected String by;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"alinaleehx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by +\")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"alinaleehx"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"alinaleehx":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":"    private Command commands;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"     * @param name name of bot.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"    public Duke(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"        commands \u003d new Command(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"alinaleehx"},"content":"     * Returns formatted output string for bot message.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"alinaleehx"},"content":"     * @param input An input string.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"alinaleehx"},"content":"     * @return a formatted string for bot message.","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"alinaleehx"},"content":"    public String format(String input) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"\\t--------------------- \" +","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"alinaleehx"},"content":"                \"\\n\\t%1$s--------------------- \", input);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"alinaleehx"},"content":"     * Starts the bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"alinaleehx"},"content":"    public void start() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"alinaleehx"},"content":"        System.out.println(format(commands.greeting()));","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"alinaleehx"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"alinaleehx"},"content":"        String input;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"alinaleehx"},"content":"        while(!((input \u003d scanner.next().toLowerCase()).equals(\"bye\"))) {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"alinaleehx"},"content":"            Keyword keyword \u003d null;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"alinaleehx"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"alinaleehx"},"content":"                keyword \u003d Keyword.checkKeyword(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"alinaleehx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"alinaleehx"},"content":"                System.out.println(format(e.toString()));","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"alinaleehx"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"alinaleehx"},"content":"            if (keyword !\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"alinaleehx"},"content":"                switch (keyword) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"alinaleehx"},"content":"                    case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"alinaleehx"},"content":"                        System.out.println(format(commands.list()));","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"alinaleehx"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"alinaleehx"},"content":"                    case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"alinaleehx"},"content":"                        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(commands.todo(scanner.nextLine().trim())));","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"alinaleehx"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(e.toString()));","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"alinaleehx"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"alinaleehx"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"alinaleehx"},"content":"                    case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"alinaleehx"},"content":"                        String[] text \u003d scanner.nextLine().split(\"/at \");","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"alinaleehx"},"content":"                        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(commands.event(text[0].trim(), text[1])));","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"alinaleehx"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(e.toString()));","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"alinaleehx"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(\"OOPS!!! No date for event! \" +","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"alinaleehx"},"content":"                                    \"Use format of event description /at date \\n\\t\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"alinaleehx"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"alinaleehx"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"alinaleehx"},"content":"                    case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"alinaleehx"},"content":"                        String[] txt \u003d scanner.nextLine().split(\"/by \");","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"alinaleehx"},"content":"                        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(commands.deadline(txt[0].trim(), txt[1])));","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"alinaleehx"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(e.toString()));","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"alinaleehx"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(\"OOPS!!! No date for deadline! \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"alinaleehx"},"content":"                                    \"Use format of deadline description /by date \\n\\t\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"alinaleehx"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"alinaleehx"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"alinaleehx"},"content":"                    case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"alinaleehx"},"content":"                        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(commands.done((scanner.nextInt()) - 1)));","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"alinaleehx"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(e.toString()));","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"alinaleehx"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"alinaleehx"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"alinaleehx"},"content":"                    case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"alinaleehx"},"content":"                        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(commands.delete((scanner.nextInt()) - 1)));","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"alinaleehx"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"alinaleehx"},"content":"                            System.out.println(format(e.toString()));","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"alinaleehx"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"alinaleehx"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"alinaleehx"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"alinaleehx"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"alinaleehx"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"alinaleehx"},"content":"        scanner.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"alinaleehx"},"content":"        System.out.println(format(commands.end()));","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"alinaleehx"},"content":"        Duke bot \u003d new Duke(\"halp\");","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"alinaleehx"},"content":"        bot.start();","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alinaleehx":97,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":" * DukeException class represents exceptions specific to Duke and provides","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":" * understandable error message.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"     * Returns string representing error message.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"     * @return string representation of error message.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"alinaleehx"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"alinaleehx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"alinaleehx"},"content":"        return super.getMessage() + \"\\n\\t\";","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"alinaleehx"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"alinaleehx":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":" * The Event class extends Task class and encapsulate an event task","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":" * that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"    protected String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"alinaleehx"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at +\")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"alinaleehx"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"alinaleehx":17}},{"path":"src/main/java/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"public enum Keyword {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":"    LIST (\"list\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":"    DONE (\"done\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":"    TODO (\"todo\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"    DEADLINE (\"deadline\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"    EVENT (\"event\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"    DELETE (\"delete\");","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"    private String command;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"    Keyword(String command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"alinaleehx"},"content":"     * Checks if command is valid keyword.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"alinaleehx"},"content":"     * @param input command","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"alinaleehx"},"content":"     * @return Keyword","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"alinaleehx"},"content":"     * @throws DukeException if command is invalid keyword.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"alinaleehx"},"content":"    public static Keyword checkKeyword(String input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"alinaleehx"},"content":"        switch (input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"alinaleehx"},"content":"            case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"alinaleehx"},"content":"                return Keyword.LIST;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"alinaleehx"},"content":"            case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"alinaleehx"},"content":"                return Keyword.DONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"alinaleehx"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"alinaleehx"},"content":"                return Keyword.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"alinaleehx"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"alinaleehx"},"content":"                return Keyword.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"alinaleehx"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"alinaleehx"},"content":"                return Keyword.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"alinaleehx"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"alinaleehx"},"content":"                return Keyword.DELETE;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"alinaleehx"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"alinaleehx"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"alinaleehx"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"alinaleehx"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"alinaleehx":40}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":" * The Task class encapsulates a task with a String description","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":" * and a boolean representing if task is done.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"     * Constructor for task and takes in task description.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"     * @param description description of task.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"alinaleehx"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"alinaleehx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"alinaleehx"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"alinaleehx"},"content":"     * Returns X if isDone true.","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"alinaleehx"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"alinaleehx"},"content":"     * @return \"X\" if isDone true.","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"alinaleehx"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"alinaleehx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"alinaleehx"},"content":"        return (isDone? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"alinaleehx"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"alinaleehx"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"alinaleehx"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"alinaleehx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"alinaleehx"},"content":"        return String.format(\"[%1$s] %2$s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"alinaleehx"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"alinaleehx":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":" * The To-do class extends Task class and encapsulates a to-do task","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":" * with no time attached. ","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"alinaleehx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"alinaleehx"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"alinaleehx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"alinaleehx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"alinaleehx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"alinaleehx"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"alinaleehx":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alinaleehx"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"alinaleehx"},"content":"deadline read book /by Mon, 2pm","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"alinaleehx"},"content":"event return book /at Mon, 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"alinaleehx"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"alinaleehx"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"alinaleehx"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"alinaleehx"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"alinaleehx"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"alinaleehx":8}}]
