{"authorDailyContributionsMap":{"alinaleehx":[{"date":"2021-08-16","commitResults":[{"hash":"36eceb4ee02b5f8fb10ec186ae7bddcf69869d3f","messageTitle":"Implement Duke skeletal version.","messageBody":"Implement a skeletal version of Duke that starts by greeting the user,\nsimply echos commands entered by the user, and exits when the user types bye.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":1}}}]},{"date":"2021-08-17","commitResults":[{"hash":"48628f10047a6c66367d3a79e1aed47066f64787","messageTitle":"Add the ability to add and display added items.","messageBody":"Add the ability to store whatever text entered by the user\nand display them back to the user when requested.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":1}}},{"hash":"cb2a3765f88e0f061091eeefc452bbce96c8d52c","messageTitle":"Add the ability to mark tasks as done.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":13}}},{"hash":"90f6b4919511ff2beb5c569cf169aa1ff09ee63f","messageTitle":"Add support for tracking three types of tasks.","messageBody":"1. ToDos: tasks without any date/time attached to it\n2. Deadlines: tasks that need to be done before a specific date/time\n3. Events: tasks that start at a specific time and ends at a specific time\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":1}}},{"hash":"ece0e67d309c4c1f3f9e222d59226b951d2c0e79","messageTitle":"Use input/output redirection for testing.","messageBody":"Use the input/output redirection technique to semi-automate\nthe testing of Duke and add more comments in code.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":40,"deletions":7},"sh":{"insertions":0,"deletions":0}}},{"hash":"7ff27dd8a056ed93799269091b03c70a667b7ec5","messageTitle":"Handle errors of incorrect user inputs.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":28}}}]},{"date":"2021-08-18","commitResults":[{"hash":"5d6734b3de9b252f35a4e8fa92c1c6e651ae88f2","messageTitle":"Add support for deleting tasks from the list.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":22}}},{"hash":"5f87d4d4a2b74b70c8049c10ffb2de02f350b261","messageTitle":"Use Java enums for command keywords.","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":67}}}]},{"date":"2021-08-24","commitResults":[{"hash":"c47433d92088623b24013a9f782d30652f2583cc","messageTitle":"Save the tasks in the hard disk automatically.","messageBody":"Save the tasks in data.txt automatically for every chat session.\nLoad the data from data.txt when Duke starts up.\n","fileTypesAndContributionMap":{"java":{"insertions":185,"deletions":72}}},{"hash":"fd66ed5be21bd15fc73645d464faeedd6c5a98cd","messageTitle":"Add date to tasks objects.","messageBody":"Accept dates in a yyyy-mm-dd format (e.g., 2019-10-15) and print in a\ndifferent MMM dd yyyy format (e.g., Oct 15 2019).\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":8}}},{"hash":"050c347c6c11b22470248e1987141ce4277c5741","messageTitle":"Add find task command.","messageBody":"Give users a way to find a task by searching for a keyword.\n","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":64}}},{"hash":"7000134d20b9f244128f931c77883ba4bbd85304","messageTitle":"Add JavaDoc comments to the code.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":21}}},{"hash":"61b9ffac07af6efa8c5c3b7e4c05add07e0e5784","messageTitle":"Make the code more OOP","messageBody":"Refactor the code to extract out closely related code as classes.\nUi: deals with interactions with the user.\nStorage: deals with loading tasks and saving tasks in the file.\nParser: deals with making sense of the user command.\nTaskList: contains the task list and has operations to add/delete tasks.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":252,"deletions":155}}}]},{"date":"2021-09-02","commitResults":[{"hash":"9e5a9a37e7aeb4782b4c0ed976925b6e946be4cb","messageTitle":"Add a GUI to Duke. Use the JavaFX technology to implement the GUI for Duke.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":485,"deletions":190},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}}]},{"date":"2021-09-07","commitResults":[{"hash":"45d3ac1fda8e871296f88297d00e2cb03c95598d","messageTitle":"Divide classes into packages","messageBody":"Organize the classes into suitable java packages like duke and duke.task\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"f5a8e7ea39c5fa9fea8f01edb0bba0a3df35722a","messageTitle":"Add JUnit tests","messageBody":"Add JUnit tests to test the behavior of the code. Have more than\ntwo test methods, preferably targeting more than Command class and\nParser class.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":0}}},{"hash":"c804e13a3ffcd4f437af0a0cbdf402a560a71138","messageTitle":"Tweak the code to comply with a coding standard","messageBody":"Tweak the code to comply with a given coding standard.\nFrom this point onward, any new code added are compliant with\nthe given coding standard.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":9}}}]}]},"authorFileTypeContributionMap":{"alinaleehx":{"java":1108,"md":3,"fxml":0,"sh":0,"bat":1,"gradle":0,"txt":8}},"authorContributionVariance":{"alinaleehx":48396.12},"authorDisplayNameMap":{"alinaleehx":"CS2103T-W12-2 ALIN.. XIU"}}
