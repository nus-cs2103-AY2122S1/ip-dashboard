[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zihaooo9":16,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":" * Duke is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    private boolean isFirstTimeUser;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"            taskList \u003d new TaskList(storage.retrieveData(), storage);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"            isFirstTimeUser \u003d storage.getUserStatus();","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"            ui.formatPrint(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e(), storage);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"    public boolean isFirstTimeUser() {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"        return this.isFirstTimeUser;","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zihaooo9":51,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" * AddCommand adds a task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    private Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * @param task The task to add to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     * Adds task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        assert task !\u003d null : \"Task is empty\";","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        String message \u003d taskList.addTask(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" * Command class represents a executable command that Duke can handle.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * Returns a boolean on whether the command is an exit command.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * @return True if the command is an exit command, False otherwise.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" * DeleteCommand delets a task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * @param taskIndex The index of the task to be deleted from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     * Deletes task from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException If taskIndex is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        String message \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":40}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" * DoneCommand sets a task as done","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * @param taskIndex The index of the task to be mark as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    public DoneCommand(int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     * Marks specified task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException If taskIndex is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        String message \u003d taskList.markTaskDone(taskIndex);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" * ExitCommand exits the Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * Exits Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException If we are not able to save the data.txt file.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        ui.printDivider();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        storage.save(taskList.toDataFileInput());","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"        ui.printDivider();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        return \"Data has been saved! Goodbye!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":37}},{"path":"src/main/java/duke/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * FilterCommand filters out task in task list by date.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    private LocalDate filterDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for FilterCommand.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * @param filterDate Specific date to be checked against.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    public FilterCommand(LocalDate filterDate) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"        this.filterDate \u003d filterDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     * Filters out task with the specific date.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException If date is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        String message \u003d taskList.filterByDate(filterDate);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":42}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * FindCommand  find a task by searching for a keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    private String keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     * @param keyword The keyword to be use for searching.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"     * Finds task using the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * @retunr Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"        String message \u003d taskList.filterByKeyword(keyword);","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"zihaooo9":38}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * HelpCommand prints help list.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     * Prints help list.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(ui.getHelp());","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"        return ui.getHelp();","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":27}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" * InvalidCommand class represents commands that are invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * Deletes task from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        throw new DukeInvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * ListCommand prints out current task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     * Deletes task from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * @param taskList   TaskList of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"        String message \u003d taskList.printTaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":27}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exceptions that are specific to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zihaooo9":17}},{"path":"src/main/java/duke/exception/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exception for invalid command in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeInvalidCommandException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public DukeInvalidCommandException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(\"Invalid command @_@ Try typing \u0027help\u0027 to see my list of commands!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":15}},{"path":"src/main/java/duke/exception/DukeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exception for invalid date input in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeInvalidDateException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeInvalidDateException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public DukeInvalidDateException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(\"Invalid Date @_@\\nDate formats: dd/mm/yyyy, dd-mm-yyyy, yyyy-mm-dd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":15}},{"path":"src/main/java/duke/exception/DukeInvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exception for invalid time input in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeInvalidTimeException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeInvalidTimeException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public DukeInvalidTimeException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(\"Invalid Time @_@\\nTime format: HHmm HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":15}},{"path":"src/main/java/duke/exception/DukeIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exception for I/O errors in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeIoException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeIoException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public DukeIoException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(\"I/O error from file @_@\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":15}},{"path":"src/main/java/duke/exception/DukeMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exception for missing arguments in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeMissingArgumentException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeMissingArgumentException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     * @param type Type of missing argument.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    public DukeMissingArgumentException(String type) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"        super(String.format(\"Error: \u0027%s\u0027 argument is missing!\", type));","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":17}},{"path":"src/main/java/duke/exception/DukeMissingDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exception for missing date or time in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeMissingDateTimeException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeMissingDateTimeException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public DukeMissingDateTimeException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(\"Error: Date/Time is missing!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":15}},{"path":"src/main/java/duke/exception/DukeMissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Instruction;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * Exception for missing description in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"public class DukeMissingDescriptionException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeMissingDescriptionException","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"     * @param instruction Command executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    public DukeMissingDescriptionException(Instruction instruction) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        super(String.format(\"Error: OOPS!!! The description of %s cannot be empty.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"                instruction.label));","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":20}},{"path":"src/main/java/duke/exception/DukeMissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.util.Instruction;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * Exception for missing index in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"public class DukeMissingIndexException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeMissingIndexException","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"     * @param instruction Command executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    public DukeMissingIndexException(Instruction instruction) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        super(String.format(\"Error: OOPS!!! The index argument for %s cannot be empty.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"                instruction.label));","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":20}},{"path":"src/main/java/duke/exception/DukeNoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Exception for task not found in Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class DukeNoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeNoSuchTaskException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public DukeNoSuchTaskException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(\"No such task :\u003c (Check the index input!!!)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":15}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTSTEELBLUE,","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"                new CornerRadii(5), Insets.EMPTY)));","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        dialog.setPadding(new Insets(10));","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"zihaooo9":71}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"zihaooo9":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"zihaooo9":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/eve.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/walle.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"     * Initialize Duke GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        this.duke \u003d new Duke();","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"        if (duke.isFirstTimeUser()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"            tutorial();","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"            welcomeUser();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"    private void tutorial() {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"        String tutorial \u003d \"Welcome!!! My name is Duke, your personal assistant!\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"                + \"To get started, simply add a task by using the \u0027todo/deadline/event\u0027 command!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"        String accessList \u003d \"To see all your items, enter \u0027list\u0027 command!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"        String exit \u003d \"To save changes and exit, enter \u0027bye\u0027 command!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(tutorial, dukeImage),","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"                DialogBox.getDukeDialog(accessList, dukeImage),","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"                DialogBox.getDukeDialog(exit, dukeImage));","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"    private void welcomeUser() {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"        String welcomeMessage \u003d String.format(\"%s\\n%s\\n%s\", \"Hello! I\u0027m Duke :)\", \"What can I do for you?\",","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"                \"(Type \u0027help\u0027 to see what I can do!)\");","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // @@author CheyanneSim-reused","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (response.contains(\"Data has been saved! Goodbye!\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Platform.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            pause.play();","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"zihaooo9":77,"-":18}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * Deadline class represents tasks that need to be done before a","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" * specific date/time e.g., submit report by 11/10/2019 5pm.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    private LocalTime dueTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * @param dueDate The due date of deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     * @param dueTime The due time of deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    public Deadline(String description, LocalDate dueDate, LocalTime dueTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     * Formats dueDate and dueTime to an appropriate format to be printed.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"     * @return Formatted DateTime.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    private String formatDateTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        String date \u003d dueDate.format(formatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        return date + \" \" + dueTime.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"        return dueDate.equals(date);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime() + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    public String format() {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"D | %s | %s %s\", super.format(), dueDate, dueTime);","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":55}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * Event class represents tasks that start at a specific time and ends at","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" * a specific time e.g., team project meeting on 2/10/2019 2-4pm.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * @param description The description of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     * @param date The date of event.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"     * @param startTime The start time of event.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"     * @param endTime The end time of event.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"     * Formats dueDate and dueTime to an appropriate format to be printed.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"     * @return Formatted DateTime.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"    private String formatDateTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"        String date \u003d this.date.format(formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"        return date + \" \" + startTime.toString() + \"-\" + endTime.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"        return this.date.equals(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formatDateTime() + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    public String format() {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"E | %s | %s %s-%s\", super.format(), date, startTime, endTime);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * Task class represents a task that Duke keep tracks of and it contains the description and status of it.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"     * @param description Name of user\u0027s task.","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"        assert description !\u003d \"\" : \"Description is empty.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    public abstract boolean hasDate(LocalDate date);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     * Gets the String representation of Task\u0027s status.","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * @return a String where \"X\" represent completed and \" \" represents uncompleted.","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        String done \u003d \"X\";","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"        String incomplete \u003d \" \";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        return (isDone ? done : incomplete); // mark done task with X","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"     * Change status of task such that is is mark as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"     * Converts task to a suitable format to be placed in data.txt.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"     * @return Formatted String which represents a task to be placed in data.txt.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    public String format() {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"%s | %s\", isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"     * Checks if the description contains keyword substring.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"     * @param keyword Keyword to be checked against.","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"     * @return true if the description contains keyword substring, false otherwise.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"        return description.contains(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":68}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * ToDo class represents tasks without any date/time attached to it e.g., visit new theme park.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"     * @param description Todo description.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    public String format() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"T | %s\", super.format());","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":34}},{"path":"src/main/java/duke/util/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Instruction represents the set of instructions that Duke recognises.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"public enum Instruction {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    HELP(\"help\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    FILTER(\"filter\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    FIND(\"find\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    INVALID(\"invalid\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    public final String label;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    Instruction(String label) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     * Look up an enum value by our label field.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     * @param label command that user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"     * @return a Command that corresponds to user input. Returns INVALID if input does not match any Commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    public static Instruction getValueOfLabel(String label) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        for (Instruction c : values()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"            if (c.label.equalsIgnoreCase(label)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"                return c;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        return INVALID;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":39}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"import duke.command.FilterCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeInvalidDateException;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeInvalidTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeMissingArgumentException;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeMissingDateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeMissingDescriptionException;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeMissingIndexException;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":" * Parser class deals with making sense of the user command.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    private static String extractInfo(String input, Instruction instruction) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        String[] info \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        if (info.length \u003c 2 || info[1].equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingDescriptionException(instruction);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"        return info[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"    private static int extractIndex(String input, Instruction instruction) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"        String[] info \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"        if (info.length \u003c 2 || info[1].equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingIndexException(instruction);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        return Integer.parseInt(info[1]) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"    private static String[] extractDeadline(String info) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"        if (!info.contains(\"/by\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingArgumentException(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"        String[] description \u003d info.split(\" /by \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"        if (description.length \u003c 2 || description[1].equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingDateTimeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"    private static String[] extractEvent(String info) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"        if (!info.contains(\"/at\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingArgumentException(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"        String[] description \u003d info.split(\" /at \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"        if (description.length \u003c 2 || description[1].equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingDateTimeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"     * Returns a LocalDate object from date string.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"     * @param date String representation of date.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"     * @return LocalDate object representing the date.","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeInvalidDateException If date input does not match regex or is invalid date.","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"    public static LocalDate parseDate(String date) throws DukeInvalidDateException {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"            return getLocalDate(date);","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeInvalidDateException();","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"    private static LocalDate getLocalDate(String date) throws DukeInvalidDateException {","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"        // Reuse regex from","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"        // https://www.javacodeexamples.com/java-regular-expression-validate-date-example-regex/1504","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"        String[] dateSplit;","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"        if (date.matches(\"\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|[3][01])\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"            // for yyyy-mm-dd","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"        } else if (date.matches(\"(0[1-9]|[12][0-9]|[3][01])-(0[1-9]|1[012])-\\\\d{4}\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"            // for dd-mm-yyyy","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"            dateSplit \u003d date.split(\"-\", 3);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"zihaooo9"},"content":"            return LocalDate.parse(String.format(\"%s-%s-%s\", dateSplit[2], dateSplit[1], dateSplit[0]));","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"        } else if (date.matches(\"(0[1-9]|[12][0-9]|[3][01])/(0[1-9]|1[012])/\\\\d{4}\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"            // for dd/mm/yyyy","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"            dateSplit \u003d date.split(\"/\", 3);","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"            return LocalDate.parse(String.format(\"%s-%s-%s\", dateSplit[2], dateSplit[1], dateSplit[0]));","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeInvalidDateException();","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"zihaooo9"},"content":"     * Returns a LocalTime object from time string.","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"zihaooo9"},"content":"     * @param time String representation of time.","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"zihaooo9"},"content":"     * @return LocalTime object representing the time.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeInvalidTimeException If time input does not match regex or is invalid time.","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"zihaooo9"},"content":"    public static LocalTime parseTime(String time) throws DukeInvalidTimeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"zihaooo9"},"content":"            return getLocalTime(time);","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"zihaooo9"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeInvalidTimeException();","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"zihaooo9"},"content":"    private static LocalTime getLocalTime(String time) throws DukeInvalidTimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"        // Reuse regex from","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"        // https://www.geeksforgeeks.org/how-to-validate-time-in-24-hour-format-using-regular-expression/","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"        if (time.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"zihaooo9"},"content":"            String t \u003d String.format(\"%s:%s\", time.substring(0, 2), time.substring(2, 4));","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"zihaooo9"},"content":"            if (t.matches(\"([01]?[0-9]|2[0-3]):[0-5][0-9]\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"zihaooo9"},"content":"                return LocalTime.parse(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"zihaooo9"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"zihaooo9"},"content":"                throw new DateTimeException(\"Invalid Time\");","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"zihaooo9"},"content":"        } else if (time.length() \u003d\u003d 5 \u0026\u0026 time.split(\":\", 2).length \u003d\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"zihaooo9"},"content":"            return LocalTime.parse(time);","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeInvalidTimeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"zihaooo9"},"content":"     * Splits string with date and time combined to two separate string containing time and date","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"zihaooo9"},"content":"     * for Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"zihaooo9"},"content":"     * @param dateTime String representation of DateTime","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"zihaooo9"},"content":"     * @return Array of String with date and time separated.","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeMissingDateTimeException If input does not contain time or date.","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"zihaooo9"},"content":"    public static String[] splitDeadlineDateTime(String dateTime) throws DukeMissingDateTimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"zihaooo9"},"content":"        String[] splitDateTime \u003d dateTime.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"zihaooo9"},"content":"        if (splitDateTime.length !\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingDateTimeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"zihaooo9"},"content":"        return splitDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"zihaooo9"},"content":"     * Splits string with date and time combined to two separate string containing time and date","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"zihaooo9"},"content":"     * for Event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"zihaooo9"},"content":"     * @param dateTime String representation of DateTime","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"zihaooo9"},"content":"     * @return Array of String with date and time separated.","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeMissingDateTimeException If input does not contain time or date.","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"zihaooo9"},"content":"    public static String[] splitEventDateTime(String dateTime) throws DukeMissingDateTimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"zihaooo9"},"content":"        String[] splitDateTime \u003d dateTime.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"zihaooo9"},"content":"        if (splitDateTime.length !\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingDateTimeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"zihaooo9"},"content":"        String[] splitStartEnd \u003d splitDateTime[1].split(\"-\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"zihaooo9"},"content":"        if (splitStartEnd.length !\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeMissingDateTimeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"zihaooo9"},"content":"        return new String[]{splitDateTime[0], splitStartEnd[0], splitStartEnd[1]};","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"zihaooo9"},"content":"     * Interprets user input and returns command to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":185,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":186,"author":{"gitId":"zihaooo9"},"content":"     * @param input User input.","lastModifiedDate":"2021-08-29"},{"lineNumber":187,"author":{"gitId":"zihaooo9"},"content":"     * @return Command to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException If any exception occurs when interpreting user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":189,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":190,"author":{"gitId":"zihaooo9"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"zihaooo9"},"content":"        String extractedInstruction \u003d input.split(\" \")[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":192,"author":{"gitId":"zihaooo9"},"content":"        Instruction instruction \u003d Instruction.getValueOfLabel(extractedInstruction);","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"zihaooo9"},"content":"        switch (instruction) {","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"zihaooo9"},"content":"        case LIST:","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"zihaooo9"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"zihaooo9"},"content":"        case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"zihaooo9"},"content":"            int doneIndex \u003d extractIndex(input, Instruction.DONE);","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"zihaooo9"},"content":"            return new DoneCommand(doneIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"zihaooo9"},"content":"        case HELP:","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"zihaooo9"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"zihaooo9"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"zihaooo9"},"content":"            String toDoInfo \u003d extractInfo(input, Instruction.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"zihaooo9"},"content":"            ToDo toDo \u003d new ToDo(toDoInfo);","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"zihaooo9"},"content":"            return new AddCommand(toDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"zihaooo9"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"zihaooo9"},"content":"            String[] deadlineInfo \u003d extractDeadline(extractInfo(input, Instruction.DEADLINE));","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"zihaooo9"},"content":"            String[] deadlineDateTime \u003d splitDeadlineDateTime(deadlineInfo[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"zihaooo9"},"content":"            Deadline deadline \u003d new Deadline(deadlineInfo[0], parseDate(deadlineDateTime[0]),","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"zihaooo9"},"content":"                    parseTime(deadlineDateTime[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"zihaooo9"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"zihaooo9"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"zihaooo9"},"content":"            String[] eventInfo \u003d extractEvent(extractInfo(input, Instruction.EVENT));","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"zihaooo9"},"content":"            String[] eventDateTime \u003d splitEventDateTime(eventInfo[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"zihaooo9"},"content":"            Event event \u003d new Event(eventInfo[0], parseDate(eventDateTime[0]), parseTime(eventDateTime[1]),","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"zihaooo9"},"content":"                    parseTime(eventDateTime[2]));","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"zihaooo9"},"content":"            return new AddCommand(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"zihaooo9"},"content":"        case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"zihaooo9"},"content":"            int deleteIndex \u003d extractIndex(input, Instruction.DELETE);","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"zihaooo9"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"zihaooo9"},"content":"        case FILTER:","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"zihaooo9"},"content":"            String filterDate \u003d extractInfo(input, Instruction.FILTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"zihaooo9"},"content":"            return new FilterCommand(parseDate(filterDate));","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"zihaooo9"},"content":"        case FIND:","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"zihaooo9"},"content":"            return new FindCommand(extractInfo(input, Instruction.FIND));","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"zihaooo9"},"content":"        case BYE:","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"zihaooo9"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"zihaooo9"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"zihaooo9"},"content":"            assert !extractedInstruction.matches(\"todo|event|deadline|list|help|find|filter|done|delete|bye\");","lastModifiedDate":"2021-09-04"},{"lineNumber":229,"author":{"gitId":"zihaooo9"},"content":"            return new InvalidCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":232}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":" * Storage class deals with loading data from the file and saving tasks in the file.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    private static final String DIRECTORY \u003d \"./data/\";","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    private static final String FILE_PATH \u003d DIRECTORY + \"data.txt\";","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    private final File file;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    private boolean isFirstTimeUser;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    public Storage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        this.file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        this.isFirstTimeUser \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"     * Returns an ArrayList containing all the tasks in the data.txt file.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"     * If data.txt is empty, an Empty ArrayList is returned.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"     * @return ArrayList containing tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException If there is an I/O exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"    public ArrayList\u003cTask\u003e retrieveData() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"            createFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"            return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"            extractDataFromFile(taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"            System.out.println(\"YAY! File has been loaded Successfully! :\u003e\");","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"            return taskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeIoException();","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"            throw e;","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"    private void extractDataFromFile (ArrayList\u003cTask\u003e taskList) throws FileNotFoundException, DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"        Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"            String data \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"            if (data.equals(\"1\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"                isFirstTimeUser \u003d false;","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"                continue;","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"            String[] dataBreakdown \u003d data.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"            Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"            switch (dataBreakdown[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"            case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"                task \u003d new ToDo(dataBreakdown[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"            case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"                String[] deadlineDateTime \u003d Parser.splitDeadlineDateTime(dataBreakdown[3]);","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"                task \u003d new Deadline(dataBreakdown[2], LocalDate.parse(deadlineDateTime[0]),","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"                        LocalTime.parse(deadlineDateTime[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"            case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"                String[] eventDateTime \u003d Parser.splitEventDateTime(dataBreakdown[3]);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"                task \u003d new Event(dataBreakdown[2], LocalDate.parse(eventDateTime[0]),","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"                        LocalTime.parse(eventDateTime[1]), LocalTime.parse(eventDateTime[2]));","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"                throw new DukeException(\"File has been corrupted @_@\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"            if (dataBreakdown[1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"                task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"        fileReader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"    private void createFile() throws DukeIoException {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"zihaooo9"},"content":"            System.out.println(\"data.txt file does not exist. Creating new file...\");","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"zihaooo9"},"content":"            File directory \u003d new File(DIRECTORY);","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"zihaooo9"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"zihaooo9"},"content":"                directory.mkdir();","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"zihaooo9"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"zihaooo9"},"content":"            System.out.println(\"data.txt created successfully! :\u003e\");","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"zihaooo9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeIoException();","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"zihaooo9"},"content":"     * Saves data into data.txt files after changes have been made by user.","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"zihaooo9"},"content":"     * @param data Formatted TaskList to be stored in data.txt.","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeIoException If program is unable to write to file.","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"zihaooo9"},"content":"    public void save(String data) throws DukeIoException {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"        assert file.exists() : \"The data.txt file doesn\u0027t exist.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"zihaooo9"},"content":"            String toBeSaved \u003d \"1\\n\" + data;","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"zihaooo9"},"content":"            fileWriter.write(toBeSaved);","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"zihaooo9"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"zihaooo9"},"content":"            System.out.println(\"File Saved successfully!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"zihaooo9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeIoException();","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"zihaooo9"},"content":"    public boolean getUserStatus() {","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"zihaooo9"},"content":"        return isFirstTimeUser;","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":142}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeNoSuchTaskException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":" * TaskList class represents a list of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"public class TaskList {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * @param list List of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    public TaskList(ArrayList\u003cTask\u003e list, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * Process user input and adds task that user has given and formats the message specific to the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"     * @param task The task user has specified","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"     * @return Returns formatted string to be printed out to show task has been added or not.","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        list.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        String totalTask \u003d String.format(\"Now you have %d task(s) in the list.\", list.size());","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"Got it! I\u0027ve added this task:\\n  %s\\n%s\", list.get(list.size() - 1), totalTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"     * Prints out the task list and shows all the task user has added in order.","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"    public String printTaskList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"            return \"List is empty. Add something to the list!\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        String ls \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"            ls +\u003d String.format(\"%d.%s\\n\", index, list.get(i));","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"        return ls;","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"     * @param index index of task to be mark as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"     * @return a message of whether task has been successfully added or not","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeNoSuchTaskException For invalid indexes given by user.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"    public String markTaskDone(int index) throws DukeNoSuchTaskException {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c list.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"            if (list.get(index).getStatusIcon().equals(\" \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"                list.get(index).markDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"                return \"Good job! I\u0027ve marked this task as done:\\n  \" + list.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"                return \"Task has already been completed!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeNoSuchTaskException();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"     * Deletes task at index specified by user.","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"     * @param index Index of tasks to be deleted.","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"     * @return String message that task has been deleted.","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeNoSuchTaskException For invalid indexes given by user.","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"    public String deleteTask(int index) throws DukeNoSuchTaskException {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c list.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"            Task removed \u003d list.remove(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"            String totalTask \u003d String.format(\"Now you have %d task(s) in the list.\", list.size());","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"            return String.format(\"Noted! I\u0027ve removed this task:\\n  %s\\n%s\", removed, totalTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeNoSuchTaskException();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"     * Converts the list of tasks to a formatted version to be placed in data.txt.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"     * @return Formatted string to be placed in data.txt.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"    public String toDataFileInput() {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"zihaooo9"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"            data +\u003d task.format() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"        return data;","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"zihaooo9"},"content":"     * Checks and filters task with specific date.","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"zihaooo9"},"content":"     * @param date Date to be checked against.","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"zihaooo9"},"content":"     * @return List of task on the specified date.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"zihaooo9"},"content":"    public String filterByDate(LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"zihaooo9"},"content":"        String ls \u003d generateFilteredList(date);","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"zihaooo9"},"content":"        if (ls.equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"zihaooo9"},"content":"            return \"You do not have any tasks on this day! :\u003e\";","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"            return \"Here is your list of task on this day:\\n\" + ls;","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"zihaooo9"},"content":"     * Checks and filters task with specific keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"zihaooo9"},"content":"     * @param keyword Keyword to be checked against.","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"     * @return List of task with the specific keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"    public String filterByKeyword(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"zihaooo9"},"content":"        String ls \u003d generateFilteredList(keyword);","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"zihaooo9"},"content":"        if (ls.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"zihaooo9"},"content":"            return \"There is no task with this keyword! :\u003c\";","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"zihaooo9"},"content":"            return \"Here are the matching tasks in your list:\\n\" + ls;","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"zihaooo9"},"content":"    private String generateFilteredList(String keyword) {","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"zihaooo9"},"content":"        StringBuilder ls \u003d new StringBuilder();","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"zihaooo9"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"zihaooo9"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"zihaooo9"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"zihaooo9"},"content":"                ls.append(String.format(\"%d.%s\\n\", index, task));","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"zihaooo9"},"content":"                index++;","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"zihaooo9"},"content":"        return ls.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"zihaooo9"},"content":"    private String generateFilteredList(LocalDate date) {","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"zihaooo9"},"content":"        StringBuilder ls \u003d new StringBuilder();","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"zihaooo9"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"zihaooo9"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"zihaooo9"},"content":"            if (task.hasDate(date)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"zihaooo9"},"content":"                ls.append(String.format(\"%d.%s\\n\", index, task));","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"zihaooo9"},"content":"                index++;","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"zihaooo9"},"content":"        return ls.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zihaooo9":164}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Ui class deals with interactions with the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    private static final String DIVIDER \u003d \"----------------------------------\"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"            + \"----------------------------------------------\";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    private static final String PROMPT \u003d \"Enter Command: \";","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    private static final String WELCOME_MESSAGE \u003d String.format(\"%s\\n%s\\n%s\\n%s\", DIVIDER, LOGO,","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"            \"Hello! I\u0027m Duke :)\\nWhat can I do for you? (Type \u0027help\u0027 to see what I can do!)\", DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye :\u003c Hope to see you again soon!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    public void printPrompt() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(PROMPT);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    public void printDivider() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"     * Formats the input and prints it in a formatted version.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"     * @param input Input to be printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"    public void formatPrint(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"     * Prints the help page for users.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    public String getHelp() {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"        return \"Here is the list of my available commands!\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"                + \"1. todo [description] - Adds a ToDo task to task list\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"                + \"2. deadline [description] /by [date] [time] - Adds a Deadline to task list.\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"                + \"3. event [description] /at [date] [time]-[time] - Adds a Event to task list\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"                + \"4. filter [date] - Filters out list of task on this date\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"                + \"Date formats: dd/mm/yyyy, dd-mm-yyyy, yyyy-mm-dd\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"                + \"Time format: HHmm, HH:mm\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"                + \"5. list - Display list of items you have added\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"                + \"6. done [index of completed task] - Marks specified tasks as completed\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"                + \"7. delete [index of task to be deleted] - Deletes specified task\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"                + \"8. find [keyword to search for] - Finds tasks by specific keyword\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"                + \"9. bye - End the program\";","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zihaooo9":69}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"        \u003cLabel fx:id\u003d\"dialog\" contentDisplay\u003d\"CENTER\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"            \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"zihaooo9":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter Command:\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"            \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"            \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"zihaooo9":26}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":12}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    void checkDate1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(true, task.hasDate(LocalDate.parse(\"2021-08-23\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    void checkDate2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(false, task.hasDate(LocalDate.parse(\"2021-08-24\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"[D][ ] return book (by: Aug 23 2021 20:00)\", task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    void format1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"D | 0 | return book | 2021-08-23 20:00\", task.format());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    void format2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"D | 1 | return book | 2021-08-23 20:00\", task.format());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"    void testMarkDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"[D][X] return book (by: Aug 23 2021 20:00)\", task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"    void testGetStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":56}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"class EventTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    void checkDate1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"        Event task \u003d new Event(\"CCA\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"23:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(true, task.hasDate(LocalDate.parse(\"2021-08-23\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    void checkDate2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"        Event task \u003d new Event(\"CCA\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"23:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(false, task.hasDate(LocalDate.parse(\"2021-08-24\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"        Event task \u003d new Event(\"CCA\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"23:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"[E][ ] CCA (at: Aug 23 2021 20:00-23:00)\", task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    void format1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        Event task \u003d new Event(\"CCA\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"23:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"E | 0 | CCA | 2021-08-23 20:00-23:00\", task.format());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    void format2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"        Event task \u003d new Event(\"CCA\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"23:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"E | 1 | CCA | 2021-08-23 20:00-23:00\", task.format());","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"    void testMarkDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"        Event task \u003d new Event(\"CCA\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"23:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"[E][X] CCA (at: Aug 23 2021 20:00-23:00)\", task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"    void testGetStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"        Event task \u003d new Event(\"CCA\", LocalDate.parse(\"2021-08-23\"), LocalTime.parse(\"20:00\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"23:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":63}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"class ToDoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"        ToDo task \u003d new ToDo(\"homework\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"[T][ ] homework\", task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    void format1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        ToDo task \u003d new ToDo(\"homework\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"T | 0 | homework\", task.format());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    void format2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"        ToDo task \u003d new ToDo(\"homework\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"T | 1 | homework\", task.format());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    void testMarkDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        ToDo task \u003d new ToDo(\"homework\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"[T][X] homework\", task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    void testGetStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        ToDo task \u003d new ToDo(\"homework\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":41}},{"path":"src/test/java/duke/util/InstructionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"class InstructionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    void testValueOfLabel() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(Instruction.DEADLINE, Instruction.getValueOfLabel(\"deadline\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":13}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    void testParseDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"            assertEquals(LocalDate.parse(\"2021-08-23\"), Parser.parseDate(\"23/08/2021\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    void testParseTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"            assertEquals(LocalTime.parse(\"20:00\"), Parser.parseTime(\"2000\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    void testDeadlineDateTimeSplit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"            String[] info \u003d {\"23/08/2021\", \"1800\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"            assertArrayEquals(info, Parser.splitDeadlineDateTime(\"23/08/2021 1800\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"    void testEventDateTimeSplit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"            String[] info \u003d {\"23/08/2021\", \"1800\", \"2100\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"            assertArrayEquals(info, Parser.splitEventDateTime(\"23/08/2021 1800-2100\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":53}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    // @author Jonathan Cook","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    // Reused from https://www.baeldung.com/java-testing-system-out-println","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    // with minor modifications","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    private TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e(), new Storage());","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    @AfterEach","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    public void tearDown() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"    void testAddTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Got it! I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"                + \"[T][ ] homework\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"                + \"Now you have 1 task(s) in the list.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"                taskList.addTask(new ToDo(\"homework\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"    void testPrintTaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        taskList.addTask(new ToDo(\"homework\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"                + \"1.[T][ ] homework\\n\", taskList.printTaskList());","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    void testMarkTaskDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"            taskList.addTask(new ToDo(\"homework\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"            assertEquals(\"Good job! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"                            + \"[T][X] homework\",","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"                    taskList.markTaskDone(0));","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"    void testDdeleteTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"            taskList.addTask(new ToDo(\"homework\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"            assertEquals(\"Noted! I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"                            + \"[T][ ] homework\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"                            + \"Now you have 0 task(s) in the list.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"                            taskList.deleteTask(0));","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"    void testToDataFileInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"        taskList.addTask(new ToDo(\"homework\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"T | 0 | homework\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"                taskList.toDataFileInput());","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"    void testFilterByDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"        taskList.addTask(new Deadline(\"homework\", LocalDate.parse(\"2021-08-23\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"18:00\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Here is your list of task on this day:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"                        + \"1.[D][ ] homework (by: Aug 23 2021 18:00)\\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"                taskList.filterByDate(LocalDate.parse(\"2021-08-23\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"    void testFilterByKeyword() {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"        taskList.addTask(new Deadline(\"homework\", LocalDate.parse(\"2021-08-23\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"                LocalTime.parse(\"18:00\")));","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"        taskList.addTask(new ToDo(\"submit homework\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"                        + \"1.[D][ ] homework (by: Aug 23 2021 18:00)\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"                        + \"2.[T][ ] submit homework\\n\",","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"                taskList.filterByKeyword(\"homework\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":106}},{"path":"src/test/java/duke/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"class UiTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    // @author Jonathan Cook","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    // Reused from https://www.baeldung.com/java-testing-system-out-println","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    // with minor modifications","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    @AfterEach","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    public void tearDown() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"    void testPrintWelcomeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"--------------------------------------------------------------------------------\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"                + \" ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"                + \"Hello! I\u0027m Duke :)\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"                + \"What can I do for you? (Type \u0027help\u0027 to see what I can do!)\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"                + \"--------------------------------------------------------------------------------\",","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"    void testPrintGoodbyeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Bye :\u003c Hope to see you again soon!\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"    void testPrintPrompt() {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"        ui.printPrompt();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Enter Command:\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"    void testPrintDivider() {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"        ui.printDivider();","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"--------------------------------------------------------------------------------\",","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"    void formatPrint() {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"        ui.formatPrint(\"test\");","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"--------------------------------------------------------------------------------\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"                + \"test\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"                + \"--------------------------------------------------------------------------------\",","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"    void testPrintHelp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Here is the list of my available commands!\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"                + \"1. todo [description] - Adds a ToDo task to task list\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"                + \"2. deadline [description] /by [date] [time] - Adds a Deadline to task list.\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"                + \"3. event [description] /at [date] [time]-[time] - Adds a Event to task list\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"                + \"4. filter [date] - Filters out list of task on this date\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"                + \"Date formats: dd/mm/yyyy, dd-mm-yyyy, yyyy-mm-dd\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"                + \"Time format: HHmm, HH:mm\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"                + \"5. list - Display list of items you have added\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"                + \"6. done [index of completed task] - Marks specified tasks as completed\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"                + \"7. delete [index of task to be deleted] - Deletes specified task\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"                + \"8. find [keyword to search for] - Finds tasks by specific keyword\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"                + \"9. bye - End the program\",","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"                ui.getHelp());","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zihaooo9":96}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"help","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"abcd","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"deadline return book /by 22/08/2021 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"event project meeting /at 01/09/2021 0900-1300","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"deadline project submission","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"deadline project submission /by","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"event volleyball cca","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"event volleyball cca /at ","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"deadline pay bills /by 01/09/2021 1200","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"filter 01/09/2021","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"deadline return book /by 22/08/2021 1800","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"find book","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\*\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zihaooo9":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/*/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zihaooo9":2,"-":36}}]
