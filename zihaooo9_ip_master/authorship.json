[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":" * Commands that Duke can handle.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"public enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    HELP(\"help\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    INVALID(\"invalid\");","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    public final String label;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    private Command(String label) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"     * Look up an enum value by our label field.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"     * @param label command that user input.","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"     * @return a Command that corresponds to user input. Returns INVALID if input does not match any Commands.","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    public static Command valueOfLabel(String label) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        for (Command c : values()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"            if (c.label.equals(label)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"                return c;","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"        return INVALID;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":37}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":" * Deadline class represents tasks that need to be done before a","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":" * specific date/time e.g., submit report by 11/10/2019 5pm.","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"    private String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"     * @param by The due date of deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * Duke is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    // Constants for the program","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    static final String DIVIDER \u003d \"--------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    static final String PROMPT \u003d \"Enter Command: \";","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    private static final String WELCOMEMESSAGE \u003d String.format(\"%s\\n%s\\n%s\\n%s\\n%s\", DIVIDER, LOGO,","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"            \"Hello! I\u0027m Duke :)\\nWhat can I do for you? (Type \u0027help\u0027 to see what I can do!)\", DIVIDER, PROMPT);","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    private static final String GOODBYEMESSAGE \u003d String.format(\"%s\\n%s\\n%s\", DIVIDER,","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"            \"Bye :\u003c Hope to see you again soon!\", DIVIDER);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    private static TaskList taskList;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"        // Welcome message","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(WELCOMEMESSAGE);","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        // Logic of program based on user input","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        Command command \u003d Command.valueOfLabel(input.split(\" \")[0]);","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"        while (command !\u003d Command.BYE) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"                switch (command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"                case LIST:","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"                    taskList.printTaskList();","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"                case DONE:","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"                    int doneIndex \u003d extractIndex(input, Command.DONE);","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"                    formatPrint(taskList.markTaskDone(doneIndex));","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"                case HELP:","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"                    printHelp();","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"                case TODO:","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"                    String toDoInfo \u003d extractInfo(input, Command.TODO);","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"                    formatPrint(taskList.addTask(toDoInfo, Command.TODO));","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"                    String deadlineInfo \u003d extractInfo(input, Command.DEADLINE);","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"                    formatPrint(taskList.addTask(deadlineInfo, Command.DEADLINE));","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"                case EVENT:","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"                    String eventInfo \u003d extractInfo(input, Command.EVENT);","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"                    formatPrint(taskList.addTask(eventInfo, Command.EVENT));","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"                case DELETE:","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"                    int deleteIndex \u003d extractIndex(input, Command.DELETE);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"                    formatPrint(taskList.deleteTask(deleteIndex));","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"                default:","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"                    throw new DukeException(\"Invalid command @_@ Try typing \u0027help\u0027 to see my list of commands!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"                formatPrint(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"            } finally {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"                System.out.println(PROMPT);","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"                command \u003d Command.valueOfLabel(input.split(\" \")[0]);","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"        // Goodbye message for user and program stops","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(GOODBYEMESSAGE);","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"     * Formats the input and prints it in a formatted version.","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"     * @param input Input to be printed.","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"    public static void formatPrint(String input) {","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"     * Prints the help page for users.","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"    public static void printHelp() {","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(\"Here is the list of my available commands!\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"                + \"1. todo [description] - Adds a ToDo task to task list\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"                + \"2. deadline [description] /by [deadline] - Adds a Deadline to task list\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"                + \"3. event [description] /at [event duration] - Adds a Event to task list\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"                + \"4. list - Display list of items you have added\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"                + \"5. done [index of completed task] - Marks specified tasks as completed\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"zihaooo9"},"content":"                + \"6. delete [index of task to be deleted] - Deletes specified task\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"                + \"7. bye - End the program\");","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"zihaooo9"},"content":"     * Extract out the information given in user input by separating out command.","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"zihaooo9"},"content":"     * @param input   User raw input.","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"zihaooo9"},"content":"     * @param command The specific command given by user.","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"zihaooo9"},"content":"     * @return String containing information that we need.","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException Prevent empty descriptions.","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"zihaooo9"},"content":"    public static String extractInfo(String input, Command command) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"zihaooo9"},"content":"        String[] info \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"zihaooo9"},"content":"        if (info.length \u003c 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(String.format(\"Error: OOPS!!! The description of %s cannot be empty.\",","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"zihaooo9"},"content":"                    command.label));","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"zihaooo9"},"content":"        return info[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"zihaooo9"},"content":"     * Extract out the index given in user input by separating out command.","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"zihaooo9"},"content":"     * @param input   User raw input.","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"     * @param command The specific command given by user.","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"     * @return int of the task user wants to select.","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException Prevent empty indexes.","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"zihaooo9"},"content":"    public static int extractIndex(String input, Command command) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"zihaooo9"},"content":"        String[] info \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"zihaooo9"},"content":"        if (info.length \u003c 2 || info[1].equals(\"\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(String.format(\"Error: OOPS!!! The index argument for %s cannot be empty.\",","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"zihaooo9"},"content":"                    command.label));","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"zihaooo9"},"content":"        return Integer.parseInt(info[1]) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zihaooo9":131,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":" * Exceptions that are specific to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zihaooo9":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":" * Event class represents tasks that start at a specific time and ends at","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":" * a specific time e.g., team project meeting on 2/10/2019 2-4pm.","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"    private String eventTimeframe;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"     * @param eventTimeframe The timeframe of the event.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    public Event(String description, String eventTimeframe) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"        this.eventTimeframe\u003d eventTimeframe;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"        return \"[E]\" + super.toString() + \" (by: \" + this.eventTimeframe + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":" * Task class represents a task that Duke keep tracks of and it contains the description and status of it.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     * @param description Name of user\u0027s task.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * Gets the String representation of Task\u0027s status.","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"     * @return a String where \"X\" represent completed and \" \" represents uncompleted.","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"     * Change status of task such that is is mark as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * TaskList class represents a list of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"public class TaskList {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"     * Format the raw information by splitting it to get the description and due date of deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"     * @param info User input containing relevant information.","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"     * @return String array with information of deadline split to description and date.","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException For missing arguments.","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    public String[] extractDeadline(String info) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        if (!info.contains(\"/by\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(\"Error: \u0027/by\u0027 argument is missing!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"        String[] description \u003d info.split(\" /by \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        if (description.length \u003c 2 || description[1].equals(\"\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(\"Error: OOPS!!! Argument after \u0027/by\u0027 is empty!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"        return description;","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"     * Format the raw information by splitting it to get the description and timeframe of event.","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"     * @param info User input containing relevant information.","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"     * @return String array with information of event split to description and event timeframe.","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException For missing arguments.","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"    public String[] extractEvent(String info) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        if (!info.contains(\"/at\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(\"Error: \u0027/at\u0027 argument is missing!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"        String[] description \u003d info.split(\" /at \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        if (description.length \u003c 2 || description[1].equals(\"\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(\"Error: OOPS!!! Argument after \u0027/at\u0027 is empty!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"        return description;","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"     * Process user input and adds task that user has given and formats the message specific to the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"     * @param info     Information about the task that user has entered.","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"     * @param taskType The type of task user has specified","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"     * @return Returns formatted string to be printed out to show task has been added or not.","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException For missing arguments when initialising Task.","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"    public String addTask(String info, Command taskType) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"        case TODO:","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"            ToDo toDo \u003d new ToDo(info);","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"            list.add(toDo);","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"            String[] deadlineInfo \u003d extractDeadline(info);","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"            Deadline deadline \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"            list.add(deadline);","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"        case EVENT:","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"            String[] eventInfo \u003d extractEvent(info);","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"            Event event \u003d new Event(eventInfo[0], eventInfo[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"            list.add(event);","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"        default:","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(\"Error: No such task type!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"        String totalTask \u003d String.format(\"Now you have %d task(s) in the list.\", list.size());","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"        return String.format(\"Got it! I\u0027ve added this task:\\n  %s\\n%s\", list.get(list.size() - 1), totalTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"     * Prints out the task list and shows all the task user has added in order.","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(Duke.DIVIDER);","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"            System.out.println(\"List is empty. Add something to the list!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"            System.out.println(Duke.DIVIDER);","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"            return;","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"            String detail \u003d String.format(\"%d.%s\", i + 1, list.get(i));","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"            System.out.println(detail);","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"zihaooo9"},"content":"        System.out.println(Duke.DIVIDER);","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"zihaooo9"},"content":"     * @param index index of task to be mark as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"zihaooo9"},"content":"     * @return a message of whether task has been successfully added or not","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException For invalid indexes given by user.","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"zihaooo9"},"content":"    public String markTaskDone(int index) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"zihaooo9"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c list.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"zihaooo9"},"content":"            if (list.get(index).getStatusIcon().equals(\" \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"zihaooo9"},"content":"                list.get(index).markDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"zihaooo9"},"content":"                return \"Good job! I\u0027ve marked this task as done:\\n  \" + list.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"zihaooo9"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"zihaooo9"},"content":"                return \"Task has already been completed!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(\"No such task :\u003c (Check the index input!!!)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"zihaooo9"},"content":"     * Deletes task at index specified by user.","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"     * @param index Index of tasks to be deleted.","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"     * @return String message that task has been deleted.","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"     * @throws DukeException For invalid indexes given by user.","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"zihaooo9"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"zihaooo9"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c list.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"zihaooo9"},"content":"            Task removed \u003d list.remove(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"zihaooo9"},"content":"            String totalTask \u003d String.format(\"Now you have %d task(s) in the list.\", list.size());","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"zihaooo9"},"content":"            return String.format(\"Noted! I\u0027ve removed this task:\\n  %s\\n%s\", removed, totalTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"zihaooo9"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"zihaooo9"},"content":"            throw new DukeException(\"No such task :\u003c (Check the index input!!!)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zihaooo9":140}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":" * ToDo class represents tasks without any date/time attached to it e.g., visit new theme park.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":" * @author Chng Zi Hao","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"     * @param description Todo description.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"help","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"abcd","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"deadline project submission","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"deadline project submission /by","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"event volleyball cca","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"event volleyball cca /at ","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zihaooo9":28}}]
