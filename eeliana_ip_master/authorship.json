[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eeliana":2,"-":22}},{"path":"src/main/java/seedu/duke/DateTimeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":" * Represents a DateTimeManager. A \u003ccode\u003eDateTimeManager\u003c/code\u003e object","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":" * handles the parsing of DateTime strings in the given format, as well","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":" * track and updates tasks that occur on specific days.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"class DateTimeManager {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"    DateTimeFormatter formatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"    public DateTimeManager(DateTimeFormatter formatter) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"        this.formatter \u003d formatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"     * Updates the given HashMap to reflect the tasks happening on a certain date.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"     * @param dateTasks The hashmap to be updated.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"     * @param date The date requested.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     * @param task The task to be classified under the requested date.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"    public void updateDateTasks(HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e dateTasks,","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"                                 LocalDate date, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d dateTasks.getOrDefault(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"        tasksOnDate.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"        dateTasks.put(date, tasksOnDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"     * Returns a LocalDate representation of the string","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"     * representation of the date.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"     * @param dateTime The string to be parsed as a LocalDate object.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"     * @return The LocalDate object of the string given.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"     * @throws DukeException If the string is not given in the valid format","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"     * as specified by the DateTimeFormatter.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"    public LocalDate parseDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime, formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"            return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"            throw new DukeException(\"Cannot read date.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eeliana":55}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import seedu.duke.command.Commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":" * Represents a chatbot for organising user tasks and to do list.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object takes in user commands and updates the","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":" * user\u0027s tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"class Duke {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    private enum UserCommands {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"        DONE, TODO, DEADLINE, EVENT, FIND, GET, DELETE, LIST, BYE;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"     * Represents a parser for interpreting user inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"     * A \u003ccode\u003eParser\u003c/code\u003e object takes in user inputs and","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"     * interprets it to Duke to execute relevant tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    private class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"        private String[] list_of_words \u003d new String[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"        private String userInput \u003d\"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        private DateTimeManager manager \u003d new DateTimeManager(","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        private int taskIndex \u003d -1;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"        private LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"        private UserCommands parseString(String userInput) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"            this.userInput \u003d userInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"                return UserCommands.BYE;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"                return UserCommands.LIST;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"            // Separate them with space","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"            String[] arrOfCommandWords \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"            if (arrOfCommandWords.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"                handleInvalidInputs(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"            this.list_of_words \u003d arrOfCommandWords;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"            // Check the command word","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"            String commandWord \u003d arrOfCommandWords[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"            switch (commandWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"                return UserCommands.TODO;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"                parseDescription(userInput, \"/by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"                return UserCommands.DEADLINE;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"                parseDescription(userInput, \"/at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"                return UserCommands.EVENT;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"                    int index \u003d Integer.parseInt(arrOfCommandWords[1]) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"                    this.taskIndex \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"                    throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"                return UserCommands.DONE;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"                return UserCommands.FIND;","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"            case \"get\":","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"                    manager.parseDateTime(arrOfCommandWords[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"                    return UserCommands.GET;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"                    throw new DukeException(\"Invalid date format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"                    int index \u003d Integer.parseInt(arrOfCommandWords[1]) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"                    this.taskIndex \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"                    throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"                return UserCommands.DELETE;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"        private void parseDescription(String userInput, String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"                int indexOfDate \u003d userInput.indexOf(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"                int startOfDescription \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"                if (indexOfDate \u003c 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"                    throw new DukeException(\"No date specified for task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"                String description \u003d userInput.substring(startOfDescription, indexOfDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"                list_of_words[1] \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"                LocalDate date \u003d manager.parseDateTime(","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"                        userInput.substring(indexOfDate + command.length())","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"                );","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"                this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"            } catch (DateTimeParseException | DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"        /**","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"         * Handles invalid inputs by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"         *","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"         * @param input The user input to Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"         */","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"        private void handleInvalidInputs(String input) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"            switch (input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"            case \"todo\": // fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"            case \"deadline\": // fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"eeliana"},"content":"            case \"event\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"                        String.format(","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"                                \"☹ OOPS!!! The description of a %s cannot be empty.\",","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"                                input","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"eeliana"},"content":"                        )","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"eeliana"},"content":"                );","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"eeliana"},"content":"            case \"done\": // fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"eeliana"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(\"Please enter the task index.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"eeliana"},"content":"            case \"get\":","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(\"Please enter a date in dd/MM/yyyy format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(\"Please enter keyword to search for.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"eeliana"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"                        \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"                );","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"eeliana"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"eeliana"},"content":"         * Execute program per the user input parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"eeliana"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"eeliana"},"content":"         * @param type The type of UserCommands specifying the task to","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"eeliana"},"content":"         *             be executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"eeliana"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"eeliana"},"content":"        private void executeTasks(UserCommands type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"eeliana"},"content":"            switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"eeliana"},"content":"            case BYE:","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"eeliana"},"content":"                exit();","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"eeliana"},"content":"            case LIST:","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"eeliana"},"content":"                returnTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"eeliana"},"content":"            case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"eeliana"},"content":"                findTasks(list_of_words[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"eeliana"},"content":"            case GET:","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"eeliana"},"content":"                returnTasksOnDate(list_of_words[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"eeliana"},"content":"            case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"eeliana"},"content":"                updateTasks(new ToDo(list_of_words[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"eeliana"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"eeliana"},"content":"                updateTasks(new Deadline(list_of_words[1], this.date));","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"eeliana"},"content":"            case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"eeliana"},"content":"                updateTasks(new Event(list_of_words[1], this.date));","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"eeliana"},"content":"            case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"eeliana"},"content":"                deleteTask(this.taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"eeliana"},"content":"            case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"eeliana"},"content":"                markTaskAsCompleted(this.taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"eeliana"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"eeliana"},"content":"     * Task list to keep track.","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"eeliana"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"eeliana"},"content":"     * Storage to handle file manipulation.","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"eeliana"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"eeliana"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"eeliana"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"eeliana"},"content":"    private HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e dateTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"eeliana"},"content":"     * Public constructor for Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"eeliana"},"content":"    public Duke(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"eeliana"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"eeliana"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"eeliana"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"eeliana"},"content":"     * Dividing line for formatting Duke\u0027s replies.","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"eeliana"},"content":"    private void divide() {","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"eeliana"},"content":"        StringBuilder builder \u003d new StringBuilder(100);","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"eeliana"},"content":"        Stream.generate(() -\u003e \u0027-\u0027).limit(60).forEach(e -\u003e builder.append(e));","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"eeliana"},"content":"        String line \u003d String.format(\"%4s+%s+\\n\", \" \", builder.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"eeliana"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"eeliana"},"content":"     * Prints Duke\u0027s greetings.","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"eeliana"},"content":"    private void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"eeliana"},"content":"        ui.outputMessage(Commands.GREET);","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"eeliana"},"content":"     * Prints Duke\u0027s exit message.","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":234,"author":{"gitId":"eeliana"},"content":"    private void exit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":235,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"eeliana"},"content":"        ui.outputMessage(Commands.EXIT);","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"eeliana"},"content":"     * Prints the current tasks in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":242,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"eeliana"},"content":"    private void returnTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":245,"author":{"gitId":"eeliana"},"content":"        ui.outputMessage(Commands.LIST);","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"eeliana"},"content":"        System.out.println(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":247,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":249,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":250,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"eeliana"},"content":"     * Returns the tasks on a given date.","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":253,"author":{"gitId":"eeliana"},"content":"     * @param dateTime The desired date.","lastModifiedDate":"2021-08-24"},{"lineNumber":254,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":255,"author":{"gitId":"eeliana"},"content":"    private void returnTasksOnDate(String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":256,"author":{"gitId":"eeliana"},"content":"        String customPattern \u003d\"dd/MM/yyyy\";","lastModifiedDate":"2021-08-24"},{"lineNumber":257,"author":{"gitId":"eeliana"},"content":"        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(customPattern);","lastModifiedDate":"2021-08-24"},{"lineNumber":258,"author":{"gitId":"eeliana"},"content":"        DateTimeManager dateTimeManager \u003d new DateTimeManager(customFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":259,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":260,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":261,"author":{"gitId":"eeliana"},"content":"            LocalDate date \u003d dateTimeManager.parseDateTime(dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":262,"author":{"gitId":"eeliana"},"content":"            System.out.println(dateTasks.getOrDefault(date, new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-08-24"},{"lineNumber":263,"author":{"gitId":"eeliana"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":264,"author":{"gitId":"eeliana"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":265,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":266,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":267,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"eeliana"},"content":"    private void findTasks(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":269,"author":{"gitId":"eeliana"},"content":"        // Run through the tasks in the current list","lastModifiedDate":"2021-08-25"},{"lineNumber":270,"author":{"gitId":"eeliana"},"content":"        TaskList matchingTasks \u003d this.taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":271,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":272,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":273,"author":{"gitId":"eeliana"},"content":"        ui.outputMessage(Commands.FIND);","lastModifiedDate":"2021-08-25"},{"lineNumber":274,"author":{"gitId":"eeliana"},"content":"        System.out.println(matchingTasks.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":275,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":276,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":277,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":278,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":279,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":280,"author":{"gitId":"eeliana"},"content":"     * Update the list and files with added task.","lastModifiedDate":"2021-08-25"},{"lineNumber":281,"author":{"gitId":"eeliana"},"content":"     * @param task","lastModifiedDate":"2021-08-25"},{"lineNumber":282,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":283,"author":{"gitId":"eeliana"},"content":"    private void updateTasks(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"eeliana"},"content":"        this.taskList \u003d this.taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":285,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":286,"author":{"gitId":"eeliana"},"content":"        ui.outputMessage(Commands.ADD);","lastModifiedDate":"2021-08-24"},{"lineNumber":287,"author":{"gitId":"eeliana"},"content":"        System.out.println(","lastModifiedDate":"2021-08-24"},{"lineNumber":288,"author":{"gitId":"eeliana"},"content":"                String.format(\"%5s%s\\n%4s%s\", \" \", task,","lastModifiedDate":"2021-08-24"},{"lineNumber":289,"author":{"gitId":"eeliana"},"content":"                        \" \", this.taskList.status())","lastModifiedDate":"2021-08-24"},{"lineNumber":290,"author":{"gitId":"eeliana"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":291,"author":{"gitId":"eeliana"},"content":"        divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":292,"author":{"gitId":"eeliana"},"content":"        storage.addTaskToFile(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":293,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":294,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":295,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":296,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":297,"author":{"gitId":"eeliana"},"content":"     * Mark the respective tasks as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":298,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":299,"author":{"gitId":"eeliana"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":300,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":301,"author":{"gitId":"eeliana"},"content":"    private void markTaskAsCompleted(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":302,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":303,"author":{"gitId":"eeliana"},"content":"            divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":304,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":305,"author":{"gitId":"eeliana"},"content":"            boolean isValid \u003d this.taskList.isValidTaskIndex(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":306,"author":{"gitId":"eeliana"},"content":"            if (isValid) {","lastModifiedDate":"2021-08-24"},{"lineNumber":307,"author":{"gitId":"eeliana"},"content":"                String toUpdate \u003d this.taskList.getTask(index).toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":308,"author":{"gitId":"eeliana"},"content":"                Task task \u003d this.taskList.markTaskAsCompleted(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":309,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":310,"author":{"gitId":"eeliana"},"content":"                ui.outputMessage(Commands.DONE);","lastModifiedDate":"2021-08-24"},{"lineNumber":311,"author":{"gitId":"eeliana"},"content":"                System.out.println(","lastModifiedDate":"2021-08-24"},{"lineNumber":312,"author":{"gitId":"eeliana"},"content":"                        String.format(\"%6s%s\\n%4s%s\", \" \", task,","lastModifiedDate":"2021-08-24"},{"lineNumber":313,"author":{"gitId":"eeliana"},"content":"                                \" \", this.taskList.status())","lastModifiedDate":"2021-08-24"},{"lineNumber":314,"author":{"gitId":"eeliana"},"content":"                );","lastModifiedDate":"2021-08-24"},{"lineNumber":315,"author":{"gitId":"eeliana"},"content":"                storage.markTaskAsCompleted(task.toString(), toUpdate);","lastModifiedDate":"2021-08-24"},{"lineNumber":316,"author":{"gitId":"eeliana"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":317,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(\"There is no such task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":318,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":319,"author":{"gitId":"eeliana"},"content":"            divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":320,"author":{"gitId":"eeliana"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":321,"author":{"gitId":"eeliana"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":322,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":323,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":324,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":325,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":326,"author":{"gitId":"eeliana"},"content":"     * Delete the corresponding task.","lastModifiedDate":"2021-08-25"},{"lineNumber":327,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":328,"author":{"gitId":"eeliana"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":329,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":330,"author":{"gitId":"eeliana"},"content":"    private void deleteTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":331,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":332,"author":{"gitId":"eeliana"},"content":"            divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":333,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":334,"author":{"gitId":"eeliana"},"content":"            boolean isValid \u003d taskList.isValidTaskIndex(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":335,"author":{"gitId":"eeliana"},"content":"            if (isValid) {","lastModifiedDate":"2021-08-24"},{"lineNumber":336,"author":{"gitId":"eeliana"},"content":"                Task task \u003d taskList.getTask(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":337,"author":{"gitId":"eeliana"},"content":"                this.taskList \u003d this.taskList.deleteTask(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":338,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":339,"author":{"gitId":"eeliana"},"content":"                ui.outputMessage(Commands.DELETE);","lastModifiedDate":"2021-08-24"},{"lineNumber":340,"author":{"gitId":"eeliana"},"content":"                System.out.println(","lastModifiedDate":"2021-08-24"},{"lineNumber":341,"author":{"gitId":"eeliana"},"content":"                        String.format(\"%6s%s\\n%4s%s\", \" \", task,","lastModifiedDate":"2021-08-24"},{"lineNumber":342,"author":{"gitId":"eeliana"},"content":"                                \" \", taskList.status())","lastModifiedDate":"2021-08-24"},{"lineNumber":343,"author":{"gitId":"eeliana"},"content":"                );","lastModifiedDate":"2021-08-24"},{"lineNumber":344,"author":{"gitId":"eeliana"},"content":"                storage.deleteTaskFromFile(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":345,"author":{"gitId":"eeliana"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":346,"author":{"gitId":"eeliana"},"content":"                throw new DukeException(\"There is no such task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":347,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":348,"author":{"gitId":"eeliana"},"content":"            divide();","lastModifiedDate":"2021-08-25"},{"lineNumber":349,"author":{"gitId":"eeliana"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":350,"author":{"gitId":"eeliana"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":351,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":352,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":353,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":354,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":355,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":356,"author":{"gitId":"eeliana"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":357,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":358,"author":{"gitId":"eeliana"},"content":"    private void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":359,"author":{"gitId":"eeliana"},"content":"        this.taskList \u003d storage.loadData(this.dateTasks, this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":360,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":361,"author":{"gitId":"eeliana"},"content":"        // Greeting the user","lastModifiedDate":"2021-08-24"},{"lineNumber":362,"author":{"gitId":"eeliana"},"content":"        greet();","lastModifiedDate":"2021-08-24"},{"lineNumber":363,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":364,"author":{"gitId":"eeliana"},"content":"        // Taking in commands","lastModifiedDate":"2021-08-24"},{"lineNumber":365,"author":{"gitId":"eeliana"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":366,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":367,"author":{"gitId":"eeliana"},"content":"        while (true) {","lastModifiedDate":"2021-08-24"},{"lineNumber":368,"author":{"gitId":"eeliana"},"content":"            String command \u003d sc.nextLine().strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":369,"author":{"gitId":"eeliana"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":370,"author":{"gitId":"eeliana"},"content":"                UserCommands type \u003d parser.parseString(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":371,"author":{"gitId":"eeliana"},"content":"                parser.executeTasks(type);","lastModifiedDate":"2021-08-24"},{"lineNumber":372,"author":{"gitId":"eeliana"},"content":"                if (type.equals(UserCommands.BYE)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":373,"author":{"gitId":"eeliana"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":374,"author":{"gitId":"eeliana"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":375,"author":{"gitId":"eeliana"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":376,"author":{"gitId":"eeliana"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":377,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":378,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":379,"author":{"gitId":"eeliana"},"content":"        // Close the scanner if \"bye\" command is given and","lastModifiedDate":"2021-08-25"},{"lineNumber":380,"author":{"gitId":"eeliana"},"content":"        // the Duke exits the while loop.","lastModifiedDate":"2021-08-25"},{"lineNumber":381,"author":{"gitId":"eeliana"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":382,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":383,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":384,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":385,"author":{"gitId":"eeliana"},"content":"     * Main method to execute Duke\u0027s functions.","lastModifiedDate":"2021-08-25"},{"lineNumber":386,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":387,"author":{"gitId":"eeliana"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2021-08-24"},{"lineNumber":388,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":389,"author":{"gitId":"eeliana"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":390,"author":{"gitId":"eeliana"},"content":"        String directoryPath \u003d \"./data\";","lastModifiedDate":"2021-08-24"},{"lineNumber":391,"author":{"gitId":"eeliana"},"content":"        String filePath \u003d \"./data/duke.text\";","lastModifiedDate":"2021-08-24"},{"lineNumber":392,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":393,"author":{"gitId":"eeliana"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2021-08-24"},{"lineNumber":394,"author":{"gitId":"eeliana"},"content":"        // Check folder exists","lastModifiedDate":"2021-08-24"},{"lineNumber":395,"author":{"gitId":"eeliana"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":396,"author":{"gitId":"eeliana"},"content":"            boolean created \u003d directory.mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":397,"author":{"gitId":"eeliana"},"content":"            if (created) {","lastModifiedDate":"2021-08-24"},{"lineNumber":398,"author":{"gitId":"eeliana"},"content":"                System.out.println(\"Successfully created directory.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":399,"author":{"gitId":"eeliana"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":400,"author":{"gitId":"eeliana"},"content":"                System.out.println(\"An error occurred\");","lastModifiedDate":"2021-08-24"},{"lineNumber":401,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":402,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":403,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":404,"author":{"gitId":"eeliana"},"content":"        Duke duke \u003d new Duke(new TaskList(), new Storage(filePath), new Ui());","lastModifiedDate":"2021-08-24"},{"lineNumber":405,"author":{"gitId":"eeliana"},"content":"        duke.run();","lastModifiedDate":"2021-08-24"},{"lineNumber":406,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":407,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eeliana":407}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":" * Represents a DukeException. A \u003ccode\u003eDukeException\u003c/code\u003e is thrown","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":" * when an error occured when executing Duke functions.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"    protected DukeException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"eeliana":11}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":" * Represents a Storage object. A \u003ccode\u003eStorage\u003c/code\u003e object","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":" * loads data from the file according to the filepath given","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":" * and handles any updates to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    private String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     * Public constructor for a Storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"     * @param filePath The filepath of the file object to be handled.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"     * Load data from the file per the filepath.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"     * @param dateTasks A HashMap to keep track of tasks happening on specific","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"     *                  dates.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"     * @param taskList The tasklist to be updated as the file content is read.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"     * @return The updated tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    public TaskList loadData(HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e dateTasks,","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"                             TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"            // Create a new file if it does not already exist","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"            String task \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"            while((task \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"                char type \u003d task.charAt(1);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"                boolean isCompleted \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"                DateTimeManager manager \u003d new DateTimeManager(DateTimeFormatter.ISO_DATE);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"                String description \u003d parseDescription(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"                // Dummy objects initialised.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"                Task newTask \u003d new Task(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"                LocalDate time \u003d LocalDate.now();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"                switch (type) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"                    newTask \u003d new ToDo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"                    taskList \u003d loadTasks(newTask, taskList, isCompleted);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"                    time \u003d parseTime(task, \"by: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"                    newTask \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"                    taskList \u003d loadTasks(newTask, taskList, isCompleted);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"                    manager.updateDateTasks(dateTasks, time, newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"                    time \u003d parseTime(task, \"at: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"                    newTask \u003d new Event(description, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"                    taskList \u003d loadTasks(newTask, taskList, isCompleted);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"                    manager.updateDateTasks(dateTasks, time, newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"                default:","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"                    throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"                System.out.println(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"            reader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"        } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"            return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"    private TaskList loadTasks(Task task, TaskList taskList, boolean isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"        if (isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"            task.markAsCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"        return taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"    private LocalDate parseTime(String task, String command) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"        int timeIndex \u003d task.indexOf(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"        if (timeIndex \u003c 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"            throw new DukeException(\"Invalid task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"        String timeDescription \u003d task.substring(timeIndex + command.length(),","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"                task.indexOf(\u0027)\u0027));","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"        LocalDate time \u003d LocalDate.parse(timeDescription);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"        return time;","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"    private String parseDescription(String task) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"        int startOfDescription \u003d task.lastIndexOf(\u0027]\u0027) + 2;","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"        if (startOfDescription \u003c 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"            throw new DukeException(\"Description cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"        String description \u003d task.substring(startOfDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"        int timeIndex \u003d description.indexOf(\"  (\");","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"        if (timeIndex \u003e\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"            description \u003d description.substring(0, timeIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"        return description;","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"     * Append the newly added task to the file contents.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"eeliana"},"content":"     * @param task The task to be appended to the file contents.","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"eeliana"},"content":"    public void addTaskToFile(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"eeliana"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"eeliana"},"content":"            writer.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"eeliana"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"eeliana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"     * Update the file contents to reflect the updated list after","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"eeliana"},"content":"     * a task has been deleted from it.","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"eeliana"},"content":"     * @param taskList The updated tasklist after a deletion.","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"eeliana"},"content":"    public void deleteTaskFromFile(TaskList taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"eeliana"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"eeliana"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"eeliana"},"content":"            writer.write(taskList.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"eeliana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"eeliana"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"eeliana"},"content":"     * Edit the file contents to reflect that a particular task has been marked.","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"eeliana"},"content":"     * Compares the updated line with the existing one to be replaced.","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"eeliana"},"content":"     * @param task String representation of the editted task.","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"eeliana"},"content":"     * @param toUpdate String representation of the pre-editted task.","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"eeliana"},"content":"    public void markTaskAsCompleted(String task, String toUpdate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"eeliana"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"eeliana"},"content":"            String line \u003d\"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"eeliana"},"content":"            String newContent \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"eeliana"},"content":"            while((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"eeliana"},"content":"                if (line.compareTo(toUpdate) \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"eeliana"},"content":"                    line \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"eeliana"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"eeliana"},"content":"                newContent +\u003d line + System.lineSeparator();","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"eeliana"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"eeliana"},"content":"            writer.write(newContent);","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"eeliana"},"content":"            reader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"eeliana"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"eeliana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"eeliana"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"eeliana":190}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import seedu.duke.command.Commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" * Represents a Ui object. A \u003ccode\u003eUi\u003c/code\u003e object","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":" * outputs to the user based on given commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"     * Outputs the given command to the console.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"     * @param command Command to be printed to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    public void outputMessage(Commands command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"        String message \u003d command.getCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"        System.out.println(String.format(\"%4s%s\", \" \", message));","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eeliana":20}},{"path":"src/main/java/seedu/duke/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":" * Encapsulates the possible commands that would be output","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":" * by a \u003ccode\u003eDuke\u003c/code\u003e object.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"public enum Commands {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"     * Commands that Duke might use.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    GREET(String.format(\"Hello! I\u0027m Duke\\n%4sWhat can I do for you?\", \" \")),","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"    ADD(\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    FIND(\"Here are the matching tasks in your list.\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"    DONE(\"Nice! I\u0027ve marked this task as done:\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    DELETE(\"Noted. I\u0027ve removed this task:\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"    LIST(\"Here are the tasks in your list:\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    EXIT(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    private final String command;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    private Commands(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"     * Returns the string description of the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"     * @return String representation of command.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"        return this.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eeliana":33}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" * Represents a Deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e describes","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":" * the task and the deadline that the task needs to be completed by.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"     * String that indicates the deadline for the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"     * Public constructor to create a \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"     * @param description Description of the \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"     *                    task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"     * @param deadline duke.task.Deadline to complete \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"     *                 task by.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     * String representation of \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"     * @return String representation of a \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline +\")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eeliana":38}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" * Represents an Event task. An \u003ccode\u003eEvent\u003c/code\u003e describes","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":" * the task and the date that the event would occur.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"     * String that indicates the time of the event.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    protected LocalDate timeOfEvent;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"     * Public constructor to create an \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"     * object.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"     * @param timeOfEvent Time of the event.","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    public Event(String description, LocalDate timeOfEvent) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"        this.timeOfEvent \u003d timeOfEvent;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"     * String representation of an \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"     * @return String representation of an \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.timeOfEvent +\")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eeliana":37}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e is described by","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":" * a string description.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"     * String to describe the \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"     * Boolean to keep track if \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"     * is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"     * Public constructor for creating a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"     * @param description Description of the \u003ccode\u003eTask\u003c/code\u003e object created.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"     * Mark \u003ccode\u003eTask\u003c/code\u003e object as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    public void markAsCompleted() {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"     * String representation of the \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"     * @return String The string describing the \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"        char marked \u003d isCompleted ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        return String.format(\"[%c] %s\", marked, this.description);","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eeliana":50}},{"path":"src/main/java/seedu/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" * Represents a tasklist. A \u003ccode\u003eTaskList\u003c/code\u003e records","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":" * the tasks that the user have input.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"     * ArrayList of tasks that contains all the tasks to be completed.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"     * Length of the tasks available.","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"    private int length \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"     * Empty TaskList constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"     * TaskList constructor with tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"        this.length \u003d tasks.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"     * Check if a task with the corresponding index is in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"     * Returns true if it is.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"     * @param index Index of task to be checked.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"     * @return boolean Indicate whether the task is in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"    public boolean isValidTaskIndex(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c length;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"     * Returns the specific task asked for.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"     * @param index Index of the task desired.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"     * @return The task corresponding to the index given.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"     * Add a new task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"     * @return A new task list that contains the required tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"    public TaskList add(Task newTask) {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"        newList.add(newTask);","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"        return new TaskList(newList);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"                // Add task to the tasklist of matching tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"                matchingTasks \u003d matchingTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"     * Mark a specific task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"     * @param index Index of the task to be marked as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"     * @return The task that was marked as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"    public Task markTaskAsCompleted(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"        task.markAsCompleted();","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"        return task;","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"     * Delete task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"     * @return A new task list that contains the remaining tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"    public TaskList deleteTask(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"        newList.remove(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"        return new TaskList(newList);","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"     * Gets the status of the current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"     * Return the String describing the number of tasks in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"     * @return String representation of the number of tasks in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"    public String status() {","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"        String t \u003d this.length !\u003d 1 ? \"tasks\" : \"task\";","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"        return String.format(\"Now you have %d %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"                this.length, t);","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"     * Returns the String representation of the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"     * @return String representation of the respective tasks","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"     * in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"        for (Task item : tasks) {","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"            str +\u003d String.format(\"%4s%d. %s\\n\", \" \", i, item);","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"            i++;","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"eeliana"},"content":"        return str;","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eeliana":131}},{"path":"src/main/java/seedu/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":" * Represents a ToDo task. A \u003ccode\u003eToDo\u003c/code\u003e describes","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":" * the task to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"     * Public constructor to create a \u003ccode\u003eToDo\u003c/code\u003e","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"     * object.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"     * @param description Description of what to do.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"     * String representation of a \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"     * @return String representation of a \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eeliana":28}},{"path":"src/test/java/seedu/duke/DateTimeManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class DateTimeManagerTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"    public void parseDate_invalidFormat_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"        String invalidDateFormat \u003d \"23-3-2001\";","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"        DateTimeManager manager \u003d new DateTimeManager(customFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"        Exception e \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"                () -\u003e manager.parseDateTime(invalidDateFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"        String expectedMessage \u003d \"Cannot read date.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"        String actualMessage \u003d e.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    public void parseDate_validFormat_localDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"        String validDateFormat \u003d \"23/03/2001\";","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"        DateTimeManager manager \u003d new DateTimeManager(customFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"        assertDoesNotThrow(() -\u003e manager.parseDateTime(validDateFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eeliana":34}},{"path":"src/test/java/seedu/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import org.junit.Rule;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import org.junit.rules.TemporaryFolder;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    @Rule","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    public TemporaryFolder folder\u003d new TemporaryFolder();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"    private final PrintStream initialOut \u003d System.out;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    private final PrintStream initialErr \u003d System.err;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    public void setUpStreamsAndEmptyFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    @AfterEach","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"        System.setOut(initialOut);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        System.setErr(initialErr);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"    public void loadData_fileNotFound_doesNotThrowException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"        String filePath \u003d \"./data/temp.text\";","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"        HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e dateTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        assertDoesNotThrow(() -\u003e storage.loadData(dateTasks, taskList));","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"    public void loadData_fileNotFound_createsNewFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"        HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e dateTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"        String filePath \u003d folder.getRoot().getPath() + \"/temp.text\";","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"        storage.loadData(dateTasks, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"    public void addTask_validTask_updateFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"        Task toAdd \u003d new ToDo(\"eat lunch\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"        String filePath \u003d folder.getRoot().getPath() + \"/temp.text\";","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"        storage.addTaskToFile(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"        String lastLine \u003d\"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"        String line;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"                lastLine \u003d line;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"            assertEquals(lastLine, toAdd.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eeliana":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"eeliana":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"java -classpath ..\\bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eeliana":1,"-":20}}]
