[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aryagiat":14,"-":46}},{"path":"src/main/java/duke/Constant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":" * The class for Global Duke Constants.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"public class Constant {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"     * Available commands.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    public enum Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        LIST (\"\", \"Lists all the tasks.\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        TODO (\"[description]\", \"Adds a todo task.\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        DEADLINE (\"[description] /by [dd-MM-yyyy] [*optional hh:mm]\", \"Adds a task with a deadline\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        EVENT (\"[description] /at [dd-MM-yyyy] [*optional hh:mm]\", \"Adds an event to the task\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"        DELETE (\"[index]\", \"Removes a task from the task list\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        DONE (\"[index]\", \"Marks a task as done\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        FIND (\"[keyword]\", \"Find a task by searching for a keyword\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"        HELP (\"\", \"Shows all the commands available\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        DATES (\"\", \"Shows all the available date and time type\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        BYE (\"\", \"Quit the app\");","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        private final String arguments;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        private final String description;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        Command(String arguments, String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"            this.arguments \u003d arguments;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"         * Returns a string representation of the command.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"         * @return A string representation of the command.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"            return this.name() + \" \" + arguments + \"   --\u003e   \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"     * Accepted Dates.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"    public enum Date {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        TODAY (\"today\", \"today\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        TOMORROW (\"tomorrow\", \"tomorrow\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"        YEAR_DASH (\"yyyy-MM-dd\", \"2021-12-25\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"        YEAR_SLASH (\"yyyy/MM/dd\", \"2021/12/25\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        DAY_DASH (\"dd-MM-yyyy\", \"25-12-2021\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        DAY_SLASH (\"dd/MM/yyyy\", \"25/12/2021\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        DATETIME_DOT (\"[date] hh:mm\", \"[date] 18:00\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        DATETIME_BLANK (\"[date] hhmm\", \"[date] 1800\");","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"        private final String accepted;","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"        private final String example;","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"        Date(String accepted, String example) {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"            this.accepted \u003d accepted;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"            this.example \u003d example;","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"         * Returns a string representation of the date.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"         * @return A string representation of the date.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"        public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"            return accepted + \"   --\u003e   example: \" + example;","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"aryagiat":64,"-":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":" * A Task of type Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    /** The deadline date time */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** The save-friendly String representation of the date */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected String dateString;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"     * The Deadline constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param date The deadline of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.date \u003d LocalDateTime.parse(date);","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.dateString \u003d date;","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the string representation of a Deadline task in the saved file.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return The string representation of a Deadline task in the saved file.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String savedToString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String doneStatus \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return \"D | \" + doneStatus + \" | \" + super.description + \" | \" + dateString;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the string representation of a Deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return string representation of a Deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":26,"-":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The Duke chat-bot app.","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    /** Duke UI */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    /** Hard disk storage */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    /** User input parser */","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    /** The list of tasks */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    /** True if Duke is still running */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    private boolean isRunning;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     * Duke class constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     * @param directory Relative path to directory of the saved data.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"     * @param file Name of the saved data file.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"    public Duke(String directory, String file) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert directory !\u003d null : \"[duke.Duke.Duke]: directory parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assert file !\u003d null : \"[duke.Duke.Duke]: file parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        storage \u003d new Storage(directory, file);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            // Get stored data.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        isRunning \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"     * Entry point of the Duke program.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        new Duke(\"./data\", \"duke.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"     * Displays the Duke UI and process user input commands.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"        // Show Greetings.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        ui.showGreetings();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"        // Get and process input.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String rawInput \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"        String output \u003d \"Jak się masz? My name-a Borat. I like you.\\nWhat I do for you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"        while (isRunning) {","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"            // Gets user input","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"            ui.showMessage(output);","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"            rawInput \u003d ui.getInput();","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"            output \u003d getResponse(rawInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"        // Goodbye message","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"        ui.showGoodBye();","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"     * Returns a response by Duke given a user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"     * @return Duke\u0027s response.","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert input !\u003d null : \"[duke.Duke.getResponse]: input parameter is null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-08"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"            // Parses user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            HashMap\u003cString, String\u003e inputs \u003d parser.parseInput(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            Constant.Command command \u003d Constant.Command.valueOf(inputs.get(\"command\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"            String task;","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"            // Process user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"            switch (command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"            case HELP:","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"                // Gets user manual.","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"                output \u003d ui.getHelpMenu();","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"            case BYE:","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"                // Quits program.","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"                isRunning \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"            case LIST:","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"                // Gets the string represented tasks in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                output \u003d taskList.getAllTask();","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"            case DONE:","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"                // Marks a task as being completed.","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                int index \u003d parser.convertToInt(inputs.get(\"index\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                output \u003d taskList.markDone(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"                // Edits the file content.","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"                task \u003d storage.getFileLine(index - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"                task \u003d task.substring(0, 4) + \"1\" + task.substring(5);","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"                storage.updateLineFile(index - 1, task);","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"            case TODO:","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"                // Adds a todo-typed task to the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Todo todo \u003d new Todo(inputs.get(\"description\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                output \u003d taskList.addItem(todo);","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"                // Add to file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                task \u003d todo.savedToString();","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"                storage.addToFile(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"                // Adds a deadline-typed task in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Deadline deadline \u003d new Deadline(inputs.get(\"description\"), inputs.get(\"date\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                output \u003d taskList.addItem(deadline);","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"                // Add to file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                task \u003d deadline.savedToString();","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"                storage.addToFile(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"aryagiat"},"content":"            case EVENT:","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"aryagiat"},"content":"                // Adds an event-typed task in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                Event event \u003d new Event(inputs.get(\"description\"), inputs.get(\"date\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                output \u003d taskList.addItem(event);","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"aryagiat"},"content":"                // Add to file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                task \u003d event.savedToString();","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"aryagiat"},"content":"                storage.addToFile(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"aryagiat"},"content":"            case DELETE:","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"aryagiat"},"content":"                // Deletes a task from the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                int id \u003d parser.convertToInt(inputs.get(\"index\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                output \u003d taskList.removeItem(id);","lastModifiedDate":"2021-09-08"},{"lineNumber":154,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"aryagiat"},"content":"                // Remove from file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":"                storage.removeFromFile(id - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"aryagiat"},"content":"            case DATES:","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"aryagiat"},"content":"                // Gets the accepted date types.","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"aryagiat"},"content":"                output \u003d ui.getAllAcceptedDates();","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"aryagiat"},"content":"            case FIND:","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"aryagiat"},"content":"                // Gets the task matching the queried keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                output \u003d taskList.find(inputs.get(\"keyword\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":"                break;","lastModifiedDate":"2021-09-02"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"            default:","lastModifiedDate":"2021-09-02"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"                output \u003d \"Invalid Message\";","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-08"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"aryagiat"},"content":"            // Return the output message.","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"aryagiat"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":175,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":176,"author":{"gitId":"aryagiat"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":177,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":179,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":180,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":181,"author":{"gitId":"aryagiat"},"content":"     * Returns true when duke is awake and false otherwise.","lastModifiedDate":"2021-09-02"},{"lineNumber":182,"author":{"gitId":"aryagiat"},"content":"     * @return True when duke is awake and false otherwise.","lastModifiedDate":"2021-09-02"},{"lineNumber":183,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":184,"author":{"gitId":"aryagiat"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-09-02"},{"lineNumber":185,"author":{"gitId":"aryagiat"},"content":"        return isRunning;","lastModifiedDate":"2021-09-02"},{"lineNumber":186,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aryagiat":148,"-":39}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":" * Exceptions for the Duke app.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    public enum Errors {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"        FILE_NOT_FOUND (\"Saved File not found\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        INVALID_COMMAND (\"what you mean? Do: `help` to view all commands.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        MISSING_DESCRIPTION (\"Command is missing a description.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        MISSING_DATE (\"Command is missing a date.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        INVALID_DATE (\"The date is invalid.  Do `dates` command to see all possible dates.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        INVALID_TIME (\"The time is invalid.  Do `dates` command to see all possible time.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        INVALID_ARGUMENT (\"The argument is invalid.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"        WRONG_ARGUMENT_TYPE (\"Invalid argument type.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        TASK_NOT_FOUND (\"No task found.\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        SAVE_FAIL (\"Failed to save current state\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        private final String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        Errors(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"         * Returns the string representation of an Error","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"         * @return the string representation of an Error","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"            return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":40}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":" * A Task of type event","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    /** The event date time */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** The String representation of a save-friendly date */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected String dateString;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     * The Event constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param date The time of the event.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.date \u003d LocalDateTime.parse(date);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.dateString \u003d date;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the string representation of an Event task in the saved file.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return The string representation of an Event task in the saved file.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String savedToString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String doneStatus \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return \"E | \" + doneStatus + \" | \" + super.description + \" | \" + dateString;","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     * Returns the string representation of an Event","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     * @return the string representation of an Event","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":29,"-":18}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":" * The parser for Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns a HashMap from the parsed user input string.","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"     * @param rawInput The user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return HashMap from the parsed input {\"command\": \"event\", \"description\": \"desc\", ...}.","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException An invalid user input will produce this exception.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public HashMap\u003cString, String\u003e parseInput(String rawInput) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assert rawInput !\u003d null : \"[duke.Parser.parseInput]: rawInput is null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        String[] inputs \u003d rawInput.split(\"\\\\s+\");","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        if (inputs.length \u003c 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_COMMAND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        Constant.Command command;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        String commandStr \u003d inputs[0].toUpperCase();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"            command \u003d Constant.Command.valueOf(commandStr);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_COMMAND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        HashMap\u003cString, String\u003e parsedInput \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        switch (command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        case LIST:","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length !\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"                        + \" `list` command has no arguments\");","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        case DONE:","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length !\u003d 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027done 5\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"                // Checks if the argument is a number.","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"                Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.WRONG_ARGUMENT_TYPE.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027done 5\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            parsedInput.put(\"index\", inputs[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"        case TODO:","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027todo watch Borat\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"            String description \u003d combineStringArray(inputs, 1, inputs.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            parsedInput.put(\"description\", description);","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString()","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027deadline watch Borat /by 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"            String argument \u003d combineStringArray(inputs, 1, inputs.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"            String[] arguments \u003d argument.split(\" /by \");","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"            if (arguments.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DATE.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027deadline watch Borat /by 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"            } else if (arguments.length \u003e 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027deadline watch Borat /by 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"            String date \u003d parseDate(arguments[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            parsedInput.put(\"description\", arguments[0]);","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            parsedInput.put(\"date\", date);","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"        case EVENT:","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027event Borat concert /at 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"            String arg \u003d combineStringArray(inputs, 1, inputs.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"            String[] args \u003d arg.split(\" /at \");","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"            if (args.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DATE.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027event watch Borat /at 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"            } else if (args.length \u003e 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027event watch Borat /at 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"            String dateTest \u003d parseDate(args[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            parsedInput.put(\"description\", args[0]);","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            parsedInput.put(\"date\", dateTest);","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"        case BYE:","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length !\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"                        + \" `bye` command has no arguments\");","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"        case DELETE:","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length !\u003d 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027delete 5\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"                // Check if the argument is a number","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"                Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.WRONG_ARGUMENT_TYPE.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027delete 5\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            parsedInput.put(\"index\", inputs[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"aryagiat"},"content":"        case HELP:","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length !\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"                        + \" `help` command has no arguments\");","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            };","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"        case DATES:","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length !\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"aryagiat"},"content":"                        + \" `dates` command has no arguments\");","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"aryagiat"},"content":"        case FIND:","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"aryagiat"},"content":"            if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"aryagiat"},"content":"                        + \" (example: \u0027find book\u0027)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"aryagiat"},"content":"            String keyword \u003d combineStringArray(inputs, 1, inputs.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            parsedInput.put(\"command\", commandStr);","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            parsedInput.put(\"keyword\", keyword);","lastModifiedDate":"2021-09-09"},{"lineNumber":160,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":162,"author":{"gitId":"aryagiat"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"aryagiat"},"content":"            // Invalid command","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return parsedInput;","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"     * Returns an integer from a number in string form.","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"     * @param number A number in string form.","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"     * @return An integer form of the given string.","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException when the given argument is not a number.","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"aryagiat"},"content":"    public int convertToInt(String number) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assert number !\u003d null : \"[duke.Parser.convertToInt]: number parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"aryagiat"},"content":"            return Integer.parseInt(number);","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":182,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":184,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":185,"author":{"gitId":"aryagiat"},"content":"     * Returns a valid date as a string from a raw date string.","lastModifiedDate":"2021-08-31"},{"lineNumber":186,"author":{"gitId":"aryagiat"},"content":"     * @param input The raw date string.","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"aryagiat"},"content":"     * @return A string valid as a date.","lastModifiedDate":"2021-08-31"},{"lineNumber":188,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException Thrown if the input is an invalid date.","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"aryagiat"},"content":"    private String parseDate(String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assert input !\u003d null : \"[duke.Parser.parseDate]: input parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":192,"author":{"gitId":"aryagiat"},"content":"        String[] dateTime \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"aryagiat"},"content":"        int len \u003d dateTime.length;","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"aryagiat"},"content":"        String formatPattern \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"aryagiat"},"content":"        if (len \u003c 1 || len \u003e 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"aryagiat"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"aryagiat"},"content":"        if (dateTime[0].equals(\"today\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"aryagiat"},"content":"            LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"aryagiat"},"content":"            result +\u003d date.format(DateTimeFormatter.ofPattern(formatPattern));","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"aryagiat"},"content":"        } else if (dateTime[0].equals(\"tomorrow\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"aryagiat"},"content":"            LocalDate date \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"aryagiat"},"content":"            result +\u003d date.format(DateTimeFormatter.ofPattern(formatPattern));","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"aryagiat"},"content":"            // Date","lastModifiedDate":"2021-08-26"},{"lineNumber":207,"author":{"gitId":"aryagiat"},"content":"            String[] date1 \u003d dateTime[0].split(\"-\");","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"aryagiat"},"content":"            String[] date2 \u003d dateTime[0].split(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"aryagiat"},"content":"            if (date1.length \u003d\u003d 3 || date2.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"aryagiat"},"content":"                result \u003d date1.length \u003d\u003d 3 ? stringToDate(date1) : stringToDate(date2);","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"aryagiat"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":216,"author":{"gitId":"aryagiat"},"content":"        // Parse given time.","lastModifiedDate":"2021-08-31"},{"lineNumber":217,"author":{"gitId":"aryagiat"},"content":"        if (dateTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"aryagiat"},"content":"            result +\u003d \"T\" + stringToTime(dateTime[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"aryagiat"},"content":"            result +\u003d \"T23:59\";","lastModifiedDate":"2021-08-26"},{"lineNumber":221,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":223,"author":{"gitId":"aryagiat"},"content":"        // Test for validity","lastModifiedDate":"2021-08-31"},{"lineNumber":224,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":225,"author":{"gitId":"aryagiat"},"content":"            LocalDateTime.parse(result);","lastModifiedDate":"2021-08-31"},{"lineNumber":226,"author":{"gitId":"aryagiat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":227,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":228,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":229,"author":{"gitId":"aryagiat"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":230,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":231,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":232,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":234,"author":{"gitId":"aryagiat"},"content":"     * Returns a valid time as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":235,"author":{"gitId":"aryagiat"},"content":"     * @param time The time in the form of a string","lastModifiedDate":"2021-08-26"},{"lineNumber":236,"author":{"gitId":"aryagiat"},"content":"     * @return The string representation of the time","lastModifiedDate":"2021-08-26"},{"lineNumber":237,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException Thrown if the time is invalid","lastModifiedDate":"2021-08-26"},{"lineNumber":238,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":239,"author":{"gitId":"aryagiat"},"content":"    private String stringToTime(String time) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assert time !\u003d null : \"[duke.Parser.stringToTime]: time parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":241,"author":{"gitId":"aryagiat"},"content":"        String[] splitTime \u003d time.split(\":\");","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"aryagiat"},"content":"        if (splitTime.length \u003e 2 || splitTime.length \u003c 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_TIME.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":244,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"aryagiat"},"content":"        for (String s : splitTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":246,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"aryagiat"},"content":"                // Check if all the string are numbers:","lastModifiedDate":"2021-08-26"},{"lineNumber":248,"author":{"gitId":"aryagiat"},"content":"                Integer.parseInt(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":249,"author":{"gitId":"aryagiat"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":250,"author":{"gitId":"aryagiat"},"content":"                System.out.println(\"Time is not a number\");","lastModifiedDate":"2021-08-26"},{"lineNumber":251,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_TIME.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":252,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":253,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":254,"author":{"gitId":"aryagiat"},"content":"        if (splitTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":255,"author":{"gitId":"aryagiat"},"content":"            // in the form of [hh, mm]","lastModifiedDate":"2021-08-26"},{"lineNumber":256,"author":{"gitId":"aryagiat"},"content":"            if ((splitTime[0].length() \u003d\u003d 2 || splitTime[0].length() \u003d\u003d 1)","lastModifiedDate":"2021-09-02"},{"lineNumber":257,"author":{"gitId":"aryagiat"},"content":"                    \u0026\u0026 (splitTime[1].length() \u003d\u003d 2)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":258,"author":{"gitId":"aryagiat"},"content":"                String hh \u003d String.format(\"%02d\", Integer.parseInt(splitTime[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":259,"author":{"gitId":"aryagiat"},"content":"                String mm \u003d String.format(\"%02d\", Integer.parseInt(splitTime[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"aryagiat"},"content":"                return hh + \":\" + mm;","lastModifiedDate":"2021-08-26"},{"lineNumber":261,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":262,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":263,"author":{"gitId":"aryagiat"},"content":"            // in the form of [hhmm]","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"aryagiat"},"content":"            if (splitTime[0].length() \u003d\u003d 3 || splitTime[0].length() \u003d\u003d 4) {","lastModifiedDate":"2021-09-02"},{"lineNumber":265,"author":{"gitId":"aryagiat"},"content":"                String hh \u003d splitTime[0].length() \u003d\u003d 3 ? splitTime[0].substring(0, 1) : splitTime[0].substring(0, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":266,"author":{"gitId":"aryagiat"},"content":"                String mm \u003d splitTime[0].length() \u003d\u003d 3 ? splitTime[0].substring(1, 3) : splitTime[0].substring(2, 4);","lastModifiedDate":"2021-08-26"},{"lineNumber":267,"author":{"gitId":"aryagiat"},"content":"                hh \u003d String.format(\"%02d\", Integer.parseInt(hh));","lastModifiedDate":"2021-08-26"},{"lineNumber":268,"author":{"gitId":"aryagiat"},"content":"                mm \u003d String.format(\"%02d\", Integer.parseInt(mm));","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"aryagiat"},"content":"                return hh + \":\" + mm;","lastModifiedDate":"2021-08-26"},{"lineNumber":270,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":271,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":272,"author":{"gitId":"aryagiat"},"content":"        throw new DukeException(DukeException.Errors.INVALID_TIME.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":273,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":276,"author":{"gitId":"aryagiat"},"content":"     * Returns a valid date string from a date array.","lastModifiedDate":"2021-08-31"},{"lineNumber":277,"author":{"gitId":"aryagiat"},"content":"     * @param date A String array e.g. [yyyy, mm, dd].","lastModifiedDate":"2021-08-31"},{"lineNumber":278,"author":{"gitId":"aryagiat"},"content":"     * @return Null if invalid, else a string representation of the date -\u003e yyyy-mm-dd.","lastModifiedDate":"2021-08-31"},{"lineNumber":279,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException An invalid date will produce this","lastModifiedDate":"2021-08-26"},{"lineNumber":280,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":281,"author":{"gitId":"aryagiat"},"content":"    private String stringToDate(String[] date) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assert date !\u003d null : \"[duke.Parser.stringToDate]: date parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":283,"author":{"gitId":"aryagiat"},"content":"        // can be [yyyy, mm, dd] or [dd, mm, yyyy]","lastModifiedDate":"2021-08-26"},{"lineNumber":284,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":285,"author":{"gitId":"aryagiat"},"content":"            // Check if all the string are numbers:","lastModifiedDate":"2021-08-26"},{"lineNumber":286,"author":{"gitId":"aryagiat"},"content":"            Integer.parseInt(date[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":287,"author":{"gitId":"aryagiat"},"content":"            Integer.parseInt(date[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":288,"author":{"gitId":"aryagiat"},"content":"            Integer.parseInt(date[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":289,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":290,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_DATE.toString() + \" Date is not a number.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":291,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":292,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":293,"author":{"gitId":"aryagiat"},"content":"        if (date[0].length() \u003d\u003d 4","lastModifiedDate":"2021-09-02"},{"lineNumber":294,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 (date[1].length() \u003d\u003d 1 || date[1].length() \u003d\u003d 2)","lastModifiedDate":"2021-09-02"},{"lineNumber":295,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 (date[2].length() \u003d\u003d 1 || date[2].length() \u003d\u003d 2)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":296,"author":{"gitId":"aryagiat"},"content":"            // In the form of [yyyy, mm, dd]","lastModifiedDate":"2021-08-26"},{"lineNumber":297,"author":{"gitId":"aryagiat"},"content":"            String year \u003d date[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":298,"author":{"gitId":"aryagiat"},"content":"            String month \u003d String.format(\"%02d\", Integer.parseInt(date[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":299,"author":{"gitId":"aryagiat"},"content":"            String day \u003d String.format(\"%02d\", Integer.parseInt(date[2]));","lastModifiedDate":"2021-08-26"},{"lineNumber":300,"author":{"gitId":"aryagiat"},"content":"            return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-26"},{"lineNumber":301,"author":{"gitId":"aryagiat"},"content":"        } else if ((date[0].length() \u003d\u003d 1 || date[0].length() \u003d\u003d 2)","lastModifiedDate":"2021-09-02"},{"lineNumber":302,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 (date[1].length() \u003d\u003d 1 || date[1].length() \u003d\u003d 2)","lastModifiedDate":"2021-09-02"},{"lineNumber":303,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 (date[2].length() \u003d\u003d 4)","lastModifiedDate":"2021-09-02"},{"lineNumber":304,"author":{"gitId":"aryagiat"},"content":"        ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":305,"author":{"gitId":"aryagiat"},"content":"            // In the form of [dd, mm, yyyy]","lastModifiedDate":"2021-08-26"},{"lineNumber":306,"author":{"gitId":"aryagiat"},"content":"            String year \u003d date[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":307,"author":{"gitId":"aryagiat"},"content":"            String month \u003d String.format(\"%02d\", Integer.parseInt(date[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":308,"author":{"gitId":"aryagiat"},"content":"            String day \u003d String.format(\"%02d\", Integer.parseInt(date[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":309,"author":{"gitId":"aryagiat"},"content":"            return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-26"},{"lineNumber":310,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":311,"author":{"gitId":"aryagiat"},"content":"        throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":312,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":313,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":314,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":315,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":316,"author":{"gitId":"aryagiat"},"content":"     * Returns a string by combining an array of strings into a space separated sentence.","lastModifiedDate":"2021-08-31"},{"lineNumber":317,"author":{"gitId":"aryagiat"},"content":"     * @param arr The string array.","lastModifiedDate":"2021-08-31"},{"lineNumber":318,"author":{"gitId":"aryagiat"},"content":"     * @param start The starting index to be combined (inclusive).","lastModifiedDate":"2021-08-31"},{"lineNumber":319,"author":{"gitId":"aryagiat"},"content":"     * @param exclusiveEnd The ending index (exclusive).","lastModifiedDate":"2021-08-31"},{"lineNumber":320,"author":{"gitId":"aryagiat"},"content":"     * @return The sentence.","lastModifiedDate":"2021-08-26"},{"lineNumber":321,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":322,"author":{"gitId":"aryagiat"},"content":"    private String combineStringArray(String[] arr, int start, int exclusiveEnd) {","lastModifiedDate":"2021-08-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assert arr !\u003d null : \"[duke.Parser.combineStringArray]: arr input should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":324,"author":{"gitId":"aryagiat"},"content":"        StringBuilder tmp \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":325,"author":{"gitId":"aryagiat"},"content":"        if (exclusiveEnd \u003e arr.length) {","lastModifiedDate":"2021-08-26"},{"lineNumber":326,"author":{"gitId":"aryagiat"},"content":"            exclusiveEnd \u003d arr.length;","lastModifiedDate":"2021-08-26"},{"lineNumber":327,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":328,"author":{"gitId":"aryagiat"},"content":"        for (int i \u003d start; i \u003c exclusiveEnd; ++i) {","lastModifiedDate":"2021-08-26"},{"lineNumber":329,"author":{"gitId":"aryagiat"},"content":"            if (i + 1 \u003e\u003d exclusiveEnd) {","lastModifiedDate":"2021-08-26"},{"lineNumber":330,"author":{"gitId":"aryagiat"},"content":"                tmp.append(arr[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":331,"author":{"gitId":"aryagiat"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":332,"author":{"gitId":"aryagiat"},"content":"                tmp.append(arr[i]).append(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":333,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":334,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":335,"author":{"gitId":"aryagiat"},"content":"        return tmp.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":336,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":337,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":338,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":295,"-":43}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":" * The Duke storage class.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    /** The relative path to the directory */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    private String directory;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    /** The file name */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    private String file;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    /** The contents of the file as a List of Strings */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    private List\u003cString\u003e fileContents;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"     * @param directory The path to the directory.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"     * @param file The file name.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    public Storage(String directory, String file) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        this.directory \u003d directory;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        fileContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     * Returns an ArrayList of Task from the saved data.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     * @return an ArrayList of Task from the saved data.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException upon load error.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        // Make directory and/or file if they don\u0027t exist.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        File dataDir \u003d new File(directory);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        dataDir.mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        File dataFile \u003d new File(directory + \"/\" + file);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"            System.out.println(\"Failed to create a new file\");","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"            return null;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"        // Read each line in the saved file.","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"                String rawData \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"                fileContents.add(rawData);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"                String[] datas \u003d rawData.split(\" \\\\| \");","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"                String taskType \u003d datas[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"                boolean isDone \u003d datas[1].equals(\"1\");","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"                Task task \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"                    // Add a todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"                    task \u003d new Todo(datas[2]);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"                    // Add a deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"                    task \u003d new Deadline(datas[2], datas[3]);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"                    // Add an event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"                    task \u003d new Event(datas[2], datas[3]);","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"                default:","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"                    throw new DukeException(DukeException.Errors.INVALID_COMMAND.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"                        task.markDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.FILE_NOT_FOUND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"     * Returns the String of the queried line.","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"     * @param id The line number.","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"     * @return The String of the queried line.","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When the line is not found.","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"    public String getFileLine(int id) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"            return fileContents.get(id);","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"     * Adds a task to the saved file.","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"     * @param task The task as a String.","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When saving the file fails.","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"    public void addToFile(String task) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assert task !\u003d null : \"[duke.Storage.addToFile]: task parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"        fileContents.add(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"        commitChanges();","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"     * Removes a task from the saved file.","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"     * @param id The line to be removed.","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When saving the file fails.","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"    public void removeFromFile(int id) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"        fileContents.remove(id);","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"        commitChanges();","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"     * Updates a task to the saved file.","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"     * @param id The line to be updated.","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"aryagiat"},"content":"     * @param task The task as a String.","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When saving the file fails.","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"    public void updateLineFile(int id, String task) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assert task !\u003d null : \"[duke.Storage.updateLineFile]: task parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"aryagiat"},"content":"        fileContents.set(id, task);","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"aryagiat"},"content":"        commitChanges();","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"aryagiat"},"content":"     * Saving the file content to the hard drive.","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException when saving the file fails.","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"aryagiat"},"content":"    private void commitChanges() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"aryagiat"},"content":"            Files.write(Paths.get(directory + \"/\" + file), fileContents, StandardCharsets.UTF_8);","lastModifiedDate":"2021-09-02"},{"lineNumber":152,"author":{"gitId":"aryagiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.SAVE_FAIL.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":154,"-":2}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-08"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":" * The Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2021-08-08"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    /** The task description */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2021-08-08"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    /** The task status. True if it is done, else false */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"     * Constructor for a Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"     * @param description The new task description.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-08"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"     * Returns a string for the task status icon.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"     * @return \"X\" if the test is done, else \" \".","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-08"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        return isDone","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"                ? \"X\"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"                : \" \";","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     * @return The description of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-08"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-08"}],"authorContributionMap":{"aryagiat":18,"-":29}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":" * The tasks in the Duke app.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class TaskList {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    /** The tasks are stored in a list */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"     * @param tasks An ArrayList of Tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assert tasks !\u003d null : \"[duke.TaskList.TaskList]: tasks parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"     * Adds an item to the list and return a status message.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"     * @param task A Task to be added to the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"     * @return A status message to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    public String addItem(Task task) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assert tasks !\u003d null : \"[duke.TaskList.addItem]: tasks parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        String res \u003d \"Got it. I\u0027ve added this task: \\n\" + \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        res +\u003d (\"Now you have \" + tasks.size() + \" tasks in the tasks\");","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"        return res;","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"     * Marks the task at the given index as done and returns a status message.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"     * @param index The index to be marked as done","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"     * @return  A status message to be displayed","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException when a task is not found","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    public String markDone(int index) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Task task \u003d getTask(index - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        task.markDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        return \"Great success! Task Complete: \\n\" + \"  \" + task.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"     * Removes a task in the list and returns a status message.","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"     * @return A status message to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException when a task is not found.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"    public String removeItem(int index) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"        String res \u003d \"Got it. I\u0027ve removed this task: \\n\" + \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"        res +\u003d (\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"        return res;","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"     * Returns all the task (represented by a string) that contains the given keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"     * @param keyword The keyword to search the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"     * @return all the tasks (string) that contains the given keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert keyword !\u003d null : \"[duke.TaskList.find]: keyword parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"        str.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"        int id \u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"                str.append(id++).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"        return str.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"     * The String representation of the TaskList object.","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"     * @return The string representation of the TaskList object.","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"            str.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"        return str.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"     * Returns all the tasks as a string in the Task List","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"     * @return All the tasks as a string in the Task List","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"    public String getAllTask() {","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"        StringBuilder str \u003d new StringBuilder(\"This your task in list:\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"        for (int i \u003d 0; i \u003c size; ++i) {","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"            str.append(\" \").append(i + 1).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"        return size \u003d\u003d 0 ? \"You currently have nothing in your list\" : str.substring(0, str.length() - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private Task getTask(int index) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString()","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                        + \" Task list is empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            } else if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString()","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        + \" Only 1 item in the list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString()","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        + \" Input a number from [1...\" + tasks.size() + \"].\");","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"aryagiat":107,"-":22}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":" * A Task of type \"Todo\"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"     * Constructor of the class.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the string representation of a Todo task in the saved file.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return The string representation of a Todo task in the saved file.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String savedToString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String doneStatus \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return \"T | \" + doneStatus + \" | \" + super.description;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * Returns the string representation of a Todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     * @return the string representation of a Todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":24,"-":9}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"    public static final String SPACE \u003d \"    \";","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    public static final String LOGO \u003d SPACE","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"            + \"██████   ██████  ██████   █████  ████████ \"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"            + \"\\n\" + SPACE","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"            + \"██   ██ ██    ██ ██   ██ ██   ██    ██    \\n\" + SPACE","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"            + \"██████  ██    ██ ██████  ███████    ██    \\n\" + SPACE","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"            + \"██   ██ ██    ██ ██   ██ ██   ██    ██    \\n\" + SPACE","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"            + \"██████   ██████  ██   ██ ██   ██    ██\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    public static final String BOT_LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    public static final String USER_LINE \u003d \"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     * Displays the Greetings","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    public void showGreetings() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + \"Jak się masz? My name-a Borat. I like you.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + \"What I do for you?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"     * Displays the goodbye message","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"    public void showGoodBye() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        this.showMessage(\"Bye. Have a good time!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"     * Displays Borat\u0027s message to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     * @param message The message content to be displayed","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assert message !\u003d null : \"[duke.Ui.showMessage]: message parameter should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        message \u003d SPACE + message.replace(\"\\n\", \"\\n\" + SPACE);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + USER_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        System.out.println(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"     * Get the user input","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"     * @return The string representation of the user input","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"     * Returns the manual for all the commands","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"     * @return A String of all the commands and their description","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"    public String getHelpMenu() {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"        for (Constant.Command c : Constant.Command.values()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"(\" + i++ + \") \");","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"            sb.append(c.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"     * Show the list of accepted dates type","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"     * @return A String of all the dates and their description","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"    public String getAllAcceptedDates() {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"        for (Constant.Date c : Constant.Date.values()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"(\" + i++ + \") \");","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"            sb.append(c.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":86,"-":1}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":" * The dialog box for Duke and user","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"     * Returns a dialogbox for the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"     * @param text The user message.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"     * @param img the user image.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"     * @return Dialogbox for the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"     * Returns a dialogbox for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"     * @param text Duke\u0027s message.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"     * @param img Duke\u0027s image.","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"     * @return Dialogbox for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"aryagiat":72}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":" * The GUI Launcher","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"aryagiat":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    private Duke duke \u003d new Duke(\"./data\", \"duke.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"     * Entry point for the GUI.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"     * @param stage The window.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"aryagiat":37}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"     * Sets the UI settings.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     * Sets Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     * @param d Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"     * Handles user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"        if (!duke.isRunning()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"aryagiat":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"aryagiat":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"aryagiat":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":12}},{"path":"src/test/java/duke/ItemsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class ItemsTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        TaskList item \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        String msg;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"            msg \u003d item.addItem(new Todo(\"abc\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"            msg \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(msg, \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    public void markDoneTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        TaskList item \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        String msg;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"            msg \u003d item.addItem(new Todo(\"abc\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"            msg \u003d item.markDone(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"            msg \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(msg, \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":11}}]
