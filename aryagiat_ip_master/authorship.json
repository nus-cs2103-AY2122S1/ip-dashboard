[{"path":"src/main/java/duke/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"public class Constants {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"     * Available commands","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    public enum Commands {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"        list        (\"\", \"Lists all the tasks.\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"        todo        (\"[description]\", \"Adds a todo task.\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        deadline    (\"[description] /by [dd-MM-yyyy] [*optional hh:mm]\", \"Adds a task with a deadline\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        event       (\"[description] /at [dd-MM-yyyy] [*optional hh:mm]\", \"Adds an event to the task\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        delete      (\"[index]\", \"Removes a task from the task list\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        done        (\"[index]\", \"Marks a task as done\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        find        (\"[keyword]\", \"Find a task by searching for a keyword\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        help        (\"\", \"Shows all the commands available\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"        dates       (\"\", \"Shows all the available date and time type\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        bye         (\"\", \"Quit the app\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        private final String arguments;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        private final String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        Commands(String arguments, String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"            this.arguments \u003d arguments;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"            return this.name() + \" \" + arguments + \"   --\u003e   \" + description;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"     * Accepted Dates","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    public enum Dates {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"        today       (\"today\", \"today\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"        tomorrow    (\"tomorrow\", \"tomorrow\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        ydash       (\"yyyy-MM-dd\", \"2021-12-25\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        yslash      (\"yyyy/MM/dd\", \"2021/12/25\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        ddash       (\"dd-MM-yyyy\", \"25-12-2021\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        dslash      (\"dd/MM/yyyy\", \"25/12/2021\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        dtimedot    (\"[date] hh:mm\", \"[date] 18:00\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        dtimeblank    (\"[date] hhmm\", \"[date] 1800\");","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"        private final String accepted;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"        private final String example;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        Dates(String accepted, String example) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"            this.accepted \u003d accepted;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"            this.example \u003d example;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"        public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"            return accepted + \"   --\u003e   example: \" + example;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":61}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":" * A Task of type Deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"     * When is the deadline due on?","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"     * The Constructor","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"     * Returns the string representation of a Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * @return string representation of a Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * The Duke chat bot app","lastModifiedDate":"2021-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    // UI related stuff","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    // Saved data related stuff","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    // Parsing user input stuff","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    // The list of items","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    private Items list;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"     * Duke Constructor","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"     * @param directory Relative path to directory of the saved data","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"     * @param file File name of the saved data","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    public Duke(String directory, String file) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        storage \u003d new Storage(directory, file);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"            list \u003d new Items(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"            list \u003d new Items();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     * Entry point of the Duke program","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     * @param args Command line arguments","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        new Duke(\"./data\", \"duke.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"     * The Duke application run function","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        // Show Greetings","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        ui.showGreetings();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"        String rawInput \u003d ui.getInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-08"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"        label:","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"                String[] input \u003d parser.parseInput(rawInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"                Constants.Commands command \u003d Constants.Commands.valueOf(input[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"                String task;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"                switch (command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"                    case help:","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"                        // Show help","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"                        output \u003d ui.getCommandMenu();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"                    case bye:","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"                        // Quit program","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"                        break label;","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"                    case list:","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"                        // Displays the tasks in the list","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"                        output \u003d list.getListMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"                    case done:","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"                        int idx \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"                        // Marks a task as done.","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"                        output \u003d list.markDone(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"                        // Edit the file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"                        task \u003d storage.getFileLine(idx - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"                        task \u003d task.substring(0, 4) + \"1\" + task.substring(5);","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"                        storage.updateLineFile(idx - 1, task);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"                    case todo:","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"                        // Add a todo task in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"                        output \u003d list.addItem(new Todo(input[1]));","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"                        // Add to file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"                        task \u003d \"T | 0 | \" + input[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"                        storage.addToFile(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"                    case deadline:","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"                        // Add a deadline task in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"                        output \u003d list.addItem(new Deadline(input[1], input[2]));","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"                        // Add to file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"                        task \u003d \"D | 0 | \" + input[1] + \" | \" + input[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"                        storage.addToFile(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"                    case event:","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"                        // Add an event task in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"                        output \u003d list.addItem(new Event(input[1], input[2]));","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"                        // Add to file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"                        task \u003d \"E | 0 | \" + input[1] + \" | \" + input[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"                        storage.addToFile(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"                    case delete:","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"                        int id \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"                        // Delete an event from the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"                        output \u003d list.removeItem(id);","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"                        // Remove from file content.","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"                        storage.removeFromFile(id-1);","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"                    case dates:","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"                        output \u003d ui.getAllAcceptedDates();","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"                    case find:","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"                        output \u003d list.find(input[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-08-08"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"                ui.showMessage(output);","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"aryagiat"},"content":"                return;","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"            rawInput \u003d ui.getInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-08"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"        // Good bye message","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"        ui.showGoodBye();","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aryagiat":128,"-":12}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":" * Exception for the Duke app","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    public enum Errors {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"        FILE_NOT_FOUND      (\"Saved File not found\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        INVALID_COMMAND     (\"what you mean? Do: `help` to view all commands.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        MISSING_DESCRIPTION (\"Command is missing a description.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        MISSING_DATE        (\"Command is missing a date.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        INVALID_DATE        (\"The date is invalid.  Do `dates` command to see all possible dates.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        INVALID_TIME        (\"The time is invalid.  Do `dates` command to see all possible time.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        INVALID_ARGUMENT    (\"The argument is invalid.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"        WRONG_ARGUMENT_TYPE (\"Invalid argument type.\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        TASK_NOT_FOUND      (\"No task found.\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        SAVE_FAIL           (\"Failed to save current state\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        private final String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        Errors(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"         * Returns the string representation of an Error","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"         * @return the string representation of an Error","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"            return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"     * Constructor","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"     * @param message The exception message.","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":44}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":" * A Task of type event","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"     * When is the event?","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"     * The Constructor","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"     * @param at The time of the event, start and end.","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        this.at \u003d LocalDateTime.parse(at);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * Returns the string representation of an Event","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     * @return the string representation of an Event","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":33}},{"path":"src/main/java/duke/Items.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The items in the Duke app.","lastModifiedDate":"2021-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Responsible in adding things to the list of items.","lastModifiedDate":"2021-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Items {","lastModifiedDate":"2021-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The items are stored in a list.","lastModifiedDate":"2021-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"     * Constructor for Items","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Items() {","lastModifiedDate":"2021-08-08"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"     * Constructor for Items","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * @param tasks An ArrayList of Tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    public  Items(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        list \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Add an item to the list.","lastModifiedDate":"2021-08-08"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"     * @param task A Task to be added to the list","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A status message to be displayed","lastModifiedDate":"2021-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    public String addItem(Task task) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        list.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"        String res \u003d \"Got it. I\u0027ve added this task: \\n\" + \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"        res +\u003d (\"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        return res;","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Marks the task at the given index as done","lastModifiedDate":"2021-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param index The index to be marked as done","lastModifiedDate":"2021-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return  A status message to be displayed","lastModifiedDate":"2021-08-08"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException when a task is not found","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"    public String markDone(int index) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"            if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString() + \" Task list is empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"            } else if (list.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString() + \" Only 1 item in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString() + \" Input a number from [1...\" + list.size() + \"].\");","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        task.markDone();","lastModifiedDate":"2021-08-08"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        return \"Great success! Task Complete: \\n\" + \"  \" + task.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"     * Removes a task in the list","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"     * @param index The index of the task to be removed","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"     * @return A status message to be displayed","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException when a task is not found","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"    public String removeItem(int index) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"            if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString() + \" Task list is empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"            } else if (list.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString() + \" Only 1 item in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString() + \" Input a number from [1...\" + list.size() + \"].\");","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"        list.remove(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"        String res \u003d \"Got it. I\u0027ve removed this task: \\n\" + \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"        res +\u003d (\"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"        return res;","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"     * Returns all the task (represented by a string) that contains the given keyword","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"     * @param keyword The keyword to search the task","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"     * @return all the tasks (string) that contains the given keyword","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"        str.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"        int id \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"                str.append(id++).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"        return str.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The String representation of the Items object","lastModifiedDate":"2021-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return The string representation of the Items object","lastModifiedDate":"2021-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-08"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"            str.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"        return str.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"     * Return the message of the status of the Task List","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"     * @return the status message of the Task List","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"    public String getListMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"        StringBuilder str \u003d new StringBuilder(\"This your task in list:\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"        int size \u003d list.size();","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"        for (int i \u003d 0; i \u003c size; ++i) {","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"            str.append(\" \").append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-08"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"        return size \u003d\u003d 0 ? \"You currently have nothing in your list\" : str.substring(0, str.length() - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-08"}],"authorContributionMap":{"aryagiat":95,"-":37}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"     * Parse the user input string into a meaningful String array.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"     * @param rawInput The user input","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"     * @return Parsed input ready to be processed","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException An invalid input will produce this exception","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    public String[] parseInput(String rawInput) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        String[] input \u003d rawInput.split(\"\\\\s+\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        if (input.length \u003c 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_COMMAND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        Constants.Commands command;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"            command \u003d Constants.Commands.valueOf(input[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_COMMAND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        switch (command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        case list:","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"            if (input.length !\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString() + \" `list` command has no arguments\");","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0]};","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        case done:","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"            if (input.length !\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString() + \" (example: \u0027done 5\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"                // Check if the argument is a number","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"                Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.WRONG_ARGUMENT_TYPE.toString() + \" (example: \u0027done 5\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0], input[1]};","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        case todo:","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"            if (input.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString() + \" (example: \u0027todo watch Borat\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"            String description \u003d combineStringArray(input, 1, input.length);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0], description};","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        case deadline:","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"            if (input.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString() + \" (example: \u0027deadline watch Borat /by 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"            String arguments \u003d combineStringArray(input, 1, input.length);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"            String[] divided \u003d arguments.split(\" /by \");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"            if (divided.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DATE.toString() + \" (example: \u0027deadline watch Borat /by 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"            } else if (divided.length \u003e 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString() + \" (example: \u0027deadline watch Borat /by 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"            String date \u003d parseDate(divided[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"                LocalDateTime.parse(date);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0], divided[0], date};","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"        case event:","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"            if (input.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString() + \" (example: \u0027event Borat concert /at 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"            String args \u003d combineStringArray(input, 1, input.length);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"            String[] div \u003d args.split(\" /at \");","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"            if (div.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DATE.toString() + \" (example: \u0027event watch Borat /at 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"            } else if (div.length \u003e 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString() + \" (example: \u0027event watch Borat /at 2021-08-21 18:00\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"            String dateTest \u003d parseDate(div[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"                LocalDateTime.parse(dateTest);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0], div[0], parseDate(div[1])};","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"        case bye:","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"            if (input.length !\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString() + \" `bye` command has no arguments\");","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0]};","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"        case delete:","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"            if (input.length !\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString() + \" (example: \u0027delete 5\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"                // Check if the argument is a number","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"                Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.WRONG_ARGUMENT_TYPE.toString() + \" (example: \u0027delete 5\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0], input[1]};","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"        case help:","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"            if (input.length !\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString() + \" `help` command has no arguments\");","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0]};","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"        case dates:","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"            if (input.length !\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString() + \" `dates` command has no arguments\");","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0]};","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"        case find:","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"            if (input.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.MISSING_DESCRIPTION.toString() + \" (example: \u0027find book\u0027)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"            String keyword \u003d combineStringArray(input, 1, input.length);","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"            return new String[] {input[0], keyword};","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_ARGUMENT.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"     * Parses a raw date string as input into a valid date and time string.","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"     * @param input The raw date string","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"aryagiat"},"content":"     * @return A string valid as a date","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException Thrown if the input is an invalid date","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"    private String parseDate(String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"aryagiat"},"content":"        String[] dateTime \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"aryagiat"},"content":"        int len \u003d dateTime.length;","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"aryagiat"},"content":"        String formatPattern \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"aryagiat"},"content":"        if (len \u003c 1 || len \u003e 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"aryagiat"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"aryagiat"},"content":"        if (dateTime[0].equals(\"today\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"aryagiat"},"content":"            LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"aryagiat"},"content":"            result +\u003d date.format(DateTimeFormatter.ofPattern(formatPattern));","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"aryagiat"},"content":"        } else if (dateTime[0].equals(\"tomorrow\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"aryagiat"},"content":"            LocalDate date \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"aryagiat"},"content":"            result +\u003d date.format(DateTimeFormatter.ofPattern(formatPattern));","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"aryagiat"},"content":"            // Date","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"aryagiat"},"content":"            String[] date1 \u003d dateTime[0].split(\"-\");","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":"            String[] date2 \u003d dateTime[0].split(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"aryagiat"},"content":"            if (date1.length \u003d\u003d 3 || date2.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"aryagiat"},"content":"                result \u003d date1.length \u003d\u003d 3 ? stringToDate(date1) : stringToDate(date2);","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"aryagiat"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"aryagiat"},"content":"        // Time","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"aryagiat"},"content":"        if (dateTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"aryagiat"},"content":"            result +\u003d \"T\" + stringToTime(dateTime[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"aryagiat"},"content":"            result +\u003d \"T23:59\";","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"aryagiat"},"content":"     * Converts a string to time","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"aryagiat"},"content":"     * @param time The time in the form of a string","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"aryagiat"},"content":"     * @return The string representation of the time","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException Thrown if the time is invalid","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"aryagiat"},"content":"    private String stringToTime(String time) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"aryagiat"},"content":"        String[] splitTime \u003d time.split(\":\");","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"aryagiat"},"content":"        if (splitTime.length \u003e 2 || splitTime.length \u003c 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_TIME.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"aryagiat"},"content":"        for (String s : splitTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"aryagiat"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"aryagiat"},"content":"                // Check if all the string are numbers:","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"aryagiat"},"content":"                Integer.parseInt(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"aryagiat"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"aryagiat"},"content":"                System.out.println(\"Time is not a number\");","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"aryagiat"},"content":"                throw new DukeException(DukeException.Errors.INVALID_TIME.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"aryagiat"},"content":"        if (splitTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"aryagiat"},"content":"            // in the form of [hh, mm]","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"aryagiat"},"content":"            if (","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"aryagiat"},"content":"                    (splitTime[0].length() \u003d\u003d 2 || splitTime[0].length() \u003d\u003d 1) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"aryagiat"},"content":"                            (splitTime[1].length() \u003d\u003d 2)","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"aryagiat"},"content":"            ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"aryagiat"},"content":"                String hh \u003d String.format(\"%02d\", Integer.parseInt(splitTime[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"aryagiat"},"content":"                String mm \u003d String.format(\"%02d\", Integer.parseInt(splitTime[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"aryagiat"},"content":"                return hh + \":\" + mm;","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"aryagiat"},"content":"            // in the form of [hhmm]","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"aryagiat"},"content":"            if (","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"aryagiat"},"content":"                    (splitTime[0].length() \u003d\u003d 3 || splitTime[0].length() \u003d\u003d 4)","lastModifiedDate":"2021-08-26"},{"lineNumber":207,"author":{"gitId":"aryagiat"},"content":"            ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"aryagiat"},"content":"                String hh \u003d splitTime[0].length() \u003d\u003d 3 ? splitTime[0].substring(0, 1) : splitTime[0].substring(0, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"aryagiat"},"content":"                String mm \u003d splitTime[0].length() \u003d\u003d 3 ? splitTime[0].substring(1, 3) : splitTime[0].substring(2, 4);","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"aryagiat"},"content":"                hh \u003d String.format(\"%02d\", Integer.parseInt(hh));","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"aryagiat"},"content":"                mm \u003d String.format(\"%02d\", Integer.parseInt(mm));","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"aryagiat"},"content":"                return hh + \":\" + mm;","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"aryagiat"},"content":"        throw new DukeException(DukeException.Errors.INVALID_TIME.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"aryagiat"},"content":"     * Converts a date array to a date string","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"aryagiat"},"content":"     * @param date A String array e.g. [yyyy, mm, dd]","lastModifiedDate":"2021-08-26"},{"lineNumber":221,"author":{"gitId":"aryagiat"},"content":"     * @return Null if invalid, else a string representation of the date -\u003e yyyy-mm-dd","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException An invalid date will produce this","lastModifiedDate":"2021-08-26"},{"lineNumber":223,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"aryagiat"},"content":"    private String stringToDate(String[] date) throws DukeException{","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"aryagiat"},"content":"        // can be [yyyy, mm, dd] or [dd, mm, yyyy]","lastModifiedDate":"2021-08-26"},{"lineNumber":226,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":227,"author":{"gitId":"aryagiat"},"content":"            // Check if all the string are numbers:","lastModifiedDate":"2021-08-26"},{"lineNumber":228,"author":{"gitId":"aryagiat"},"content":"            Integer.parseInt(date[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"aryagiat"},"content":"            Integer.parseInt(date[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":230,"author":{"gitId":"aryagiat"},"content":"            Integer.parseInt(date[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":231,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":232,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.INVALID_DATE.toString() + \" Date is not a number.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":234,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":235,"author":{"gitId":"aryagiat"},"content":"        if (","lastModifiedDate":"2021-08-26"},{"lineNumber":236,"author":{"gitId":"aryagiat"},"content":"                date[0].length() \u003d\u003d 4 \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":237,"author":{"gitId":"aryagiat"},"content":"                        (date[1].length() \u003d\u003d 1 || date[1].length() \u003d\u003d 2) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":238,"author":{"gitId":"aryagiat"},"content":"                        (date[2].length() \u003d\u003d 1 || date[2].length() \u003d\u003d 2)","lastModifiedDate":"2021-08-26"},{"lineNumber":239,"author":{"gitId":"aryagiat"},"content":"        ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":240,"author":{"gitId":"aryagiat"},"content":"            // In the form of [yyyy, mm, dd]","lastModifiedDate":"2021-08-26"},{"lineNumber":241,"author":{"gitId":"aryagiat"},"content":"            String year \u003d date[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"aryagiat"},"content":"            String month \u003d String.format(\"%02d\", Integer.parseInt(date[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"aryagiat"},"content":"            String day \u003d String.format(\"%02d\", Integer.parseInt(date[2]));","lastModifiedDate":"2021-08-26"},{"lineNumber":244,"author":{"gitId":"aryagiat"},"content":"            return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"aryagiat"},"content":"        } else if (","lastModifiedDate":"2021-08-26"},{"lineNumber":246,"author":{"gitId":"aryagiat"},"content":"                (date[0].length() \u003d\u003d 1 || date[0].length() \u003d\u003d 2) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"aryagiat"},"content":"                        (date[1].length() \u003d\u003d 1 || date[1].length() \u003d\u003d 2) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":248,"author":{"gitId":"aryagiat"},"content":"                        (date[2].length() \u003d\u003d 4)","lastModifiedDate":"2021-08-26"},{"lineNumber":249,"author":{"gitId":"aryagiat"},"content":"        ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":250,"author":{"gitId":"aryagiat"},"content":"            // In the form of [dd, mm, yyyy]","lastModifiedDate":"2021-08-26"},{"lineNumber":251,"author":{"gitId":"aryagiat"},"content":"            String year \u003d date[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":252,"author":{"gitId":"aryagiat"},"content":"            String month \u003d String.format(\"%02d\", Integer.parseInt(date[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":253,"author":{"gitId":"aryagiat"},"content":"            String day \u003d String.format(\"%02d\", Integer.parseInt(date[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":254,"author":{"gitId":"aryagiat"},"content":"            return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-26"},{"lineNumber":255,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":256,"author":{"gitId":"aryagiat"},"content":"        throw new DukeException(DukeException.Errors.INVALID_DATE.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":257,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":258,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":259,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":261,"author":{"gitId":"aryagiat"},"content":"     * Combine an array of strings into a space separated sentence.","lastModifiedDate":"2021-08-26"},{"lineNumber":262,"author":{"gitId":"aryagiat"},"content":"     * @param arr The string array","lastModifiedDate":"2021-08-26"},{"lineNumber":263,"author":{"gitId":"aryagiat"},"content":"     * @param start The starting index to be combined (inclusive)","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"aryagiat"},"content":"     * @param exclusiveEnd The ending index (exclusive)","lastModifiedDate":"2021-08-26"},{"lineNumber":265,"author":{"gitId":"aryagiat"},"content":"     * @return The sentence.","lastModifiedDate":"2021-08-26"},{"lineNumber":266,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":267,"author":{"gitId":"aryagiat"},"content":"    private String combineStringArray(String[] arr, int start, int exclusiveEnd) {","lastModifiedDate":"2021-08-26"},{"lineNumber":268,"author":{"gitId":"aryagiat"},"content":"        StringBuilder tmp \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"aryagiat"},"content":"        if (exclusiveEnd \u003e arr.length) {","lastModifiedDate":"2021-08-26"},{"lineNumber":270,"author":{"gitId":"aryagiat"},"content":"            exclusiveEnd \u003d arr.length;","lastModifiedDate":"2021-08-26"},{"lineNumber":271,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":272,"author":{"gitId":"aryagiat"},"content":"        for (int i \u003d start; i \u003c exclusiveEnd; ++i) {","lastModifiedDate":"2021-08-26"},{"lineNumber":273,"author":{"gitId":"aryagiat"},"content":"            if (i + 1 \u003e\u003d exclusiveEnd) {","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"aryagiat"},"content":"                tmp.append(arr[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"aryagiat"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":276,"author":{"gitId":"aryagiat"},"content":"                tmp.append(arr[i]).append(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":277,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":278,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":279,"author":{"gitId":"aryagiat"},"content":"        return tmp.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":280,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":281,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":282}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    // The relative path to the directory","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    private final String directory;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    // The file","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    private final String file;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    // The contents of the file as a List of Strings","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    private final List\u003cString\u003e fileContent;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"     * Constructor","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * @param directory The path to the directory","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     * @param file The file name","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    public Storage(String directory, String file) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        this.directory \u003d directory;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        this.fileContent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"     * Returns an ArrayList of Task from the saved data","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"     * @return an ArrayList of Task from the saved data","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException upon load error","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException{","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        // Make directory and/or file if they don\u0027t exist","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        File dataDir \u003d new File(directory);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        dataDir.mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        File dataFile \u003d new File(directory + \"/\" + file);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"            System.out.println(\"Failed to create a new file\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"            return null;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"                String rawData \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"                fileContent.add(rawData);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"                String[] data \u003d rawData.split(\" \\\\| \");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"                String taskType \u003d data[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"                boolean isDone \u003d data[1].equals(\"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"                Task task \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"                    // Add a todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"                    task \u003d new Todo(data[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"                    // Add a deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"                    task \u003d new Deadline(data[2], data[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"                    // Add an event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"                    task \u003d new Event(data[2], data[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"                        task.markDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.FILE_NOT_FOUND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"     * Returns the String of the queried line","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"     * @param id The line number","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"     * @return The String of the queried line","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When the line is not found","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"    public String getFileLine(int id) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"            return fileContent.get(id);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.TASK_NOT_FOUND.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"     * Adds a task to the saved file","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"     * @param task The task as a String","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When saving the file fails","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"    public void addToFile(String task) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"        fileContent.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"        commitChanges();","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"     * Removes a task from the saved file","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"     * @param id The line to be removed","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When saving the file fails","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"    public void removeFromFile(int id) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"        fileContent.remove(id);","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"        commitChanges();","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"     * Updates a task to the saved file","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"     * @param id The line to be updated","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"     * @param task The task as a String","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException When saving the file fails","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"    public void updateLineFile(int id, String task) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"        fileContent.set(id, task);","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"aryagiat"},"content":"        commitChanges();","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"aryagiat"},"content":"     * Saving the file content to the hard drive","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"     * @throws DukeException when saving the file fails","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"    private void commitChanges() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"aryagiat"},"content":"            Files.write(Paths.get(directory + \"/\" + file), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"aryagiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"aryagiat"},"content":"            throw new DukeException(DukeException.Errors.SAVE_FAIL.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":146}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * The Task","lastModifiedDate":"2021-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2021-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * The task description","lastModifiedDate":"2021-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2021-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * The task status. True if it is done, else false","lastModifiedDate":"2021-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Create a new Task object (Constructor)","lastModifiedDate":"2021-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param description The new task description","lastModifiedDate":"2021-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Marks the task as done","lastModifiedDate":"2021-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Gets the task status icon","lastModifiedDate":"2021-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return \"X\" if the test is done, else \" \"","lastModifiedDate":"2021-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-08"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     * Returns the string representation of a task","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return The description of the task","lastModifiedDate":"2021-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-08"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" +  this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-08"}],"authorContributionMap":{"aryagiat":4,"-":43}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":" * A Task of type \"Todo\"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"     * Constructor of the class","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"     * Returns the string representation of a Todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"     * @return the string representation of a Todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"    public static final String SPACE \u003d \"    \";","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"        SPACE + \"██████   ██████  ██████   █████  ████████ \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"        SPACE + \"██   ██ ██    ██ ██   ██ ██   ██    ██    \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        SPACE + \"██████  ██    ██ ██████  ███████    ██    \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        SPACE + \"██   ██ ██    ██ ██   ██ ██   ██    ██    \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        SPACE + \"██████   ██████  ██   ██ ██   ██    ██\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    public static final String BOT_LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    public static final String USER_LINE \u003d \"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\";","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"     * Displays the Greetings","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    public void showGreetings() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + \"Jak się masz? My name-a Borat. I like you.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + \"What I do for you?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"     * Displays the goodbye message","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    public void showGoodBye() {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        this.showMessage(\"Bye. Have a good time!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"     * Displays Borat\u0027s message to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"     * @param message The message content to be displayed","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        message \u003d SPACE + message.replace(\"\\n\", \"\\n\" + SPACE);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + USER_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        System.out.println(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        System.out.println(SPACE + BOT_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"     * Get the user input","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"     * @return The string representation of the user input","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"     * Show the list of commands","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"     * @return A String of all the commands and their description","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"    public String getCommandMenu() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        for (Constants.Commands c : Constants.Commands.values()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"(\" + i++ + \") \");","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"            sb.append(c.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"     * Show the list of accepted dates type","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"     * @return A String of all the dates and their description","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"    public String getAllAcceptedDates() {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"        for (Constants.Dates c : Constants.Dates.values()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"(\" + i++ + \") \");","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"            sb.append(c.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":85}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":13}},{"path":"src/test/java/duke/ItemsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class ItemsTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"        Items item \u003d new Items();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        String msg;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"            msg \u003d item.addItem(new Todo(\"abc\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"            msg \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(msg, \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    public void markDoneTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        Items item \u003d new Items();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        String msg;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"            msg \u003d item.addItem(new Todo(\"abc\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"            msg \u003d item.markDone(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"            msg \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(msg, \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"aryagiat":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aryagiat":11}}]
