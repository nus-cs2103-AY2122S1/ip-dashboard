[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"    protected String byWhen;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"    public Deadline(String description, String byWhen) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"        return \"[D]\" + super.toString() + \"(\" + byWhen + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"    private static Task[] taskList \u003d new Task[100];","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    private static int counter \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    private static void getCommand() {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t What would you like me to do?\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"        // Checks if user commands for specific commands","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"            if (command.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"                sayBye();","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"            } else if (command.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"                showList();","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"            } else if (command.toLowerCase().contains(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"                finishTask(command);","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"            } else if (command.toLowerCase().contains(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"                addTodo(command);","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"            } else if (command.toLowerCase().contains(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"                addDeadline(command);","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"            } else if (command.toLowerCase().contains(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"                addEvent(command);","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"                String errorMessage \u003d \"\\t Sorry I do not understand this command \\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"                errorMessage +\u003d \"\\t Please use one of the following commands: \\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"                errorMessage +\u003d \"\\t \\t list - To list the added tasks so far\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"                errorMessage +\u003d \"\\t \\t todo {description} - To add a ToDo task\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"                errorMessage +\u003d \"\\t \\t deadline {description} /by {time} - To add a Deadline task\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"                errorMessage +\u003d \"\\t \\t event {description} /at {time} - To add an Event task\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"                errorMessage +\u003d \"\\t \\t done {number} - To mark the indicated task as done\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"                errorMessage +\u003d \"\\t \\t bye (To exit programme)\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"                //otherCommand(command);","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"            getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"    // Function for when user inputs \"bye\"","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"    private static void sayBye() {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"        // User command is bye, print bye message and programme stops","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon\");","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"    // Function for when user inputs \"list\"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"    private static void showList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"        // User command is list, print current list of commands and continues asking for commands","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(\"Nothing has been added to the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"            System.out.println((i + 1) + \". \" + taskList[i]);","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"    // Function for when user inputs \"done\"","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"    private static void finishTask(String command) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 5) {","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t Invalid command, please key in number of task to be done as follows:\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"            errorMessage +\u003d \"\\t \\t done {number}\";","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"        int taskDone \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"        if (taskDone \u003c 0 || taskDone \u003e counter - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t List number out of range, please enter a valid number\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"        taskList[taskDone].markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Good job! This task has been completed:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t \\t\" + taskList[taskDone].toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"    private static void addTodo(String command) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"        // Take the substring containing the task description of the command","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description is required, please follow template:\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t todo {description}\";","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 5) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"        ToDo t \u003d new ToDo(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t I have added to the list: \\n\\t \\t\" + t.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"        taskList[counter] \u003d t;","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"        counter++;","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t There are \" + counter + \" items in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"nwhloo99"},"content":"    private static void addDeadline(String command) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"nwhloo99"},"content":"        // Template of command: deadline {description} /by {time}","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"nwhloo99"},"content":"        // Find the end of description, which is the start of byWhen","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description and time is required, please follow template:\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t deadline {description} /by {time}\";","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"nwhloo99"},"content":"        int endOfDescription \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"nwhloo99"},"content":"        if (endOfDescription \u003d\u003d -1 || command.length() \u003c 9) {","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"nwhloo99"},"content":"        // Find substring containing task description","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(9, endOfDescription);","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"nwhloo99"},"content":"        String time \u003d command.substring(endOfDescription + 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"nwhloo99"},"content":"        if (isValidString(time)  || !time.substring(0,2).equals(\"by\") || isValidString(time.substring(2))) {","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"nwhloo99"},"content":"        Deadline t \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t I have added to the list: \\n\\t \\t\" + t.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"nwhloo99"},"content":"        taskList[counter] \u003d t;","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"nwhloo99"},"content":"        counter++;","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t There are \" + counter + \" items in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"    private static void addEvent(String command) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"nwhloo99"},"content":"        // Template of command: event {description} /by {time}","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"nwhloo99"},"content":"        // Find the end of description, which is the start of time","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description and time is required, please follow template:\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t event {description} /at {time}\";","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"nwhloo99"},"content":"        int endOfDescription \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"nwhloo99"},"content":"        if (endOfDescription \u003d\u003d -1 || command.length() \u003c 6) {","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"nwhloo99"},"content":"        // Find substring containing task description","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(6, endOfDescription);","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"nwhloo99"},"content":"        String time \u003d command.substring(endOfDescription + 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"nwhloo99"},"content":"        if (isValidString(time) || !time.substring(0,2).equals(\"at\") || isValidString(time.substring(2))) {","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"nwhloo99"},"content":"        Event t \u003d new Event(description, time);","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t I have added to the list: \\n\\t \\t\" + t.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"nwhloo99"},"content":"        taskList[counter] \u003d t;","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"nwhloo99"},"content":"        counter++;","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t There are \" + counter + \" items in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"nwhloo99"},"content":"    // Function for when user command is something else","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"nwhloo99"},"content":"    private static void otherCommand(String command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"nwhloo99"},"content":"        // User command is something else, add command to command list and continue asking for commands","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(command);","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"nwhloo99"},"content":"    private static boolean isValidString(String s) {","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"nwhloo99"},"content":"        return s.isBlank() || s.isEmpty();","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nwhloo99":183,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"    protected String startTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"    public Event(String description, String startTime) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"        return \"[E]\" + super.toString() + \"(\" + startTime + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    protected void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":11}}]
