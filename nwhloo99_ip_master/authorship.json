[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    mainClassName \u003d \"duke.main.Duke\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nwhloo99":2,"-":44}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" * The AddCommand class represents the commands that are related to adding a Task to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    private Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor which receives a Task which is to be added to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * @param task The Task to be added to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     * Method which executes the adding of Task to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException Unused.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"        ui.displayAddedMessage(this.task, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" * Abstract class representing commands executed by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     * Abstract method that is called when a command is executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException On invalid user command.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" * The DeleteCommand class represents the delete command for removing Task from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    private int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor that receives an index representing the position in the TaskList of the Task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     * @param index The index of the Task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"     * Method which executes the deleting of the specific Task from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException On index out of bounds.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"            ui.displayDeleteMessage(tasks, index);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(\"\\t List number out of range, please enter a valid number\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":41}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" * The DoneCommand class represents the done command for marking specific Task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    private int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor that receives an index of the Task in the TaskList to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * @param index The index of the Task in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     * Method which executes the marking of specified task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException On index out of bounds.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"            Task taskDone \u003d tasks.getTask(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"            taskDone.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"            ui.displayCompletedMessage(taskDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(\"\\t List number out of range, please enter a valid number\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":43}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" * The ExitCommand class represents the bye command which exits the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     * Method which stops the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException Unused.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        ui.displayExitMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":26}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" * The FindCommand class represents the find command by the user, to find Task in TaskList that match a given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    private String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor that receives a keyword that is to be checked against the Task in TaskList to find matches.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     * @param keyword String to be checked against description of Task in TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        TaskList resultList \u003d tasks.findMatchingTask(this.keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        ui.displayListOfTasks(resultList);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nwhloo99":29}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" * The InvalidCommand class represents the case when the user has entered an invalid command.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     * Method which throws an error message indicating that the user has entered an invalid command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException Always as user has entered invalid command.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Sorry I do not understand this command \\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t Please use one of the following commands: \\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t list - To list the added tasks so far\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t todo {description} - To add a ToDo task\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t deadline {description} /by {time} - To add a Deadline task\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t event {description} /at {time} - To add an Event task\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t done {number} - To mark the indicated task as done\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t delete {number} - To delete the indicated task\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t bye (To exit programme)\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"        throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":34}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" * The ListCommand class represents the list command for displaying the list of Task in TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     * Method which calls for the Ui to display the list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * @param taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException Unused.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        ui.displayListOfTasks(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":25}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":" * The SaveCommand class represents the save command for writing the TaskList to a data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * Method which executes the saving of Task in the TaskList to a data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     * @param ui The Ui objects that handles input from user and output to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     * @param storage The Storage object that handles reading/writing of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException On input error during writing to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"            storage.writeCurrentData(tasks.getTasks());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        ui.displaySaveMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":32}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" * The Duke program implements an application that takes in user input and acts as task list manager for users.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":" * @author  Nicholas Loo","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":" * @version 0.1","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":" * @since   2021-08-25","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"     * Class Constructor specifying the file path where data is stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"     * @param filePath The file path giving the location of the file containing user data","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"            tasks \u003d new TaskList(storage.readPastData());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"            storage.createDataFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"     * Runs the Duke application.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        this.ui.greet();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"                String userCommand \u003d this.ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"                Command command \u003d Parser.parse(userCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"                ui.displayError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"     * This is the main method which makes use of the Duke constructor and the run method.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"     * @param args Unused.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"        duke.run();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nwhloo99":61,"-":2}},{"path":"src/main/java/duke/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":" * This class is for representing any errors the Duke application may face.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"     * The class Constructor for DukeException that takes in a message explaining the error.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"     * @param message The message explaining the error that has occurred.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":16}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"import duke.command.SaveCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":" * The Parser class holds static methods which are used to parse and evaluate user commands, ensuring the right command","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":" * is executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     * Static method which takes in user commands and ensures the right command is executed in the Duke application.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"     * @param command The user command entered.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * @return Command This returns the Command class that should be executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     * @throws DukeException On wrong syntax of command entered.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        String first \u003d command.toLowerCase().split(\" \")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        switch (first) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"            return parseToDo(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"            return parseDeadline(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"            return parseEvent(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"            return parseDelete(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"            return parseDone(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        case \"save\":","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"            return new SaveCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"            return parseFind(command);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"            return new InvalidCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"    private static Command parseToDo(String command) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description is required, please follow template:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t todo {description}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 5) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"        ToDo t \u003d new ToDo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"        return new AddCommand(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"    private static Command parseDeadline(String command) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description and time is required, please follow template:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t deadline {description} /by {yyyy-mm-dd}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"        int endOfDescription \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"        if (endOfDescription \u003d\u003d -1 || command.length() \u003c 9) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"        // Find substring containing task description","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(9, endOfDescription);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"        String time \u003d command.substring(endOfDescription + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"        if (isInvalidString(time) || !time.substring(0, 3).equals(\"by \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"        // Remove the at from time and ensures that there is no additional whitespace behind","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"        time \u003d time.substring(3, 13);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"        if (!isValidDate(time) || isInvalidString(time)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"        Deadline t \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"        return new AddCommand(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"    private static Command parseEvent(String command) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description and time is required, please follow template:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t event {description} /at {yyyy-mm-dd}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"        int endOfDescription \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"        if (endOfDescription \u003d\u003d -1 || command.length() \u003c 6) {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"nwhloo99"},"content":"        // Find substring containing task description","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(6, endOfDescription);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"nwhloo99"},"content":"        String time \u003d command.substring(endOfDescription + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"nwhloo99"},"content":"        if (isInvalidString(time) || !time.substring(0, 3).equals(\"at \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"nwhloo99"},"content":"        // Remove the at from time and ensures that there is no additional whitespace behind","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"nwhloo99"},"content":"        time \u003d time.substring(3, 13);","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"nwhloo99"},"content":"        if (!isValidDate(time) || isInvalidString(time)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"nwhloo99"},"content":"        Event t \u003d new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"nwhloo99"},"content":"        return new AddCommand(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"nwhloo99"},"content":"    private static Command parseDelete(String command) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 7 || isInvalidString(command.substring(7))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t Invalid command, please key in number of the task to be deleted as follows:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"nwhloo99"},"content":"            errorMessage +\u003d \"\\t \\t delete {number}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"nwhloo99"},"content":"        int index \u003d Integer.parseInt(command.substring(7).replaceAll(\" \", \"\")) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"nwhloo99"},"content":"    private static Command parseDone(String command) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 5 || isInvalidString(command.substring(5))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t Invalid command, please key in number of the task to be done as follows:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"nwhloo99"},"content":"            errorMessage +\u003d \"\\t \\t done {number}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"nwhloo99"},"content":"        int index \u003d Integer.parseInt(command.substring(5).replaceAll(\" \", \"\")) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"nwhloo99"},"content":"        return new DoneCommand(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"nwhloo99"},"content":"    private static Command parseFind(String command) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 5 || isInvalidString(command.substring(5))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t Invalid command, please key in the find command as follows:\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"nwhloo99"},"content":"            errorMessage +\u003d \"\\t \\t find {keyword}\";","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"nwhloo99"},"content":"        String keyword \u003d command.substring(5).toLowerCase();","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"nwhloo99"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"nwhloo99"},"content":"    private static boolean isInvalidString(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"nwhloo99"},"content":"        return s.isBlank() || s.isEmpty();","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"nwhloo99"},"content":"    private static boolean isValidDate(String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"nwhloo99"},"content":"            LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"nwhloo99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"nwhloo99"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"nwhloo99"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":186}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":" * The Storage class is used to read and write data to and from the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor which specifies the file path where the Storage object will read/write data from/to.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"     * @param filePath The specific file path of the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     * Method which searches for the data file and reads each line of the file, converting it into an ArrayList of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     * and returns it.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"     * @return ArrayList The ArrayList of tasks that was stored in the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"     * @throws FileNotFoundException In the case that the file does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"    public ArrayList\u003cTask\u003e readPastData() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"        File data \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        Scanner dataReader \u003d new Scanner(data);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"        while (dataReader.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"            String entry \u003d dataReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"            String[] components \u003d entry.split(\"[\\\\|]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"            char prefix \u003d entry.charAt(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"            switch (prefix) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"                String description \u003d components[2].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"                ToDo t \u003d new ToDo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"                if (checkIfDone(components[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"                    t.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"                savedTasks.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"                description \u003d components[2].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"                String time \u003d components[3].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"                Deadline d \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"                if (checkIfDone(components[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"                    d.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"                savedTasks.add(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"                description \u003d components[2].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"                time \u003d components[3].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"                Event e \u003d new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"                if (checkIfDone(components[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"                    e.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"                savedTasks.add(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"        return savedTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"    private boolean checkIfDone(String component) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"        if (Integer.parseInt(component.substring(1, 2)) \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"            return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"     * Method that takes in an ArrayList of task and writes it into the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The ArrayList of task to be written.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"     * @throws IOException On Input writing to file failure.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"    public void writeCurrentData(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"            fw.write(t.toFile() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"     * Method that creates a data file in the specified file path in the Storage object\u0027s filePath field.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"    public void createDataFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"        File data \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"            data.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":111}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":" * The TaskList class is for handling the storage and manipulation of the user\u0027s tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor which takes in an ArrayList of task, which will be contained in the TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The initial ArrayList of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"     * Method to add a new Task into the TaskList, adds to the back of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     * Method to mark the task at the specified index as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"     * Method to delete the task at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"     * Method to retrieve a task at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"     * @return Task The task that is retrieved based on the index.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"     * Method to retrieve the whole ArrayList of task stored in the TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"     * @return ArrayList The ArrayList of tasks that are stored in the TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"     * Overridden toString method which creates a String representation of all the tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"     * @return String The String representation of all the tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"            str \u003d \"\\t Nothing has been added to the list\";","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"            str +\u003d \"\\t \" + (i + 1) + \". \" + this.tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"     * Method that returns the size of the ArrayList in TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"     * @return int The number of tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"     * Method which finds all the Task in the TaskList that match the keyword given.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"     * @param keyword The keyword entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"     * @return TaskList The resultant TaskList that contains all the Task that match the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"    public TaskList findMatchingTask(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"            if (t.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"                resultList.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"        return new TaskList(resultList);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":114}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":" * The Ui class handles the reading of user input and outputting messages to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     * Class Constructor which initializes the scanner field.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"     * Method that utilizes the scanner to read the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"     * @return String The user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays the greeting message.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    public void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays any error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    public void displayError(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays a message that informs user that a task has been successfully added and displays the number","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"     * of tasks in the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"     * @param t The newly added Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The current list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"    public void displayAddedMessage(Task t, TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t I have added to the list: \\n\\t \\t\" + t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t There are \" + tasks.getSize() + \" items in the list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays a message that informs user that the task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"     * @param taskDone The task that has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"    public void displayCompletedMessage(Task taskDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Good job! This task has been completed:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t \\t\" + taskDone.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays all the current Task in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"     * @param tasks The list of Task inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"    public void displayListOfTasks(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays message when user exits program.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"    public void displayExitMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays message to inform user that their list has been saved.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"    public void displaySaveMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t List successfully saved\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"     * Method that displays message informing user that the task indicated has been removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"     * @param taskList The list of Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"     * @param index The index of the Task deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"    public void displayDeleteMessage(TaskList taskList, int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Noted. The task has been removed!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":100}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":" * Deadline class represents a Task with a deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    protected LocalDate byWhen;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor that receives a description of the Task and the deadline for the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * @param byWhen When the Task should be done by (deadline).","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    public Deadline(String description, String byWhen) {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        this.byWhen \u003d LocalDate.parse(byWhen);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns a String representation of the Deadline object to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     * @return String Representation of the Deadline object to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        return \"[D]\" + super.toString() + \"(by \" + byWhen.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns a String representation of the Deadline object to be written to data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"     * @return String Representation of the Deadline object to be written to data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        return \"D \" + super.toFile() + \"| \" + this.byWhen;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":" * Event class represents a Task with a time which the Task begins.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor that receives a description and the time which the Task begins.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"     * @param startTime Time in which the Task begins.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    public Event(String description, String startTime) {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        this.startTime \u003d LocalDate.parse(startTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns a String representation of the Task to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     * @return String Representation of the Task to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        return \"[E]\" + super.toString() + \"(at \" + startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns a String representation of the Task to be written to the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"     * @return String Representation of the Task to be wrriten to the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        return \"E \" + super.toFile() + \"| \" + this.startTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":" * Abstract class representing Task that can be added to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor which receives a description describing the Task, initializes with isDone as false.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"     * Method which marks Task as done by changing the isDone field to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns a String with the description of the Task and whether it has been done.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns a String with the representation of the Task to be written to the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"     * @return String representation of the Task for the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"        return \"| \" + (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns the description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"     * @return String Description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":58}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":" * ToDo class represents a Task with no start time or deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"     * Class constructor which receives a description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns the String representation of the Task to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     * @return String Representation of the Task to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"     * Method which returns the String representation of the Task to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * @return String Representation of the Task to be displayed to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        return \"T \" + super.toFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":36}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"        testList.add(new ToDo(\"homework\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"        testList.add(new Deadline(\"submit \", \"2021-09-03\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        testList.add(new Event(\"interview \", \"2021-10-04\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        String expected \u003d \"\\t 1. [T][ ] homework\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"                + \"\\t 2. [D][ ] submit (by Sep 3 2021)\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"                + \"\\t 3. [E][ ] interview (at Oct 4 2021)\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(expected, new TaskList(testList).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    public void toStringTest2() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(\"\\t Nothing has been added to the list\", new TaskList(new ArrayList\u003cTask\u003e()).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    public void getSizeTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        testList.add(new ToDo(\"homework\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        testList.add(new Deadline(\"submit \", \"2021-09-03\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(2, new TaskList(testList).getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nwhloo99":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"todo fly","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"event /at 1300","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"event go to gym /at 1300","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"deadline submit","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"deadline /by 1400","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"deadline submit assgn /by 1400","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nwhloo99":15}}]
