[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    protected LocalDate byWhen;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    public Deadline(String description, String byWhen) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"        this.byWhen \u003d LocalDate.parse(byWhen);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"        return \"[D]\" + super.toString() + \"(by \" + byWhen.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        return \"D \" + super.toFile() + \"| \" + this.byWhen;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    public static int counter \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    protected static Scanner scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"            DukeFileIO.readPastData();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"            DukeFileIO.createDataFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    public static void getCommand() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        //Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t What would you like me to do?\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        String first \u003d command.split(\" \")[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"            for (DukeCommands d : DukeCommands.values()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"                if (d.command.equals(first)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"                    d.action.execute(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"                } else if (d.command.equals(\"invalid\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"                    DukeCommands.INVALID.action.execute(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"            getCommand();","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nwhloo99":42,"-":4}},{"path":"src/main/java/DukeCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"public enum DukeCommands {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    BYE(\"bye\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"        // User command is bye, print bye message and programme stops","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon\");","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    LIST(\"list\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"        // User command is list, print current list of commands and continues asking for commands","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"        if (Duke.counter \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(\"\\t Nothing has been added to the list\");","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"        for (int i \u003d 0; i \u003c Duke.counter; i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(\"\\t \" + (i + 1) + \". \" + Duke.taskList.get(i));","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        Duke.getCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    DONE(\"done\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        // User command is done, marks a task as done","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        // Template for done command is done {number}","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 5 || isInvalidString(command.substring(5))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t Invalid command, please key in number of the task to be done as follows:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"            errorMessage +\u003d \"\\t \\t done {number}\";","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"        int taskDone \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"        if (taskDone \u003c 0 || taskDone \u003e Duke.counter - 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t List number out of range, please enter a valid number\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"        Duke.taskList.get(taskDone).markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Good job! This task has been completed:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t \\t\" + Duke.taskList.get(taskDone).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        Duke.getCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"    DELETE(\"delete\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"        // User command is delete, deletes a task from the list","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"        // Template for delete command is delete {number}","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 7 || isInvalidString(command.substring(7))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t Invalid command, please key in number of the task to be deleted as follows:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"            errorMessage +\u003d \"\\t \\t delete {number}\";","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"        int deleteTask \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"        if (deleteTask \u003c 0 || deleteTask \u003e Duke.counter - 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"            String errorMessage \u003d \"\\t List number out of range, please enter a valid number\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t Noted. The task has been removed!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t \\t\" + Duke.taskList.get(deleteTask).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"        Duke.taskList.remove(deleteTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        Duke.counter--;","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"        Duke.getCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"    TODO(\"todo\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        // User command is todo","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        // Template for command is todo {description}","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"        // Take the substring containing the task description of the command","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description is required, please follow template:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t todo {description}\";","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"        if (command.length() \u003c 5) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"        ToDo t \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t I have added to the list: \\n\\t \\t\" + t.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"        Duke.taskList.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"        Duke.counter++;","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t There are \" + Duke.counter + \" items in the list\");","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"        Duke.getCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"    DEADLINE(\"deadline\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"        // Template of command: deadline {description} /by {time}","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"        // Find the end of description, which is the start of byWhen","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description and time is required, please follow template:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t deadline {description} /by {yyyy-mm-dd}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"        int endOfDescription \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"        if (endOfDescription \u003d\u003d -1 || command.length() \u003c 9) {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"        // Find substring containing task description","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(9, endOfDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"        String time \u003d command.substring(endOfDescription + 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"        if (isInvalidString(time)  || !time.substring(0,3).equals(\"by \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"        // Remove the at from time and ensures that there is no additional whitespace behind","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"        time \u003d time.substring(3,13);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"        if (!isValidDate(time) || isInvalidString(time)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"nwhloo99"},"content":"        Deadline t \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t I have added to the list: \\n\\t \\t\" + t.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"nwhloo99"},"content":"        Duke.taskList.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"nwhloo99"},"content":"        Duke.counter++;","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t There are \" + Duke.counter + \" items in the list\");","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"nwhloo99"},"content":"        Duke.getCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"nwhloo99"},"content":"    EVENT(\"event\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"nwhloo99"},"content":"        // Template of command: event {description} /by {time}","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"nwhloo99"},"content":"        // Find the end of description, which is the start of time","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Invalid command, description and time is required, please follow template:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t event {description} /at {yyyy-mm-dd}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"nwhloo99"},"content":"        int endOfDescription \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"nwhloo99"},"content":"        if (endOfDescription \u003d\u003d -1 || command.length() \u003c 6) {","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"nwhloo99"},"content":"        // Find substring containing task description","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d command.substring(6, endOfDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"nwhloo99"},"content":"        if (description.isEmpty() || description.isBlank()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"nwhloo99"},"content":"        String time \u003d command.substring(endOfDescription + 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"nwhloo99"},"content":"        if (isInvalidString(time) || !time.substring(0,3).equals(\"at \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"        // Remove the at from time and ensures that there is no additional whitespace behind","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"nwhloo99"},"content":"        time \u003d time.substring(3,13);","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"nwhloo99"},"content":"        if (!isValidDate(time) || isInvalidString(time)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"nwhloo99"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"nwhloo99"},"content":"        Event t \u003d new Event(description, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t I have added to the list: \\n\\t \\t\" + t.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"nwhloo99"},"content":"        Duke.taskList.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"nwhloo99"},"content":"        Duke.counter++;","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t There are \" + Duke.counter + \" items in the list\");","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"nwhloo99"},"content":"        Duke.getCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"nwhloo99"},"content":"    SAVE(\"save\", (String command) -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"nwhloo99"},"content":"           DukeFileIO.writeCurrentData();","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"nwhloo99"},"content":"        } catch(IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"        System.out.println(\"\\t List successfully saved\");","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"nwhloo99"},"content":"        Duke.getCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"nwhloo99"},"content":"    }),","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"nwhloo99"},"content":"    INVALID(\"invalid\", (String command) -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"nwhloo99"},"content":"        // For when user input is invalid, displays error message with all the available commands","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"nwhloo99"},"content":"        String errorMessage \u003d \"\\t Sorry I do not understand this command \\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t Please use one of the following commands: \\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t list - To list the added tasks so far\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t todo {description} - To add a ToDo task\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t deadline {description} /by {time} - To add a Deadline task\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t event {description} /at {time} - To add an Event task\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t done {number} - To mark the indicated task as done\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t delete {number} - To delete the indicated task\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"nwhloo99"},"content":"        errorMessage +\u003d \"\\t \\t bye (To exit programme)\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"nwhloo99"},"content":"        throw new DukeException(errorMessage);});","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"nwhloo99"},"content":"    final String command;","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"nwhloo99"},"content":"    final DukeFunction action;","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"nwhloo99"},"content":"    DukeCommands(String command, DukeFunction action) {","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"nwhloo99"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"nwhloo99"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"nwhloo99"},"content":"    // Function to check if string is empty or is just a string containing only blanks","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"nwhloo99"},"content":"    private static boolean isInvalidString(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"nwhloo99"},"content":"        return s.isBlank() || s.isEmpty();","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"nwhloo99"},"content":"    private static boolean isValidDate(String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"nwhloo99"},"content":"            LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"nwhloo99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"nwhloo99"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"nwhloo99"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nwhloo99":204}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":6}},{"path":"src/main/java/DukeFileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"public class DukeFileIO {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"    public static void readPastData() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"        File data \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"        Scanner dataReader \u003d new Scanner(data);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"        char[] prefixes \u003d {\u0027T\u0027, \u0027E\u0027, \u0027D\u0027};","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"        while (dataReader.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"            Duke.counter++;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"            String entry \u003d dataReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"            String[] components \u003d entry.split(\"[\\\\|]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"            char prefix \u003d entry.charAt(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"            switch (prefix) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"                String description \u003d components[2].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"                ToDo t \u003d new ToDo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"                if (checkIfDone(components[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"                    t.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"                Duke.taskList.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"                description \u003d components[2].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"                String time \u003d components[3].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"                Deadline d \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"                if (checkIfDone(components[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"                    d.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"                Duke.taskList.add(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"                description \u003d components[2].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"                time \u003d components[3].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"                Event e \u003d new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"                if (checkIfDone(components[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"                    e.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"                Duke.taskList.add(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"    private static boolean checkIfDone(String component) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        if (Integer.parseInt(component.substring(1,2)) \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"            return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"    public static void writeCurrentData() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"        for (Task t : Duke.taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"            fw.write(t.toFile() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"    public static void createDataFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"        File data \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"            data.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nwhloo99":73}},{"path":"src/main/java/DukeFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public interface DukeFunction {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"    public void execute(String command) throws DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nwhloo99":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    public Event(String description, String startTime) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"        this.startTime \u003d LocalDate.parse(startTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"        return \"[E]\" + super.toString() + \"(at \" + startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        return \"E \" + super.toFile() + \"| \" + this.startTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    protected void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        return \"| \" + (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"        return \"T \" + super.toFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"nwhloo99":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"todo fly","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"event /at 1300","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"event go to gym /at 1300","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"deadline submit","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"deadline /by 1400","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"deadline submit assgn /by 1400","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nwhloo99":15}}]
