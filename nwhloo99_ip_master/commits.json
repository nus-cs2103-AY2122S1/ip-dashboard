{"authorDailyContributionsMap":{"nwhloo99":[{"date":"2021-08-17","commitResults":[{"hash":"a93beb479192415f3a69213c90f4ebc81776e3e9","messageTitle":"Added getCommand() method to Duke class to allow bot to read user inputs","messageBody":"","tags":["Level-1-Greet-Echo-Exit"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}},{"hash":"5fb9a2d827ca1d3760a0c21b2e7d44cdc68c523e","messageTitle":"Added more ability to store commands in a list and to list the stored commands in getCommand()","messageBody":"","tags":["Level-2-Add-List"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":2}}},{"hash":"061d6be48e9717825a8350040255dd9af47bc5c1","messageTitle":"Created Task clas and modified getCommand() method to collect list of Task instead of list of Strings for commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":3}}},{"hash":"2e1a8563aa7ad8c21742fd0b5a9cb9e7f44d3964","messageTitle":"Allowed user to mark tasks as done, and to view status when asking for list","messageBody":"","tags":["Level-3-Mark-as-Done"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"2a900240e6574b0e72cf1be09a23de1cdfcf13fd","messageTitle":"Moved blocks of code within the if else statements of getCommand() into their own functions to clean up code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":20}}},{"hash":"64938f5a6c6ca31cad78bbe1a134fdb396466d4c","messageTitle":"Created ToDO class, made Task class abstract","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"b05bab118603727882fdbcecb0adaf37d52ea8bd","messageTitle":"Created Deadline Class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"5a4e4f77f3c891829dfdcfd27ca6752c7f41a511","messageTitle":"Created Event class, slight modification to toString of Deadline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"613d09b462e03cac9072481c3445883e1e8cd56c","messageTitle":"Created functions to handle adding Todo, Deadline, Event in Duke class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":9}}},{"hash":"fd21e374dec856095600c30dac2b8375cc641299","messageTitle":"Formatted toString in Deadline and Event. Finished functions for adding Todo, Deadline and Event to list in Duke","messageBody":"","tags":["Level-4-ToDos-Events-Deadlines"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":9}}},{"hash":"718326d0f180ed4d1b11b5a35de7794bc481c334","messageTitle":"Created DukeException class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"de79ae77fffaf1ee0ce101aa72869106850a6fb0","messageTitle":"Added exception handling for when invalid command was given","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":15}}},{"hash":"c53c4dcffcfa9b2ce7175421f2b6d86043ff4df5","messageTitle":"Added exception handling for done command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":11}}},{"hash":"d512a5f4b6b881a2342f7cc6a8198bd9ad9a0496","messageTitle":"Added exception handling for todo command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"3076f6c28e8be825db444c135c541ee0c8bfdbcf","messageTitle":"Added exception handling for adding deadline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"35e59d8e301337fb3849c55ff89d485a736cb9c2","messageTitle":"Added exception handling for adding event, added more check cases to adding deadline","messageBody":"","tags":["Level-5-Handle-Errors"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":9}}}]},{"date":"2021-08-18","commitResults":[{"hash":"46e88de1596e6ade9a16efb2bcbfe4554d9bfdaf","messageTitle":"Added delete function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":19}}},{"hash":"b4221450ec209e8fe3d7dc4f22f9a80e37d85721","messageTitle":"Turned all the available commands into an Enum (DukeCommands). Created an interface DukeFunctions to handle the functions associated with the commands.","messageBody":"","tags":["Level-6-Delete"],"fileTypesAndContributionMap":{"java":{"insertions":182,"deletions":174}}}]},{"date":"2021-08-19","commitResults":[{"hash":"92e65c34824eb078c1632e982c7c033207c7e2c0","messageTitle":"Added automated testing, fixed some message formatting","messageBody":"","tags":["A-TextUITesting","A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0},"java":{"insertions":5,"deletions":3}}}]},{"date":"2021-08-24","commitResults":[{"hash":"d6b7870e962f78305a30e9177ae615069322e8b9","messageTitle":"Add toFile() method to Task and its child classes","messageBody":"Task classes (e.g. Event, Deadline and Task) all need to be written to\nduke.txt to be stored.\n\nGiving each Task child class their own method follows OOP principles.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":19,"deletions":0}}},{"hash":"740e1787a8079445d7cecebe3e4bbc0c80436e2f","messageTitle":"Add DukeFileIO.java and SAVE Enum to DukeCommands","messageBody":"Methods are required to read/write data from/to duke.txt.\n\nCreating DukeFileIO.java with methods to read current data from duke.txt\nallows us to read past data from the user. Creating new Enum SAVE allows\nusers to instruct Duke to write all current data in list to duke.txt.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":82,"deletions":2}}},{"hash":"eedb8735ad3f4cef69b367fea7a7928ffcdae90a","messageTitle":"Reading past data: removed extra space created","messageBody":"Reading past data should store the previous data in the list in the same\nway.\n\nFixing the extra space created allows users to have a consistent view on\ntheir list of tasks.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":22,"deletions":21}}},{"hash":"983a740d4f2de639e683b30e0e2b876c3090cbfe","messageTitle":"Remove duke.txt for testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4}}},{"hash":"0aa788cc137addf9063f9a5d3956128d6338241f","messageTitle":"Add createDataFile() method to DukeFileIO class","messageBody":"In the case that duke.txt is missing from the user\u0027s data folder, a new\nduke.txt file should be created for them.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"7eefbc19fe40c285865d96d7980952a82338cbc6","messageTitle":"Add ability to store time in Deadline and Event as LocalDate","messageBody":"Deadline and Event are Tasks that track dates.\n\nAdding the ability to store time as LocalDate, enforces that users will\nhave standardized storage of Event and Deadline in their lists.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":13}}},{"hash":"d2ea3d56e2f72132b8c79e911aae56b609c7bede","messageTitle":"Create TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"1ed6abdfd9cdd0a6f97bf0bf64ac5613094fd97c","messageTitle":"Create Storage class to handle saving/loading tasks to/from file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":1}}},{"hash":"ede9fa46875493443c2babd4359306ce05a74ab0","messageTitle":"Create Ui, Parser, Command classes to handle reading and outputting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":0}}},{"hash":"9040b07d78d0950d7848bdea487bd9ccf2a64fa6","messageTitle":"Create AddCommand class that inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"659d5ea700a010a926814a7409b337f3370df9b4","messageTitle":"Create DoneCommand class which inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":5}}},{"hash":"f9877d5c43f5aee9f5535600db33673bc5588163","messageTitle":"Create ListCommand class which inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"22cf47f198587486e4f8e25ffdc01b521b4a85ac","messageTitle":"Update ListCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"3d806abdac0593d64c1e95e375e46e1b1ee639fd","messageTitle":"Create ExitCommand class which inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"ed77c8835f4a43c6349a6a55ad01e28a9ab07ccb","messageTitle":"Create SaveCommand class which inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"be10f6f176403f820bc2a64170ea28d3b331e9e3","messageTitle":"Create DeleteCommand class which inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"5a20ee09f449683c3a48a3b8f26f8eeeb666ef9c","messageTitle":"Update DeleteCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"aad863c0cba8bfb197d50d24e5803f0b4ccfc691","messageTitle":"Create InvalidCommand class which inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"3fa4246b24b545bee5f3bee729d54ad415877077","messageTitle":"Update parse method in Parser to detect commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":15}}},{"hash":"99c6db8e450aaa9ffa8fddc0df3f4495e161e9e9","messageTitle":"Remove redundant constructors from Command subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":12}}},{"hash":"faa87151ca6acc362c33062aa5fce78d75751dec","messageTitle":"Update ListCommand execute() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"71f435afbf5f050f3794b15d2adff8bf2ff12982","messageTitle":"Update SaveCommand execute() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"1b3f202aa0bf2135aa384caec729ca3ae0b3f6b4","messageTitle":"Update Parser parse() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"9d755e71cbaf48f6064d1cd3a0baa7f318032d85","messageTitle":"Update Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":8}}},{"hash":"3600ba907d1e73953d470c60f695e5b17147b626","messageTitle":"Update TaskList toString() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"5ab22b289b2c0a20c1f5148b5ed9b355f5f6e6fb","messageTitle":"Update name of TaskList variables to tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":15}}},{"hash":"b4770fb9d441edc673ab76958c4d9b79a75666c9","messageTitle":"Update DeleteCommmand and DoneCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":5}}},{"hash":"58ad5581a17611d318f310205fc7bba386d8b5f1","messageTitle":"Updated Parser to not handle index out of bounds for delete and done","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":10}}},{"hash":"ef09864b145acb56a755b8cb6829fec484e4e5ab","messageTitle":"Update TaskList toString() to display message if no elements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"e36865dc6147a5b5e4a0b8fa0c82abaceec03d94","messageTitle":"Update Ui class to display better messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"f0287f331d3a8da3f0b40dc989737d4f2d3326dd","messageTitle":"Clean up Dead Code/Redundant File","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":332}}}]},{"date":"2021-08-25","commitResults":[{"hash":"3ba8c682120e27ecb5af3464c5fb435314eae743","messageTitle":"Sort classes into packages","messageBody":"Number of classes have increased and organizing into packages tidies up\nthe project.\n\nSorting the classes into packages allows us to easily navigate between\ndifferent classes.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":94,"deletions":6}}},{"hash":"e2ba23e428e8203a3a55a1c85bcb3a4a53e02088","messageTitle":"Create Test methods in TaskListTest","messageBody":"Output from TaskList should be consistent and correct.\n\nTesting TaskList methods outputs allows us to ensure that we always get\nthe result that we are expecting from TaskList.\n","tags":["v0.1","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"b5eafcfadb01933d833889bda2ad5644733da56d","messageTitle":"Add documentation for public methods in package duke.main","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":6}}},{"hash":"cb85afba74424b31104bee26116cba9325a2791a","messageTitle":"Add Documentation for Command and its subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":0}}},{"hash":"5d3cc1de5cdea7c7a7e56cea34de7843079457c3","messageTitle":"Add Documentation for Task and its subclasses","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":0}}},{"hash":"36b7409e7ae56f97908e46f50bc1cbedaef95073","messageTitle":"Add getDescription method to Task","messageBody":"Description of Task is required to compare to other Strings to find\nspecific Task.\n\nAdding the getDescription method to Task allows the TaskList to get\nthe Description of Task in its ArrayList to find which Task matches any\nkeyword given.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"ddad4e2043fe296a76d4ed0dc7f78de6add663d2","messageTitle":"Add findMatchingTask method to TaskList","messageBody":"Method is required for user to find specific Task matching the keyword\ngiven.\n\nAdding findMatchingTask method ensures that users can find the tasks in\nthe TaskList that match their keyword given.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"ce29ccaa3c18fc84a6a8b6eabcb0bfcfe9a39cdc","messageTitle":"Create FindCommand class which inherits from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"d79db61ea5a2a6a61b27fed019711c67798a3f47","messageTitle":"Update Parser to handle find command","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}}]},{"date":"2021-08-30","commitResults":[{"hash":"c4cddb486ecbcb44a348b68d83feb7ab4c397b49","messageTitle":"Fix path to Main application","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"8d5680042cb9e40f11398a5a5edaa6a2a31ebf64","messageTitle":"Remove Checkstyle from build.gradle","messageBody":"Removing checkstyle allows the build function of gradle to run as the\nprogram does not support checkstyle currently.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":4}}}]},{"date":"2021-08-31","commitResults":[{"hash":"928f195aeef6a6a3f3ae82b533aa70c8bc1df6cd","messageTitle":"Add checkstyle support","messageBody":"Adding checkstyle support will allow grade to automate checking of\nstyling of code to ensure that the code follows convention.\n","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":4}}},{"hash":"1d994a87cb451b27c6dce2df5f68cabfa55b7542","messageTitle":"Fix checkstyle errors","messageBody":"Fixing checkstyle errors ensures that the code follow coding convention.\n","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":30}}},{"hash":"d7163458f5e2b6bb47050ac649adf56394d64e7c","messageTitle":"Update build.gradle to allow for JavaFx","messageBody":"Enabling JavaFx allows creating of a GUI to better the user experience\nwhen using the application.\n","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":0}}},{"hash":"0582a53985540c2b757a7988ecb89d6e826b8a6e","messageTitle":"Create base GUI that will echo user input","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":36,"deletions":0},"java":{"insertions":132,"deletions":0}}},{"hash":"9bfa6b77f4680186482e9958ec8b4b118c15dcb3","messageTitle":"Update the methods in Ui to return a String.","messageBody":"Returning a String allows these methods to pass a String to Label in the\nGUI, which allows for the displaying of messages in the GUI.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":32}}},{"hash":"17699c73101dc8a1d040d19209985174f1da9b17","messageTitle":"Add Getters to Duke","messageBody":"Adding getters to Duke allows us to access the private fields in Duke\nwhich are required for the GUI.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"777446a56e44bf73ed7530a1e96ca2616ba20f41","messageTitle":"Add greet method to MainWindow","messageBody":"Adding greet method to MainWindow allows us to send the user a greeting.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"961695db49faec566b793f4793db5b807131a19b","messageTitle":"Send greeting message upon launching program","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"d40d01e5fd922819e57a798a4fa9401ea6d13f79","messageTitle":"Update execute method in Command classes","messageBody":"Returning Strings in execute methods allows us to pass a String to the\nGUI components to display a message to the user.\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":34}}},{"hash":"819bcf376c2f56fe2acf80d8d6970dcda0e76fb3","messageTitle":"Clean up Duke","messageBody":"Removing methods that are no longer in use ensures that the code will be\ncleaner.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":30}}},{"hash":"a6ebee65c98c0852951c1c309bdd59357006fa31","messageTitle":"Update Ui methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"866badf4b4441a06842fc82c2fd502943be7bfa9","messageTitle":"Update DialogBox format","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"5d2956f8f7c7ec09c2b229e50ae10d78de3df66f","messageTitle":"Truncate Invalid command error message","messageBody":"Truncating the Invalid command error message ensures that the message\ncan fit nicely into the DialogBox\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":8}}},{"hash":"2f8fea58d592c233ab8a606cc568a96434338969","messageTitle":"Update handleUserInput() method in MainWindow","messageBody":"Updating the method allows the GUI to read user input and process it,\nto find the correct command to output to the user.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":2}}},{"hash":"126e236510cc5bd19973c8f9fb4b6ec147fddbdc","messageTitle":"Remove redundant Test files","messageBody":"","tags":["Level-10-GUI"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":15},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":0,"deletions":38}}}]},{"date":"2021-09-02","commitResults":[{"hash":"4ade45bcf375efb25cc46cbdf144ab19c56e4a1d","messageTitle":"Fix String format for displayAddedMessage in Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"nwhloo99":{"java":1244,"md":0,"fxml":36,"sh":0,"bat":0,"gradle":18,"txt":0}},"authorContributionVariance":{"nwhloo99":80577.36},"authorDisplayNameMap":{"nwhloo99":"CS2103T-T12-3 NICH..-HAO"}}
