[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kslui99":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"Duke is a personal assistant desktop app for managing your tasks via a Command Line Interface (CLI). This is suitable for people who type fast.","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"There are 3 types of tasks you can manage:","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"1. ToDo","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"2. Deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"3. Event","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"This user guide details all the commands you can use to interact with Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"## Features and Usage","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"### Adding a ToDo: `todo [description]`","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"Adds a new ToDo to your task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"`todo return book`","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"A new ToDo \u0027return book\u0027 is added to the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"[T][] return book","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"### Adding a Deadline: `deadline [description] /by [yyyy-mm-dd]`","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"Adds a new Deadline to your task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"`deadline assignment 1 /by 2021-09-17`","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"A new Deadline \u0027assignment 1\u0027, due on Sep 17 2021, is added to the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"[D][] assignment 1 (by: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"### Adding an Event: `event [description] /at [yyyy-mm-dd]`","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"Adds a new Event to your task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"`event project meeting /at 2021-09-17`","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"A new Event \u0027project meeting\u0027, happening at Sep 17 2021, is added to the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"[E][] project meeting (at: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"Lists all the tasks in your task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"All the tasks in the list are displayed.","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"1. [T][] read book","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"2. [T][] return book","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"3. [D][] assignment 1 (by: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"4. [E][] project meeting (at: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"### Marking a task as done: `done [index]`","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"Marks the task at the specified index as done. Index is the number in front of the task returned by the list command. ","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"First, list all the tasks:","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"Expected Output:","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"1. [T][] read book","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"2. [T][] return book","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"3. [D][] assignment 1 (by: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"4. [E][] project meeting (at: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"Then to mark the third task as done:","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"`done 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"Expected Output:","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"[D][X] assignment 1 (by: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"### Searching for a task: `find [description]`","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"Finds tasks whose description, date or time contain any of the given keywords.","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"* The search is case-sensitive. For example, ```Assignment 1``` will not match ```assignment 1```","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"* The order of the keywords matters. For example, ```1 assignment``` will not match ```assignment 1```.","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"* Partial words can be matched. For example, ```assign``` will match ```assignment 1```.","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"`find book`","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"Returns all tasks with \u0027book\u0027 in its description.","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"kslui99"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"1. [T][] read book","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"2. [T][] return book","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"### Deleting a task: `delete [index]`","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"Deletes the task at the specified index. Index is the number in front of the task returned by the list command. ","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"kslui99"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"kslui99"},"content":"First, list all the tasks:","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"kslui99"},"content":"Output:","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"kslui99"},"content":"1. [T][] read book","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"kslui99"},"content":"2. [T][] return book","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"kslui99"},"content":"3. [D][] assignment 1 (by: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"kslui99"},"content":"4. [E][] project meeting (at: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"kslui99"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"kslui99"},"content":"Then to delete the third task:","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"kslui99"},"content":"`delete 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"kslui99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"The third task, \u0027assignment 1\u0027, is deleted.","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"kslui99"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"kslui99"},"content":"[D][] assignment 1 (by: Sep 17 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"kslui99"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"kslui99"},"content":"### Saving the data","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"kslui99"},"content":"Duke\u0027s data is automatically saved in the hard disk after using any command that changes the data. There is no need to manually save the data.","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"kslui99"},"content":"### Exiting the app: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"kslui99"},"content":"Closes the app.","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kslui99":139,"-":29}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command by the user to add a task into Duke\u0027s to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    private String taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     * Constructor for an add command.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     * @param taskType The type of task to add into Duke; can be a Todo, Deadline or Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"     * @param remainingWords The description of the task, as well as deadlines or timing if applicable.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    public AddCommand(String taskType, String remainingWords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        this.description \u003d remainingWords;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * Executes the add command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @param ui The user interface that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     * @param storage The storage that Duke uses to deal with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        // Create Todo, Deadline or Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"                t \u003d new Todo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"            String d \u003d description.split(\" /by\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"            String by \u003d description.split(\"/by \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"            t \u003d new Deadline(d, by);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"            String s \u003d description.split(\" /at\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"            String at \u003d description.split(\"/at \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"            t \u003d new Event(s, at);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task: \" + taskType);","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        // Add task to list in Duke, and persist to text file","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        assert !t.equals(null);","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"            storage.append(t.toStringForFile() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"            ui.showSavingError(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        // Return a description of the execution result","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        return \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"                + t","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":74}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"     * @param ui The user interface that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * @param storage The storage that Duke uses to deal with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":17}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" * Encapsulates a deadline to meet, which can be entered into the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    private LocalDate by;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        LocalDate d \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        this.by \u003d d;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the task is already done.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        LocalDate d \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        this.by \u003d d;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the task is already done.","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"     * @param tag The tag to attach to the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    public Deadline(String description, boolean isDone, String tag, String by) {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        super(description, isDone, tag);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        LocalDate d \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        this.by \u003d d;","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"     * Returns the string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"     * @return The string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    public String toStringForFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        return \"D | \" + super.toStringForFile() + \" | \" + this.by;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        String icon \u003d \"[D]\";","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        String deadline \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        return icon + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kslui99":67}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command by the user to delete a task from Duke\u0027s to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    private int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * Constructor for a delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * Executes the delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * @param ui The user interface that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     * @param storage The storage that Duke uses to deal with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        // Handle user inputs that are out of bounds","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        if (index \u003e tasks.getSize() || index \u003c\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but you\u0027ve entered an invalid index.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        // Delete task from list of tasks, and persist to text file","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        Task t \u003d tasks.delete(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        assert !t.equals(null);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"            ui.showSavingError(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        // Return a description of the execution result","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"                + t","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":51}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":" * A custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"     * Returns a dialog box representing the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     * @param text The text from the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"     * @param img The profile image of the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"     * @return A dialog box containing the text and the profile image of the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"     * Returns a dialog box representing Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"     * @param text The text from Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"     * @param img The profile image of Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"     * @return A dialog box containing the text and the profile image of Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"kslui99":75}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command by the user to mark a task in Duke\u0027s to-do-list as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    private int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * Constructor for a mark-as-done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * Executes the mark-as-done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * @param ui The user interface that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     * @param storage The storage that Duke uses to deal with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        // Handle user inputs that are out of bounds","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        if (index \u003e tasks.getSize() || index \u003c\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but you\u0027ve entered an invalid index.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        // Mark task as done, and persist to text file","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        Task t \u003d tasks.markAsDone(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        assert !t.equals(null);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"            ui.showSavingError(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        // Return a description of the execution result","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + t.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * A personal assistant chatbot that maintains a to-do list.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" * Operations supported are add, list, mark as done, delete, and exit.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     * Constructor for an instance of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     * @param filePath The path of the text file that stores Duke\u0027s data.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     * Processes a user input and returns a response.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     * @param input The command that the user inputs.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kslui99":39,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Encapsulates the exceptions that can be thrown by Duke as it runs.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" * Encapsulates an event, which can be entered into the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    private LocalDate at;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     * Constructor for an event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"     * @param at The time of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        LocalDate d \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        this.at \u003d d;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * Constructor for an event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the event is already done.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     * @param at The time of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public Event(String description, boolean isDone, String at) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        LocalDate d \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        this.at \u003d d;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"     * Constructor for an event task.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the event.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the event is already done.","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"     * @param tag The tag to attach to the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     * @param at The time of the event.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    public Event(String description, boolean isDone, String tag, String at) {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        super(description, isDone, tag);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        LocalDate d \u003d LocalDate.parse(at);","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        this.at \u003d d;","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"     * Returns the string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"     * @return The string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    public String toStringForFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        return \"E | \" + super.toStringForFile() + \" | \" + this.at;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        String icon \u003d \"[E]\";","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        String datetime \u003d this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        return icon + super.toString() + \" (at: \" + datetime + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kslui99":67}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command by the user to exit Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"     * Executes the exit command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * @param ui The user interface that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     * @param storage The storage that Duke uses to deal with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        javafx.application.Platform.exit();","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":21}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command by the user to find a task by searching for a keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    private String query;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * Constructor for a find command.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     * @param query The query input by the user, i.e. the keyword that the user intends to search using.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        this.query \u003d query;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * Executes the find command.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * @param ui The instance of ui that handles interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     * @param storage The instance of storage that handles loading tasks from and saving tasks to a text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        if (query.isBlank()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            throw new DukeException(\"OOPS!!! You cannot search using an empty keyword.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        // Get the list of matching tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.find(query);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        // Create the response to be displayed","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        String output \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"            output +\u003d String.valueOf(i + 1) + \". \" + matchingTasks.get(i) + \"\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        // Return a description of the execution result","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        return output;","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kslui99":48}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" * The class used as the entry point to launch Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"     * Launches Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * @param args","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"kslui99":17}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command by the user to list the current items in the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"     * Executes the list command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"     * @param ui The user interface that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * @param storage The storage that Duke uses to deal with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        return tasks.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":19}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" * The class to be passed to the launcher. Sets up Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    private Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"     * Sets up Duke and starts the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"     * @param stage The stage to set up the scene in.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"kslui99":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    // Icons made by Freepik (https://www.freepik.com) from Flaticon (https://www.flaticon.com/)","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     * Initializes the main window.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        // Show welcome message","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        String welcomeMessage \u003d Ui.getWelcomeMessage();","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        displayDukeDialog(welcomeMessage);","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        displayDialogs(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    private void displayDialogs(DialogBox ... dialogs) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        dialogContainer.getChildren().addAll(dialogs);","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"     * Prints a given message to the GUI using Duke\u0027s dialog box.","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"     * @param message The message to display.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"    public void displayDukeDialog(String message) {","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        displayDialogs(DialogBox.getDukeDialog(message, dukeImage));","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"kslui99":71}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * A class that deals with making sense of user inputs.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"     * Parses a user\u0027s inputs into commands that can be executed by Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"     * @param fullCommand The string input by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"     * @return A command that can be executed by Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"        // Separate user input into words","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"        String firstWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        String remainingWords \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        if (fullCommand.contains(\" \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"            String[] splitFullCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"            assert splitFullCommand.length \u003d\u003d 2;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            firstWord \u003d splitFullCommand[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            remainingWords \u003d splitFullCommand[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            firstWord \u003d fullCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            return new DoneCommand(Integer.parseInt(remainingWords));","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"            return new AddCommand(\"todo\", remainingWords);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"            return new AddCommand(\"deadline\", remainingWords);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"            return new AddCommand(\"event\", remainingWords);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"            return new DeleteCommand(Integer.parseInt(remainingWords));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"            return new FindCommand(remainingWords);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        case \"tag\":","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"            return new TagCommand(remainingWords);","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":50}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" * Encapsulates a class that deals with loading tasks from and saving tasks to a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     * Constructor for a storage instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"     * @param filePath The path of the text file to read from and write to.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     * Loads the tasks from the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @return An ArrayList of tasks, parsed from the strings in the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"                String[] splitLine \u003d line.split(\" [|] \");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"                // Read each element of the line","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"                String taskType \u003d splitLine[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"                boolean isDone \u003d splitLine[1].equals(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"                String description \u003d splitLine[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"                String tag \u003d splitLine[3];","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"                // Store data from file into tasks arraylist","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"                Task t \u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"                case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"                    t \u003d new Todo(description, isDone, tag);","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"                    t \u003d new Deadline(description, isDone, tag, splitLine[4]);","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"                    t \u003d new Event(description, isDone, tag, splitLine[4]);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"                tasks.add(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"            return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"            // Create the file","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"                ioException.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"     * Saves all the tasks in this instance of Duke to the text file, overwriting the content in the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"        fw.write(tasks.toStringForFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"     * Appends text to the end of the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"     * Does not overwrite the content in the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"     * @param textToAppend The text to append to the end of the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"    public void append(String textToAppend) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":99}},{"path":"src/main/java/duke/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" * Encapsulates a command by the user to tag a task in Duke\u0027s to-do-list.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":" * The tag will be overwritten each time the user writes a new tag.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    private int index;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    private String tag;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     * Constructor for a tag command.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     * @param description The description of the tag command,","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"     *                    which is in the format of \"(index) (tag)\",","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"     *                    where \"index\" is the index of the task to tag,","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"     *                    and \"tag\" is the tag to attach to the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    public TagCommand(String description) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        super();","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"            this.index \u003d Integer.parseInt(description.split(\" \")[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"            this.tag \u003d description.split(\" \")[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"            throw new DukeException(\"OOPS!!! Please enter a tag in the format \\\"tag (index) (tag)\\\"\");","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     * Executes the tag command.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"     * @param tasks The list of tasks in the to-do-list.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"     * @param ui The user interface that deals with interactions with the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"     * @param storage The storage that Duke uses to deal with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"     * @return A message describing the result of the execution.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        // Tag task, and persist to text file","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        Task t \u003d tasks.tag(this.index, this.tag);","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"            ui.showSavingError(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        // Return a description of the execution result","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        return \"Got it. I\u0027ve tagged this task: \\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"                + t;","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"kslui99":55}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Encapsulates a task, which can be entered into the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"    private String description;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    private String tag \u003d null;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the task is already done.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the task is already done.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"     * @param tag The tag to attach to the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    public Task(String description, boolean isDone, String tag) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"     * Returns a character indicating whether the task is done or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"     * @return Icon \u0027X\u0027 if the task is done, \u0027 \u0027 whitespace otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     * Setter to mark the task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"     * Returns the string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"     * @return The string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"    public String toStringForFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        String status \u003d (this.isDone) ? \"1\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        return status + \" | \" + this.description + \" | \" + this.tag;","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        if (this.tag \u003d\u003d null || this.tag.equals(\"null\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"            // There is no tag","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"            // There is a tag","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description + \" #\" + this.tag;","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"     * Tag the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"     * @param tag The tag to attach to the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kslui99":90}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" * Encapsulates a list of tasks, and supports operations on the list such as add, delete and mark-as-done.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"            output +\u003d String.valueOf(i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     * Converts the list of tasks into a string suitable for saving to a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     * @return A string suitable for saving to a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    public String toStringForFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"            output +\u003d t.toStringForFile() + System.lineSeparator();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"     * @return The task that is marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    public Task markAsDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        return t;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"     * Returns the current size of the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"     * @return The current size of the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"     * Adds a task into the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"     * @param t The task to add into the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"        tasks.remove(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"        return t;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"     * Searches for the tasks that matches a given query.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"     * @param query The keyword to search for.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"     * @return An ArrayList of tasks that contains the given query.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"    public ArrayList\u003cTask\u003e find(String query) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"            if (task.toString().contains(query)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"     * Gets a task from the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"     * @param index The task to be retrieved from the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"     * @return The task with the index in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"     * Tags a task in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"     * @param index The index of the task to tag.","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"     * @param description The description of the tag.","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"     * @return The tagged task.","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"    public Task tag(int index, String description) {","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"        t.setTag(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"        return t;","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":121}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Encapsulates a todo item, which can be entered into the to-do-list.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"     * Constructor for a task to be done.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     * Constructor for a task to be done.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the task is already done.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * Constructor for a task to be done.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     * @param description A short description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     * @param isDone A boolean to indicate whether the task is already done.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     * @param tag The tag to attach to the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    public Todo(String description, boolean isDone, String tag) {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        super(description, isDone, tag);","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"     * Returns the string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"     * @return The string representation of the task, in a format suitable for storing in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    public String toStringForFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        return \"T | \" + super.toStringForFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kslui99":51}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":" * Encapsulates a class that deals with interactions from the user and displaying Duke\u0027s responses to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    private MainWindow mainWindowController;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"     * Constructor for a Ui.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public Ui() {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        this.mainWindowController \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * Displays a given message.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     * @param message","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        mainWindowController.displayDukeDialog(message);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     * Displays an error message for an error in loading a data file.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        String message \u003d \"Oops! There was an error loading your data file. \"","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"                + \"A new data file has been created for you.\";","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        showMessage(message);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"     * Displays an error message for an exception thrown in saving to a data file.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"     * @param e The exception thrown.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"    public void showSavingError(IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        String message \u003d \"Oops! There was an error saving to your data file.\" + e.getMessage();","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        showMessage(message);","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"     * Generates a welcome message.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"     * @return A welcome message from Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        return \"Hello! I\u0027m Duke, your personal assistant. \\nWhat can I do for you?\";","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"kslui99":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"900.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"858.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"858.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"857.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"852.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"kslui99":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    public void parse_bye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"            assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public void parse_list() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public void parse_invalidInput_dukeExceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            Parser.parse(\"klaskdlasd\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kslui99":37}}]
