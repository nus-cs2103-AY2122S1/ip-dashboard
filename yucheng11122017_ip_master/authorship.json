[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"plugins {","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"repositories {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"dependencies {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"test {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"    testLogging {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        showExceptions true","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        showCauses true","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        showStackTraces true","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"application {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"shadowJar {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"run{","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"apply plugin : \"java\"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"ext {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"    javaMainClass \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"yucheng11122017":67}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"Duke is a **desktop app for managing your todo list, optimised for use via a Command Line Interface** ","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"while still have the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"If you can type fast, Duke can manage your todo list faster than traditional GUI apps.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"##Quick start","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"1. Ensure you have Java 11 or above installed in your computer ","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"2. Download the latest Duke.jar from [here](https://github.com/yucheng11122017/ip/blob/master/duke.jar)","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"3. Copy the file to the folder you want to use as the *home folder* for Duke","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"4. Double-click the file to start the file. The GUI similiar to below should appear in a few seconds.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"   (INSERT PHOTO HERE)","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"   ","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"5. Type the command in the command box and press Enter to execute it. Eg. typing **help** and pressing enter","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"will display the help messasges.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"   ","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"6. Refer to [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"Notes about the command format: ","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"  e.g. in find TASK_NAME, TASK_NAME is a parameter which can be used as find homework.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"e.g help [COMMAND] can be used as help add or as help.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"- Items with …​ after them can be used multiple times including zero times.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"e.g. [TAG_NAME]…​ can be used as   (i.e. 0 times), tag pain extreme_pain | 1 2 3.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"  ","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"### Viewing help:```help```","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"Shows help message on how to use Duke, or how to use a specific command.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"Format: help [COMMAND]","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"Example: help add","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"### Add different tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"Add different types of tasks to your todo list.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"Task | Features | Format | Example","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"------------ | ------------- | ------------- | -------------","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"ToDo | Contains description of task | ```todo TASK_DESCRIPTION``` | ```todo get a life```","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"Deadline | Contains description and deadline of task | ```deadline TASK_DESCRIPTION /by ddMMyyyy hhmm``` | ```deadline homework /by 1/1/2021 0900```","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"Event | Contains description and start time of task | ```event TASK_DESCRIPTION /at ddMMyyyy hhmm``` | ```event AOT season 4 part 2 ep 1 /at 1/1/2030 0000```","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"### Listing all tasks: ```list```","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"Shows all the tasks on the todo list. ","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"Format: ```list```","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"### Mark a task as done: ```done```","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"Marks an existing task as done at an index.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"Format: ```done TASK_INDEX```","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"Marks the task at ```TASK_INDEX``` as done. ","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"Example: ```done 1```","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"### Delete a task: ```delete```","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"Deletes an existing task at an index.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"Format: ```delete TASK_INDEX```","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"Example: ```delete 1```","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"### Locating a task: ```find```","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"Finds tasks whose name, tag or date contains any of the given keywords. ","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"Format: ```find KEYWORD [MORE_KEYWORDS]```","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"Example: ```find birthday, friend```","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"### Tagging a task: ```tag```","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"Tag tasks at specified indexes with keywords. ","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"Format: ```tag TASK_INDEX1 ... | TAG_KEYWORD1 ...```","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"Example: ```tag 1 2 | pain hell ```","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"### Exiting: ```Exit```","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"Exits Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"Format:```bye```","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"### Saving the data","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"Duke data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"Editing the data file","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"AddressBook data are saved as a JSON file [JAR file location]/taskList.json. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"yucheng11122017"},"content":"### Command Summary","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"yucheng11122017"},"content":"Action | Format | Example","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"yucheng11122017"},"content":"------------- | ------------- | -------------","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"yucheng11122017"},"content":"Add todo | ```todo TASK_DESCRIPTION``` | ```todo get a life```","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"yucheng11122017"},"content":"Add deadline | ```deadline TASK_DESCRIPTION /by ddMMyyyy hhmm``` | ```deadline homework /by 1/1/2021 0900```","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"yucheng11122017"},"content":"Add event | ```event TASK_DESCRIPTION /at ddMMyyyy hhmm``` | ```event AOT season 4 part 2 ep 1 /at 1/1/2030 0000```","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"yucheng11122017"},"content":"List current tasks |```list```|```list```","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"yucheng11122017"},"content":"Mark a task as done | ```done TASK_INDEX``` | ```done 1```","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"yucheng11122017"},"content":"Delete task | ```delete TASK_INDEX``` |```delete 1```","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"yucheng11122017"},"content":"Find a task | ```find KEYWORD [MORE_KEYWORDS]```| ```find birthday```","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"yucheng11122017"},"content":"Tag a task | \u003ccode\u003etag TASK_INDEX1 ... \u0026#124; TAG_KEYWORD1 ...\u003c/code\u003e| \u003ccode\u003etag 1 2 \u0026#124; pain hell \u003c/code\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"yucheng11122017"},"content":"Exit Duke | ```bye``` | ```bye``` ","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"yucheng11122017":84,"-":24}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":":execute","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":":end","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":":fail","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"exit /b 1","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":":mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":":omega","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"yucheng11122017":89}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"yucheng11122017":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":" * Interactive bot that manages one\u0027s tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"public class Duke {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"    private FileManager filemanager;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    private Tasklist tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    private static final String defaultFilePath \u003d \"taskList.txt\";","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"     * Constructs Duke which stores the tasks in a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    public Duke() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"        filemanager \u003d new FileManager(defaultFilePath);","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"        tasks \u003d new Tasklist(filemanager.getTaskList());","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string of Duke\u0027s welcome message.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"     * @return Duke\u0027s welcome messsage.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    public String sayHi() {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"        return this.ui.showWelcome();","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     * Returns Duke response to user\u0027s commmand.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"     * @param input user\u0027s command.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"     * @return Duke response.","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"            String uiStr \u003d c.execute(tasks, ui, filemanager);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"            return uiStr;","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yucheng11122017":49}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":" * Exception for the duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"     * Constructs DukeExcpetion with message.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"     * @param description the message of the DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    public DukeException(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"     * Gets the string representation of the duke exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"     * @return the representation of the duke exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"        return super.getMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"yucheng11122017":24}},{"path":"src/main/java/duke/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":" * Class that manages the storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"public class FileManager {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"    private File taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * Makes new Filemanager which manages a file with the name inputted.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     * @param filename name of file which will be managed.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    public FileManager(String filename) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"        this.taskList \u003d new File(filename);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     * Gets the current stored tasklist in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     * @return the tasklist stored in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"            if (taskList.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"                return getTasks(taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"            System.out.println(\"Error occured initalising file\");","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"            return null;","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"    private static ArrayList\u003cTask\u003e getTasks(File taskList) throws FileNotFoundException {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"        Scanner fileReader \u003d new Scanner(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"                getOneTask(fileReader, tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"                System.out.println(\"Invalid input in file\");","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"        return tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"    private static void getOneTask(Scanner fileReader, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"        String nextLine \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"        String[] splitString \u003d nextLine.split(Task.SEP);","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"        if (splitString.length \u003c 4) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"            assert false : \"Invalid input in file\";","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"        Task newTask \u003d Task.makeTask(splitString[0], splitString[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"        if (splitString[2].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"            newTask.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"        newTask.addTags(FileManager.getTags(splitString[3]));","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"     * Updates the stored tasks according to tasks inputted.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks the updated tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the user interface to interact with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"    public void updateTaskList(Tasklist tasks, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"            FileWriter newfileWriter \u003d new FileWriter(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"            newfileWriter.write(tasks.stringSaveFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"            newfileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"            ui.showError(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"    private static ArrayList\u003cString\u003e getTags(String arrayString) {","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"        String stringWithoutBrackets \u003d arrayString.substring(0, arrayString.length() - 1).substring(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"        String[] splitByComma \u003d stringWithoutBrackets.split(\",\");","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"yucheng11122017"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"yucheng11122017"},"content":"        Collections.addAll(tags, splitByComma);","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"yucheng11122017"},"content":"        return tags;","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yucheng11122017":99}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"yucheng11122017":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"yucheng11122017":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/levi.jfif\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(d.sayHi(), dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"yucheng11122017":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.CommandsTypes;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":" * Class to parse the input by user.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     * Parses input by user.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"     * @param input the input by user.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * @return the command to be executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"        if (input.replaceAll(\"\\\\s+\", \"\").toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"            return Command.makeCommand(CommandsTypes.EXIT);","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"        if (input.replaceAll(\"\\\\s+\", \"\").toLowerCase().equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"            return Command.makeCommand(CommandsTypes.LIST);","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"        String[] splitBySpace \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"        if (splitBySpace[0].toLowerCase().equals(\"help\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"            return getCommand(CommandsTypes.HELP, splitBySpace);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        if (splitBySpace.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid input.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        if (splitBySpace[0].toLowerCase().equals(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"            return getCommand(splitBySpace[1], CommandsTypes.MARK_DONE, \"Invalid index inputted after done. Please enter a positive integer\");","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        if (splitBySpace[0].toLowerCase().equals(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"            return getCommand(splitBySpace[1], CommandsTypes.DELETE, \"Invalid index inputted after delete. Please enter a positive integer\");","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        if (splitBySpace[0].toLowerCase().equals(\"find\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"            return getCommand(splitBySpace, CommandsTypes.FIND);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"        if (splitBySpace[0].toLowerCase().equals(\"tag\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"            return getCommand(splitBySpace, CommandsTypes.TAG);","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"        return getAddCommand(input, splitBySpace[0]);","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"    private static Command getAddCommand(String input, String s) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"        String type \u003d s.toLowerCase();","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"        String taskDescription \u003d Stream.of(input.split(\" \"))","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"                .skip(1).reduce(\"\", (x, y) -\u003e x + \" \" + y);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"        Task newTask \u003d Task.makeTask(type, taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"        return Command.makeCommand(CommandsTypes.ADD, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"    private static Command getCommand(String[] splitBySpace, CommandsTypes commandType) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"        String[] keywords \u003d new String[splitBySpace.length - 1];","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"        for (int i \u003d 1; i \u003c splitBySpace.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"            keywords[i - 1] \u003d splitBySpace[i];","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"        return Command.makeCommand(commandType, keywords);","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"    private static Command getCommand(String s, CommandsTypes commandType, String s2) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"            int index \u003d Integer.parseInt(s);","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"            if (index \u003c 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"            return Command.makeCommand(commandType, index);","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(s2);","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"    private static Command getCommand(CommandsTypes commandsTypes, String[] splitBySpace) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"        if (splitBySpace.length \u003c 2) {","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"        return new HelpCommand(splitBySpace[1].toLowerCase());","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":91}},{"path":"src/main/java/duke/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":" * Class to store the current tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":" * Supports addition, deletion, mark done of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    private int count;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"     * Constructor to make a tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasklist current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"    public Tasklist(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"        this.count \u003d tasklist.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"     * Adds task to tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"     * @param task the task to be added to tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"        tasklist.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        count++;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"     * Deletes task from tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"     * @param index the index of the task to be deleted in the tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if index is out of bounds of tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"    public void delete(int index) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        if (index \u003e count) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid index! Input a number less than or equal to \" + count);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"        this.tasklist.remove(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"        count--;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"     * @param index the index of the task to be done in the tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if index is out of bounds of tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"    public void markDone(int index) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"        if (index \u003e count) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid index! Input a number less than or equal to \" + count);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"        this.tasklist.get(index - 1).markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"     * Gets the task in the index of the tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"     * @param index the index of the task to get.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"     * @return the task in the index.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"        return this.tasklist.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"     * Gets the number of tasks in the tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"     * @return the number of tasks in the tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"    public int getNumTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"        return this.count;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"     * Gets the formatted string to be saved in the filemanager.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"     * @return the formatted string to be saved in the filemanager","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"    public String stringSaveFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"        String toWrite \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"        for (Task task: this.tasklist) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"            toWrite +\u003d task.typeString() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"        return toWrite;","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"yucheng11122017"},"content":"     * Finds tasks that contain keywords.","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"yucheng11122017"},"content":"     * @param keywords the keywords which related tasks contain.","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"yucheng11122017"},"content":"     * @return a list of tasks which contain the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"yucheng11122017"},"content":"    public Tasklist findRelated(ArrayList\u003cString\u003e keywords) {","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"yucheng11122017"},"content":"        ArrayList\u003cTask\u003e relatedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"yucheng11122017"},"content":"        for (Task task: tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"yucheng11122017"},"content":"            for (String keyword: keywords) {","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"yucheng11122017"},"content":"                if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"yucheng11122017"},"content":"                    relatedTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"yucheng11122017"},"content":"                    break;","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"yucheng11122017"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"yucheng11122017"},"content":"        return new Tasklist(relatedTasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"yucheng11122017"},"content":"     * Adds tags to tasks indicated the indexes","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"yucheng11122017"},"content":"     * @param indexes indexes of tasks to add the tags to","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"yucheng11122017"},"content":"     * @param tags the tags to be added to the tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"yucheng11122017"},"content":"    public Tasklist addTags(ArrayList\u003cInteger\u003e indexes, ArrayList\u003cString\u003e tags) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"yucheng11122017"},"content":"        Tasklist taggedTasks \u003d new Tasklist(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"yucheng11122017"},"content":"        for (int i \u003d 0; i \u003c indexes.size(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"yucheng11122017"},"content":"            if (indexes.get(i) \u003e this.getNumTasks()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"yucheng11122017"},"content":"                throw new DukeException(\"Invalid input. Index must be less than or equal to \" + this.getNumTasks());","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"yucheng11122017"},"content":"            Task currentTask \u003d this.getTask(indexes.get(i));","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"yucheng11122017"},"content":"            taggedTasks.add(currentTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"yucheng11122017"},"content":"            currentTask.addTags(tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"yucheng11122017"},"content":"        return taggedTasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"yucheng11122017"},"content":"     * Gets a string that shows the list of current tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"yucheng11122017"},"content":"     * @return string that shows the list of current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"yucheng11122017"},"content":"        if (this.count \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"yucheng11122017"},"content":"            return \"Nothing on your list!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"yucheng11122017"},"content":"        String strRepresentation \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"yucheng11122017"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"yucheng11122017"},"content":"        for (Task task: tasklist) {","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"yucheng11122017"},"content":"            strRepresentation +\u003d count + \". \" + task + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"yucheng11122017"},"content":"            count++;","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"yucheng11122017"},"content":"        return strRepresentation;","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":152}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.CommandsTypes;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.TagCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":" * Class to handle the user interface of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * Prints out sentence welcoming user when Duke starts.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     * @return welcome message by Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"        return \"Urgh I hate having to wake up. Why did you do that\";","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     * Returns confirmation when user adds a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     * @param task the task which is added.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     * @param count the current number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"     * @return confirmation when user adds a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"    public String taskAdded(Task task, int count) {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"        String toPrint \u003d String.format(\"Got it. I\u0027ve added this task:\\n     \"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"                        + \"%s\\nNow you have %x task%s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"                task.toString(), count, count \u003e 1 ? \"s\" : \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        return toPrint;","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string saying bye.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"     * @return String saying bye.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"    public String sayBye() {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"        return \"Don\u0027t wake me up again\";","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"     * Returns sentence confirming when user marks a task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"     * @param task task that is marked done.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"     * @return sentence confirming when user marks a task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"    public String showMarkDone(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"        return \"Toight!\\n\" + task + \" marked done.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"     * Returns sentence confirming when user deletes a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"     * @param task task that is deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"     * @return string for delete command.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"    public String deleteTask(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"        return task + \" deleted. Bruh be more careful next time\";","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"     * Return string of the list of current tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"     * @return string of list of current tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"    public String printList(Tasklist tasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"        return tasks.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string for exception thrown.","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"     * @param e the exception that was thrown.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"     * @return string for exception thrown.","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"    public String showError(Exception e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"        return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string for find command.","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks tasks that are related to keyword.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"yucheng11122017"},"content":"     * @param keywords keywords that user is searching for.","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"yucheng11122017"},"content":"     * @return string for find command.","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"yucheng11122017"},"content":"    public String printRelatedTasks(Tasklist tasks, ArrayList\u003cString\u003e keywords) {","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"yucheng11122017"},"content":"        String strKeywords \u003d keywords.stream().reduce((x, y) -\u003e x + \" \" + y).orElse(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"yucheng11122017"},"content":"        return \"Your tasks that match with \" + strKeywords + \":\\n\" + this.printList(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string for tag command.","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"yucheng11122017"},"content":"     * @param taggedTasks tasks that are tagged.","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"yucheng11122017"},"content":"     * @param tags tags for tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"yucheng11122017"},"content":"     * @return string for tag command.","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"yucheng11122017"},"content":"    public String showTagsAdded(Tasklist taggedTasks, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"yucheng11122017"},"content":"        String tagString \u003d tags.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"yucheng11122017"},"content":"        return \"Tagged tasks:\\n\" + taggedTasks + \" with \" + tagString;","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"yucheng11122017"},"content":"     * Returns help message for different command types.","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"yucheng11122017"},"content":"     * @param commandsType the command type which user wants help with.","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"yucheng11122017"},"content":"     * @return help message for command type which user wants.","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"yucheng11122017"},"content":"    public String helpMessage(CommandsTypes commandsType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"yucheng11122017"},"content":"        switch (commandsType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"yucheng11122017"},"content":"        case ADD: {","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"yucheng11122017"},"content":"            return AddCommand.getHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"yucheng11122017"},"content":"        case LIST: {","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"yucheng11122017"},"content":"            return ListCommand.getHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"yucheng11122017"},"content":"        case DELETE: {","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"yucheng11122017"},"content":"            return DeleteCommand.getHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"yucheng11122017"},"content":"        case TAG: {","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"yucheng11122017"},"content":"            return TagCommand.getHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"yucheng11122017"},"content":"        case FIND: {","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"yucheng11122017"},"content":"            return FindCommand.getHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"yucheng11122017"},"content":"        case MARK_DONE: {","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"yucheng11122017"},"content":"            return MarkDoneCommand.getHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"yucheng11122017"},"content":"        case HELP: {","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"yucheng11122017"},"content":"            return HelpCommand.getHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"yucheng11122017"},"content":"        default: {","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"yucheng11122017"},"content":"            assert false : \"Unknown command type for help\";","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"yucheng11122017"},"content":"        return null;","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":152}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":" * A command which aims to add a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    private Task toAddTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    private static final String helpMessage \u003d \"To add an event, type\" + \"\\n\" + Event.syntax","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"            + \"\\nEg.\" + Event.inputExample","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"                + \"\\nTo add an deadline, type\" + \"\\n\" + Deadline.syntax + \"\\nEg.\" + Deadline.inputExample","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"                    + \"\\nTo add an todo, type\" + \"\\n\" + ToDo.syntax + \"\\nEg.\" + ToDo.inputExample;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a AddCommand that adds the task that was inputted.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     * @param toAddTask the task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    public AddCommand(Task toAddTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"        this.toAddTask \u003d toAddTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     * Returns help message for adding.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     * @return help message for adding.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        return helpMessage;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"     * Adds the task to current list of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks current list of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist tasks, Ui ui, FileManager fileManager) {","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"        tasks.add(this.toAddTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        fileManager.updateTaskList(tasks, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"        return ui.taskAdded(this.toAddTask, tasks.getNumTasks());","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"     * Returns if the function is a exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"     * @return false.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of AddCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"     * For testing purposes.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of AddCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"        return toAddTask.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":73}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":" * Class which represents a command to be run by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a command based on input.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"     * @param type command type.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     * @param task the task to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"     * @return the command that is made.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    public static Command makeCommand(CommandsTypes type, Task task) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"        case ADD: {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid command inputted\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a command based on input.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     * @param type command type.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"     * @param index index of command to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"     * @return the command that is made.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"    public static Command makeCommand(CommandsTypes type, int index) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        case DELETE: {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        case MARK_DONE: {","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"            return new MarkDoneCommand(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid command inputted\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a command based on input.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"     * @param type command type.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"     * @return the command that is made.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"    public static Command makeCommand(CommandsTypes type) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"        case EXIT: {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"        case LIST: {","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid command inputted\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a command based on input.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"     * @param type command type.","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"     * @param keywords keywords to be executed on.","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"     * @return the command that is made.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"    public static Command makeCommand(CommandsTypes type, String ...keywords) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"        case FIND: {","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"            return new FindCommand(keywords);","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"        case TAG: {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"            return new TagCommand(keywords);","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid command inputted\");","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks the task to be executed in the command.","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if command has issues.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"yucheng11122017"},"content":"    public abstract String execute(Tasklist tasks, Ui ui, FileManager fileManager) throws DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"yucheng11122017"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":104}},{"path":"src/main/java/duke/command/CommandsTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":" * Enumerates the types of commands that are supported by duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"public enum CommandsTypes {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"    EXIT,","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"    ADD,","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"    DELETE,","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"    MARK_DONE,","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    LIST,","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    FIND,","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    TAG,","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    HELP;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":15}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":" * A command which aims to delete a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    private final int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    public static final String HELP_MESSAGE \u003d \"To delete a task from the list, type \\ndelete {index of task}\\nEg. delete 1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a DeleteCommand that deletes the task that was inputted.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"     * Deletes the task from current list of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if index is out of bounds or if task is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist tasks, Ui ui, FileManager fileManager) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        Task removedTask \u003d tasks.getTask(this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"        tasks.delete(this.index);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        fileManager.updateTaskList(tasks, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        return ui.deleteTask(removedTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"     * Returns if the function is a exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"     * @return false.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":" * A command which exits from Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"     * Instructs Duke to exit.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"     * @param task the task to be executed in the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist task, Ui ui, FileManager fileManager) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"        return ui.sayBye();","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     * Returns if the function is a exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"     * @return true.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":" * Command that finds tasks whose description have keywords.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    private ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    public static final String HELP_MESSAGE \u003d \"To find a task, type \\nfind {name/tag/time of task}\\nEg. find homework\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a FindCommand which prints tasks which contain keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     * @param keywords keyword to find related tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    public FindCommand(String ...keywords) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"        for (String keyword: keywords) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"            this.keywords.add(keyword);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     * Prints tasks that contain keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui UI that interacts with user.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager filemanager to manages storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist tasks, Ui ui, FileManager fileManager) {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"        Tasklist relatedTasks \u003d tasks.findRelated(this.keywords);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        return ui.printRelatedTasks(relatedTasks, this.keywords);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"     * Checks if command is exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"     * @return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yucheng11122017":53}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"    private CommandsTypes commandType;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"     * Makes command for general help.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"        this.commandType \u003d CommandsTypes.HELP;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a help command for the different commands.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * @param commandType type of commmand that help is required.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if invalid command is inputted.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    public HelpCommand(String commandType) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"            case \"add\":","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"                this.commandType \u003d CommandsTypes.ADD;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"                this.commandType \u003d CommandsTypes.DELETE;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"            case \"find\":","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"                this.commandType \u003d CommandsTypes.FIND;","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"            case \"tag\":","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"                this.commandType \u003d CommandsTypes.TAG;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"            case \"done\":","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"                this.commandType \u003d CommandsTypes.MARK_DONE;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"            case \"list\":","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"                this.commandType \u003d CommandsTypes.LIST;","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"                throw new DukeException(\"Invalid command after help. Type help to see which commands can be used\");","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"        return \"To see how to use different commands, type help {command}. Eg.\"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"                + \"\\nhelp add, for help on adding tasks\"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"                + \"\\nhelp find, for help on finding different tasks\"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"                + \"\\nhelp delete, for help on deleting tasks\"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"                + \"\\nhelp done, for help on marking tasks as done\"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"                + \"\\nhelp list, for help on listing the tasks\"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"                + \"\\nhelp tag, for help on tagging tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"     * Returns help for command","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"     * @return Ui\u0027s message showing how the command is used.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist tasks, Ui ui, FileManager fileManager) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"        return ui.helpMessage(this.commandType);","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"     * Returns if command is exit","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"     * @return false","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"yucheng11122017":82}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":" * A command which aims to list the current tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    public static final String HELP_MESSAGE \u003d \"Dude this damn easy. Just type list into the textbook and send\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"     * Returns the help messsage for listing.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"     * @return help message for listing.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     * Lists the current tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks current list of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist tasks, Ui ui, FileManager fileManager) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"        return ui.printList(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"     * Returns if the function is a exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"     * @return false.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        return \"list command\";","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":48}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":" * A command which aims to mark a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    private final int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    public static final String HELP_MESSAGE \u003d \"To mark a task as done, type\\ndone {index of task}\\nEg. done 1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a MarkDoneCommand that marks a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"     * @param index the index of the task to be marked done.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks current list of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist tasks, Ui ui, FileManager fileManager) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"        tasks.markDone(this.index);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"        fileManager.updateTaskList(tasks, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        return ui.showMarkDone(tasks.getTask(this.index));","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"     * Returns if the function is a exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"     * @return false.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yucheng11122017":51}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.FileManager;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"/**Command which tags task*/","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    private ArrayList\u003cInteger\u003e indexes;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    private ArrayList\u003cString\u003e tags;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    public static final String syntax \u003d \"tag {index of task1} {index of task2} {...}| {tag1} {tag2} {...}\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    public static final String inputExample \u003d \"Eg. 1 2 | tag hell pain\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     * Constructor for tag command.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"     * @param keywords tags and indexes for tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"    public TagCommand(String ...keywords) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"        indexes \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"        tags \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"        addKeywordsAndIndexes(keywords);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     * Returns help message for tagging.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"     * @return help message for tagging.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        return \"To tag a task type\\n\" + syntax + \"\\n\" + inputExample;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"    private void addKeywordsAndIndexes(String[] keywords) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"        boolean isTags \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        for (String keyword: keywords) {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"            if (!isTags \u0026\u0026 keyword.equals(\"|\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"                isTags \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"                continue;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"            if (!isTags) {","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"                AddIndex(keyword);","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"                tags.add(keyword);","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"        if (tags.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid input. Please enter a tag after |\");","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"    private void AddIndex(String keyword) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"            int parsedInteger \u003d Integer.parseInt(keyword);","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"            if (parsedInteger \u003c\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"                throw new DukeException(\"Invalid input. Please enter a positive integer for the index\");","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"            indexes.add(parsedInteger);","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid input. Please enter a integer for the index\");","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"     * Tags tasks with tags.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"     * @param ui the ui to interact with the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"     * @param fileManager the filemanger that manages the storage of duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"     * @return Ui\u0027s message indicating tagging is done.","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"    public String execute(Tasklist tasks, Ui ui, FileManager fileManager) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"        Tasklist taggedTasks \u003d tasks.addTags(this.indexes, this.tags);","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"        fileManager.updateTaskList(tasks, ui);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"        return ui.showTagsAdded(taggedTasks, this.tags);","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"     * Returns if this command is exit command.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"     * @return false.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"yucheng11122017":94}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":" * Class that represent a deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    public static final String inputExample \u003d \"deadline return book /by 3/4/2021 400\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    public static final String syntax \u003d \"deadline {description of deadline} /by {dd/MM/yyyy hhmm}\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"    private Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"        this.date \u003d dateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a deadline object.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     * @param input description of deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     * @return deadline object.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"    public static Deadline of(String input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"        String[] eachWord \u003d input.split(\"/by\");","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"        checkForEmptyDescription(eachWord);","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"        String dateDescription \u003d eachWord[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"        String[] dateSplitBySpace \u003d dateDescription.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"        checkForEmptyDate(dateSplitBySpace);","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"        String[] dateArr \u003d dateSplitBySpace[1].split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"            return getDeadline(eachWord[0], dateSplitBySpace[2], dateArr);","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Enter the date for this event in DD/MM/YYYY HHMM format\\nEg.\"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"                    + Deadline.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid date inputed. Please check that the date is correct\\nEg.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"                    + Deadline.inputExample);","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"            assert false : \"Unknown exception being thrown in Deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        assert false : \"Error in of function in Deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"        return null;","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"    private static Deadline getDeadline(String description, String s, String[] dateArr) {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"        int year \u003d Integer.parseInt(dateArr[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"        int month \u003d Integer.parseInt(dateArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"        int date \u003d Integer.parseInt(dateArr[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"        int hour \u003d Integer.parseInt(s.substring(0, s.length() - 2));","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"        int min \u003d Integer.parseInt(s.substring(s.length() - 2));","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(year, month, date, hour, min);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"        return new Deadline(description, dateTime);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"    private static void checkForEmptyDate(String[] dateSplitBySpace) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"        if (dateSplitBySpace.length \u003c 3) {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Enter the date for this event in DD/MM/YYYY HHMM format\\nEg.\"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"                    + Deadline.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"    private static void checkForEmptyDescription(String[] eachWord) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"        if (eachWord.length \u003d\u003d 1 || eachWord[1].length() \u003d\u003d 0 || eachWord[1].equals(\" \")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"The date for this event cannot be empty. Type date after /by\\nEg.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"                    + Deadline.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"        return (\"[D]\" + super.toString() + String.format(\"(by:%s)\", this.date));","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of deadline to be saved in hard disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"     * @return String representation to be saved in hard disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"        String formatDateTime \u003d this.date.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"        return \"deadline\" + Task.SEP + super.toSaveInFile(\"/by \" + formatDateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yucheng11122017":94}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":" * Class that represent a event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    public static final String inputExample \u003d \" event my birtday /at 01/01/2000 1400\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    public static final String syntax \u003d \"event {description of event} /at {dd/MM/yyyy hhmm}\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"    private Event(String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"        this.date \u003d dateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     * @param input description of event.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     * @return event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"    public static Event of(String input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"        String[] eachWord \u003d input.split(\"/at\");","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"        checkForEmptyDescription(eachWord);","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"        checkForEmptyDate(eachWord);","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"        String dateDescription \u003d eachWord[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"        String[] dateSplitBySpace \u003d dateDescription.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"        String[] dateArr \u003d getDateArr(dateSplitBySpace);","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"            return getEvent(eachWord[0], dateSplitBySpace[2], dateArr);","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Enter the date for this event in DD/MM/YYYY HHMM format\\nEg.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"                    + Event.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Invalid date inputed. Please check that the date is correct\\nEg.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"                    + Event.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"    private static String[] getDateArr(String[] dateSplitBySpace) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"        if (dateSplitBySpace.length \u003c 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Enter the date for this event in DD/MM/YYYY HHMM format\\nEg.\"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"                    + Event.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"        String[] dateArr \u003d dateSplitBySpace[1].split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"        if (dateArr.length \u003c 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Enter the date for this event in DD/MM/YYYY HHMM format\\nEg.\"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"                    + Event.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"        return dateArr;","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"    private static Event getEvent(String description, String s, String[] dateArr) {","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"        int year \u003d Integer.parseInt(dateArr[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"        int month \u003d Integer.parseInt(dateArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"        int date \u003d Integer.parseInt(dateArr[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"        int hour \u003d Integer.parseInt(s.substring(0, s.length() - 2));","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"        int min \u003d Integer.parseInt(s.substring(s.length() - 2));","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(year, month, date, hour, min);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"        return new Event(description, dateTime);","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"    private static void checkForEmptyDate(String[] eachWord) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"        if (eachWord.length \u003d\u003d 1 || eachWord[1].length() \u003d\u003d 0 || eachWord[1].equals(\" \")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"The date for this event cannot be empty. Type date after /at\\nEg.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"                    + Event.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"    private static void checkForEmptyDescription(String[] eachWord) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"        if (eachWord.length \u003d\u003d 0 || eachWord[0].length() \u003d\u003d 0 || eachWord[0].equals(\" \")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Description cannot be empty. Type description before /at\\nEg.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"                    + Event.inputExample);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"        return (\"[E]\" + super.toString() + String.format(\"(at:%s)\", this.date));","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of event object to be saved in hard disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of event object to saved in hard disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"yucheng11122017"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"yucheng11122017"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"yucheng11122017"},"content":"        String formatDateTime \u003d this.date.format(formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"yucheng11122017"},"content":"        return \"event\" + Task.SEP + super.toSaveInFile(\"/at \" + formatDateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yucheng11122017":101}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":" * Abstract class that represent task.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    private ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    public static final String SEP \u003d \"4%213\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a task based on the input.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"     * @param type type of command.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"     * @param description description of the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"     * @return task based on input.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"    public static Task makeTask(String type, String description) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"The description cannot be empty\");","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"        switch (type) {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"        case \"todo\": {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"            return (ToDo.of(description));","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"            return (Deadline.of(description));","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"        case \"event\": {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"            return (Event.of(description));","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        default: {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"            throw new DukeException(\"Sorry I don\u0027t understand\");","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"        String doneIndicator \u003d this.isDone","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"                ? \"[X]\"","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"                : \"[ ]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"        String tagsString \u003d this.tags.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"        return (doneIndicator + \" \" + this.description + tagsString);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of the task to be saved in the hard disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"yucheng11122017"},"content":"     * @param time time of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of the task to be saved in the hard disl/","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"yucheng11122017"},"content":"    protected String toSaveInFile(String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"yucheng11122017"},"content":"        String doneString \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"yucheng11122017"},"content":"        String tagString \u003d this.tags.size() \u003d\u003d 0","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"yucheng11122017"},"content":"                ? \"\"","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"yucheng11122017"},"content":"                : this.tags.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"yucheng11122017"},"content":"        return String.format(\"%s%s%s%s%s%s\", this.description, time, Task.SEP, doneString, Task.SEP, this.tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"yucheng11122017"},"content":"     * Adds tags to task","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"yucheng11122017"},"content":"     * @param tags tags to be added to task","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"yucheng11122017"},"content":"    public void addTags(ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"yucheng11122017"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"yucheng11122017"},"content":"    public abstract String typeString();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yucheng11122017":94}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":" * Class that represents todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"    public static final String syntax \u003d \"todo {description of todo}\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"    public static final String inputExample \u003d \"todo get a life\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    private ToDo(String description) {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"     * Makes a todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"     * @param description the description of todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"     * @return a todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    public static ToDo of(String description) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"        return new ToDo(description);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of todo object.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of todo object.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"     * Returns string representation of todo object to be saved in hard disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"     * @return string representation of todo object to saved in hard disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"    public String typeString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"        return \"todo\" + Task.SEP + super.toSaveInFile(\"\");","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yucheng11122017":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"yucheng11122017":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"yucheng11122017":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import duke.command.CommandsTypes;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"import org.junit.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import static junit.framework.TestCase.assertTrue;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"    public void testAddTodo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"            Task newTask \u003d Task.makeTask(\"todo\", \"get a life\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"            Command addCommand \u003d Command.makeCommand(CommandsTypes.ADD, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"            String command \u003d \"todo get a life\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(addCommand.toString().replaceAll(\"\\\\s+\",\"\")","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"                    .equals(parser.parse(command).toString().replaceAll(\"\\\\s+\",\"\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"            System.out.println(\"adding failed. Exception thrown\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"            Task newTask \u003d Task.makeTask(\"deadline\", \"get a life /by 1/1/2021 900\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"            Command addCommand \u003d Command.makeCommand(CommandsTypes.ADD, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"            String command \u003d \"deadline get a life /by 1/1/2021 900\";","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(addCommand.toString().replaceAll(\"\\\\s+\",\"\")","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"                    .equals(parser.parse(command).toString().replaceAll(\"\\\\s+\",\"\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"            System.out.println(\"adding failed. Exception thrown\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"    public void testAddEvent() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"            Task newTask \u003d Task.makeTask(\"event\", \"get a life /at 1/1/2021 900\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"            Command addCommand \u003d Command.makeCommand(CommandsTypes.ADD, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"            String command \u003d \"event get a life /at 1/1/2021 900\";","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(addCommand.toString().replaceAll(\"\\\\s+\",\"\")","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"                    .equals(parser.parse(command).toString().replaceAll(\"\\\\s+\",\"\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"            System.out.println(\"adding failed. Exception thrown\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"yucheng11122017"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"yucheng11122017"},"content":"    public void testList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"yucheng11122017"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"yucheng11122017"},"content":"            Command addCommand \u003d Command.makeCommand(CommandsTypes.LIST);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(addCommand.toString().replaceAll(\"\\\\s+\", \"\")","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"yucheng11122017"},"content":"                    .equals(parser.parse(\"list\").toString().replaceAll(\"\\\\s+\", \"\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"yucheng11122017"},"content":"            System.out.println(\"adding failed. Exception thrown\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yucheng11122017":67}},{"path":"src/test/java/duke/UITester.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"import org.junit.After;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"import static junit.framework.TestCase.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"import static junit.framework.TestCase.assertTrue;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"public class UITester {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"    private final ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"    private final ByteArrayOutputStream err \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yucheng11122017"},"content":"    public void setStreams() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yucheng11122017"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yucheng11122017"},"content":"        System.setErr(new PrintStream(err));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yucheng11122017"},"content":"    @After","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yucheng11122017"},"content":"    public void restoreInitialStreams() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yucheng11122017"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yucheng11122017"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yucheng11122017"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yucheng11122017"},"content":"    public void testBye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yucheng11122017"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yucheng11122017"},"content":"        ui.sayBye();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yucheng11122017"},"content":"        assertEquals(\"Don\u0027twakemeupagain\", out.toString().replaceAll(\"\\\\s+\",\"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yucheng11122017"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yucheng11122017"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yucheng11122017"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yucheng11122017"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yucheng11122017"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yucheng11122017"},"content":"            ui.taskAdded(Task.makeTask(\"todo\", \"get a life\"), 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yucheng11122017"},"content":"            assertEquals(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yucheng11122017"},"content":"                    \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yucheng11122017"},"content":"                    \"     [T][ ] get a life\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yucheng11122017"},"content":"                    \"     Now you have 2 tasks in the list.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yucheng11122017"},"content":"                    \"    ____________________________________________________________\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yucheng11122017"},"content":"                    \"\\n\\n\", out.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yucheng11122017"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yucheng11122017"},"content":"            assertTrue(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"yucheng11122017"},"content":"            System.out.println(\"Error thrown\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yucheng11122017"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"yucheng11122017"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yucheng11122017"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yucheng11122017":54}},{"path":"taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"event4%213 test /at 01/01/2000 09004%21304%213[CS2103, pain]","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"deadline4%213 assignment /by 07/07/2000 09004%21304%213[CS2103]","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"yucheng11122017":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yucheng11122017"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"yucheng11122017"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"yucheng11122017"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"yucheng11122017"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"yucheng11122017"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"yucheng11122017"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yucheng11122017"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yucheng11122017"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"yucheng11122017"},"content":"kjbadkfa asdkjfaksdjfb","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"yucheng11122017"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"yucheng11122017"},"content":"deadline do hw /by","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"yucheng11122017"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"yucheng11122017"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"yucheng11122017"},"content":"event /at","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"yucheng11122017"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"yucheng11122017"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"yucheng11122017"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"yucheng11122017"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"yucheng11122017"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yucheng11122017":19}}]
