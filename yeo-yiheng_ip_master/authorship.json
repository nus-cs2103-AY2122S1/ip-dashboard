[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeo-yiheng":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"    mainClassName \u003d \"src/main/java/duke/Duke.java\"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeo-yiheng":19,"-":38}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates a user dialog based on the input text and image.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"     * @param text text inputted by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"     * @param img image of the user","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"     * @return dialog box that represents the text and image of the user","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates a duke dialog based on the response received by the program.","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"     * @param text text received from program","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"     * @param img image of the duke","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"     * @return dialog box that represents the text and image of the duke","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" * Represents an instance of a duke, which is our program that","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * interacts with users based on the user\u0027s input.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    private static final TaskList TASK \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    private static final Parser PARSER \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     * Loads the file contents into an arraylist.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    public void loadArray() {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"        TASK.loadArrayList();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the response from the program based on the user\u0027s","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"     * input.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input the user input","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"     * @return reponse from the program","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        String response \u003d feedIntoParser(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        return \"Duke: \" + response;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"     * Feeds the user\u0027s input into the parser for processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"     * @param command the user input","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"     * @return response received by the program","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"    private String feedIntoParser(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"        String response \u003d PARSER.parse(command.toLowerCase(Locale.ROOT));","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        return response; // TODO","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"     * A function that does nothing at all.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"    public static void nullFunction() {}","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yeo-yiheng":51,"-":2}},{"path":"src/main/java/duke/DukeLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the launcher class that kickstarts the entire program.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"public class DukeLauncher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"     * The main function to be called that runs the entire program.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"     * @param args args provided during execution","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":18}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     * Loads the GUI of the program.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     * @param stage the primary stage that will have scenes set","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"    private Command command \u003d new Command();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"                DialogBox.getDukeDialog(command.interpretCommand(\"greet\", \"\"), dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"        duke.loadArray();","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":60}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"Add\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final String USAGE \u003d \"add todo \u003cdescription\u003e\\n\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"            + \"add deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e \u003c24h-timing (optional)\u003e\\n\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"            + \"add event \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e \u003c24h-timing (optional)\u003e\\n\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    private final TaskList TASKLIST \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    private String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     * Constructs the instance of an AddCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description description of an AddCommand as inputted by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"            TaskList currentTask \u003d TASKLIST.add(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"            message \u003d (\"Got it. I have added this task:\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"                    + currentTask + \"\\nNow you have \"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"                    + TaskList.listLength()","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"                    + \" tasks in the list.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"            message \u003d e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":45}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException.EmptyKeywordException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the main class that oversees all command operations. Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * respective command execution upon interpretation of command word.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"public class Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MESSAGE \u003d \"Type \\\"help\\\" for the list of instructions!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"     * Interprets the command given by the user. If it is a legitimate command,","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"     * pass in the description into the specific command executor. Else, warn user","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"     * of invalid command.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     * @param command command word given by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description command description given by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     * @return response upon command execution","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    public String interpretCommand(String command, String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        Command matchingCommand \u003d new Command();","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"        switch (command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"        case \"greet\":","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"            matchingCommand \u003d new GreetCommand();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"            matchingCommand \u003d new ExitCommand();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        case \"list\":","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"            matchingCommand \u003d new ListTasksCommand();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"        case \"help\":","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"            matchingCommand \u003d new HelpCommand();","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        case \"add\":","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"            matchingCommand \u003d new AddCommand(\" \" + description);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"        case \"done\":","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"            matchingCommand \u003d new DoneCommand(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"            matchingCommand \u003d new DeleteCommand(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"        case \"find\":","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"            try {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"                matchingCommand \u003d new FindCommand(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"            } catch (EmptyKeywordException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"                return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"        default:","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"            return \"I do not recognize your command. Type \\\"help\\\" for the list of all commands!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"        return matchingCommand.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"        return MESSAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":69}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException.InvalidIntegerException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"Delete\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final String USAGE \u003d \"delete \u003cnumber index\u003e\\n\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"    private final TaskList TASKLIST \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    private String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"     * Constructs the instance of a DeleteCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description description of a DeleteCommand as inputted by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"                int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"                TaskList deletedTask \u003d TaskList.getTask(index);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"                if (deletedTask \u003d\u003d null) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"                    message \u003d new InvalidIntegerException().getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"                } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"                    TASKLIST.delete(index);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"                    message \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"                            + deletedTask + \"\\nNow you have \" + TaskList.listLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"                message \u003d new InvalidIntegerException().getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":48}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException.InvalidIntegerException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"Done\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final String USAGE \u003d \"done \u003cnumber index\u003e\\n\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"    private final TaskList TASKLIST \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    private String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"     * Constructs the instance of a DoneCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description description of an DoneCommand as inputted by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    public DoneCommand(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"            int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"            if (TASKLIST.markDone(index)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"                message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + TaskList.getTask(index);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"                message \u003d new InvalidIntegerException().getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"            message \u003d new InvalidIntegerException().getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":44}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"Exit\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final String USAGE \u003d \"bye\\n\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"    private static final String MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"        return MESSAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":22}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException.EmptyKeywordException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"Find\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final String USAGE \u003d \"find \u003ckeyword\u003e\\n\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    private String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     * Constructs the instance of a FindCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description description of a FindCommand as inputted by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public FindCommand(String description) throws EmptyKeywordException {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"            throw new EmptyKeywordException();","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"        ArrayList\u003cTaskList\u003e taskListArrayList \u003d TaskList.findMatching(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        for (TaskList t : taskListArrayList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"            stringBuilder.append(index).append(\". \").append(t).append(\"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"            index++;","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        message \u003d \"\\nHere are the tasks matching \\\"\"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"                + description","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"                + \"\\\" in your list:\\n--------------------\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"                + stringBuilder;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":49}},{"path":"src/main/java/duke/commands/GreetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"Greet\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"public class GreetCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"    private static final String MESSAGE \u003d \"Hello! I\u0027m Duke. What can I do for you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"        return MESSAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":21}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"Help\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MESSAGE \u003d \"List of available commands:\\n\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"            + AddCommand.USAGE","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"            + DeleteCommand.USAGE","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"            + DoneCommand.USAGE","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"            + ExitCommand.USAGE","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"            + FindCommand.USAGE","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"            + ListTasksCommand.USAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        return MESSAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":27}},{"path":"src/main/java/duke/commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the class that executes the command \"List\". Responsible for the","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * usage representation as well as message upon successful execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final String USAGE \u003d \"list\\n\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    private final String MESSAGE_HEADER \u003d \"\\nHere are the tasks in your list:\\n--------------------\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"    private String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"     * Constructs the instance of a ListTaskCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    public ListTasksCommand() {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"        message \u003d TaskList.displayList();","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the message stored after execution.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"     * @return message stored after execution","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        return MESSAGE_HEADER + message;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":32}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the main class that contains all the possible exceptions","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":" * thrown by Duke whenever the user interacts with the program","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":" * illegally.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"     * Constructs an instance of a general Duke Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"     * @param message error message upon exception thrown","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     * Represents the class of exception that is thrown whenever","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"     * a user fails to input the timeline of a deadline / event","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"     * task.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"    public static class EmptyTimelineDescription extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"         * Constructs an instance of an Empty Timeline Duke Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"         * @param message error message upon exception thrown","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        public EmptyTimelineDescription(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"            super(\"The timeline of a \" + message + \" cannot be empty!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"         * Returns the string representation of the particular exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"         * @return String representation of the particular exception","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"        public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"            return super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"     * Represents the class of exception that is thrown whenever","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"     * a user fails to input the description of a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"    public static class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"         * Constructs an instance of an empty description Duke Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"        public EmptyDescriptionException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"            super(\"The description cannot be empty!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"         * Returns the string representation of the particular exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"         * @return String representation of the particular exception","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"        public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"            return super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"     * Represents the class of exception that is thrown whenever","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"     * a user fails to input the keyword of a find command.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"    public static class EmptyKeywordException extends DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"         * Constructs an instance of an empty keyword Duke Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"        public EmptyKeywordException() {","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"yeo-yiheng"},"content":"            super(\"Please provide a keyword!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"         * Returns the string representation of the particular exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"         * @return String representation of the particular exception","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"        @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"        public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"yeo-yiheng"},"content":"            return super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"yeo-yiheng"},"content":"     * Represents the class of exception that is thrown whenever","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"yeo-yiheng"},"content":"     * a user inputs an invalid command.","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"    public static class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"yeo-yiheng"},"content":"         * Constructs an instance of an invalid command Duke Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"yeo-yiheng"},"content":"         * @param message error message upon exception thrown","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"        public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"yeo-yiheng"},"content":"            super(\"I do not recognize your command! Try another command!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"yeo-yiheng"},"content":"         * Returns the string representation of the particular exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"yeo-yiheng"},"content":"         * @return String representation of the particular exception","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"        @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"        public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"            return super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"yeo-yiheng"},"content":"     * Represents the class of exception that is thrown whenever","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"yeo-yiheng"},"content":"     * a user inputs an invalid integer.","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"yeo-yiheng"},"content":"    public static class InvalidIntegerException extends DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"yeo-yiheng"},"content":"         * Constructs an instance of an invalid integer Duke Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"yeo-yiheng"},"content":"        public InvalidIntegerException() {","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"yeo-yiheng"},"content":"            super(\"Please input a valid integer!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"yeo-yiheng"},"content":"         * Returns the string representation of the particular exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"yeo-yiheng"},"content":"         * @return String representation of the particular exception","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"yeo-yiheng"},"content":"        @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"yeo-yiheng"},"content":"        public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"yeo-yiheng"},"content":"            return super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"yeo-yiheng"},"content":"     * Represents the class of exception that is thrown whenever","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"yeo-yiheng"},"content":"     * the specified file is not found.","lastModifiedDate":"2021-09-02"},{"lineNumber":149,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"yeo-yiheng"},"content":"    public static class FileNotFoundException extends DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":152,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":153,"author":{"gitId":"yeo-yiheng"},"content":"         * Constructs an instance of a file not found exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":154,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":155,"author":{"gitId":"yeo-yiheng"},"content":"        public FileNotFoundException() {","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"yeo-yiheng"},"content":"            super(\"File is not found, are you sure it the file exists?\");","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"yeo-yiheng"},"content":"        /**","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"yeo-yiheng"},"content":"         * Returns the string representation of the particular exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":161,"author":{"gitId":"yeo-yiheng"},"content":"         *","lastModifiedDate":"2021-09-02"},{"lineNumber":162,"author":{"gitId":"yeo-yiheng"},"content":"         * @return String representation of the particular exception","lastModifiedDate":"2021-09-02"},{"lineNumber":163,"author":{"gitId":"yeo-yiheng"},"content":"         */","lastModifiedDate":"2021-09-02"},{"lineNumber":164,"author":{"gitId":"yeo-yiheng"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"yeo-yiheng"},"content":"        public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"yeo-yiheng"},"content":"            return super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns the string representation of the general exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":172,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":173,"author":{"gitId":"yeo-yiheng"},"content":"     * @return String representation of the general exception","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":175,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"yeo-yiheng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"yeo-yiheng"},"content":"        return \"Duke is confused! Duke says that \" + getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"yeo-yiheng":179}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":" * This class is responsible for the parsing of all user inputs, as well as file","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" * contents back into tasks during the initial loading of file.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    private static final String[] months \u003d new String[] { \"JANUARY\", \"FEBRUARY\", \"MARCH\",","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"        \"APRIL\", \"MAY\", \"JUNE\", \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\",","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"        \"DECEMBER\" };","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    private static final int OFFSET \u003d 7;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"     * A default constructor for the Parser class.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    public Parser() {}","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    private final Command mainCommand \u003d new Command();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"     * Detects what the user wants. It allows the program to","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"     * respond based on the first input word by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"     * @param command the input provided by the user through the command line","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"    public String parse(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"        String[] singleCommandCheck \u003d command.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        if (singleCommandCheck.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"            return mainCommand.interpretCommand(singleCommandCheck[0], \"\");","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"        String[] commandWords \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"        String keyword \u003d commandWords[0];","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        String description \u003d commandWords[1];","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"        return mainCommand.interpretCommand(keyword, description);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"     * Detects the format of a yyyy-mm-dd date in a sentence","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"     * and extracts it out for use.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input the input string that is typically the timeline given by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"     * @return LocalDate which represents the date in a more readable format","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"    public static LocalDate findDate(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"        String regex \u003d \"(\\\\d{4}-\\\\d{2}-\\\\d{2})\"; // Regex to find date of the form yyyy-mm-dd","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        Matcher m \u003d Pattern.compile(regex).matcher(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"        if (m.find()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"            return LocalDate.parse(m.group(1));","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"     * Detects the format of a 4 integer timing in a sentence","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"     * and extracts it out for use.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input the input string that is typically the timeline given by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"     * @return the timing inputted by the user in String format","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"    public static String findTime(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"        int index \u003d input.length() - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"            sb.append(input.charAt(index));","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"            index--;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"        sb.reverse();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"        String regex \u003d \"^\\\\d{4}$\";","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"yeo-yiheng"},"content":"        Matcher m \u003d Pattern.compile(regex).matcher(sb.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"yeo-yiheng"},"content":"        if (m.find()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"yeo-yiheng"},"content":"            return sb.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"     * Detects the format of a 4 integer to 4 integer","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"yeo-yiheng"},"content":"     * range timing in a sentence.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input the input string that is typically the timeline given by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"yeo-yiheng"},"content":"     * @return the time range inputted by the user, contained in a size 2 array","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"yeo-yiheng"},"content":"    public static String[] findTimeRange(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"yeo-yiheng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"        int index \u003d input.length() - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"        for (int i \u003d 0; i \u003c 9; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"            sb.append(input.charAt(index));","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"            index--;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"yeo-yiheng"},"content":"        sb.reverse();","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"yeo-yiheng"},"content":"        String regex \u003d \"^\\\\d{4}-\\\\d{4}$\";","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"        Matcher m \u003d Pattern.compile(regex).matcher(sb.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"        if (m.find()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"yeo-yiheng"},"content":"            return sb.toString().split(\"-\");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"yeo-yiheng"},"content":"            return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"     * Converts the String input 24-hour time format","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"     * into a 12-hour format with A.M. and P.M.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input 24-hour time format","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"yeo-yiheng"},"content":"     * @return 12-hour time format","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"yeo-yiheng"},"content":"    public static String convertTime(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"yeo-yiheng"},"content":"        double time \u003d Double.parseDouble(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"yeo-yiheng"},"content":"        String postfix;","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"yeo-yiheng"},"content":"        String prefix;","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"yeo-yiheng"},"content":"        time \u003d time % 2400;","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"yeo-yiheng"},"content":"        if (time \u003c 1300) {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"yeo-yiheng"},"content":"            postfix \u003d time \u003e\u003d 1200","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"yeo-yiheng"},"content":"                    ? \"PM\"","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"yeo-yiheng"},"content":"                    : \"AM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"yeo-yiheng"},"content":"            time \u003d time / 100.0;","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"yeo-yiheng"},"content":"            postfix \u003d \"PM\";","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"yeo-yiheng"},"content":"            time \u003d (time - 1200.0) / 100.0;","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"yeo-yiheng"},"content":"        prefix \u003d String.format(\"%.2f\", time);","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"yeo-yiheng"},"content":"        return prefix + \" \" + postfix;","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"yeo-yiheng"},"content":"     * Assigns the reference variables of LocalDate and String to its respective","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"yeo-yiheng"},"content":"     * values based on the input from the file storage. This method is specific","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"yeo-yiheng"},"content":"     * to parsing Deadline tasks from the file storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input the timing description originally provided by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"yeo-yiheng"},"content":"     * @param ld LocalDate reference variable that the method is to assign","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"yeo-yiheng"},"content":"     * @param deadlineTiming String reference variable that the method is to assign","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"yeo-yiheng"},"content":"    public static void parseDeadlineTime(String input, LocalDate ld, String deadlineTiming) {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"yeo-yiheng"},"content":"        String[] parsedTime \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"yeo-yiheng"},"content":"            String timeFormat \u003d parsedTime[2] + \"-\"","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"yeo-yiheng"},"content":"                    + Parser.matchMonth(parsedTime[1]) + \"-\"","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"yeo-yiheng"},"content":"                    + (parsedTime[0].length() \u003d\u003d 1 ? \"0\" + parsedTime[0] : parsedTime[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"yeo-yiheng"},"content":"            if (parsedTime.length \u003e 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"yeo-yiheng"},"content":"                double timing \u003d Double.parseDouble(parsedTime[3]) * 100","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"yeo-yiheng"},"content":"                        + (parsedTime[4].equals(\"PM\") ? 1200 : 0);","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"yeo-yiheng"},"content":"                int flattenedTiming \u003d (int) timing;","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"yeo-yiheng"},"content":"                deadlineTiming \u003d Integer.toString(flattenedTiming);","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"yeo-yiheng"},"content":"            ld \u003d LocalDate.parse(timeFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"yeo-yiheng"},"content":"            Duke.nullFunction();","lastModifiedDate":"2021-09-02"},{"lineNumber":163,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"yeo-yiheng"},"content":"     * Assigns the reference variables of LocalDate and 2 Strings to its respective","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"yeo-yiheng"},"content":"     * values based on the input from the file storage. This method is specific","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"yeo-yiheng"},"content":"     * to parsing Event tasks from the file storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input the timing description originally provided by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"yeo-yiheng"},"content":"     * @param ld LocalDate reference variable that the method is to assign","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"yeo-yiheng"},"content":"     * @param startTime String reference variable that the method is to assign","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"yeo-yiheng"},"content":"     * @param endTime String reference variable that the method is to assign","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"yeo-yiheng"},"content":"    public static void parseEventTime(String input, LocalDate ld, String startTime, String endTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"yeo-yiheng"},"content":"        String[] parsedTime \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"yeo-yiheng"},"content":"            String timeFormat \u003d parsedTime[2] + \"-\"","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"yeo-yiheng"},"content":"                    + Parser.matchMonth(parsedTime[1]) + \"-\"","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"yeo-yiheng"},"content":"                    + (parsedTime[0].length() \u003d\u003d 1 ? \"0\" + parsedTime[0] : parsedTime[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"yeo-yiheng"},"content":"            if (parsedTime.length \u003e 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"yeo-yiheng"},"content":"                double timingStart \u003d Double.parseDouble(parsedTime[3]) * 100","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"yeo-yiheng"},"content":"                        + (parsedTime[4].equals(\"PM\") ? 1200 : 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"yeo-yiheng"},"content":"                double timingEnd \u003d Double.parseDouble(parsedTime[6]) * 100","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"yeo-yiheng"},"content":"                        + (parsedTime[7].equals(\"PM\") ? 1200 : 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"yeo-yiheng"},"content":"                int flattenedTimingStart \u003d (int) timingStart;","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"yeo-yiheng"},"content":"                int flattenedTimingEnd \u003d (int) timingEnd;","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"yeo-yiheng"},"content":"                startTime \u003d Integer.toString(flattenedTimingStart);","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"yeo-yiheng"},"content":"                endTime \u003d Integer.toString(flattenedTimingEnd);","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"yeo-yiheng"},"content":"            ld \u003d LocalDate.parse(timeFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"yeo-yiheng"},"content":"            Duke.nullFunction();","lastModifiedDate":"2021-09-02"},{"lineNumber":195,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"yeo-yiheng"},"content":"     * Matches the input month in String to its month in numbers.","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"yeo-yiheng"},"content":"     * @param month String month such as May","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"yeo-yiheng"},"content":"     * @return month in numbers, in String format, such as 05","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"yeo-yiheng"},"content":"    private static String matchMonth(String month) {","lastModifiedDate":"2021-08-23"},{"lineNumber":205,"author":{"gitId":"yeo-yiheng"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"yeo-yiheng"},"content":"        for (int i \u003d 0; i \u003c months.length; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":207,"author":{"gitId":"yeo-yiheng"},"content":"            if (month.equals(months[i])) {","lastModifiedDate":"2021-08-23"},{"lineNumber":208,"author":{"gitId":"yeo-yiheng"},"content":"                index \u003d i + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":209,"author":{"gitId":"yeo-yiheng"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":210,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":211,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":212,"author":{"gitId":"yeo-yiheng"},"content":"        return index \u003c 10","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"yeo-yiheng"},"content":"                ? \"0\" + index","lastModifiedDate":"2021-08-23"},{"lineNumber":214,"author":{"gitId":"yeo-yiheng"},"content":"                : Integer.toString(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":215,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":216,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":217,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"yeo-yiheng"},"content":"     * Parses the contents from the file storage during the","lastModifiedDate":"2021-09-02"},{"lineNumber":219,"author":{"gitId":"yeo-yiheng"},"content":"     * initial execution of the program. Breaks down the","lastModifiedDate":"2021-09-02"},{"lineNumber":220,"author":{"gitId":"yeo-yiheng"},"content":"     * information to be provided to the task class to create","lastModifiedDate":"2021-09-02"},{"lineNumber":221,"author":{"gitId":"yeo-yiheng"},"content":"     * the respective tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":222,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"yeo-yiheng"},"content":"     * @param line a line of content from the storage file","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"yeo-yiheng"},"content":"     * @return a task which is created in the task class based on the given parameters","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"yeo-yiheng"},"content":"    public static TaskList parseFromFile(String line) {","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"yeo-yiheng"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":228,"author":{"gitId":"yeo-yiheng"},"content":"        char taskChar \u003d line.charAt(1);","lastModifiedDate":"2021-08-23"},{"lineNumber":229,"author":{"gitId":"yeo-yiheng"},"content":"        char taskStatus \u003d line.charAt(4);","lastModifiedDate":"2021-08-23"},{"lineNumber":230,"author":{"gitId":"yeo-yiheng"},"content":"        String description \u003d line.substring(7);","lastModifiedDate":"2021-08-23"},{"lineNumber":231,"author":{"gitId":"yeo-yiheng"},"content":"        if (taskChar \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":232,"author":{"gitId":"yeo-yiheng"},"content":"            return task.addExisting(taskChar, taskStatus, description, null);","lastModifiedDate":"2021-08-23"},{"lineNumber":233,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":234,"author":{"gitId":"yeo-yiheng"},"content":"            int lastIndex \u003d line.length() - 2;","lastModifiedDate":"2021-08-23"},{"lineNumber":235,"author":{"gitId":"yeo-yiheng"},"content":"            int startIndex \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":236,"author":{"gitId":"yeo-yiheng"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":237,"author":{"gitId":"yeo-yiheng"},"content":"            if (line.charAt(lastIndex + 1) \u003d\u003d \u0027)\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":238,"author":{"gitId":"yeo-yiheng"},"content":"                for (int i \u003d lastIndex; i \u003e 0; i--) {","lastModifiedDate":"2021-08-23"},{"lineNumber":239,"author":{"gitId":"yeo-yiheng"},"content":"                    if (line.charAt(i) \u003d\u003d \u0027(\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":240,"author":{"gitId":"yeo-yiheng"},"content":"                        startIndex \u003d i - OFFSET; // Offset characteristics","lastModifiedDate":"2021-08-23"},{"lineNumber":241,"author":{"gitId":"yeo-yiheng"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":242,"author":{"gitId":"yeo-yiheng"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":243,"author":{"gitId":"yeo-yiheng"},"content":"                    stringBuilder.append(line.charAt(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":244,"author":{"gitId":"yeo-yiheng"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":245,"author":{"gitId":"yeo-yiheng"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":246,"author":{"gitId":"yeo-yiheng"},"content":"                for (int i \u003d lastIndex + 1; i \u003e 0; i--) {","lastModifiedDate":"2021-08-23"},{"lineNumber":247,"author":{"gitId":"yeo-yiheng"},"content":"                    if (line.charAt(i) \u003d\u003d \u0027(\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":248,"author":{"gitId":"yeo-yiheng"},"content":"                        startIndex \u003d i - OFFSET;","lastModifiedDate":"2021-08-23"},{"lineNumber":249,"author":{"gitId":"yeo-yiheng"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":250,"author":{"gitId":"yeo-yiheng"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":251,"author":{"gitId":"yeo-yiheng"},"content":"                    stringBuilder.append(line.charAt(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":252,"author":{"gitId":"yeo-yiheng"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":253,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":254,"author":{"gitId":"yeo-yiheng"},"content":"            stringBuilder.reverse();","lastModifiedDate":"2021-08-23"},{"lineNumber":255,"author":{"gitId":"yeo-yiheng"},"content":"            return task.addExisting(taskChar, taskStatus, description.substring(0, startIndex),","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"yeo-yiheng"},"content":"                    stringBuilder.toString().trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":257,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":258,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":259,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":259}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":" * This class represents the storage of the task list and handles all the","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":" * interaction between the user and the file contents.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    private final File file;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates an instance of the Storage class.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"     * @param path the input path where the file is to be found / created","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        filePath \u003d path;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"     * Prints the content of the task file. Prints a notification to alert the user if the","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"     * file is empty or a warning if the file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"    public String printTaskFile() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"            boolean isEmpty \u003d !sc.hasNext();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"            String listContents \u003d \"Oh no! Your list is empty!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"                sb.append(index).append(\". \").append(sc.nextLine()).append(\"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"                index++;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"            if (!isEmpty) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"                listContents \u003d sb.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"            return listContents;","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"     * Saves the input task into the txt file that is found in the path specified.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"     * @param task the task to be saved into the txt file","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"     * @throws IOException if file is not found in the path specified","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"    public void saveTask(TaskList task) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"        fileWriter.write(task.toString() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"     * Overwrites the entire file with all the tasks in the given array list.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"     * @param taskArrayList the input array list containing all the tasks to be written","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"     *                      into the file","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"    public void overwriteList(ArrayList\u003cTaskList\u003e taskArrayList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"yeo-yiheng"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"yeo-yiheng"},"content":"            for (TaskList t : taskArrayList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"yeo-yiheng"},"content":"                fileWriter.write(t.toString() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"//            USER_INTERFACE.generalErrorWarning(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"     * Loads the contents of the file into the local array list. Prints","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yeo-yiheng"},"content":"     * a warning if the file is not found in the specified path.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yeo-yiheng"},"content":"    public void loadFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"yeo-yiheng"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"                Parser.parseFromFile(line);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"yeo-yiheng"},"content":"            e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":107}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException.FileNotFoundException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * Represents a possible type of task in our task list, known as a Deadline. This task has","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" * additional information that supports adding deadlines in terms of dates and 24 hour time.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"public class Deadline extends TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    private final String time;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    private String deadLineTiming;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates an instance of a Deadline class, a subclass of our task list class.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description the description of our task to be logged","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"     * @param time the time description of our task which contains the deadline of this task","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"     * @param isExisting the boolean that distinguishes between an existing task loaded from","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"     *                   the task file or a newly added task during program execution","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    public Deadline(String description, String time, boolean isExisting) throws FileNotFoundException {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"        System.out.println(description + \" TIME: \" + time);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        if (!isExisting) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"            localDate \u003d Parser.findDate(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"            deadLineTiming \u003d Parser.findTime(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"            if (deadLineTiming !\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"                deadLineTiming \u003d Parser.convertTime(deadLineTiming);","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"                FILE.saveTask(this); // Saves task to hard disk","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"                throw new FileNotFoundException();","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"            Parser.parseDeadlineTime(time, localDate, deadLineTiming);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns the String representation of a deadline task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"     * @return the String representation of a deadline task class","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"        String status \u003d this.getStatusIcon();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"        if (localDate \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"            return \"[D]\" + \"[\" + status + \"] \" + this.description + \"(\" + time + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"            String endTime \u003d deadLineTiming \u003d\u003d null ? \"\" : \" \" + deadLineTiming;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"            return \"[D]\" + \"[\" + status + \"] \" + this.description","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"(\" + localDate.getDayOfMonth() + \" \" + localDate.getMonth()","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"                    + \" \" + localDate.getYear() + endTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":66}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException.FileNotFoundException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * Represents a possible type of task in our task list, known as an Event. This task has","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" * additional information that supports adding deadlines in terms of dates and a specific","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":" * 24-hour time range.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"public class Event extends TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    private final String time;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    private String[] timeRange;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    private String startTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    private String endTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates an instance of an Event class, a subclass of our task list class.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description the description of our task to be logged","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"     * @param time the time description of our task which contains the deadline and time range","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"     *             of this task","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"     * @param isExisting the boolean that distinguishes between an existing task loaded from","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"     *                   the task file or a newly added task during program execution","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"    public Event(String description, String time, boolean isExisting) throws FileNotFoundException {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        if (!isExisting) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"            localDate \u003d Parser.findDate(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"            timeRange \u003d Parser.findTimeRange(time);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"            if (timeRange !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"                startTime \u003d Parser.convertTime(timeRange[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"                endTime \u003d Parser.convertTime(timeRange[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"                FILE.saveTask(this); // Saves task to hard disk","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"                throw new FileNotFoundException();","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"            Parser.parseEventTime(time, localDate, startTime, endTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns the String representation of an Event task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"     * @return the String representation of an Event task class","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        String status \u003d this.getStatusIcon();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"        if (localDate \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"            return \"[E]\" + \"[\" + status + \"] \" + this.description","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"(\" + time + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"            String timeRange \u003d startTime \u003d\u003d null ? \"\" : \" \" + startTime + \" - \" + endTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"            return \"[E]\" + \"[\" + status + \"] \" + this.description","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"(\" + localDate.getDayOfMonth() + \" \" + localDate.getMonth()","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"                    + \" \" + localDate.getYear() + timeRange + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":70}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * Represents the central task class that implements all operations on a task. This","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" * class is responsible for the behaviour of all its subclasses; Todo, Event and Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    protected String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final Storage FILE \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final ArrayList\u003cTaskList\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    protected static final Command USER_INTERFACE \u003d new Command();","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates an instance of a TaskList class. This is the parent task class which","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"     * supports and implements the behavior of its subclasses.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description the description of our task to be logged","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    protected TaskList(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"        TASKS.add(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"     * An empty and default TaskList constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"    public TaskList() {}","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"     * Sets the status of a task to be done, i.e., isDone \u003d true.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"    private void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        FILE.overwriteList(TASKS);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"     * Sets the task with input index as done. This causes the","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"     * method call of setDone on that particular instance of task. Thereafter,","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"     * a file overwrite is called to update the file contents. This method","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"     * similarly checks if the input index is valid. If it isn\u0027t valid, a warning","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"     * will be printed by our User Interface class.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"     * @param index the index of the task on the task list to be marked done","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"     * @return true if task is successfully marked done; false otherwise","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"    public boolean markDone(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        if (index \u003c 0 || index \u003e\u003d TASKS.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"            TASKS.get(index).setDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"     * Removes the task at the specified index on the task list. Thereafter,","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"     * a file overwrite is called to update the file contents.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"     * @param index the index of the task on the task list to be deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"        TASKS.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"        FILE.overwriteList(TASKS);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"     * Distinguishes the type of task to be created as inputted by the user. If","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"     * it is none of the 3 subclass tasks, a custom DukeException is thrown to","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"     * warn the users that the input is unrecognized. Once recognized, if the","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"yeo-yiheng"},"content":"     * description of the task is empty, a custom DukeException is thrown to warn","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"yeo-yiheng"},"content":"     * the users that the input lacks a description. Additionally, the timeline of","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"yeo-yiheng"},"content":"     * the Deadline and Event subclasses cannot be empty or another custom DukeException","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"     * is thrown to warn users that the input lacks a timeline.","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input the user input from the command line","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"    public TaskList add(String input) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"        input \u003d input.trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"        String emptyTimelineError \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"yeo-yiheng"},"content":"        String[] splitTask \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"        boolean emptyDescription \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"yeo-yiheng"},"content":"        switch (splitTask[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"yeo-yiheng"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"yeo-yiheng"},"content":"            if (splitTask.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"yeo-yiheng"},"content":"                emptyDescription \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"            return new Todo(splitTask[1], false);","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"yeo-yiheng"},"content":"            if (splitTask.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"yeo-yiheng"},"content":"                emptyDescription \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"yeo-yiheng"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"yeo-yiheng"},"content":"            String[] splitTime \u003d splitTask[1].split(\"/\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"yeo-yiheng"},"content":"            if (splitTime.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"yeo-yiheng"},"content":"                emptyTimelineError \u003d \"deadline\";","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"yeo-yiheng"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"yeo-yiheng"},"content":"            return new Deadline(splitTime[0], splitTime[1], false);","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"            if (splitTask.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"                emptyDescription \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"yeo-yiheng"},"content":"            String[] splitTimeEvent \u003d splitTask[1].split(\"/\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"yeo-yiheng"},"content":"            if (splitTimeEvent.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"yeo-yiheng"},"content":"                emptyTimelineError \u003d \"event\";","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"yeo-yiheng"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"yeo-yiheng"},"content":"            return new Event(splitTimeEvent[0], splitTimeEvent[1], false);","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"yeo-yiheng"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"yeo-yiheng"},"content":"            throw new DukeException.InvalidCommandException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"yeo-yiheng"},"content":"        if (emptyDescription) {","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"yeo-yiheng"},"content":"            throw new DukeException.EmptyDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"yeo-yiheng"},"content":"            throw new DukeException.EmptyTimelineDescription(emptyTimelineError);","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"yeo-yiheng"},"content":"     * Responsible for creating the task based on the file storage contents. This","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"yeo-yiheng"},"content":"     * method differs from the original add method as it does not go through any checks and parsing","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"yeo-yiheng"},"content":"     * is already done.","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"yeo-yiheng"},"content":"     * @param taskChar the identifier for the type of task class to be created","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"yeo-yiheng"},"content":"     * @param taskStatus the identifier for the status of task class to be created","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"yeo-yiheng"},"content":"     * @param timeline the timeline of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"yeo-yiheng"},"content":"     * @return the new task created based on the given parameters","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"yeo-yiheng"},"content":"    public TaskList addExisting(char taskChar, char taskStatus, String description, String timeline) {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"yeo-yiheng"},"content":"        TaskList currentTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"yeo-yiheng"},"content":"        if (taskChar \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"yeo-yiheng"},"content":"            currentTask \u003d new Todo(description, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"yeo-yiheng"},"content":"        } else if (taskChar \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"yeo-yiheng"},"content":"            currentTask \u003d new Deadline(description, timeline, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"yeo-yiheng"},"content":"            currentTask \u003d new Event(description, timeline, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"yeo-yiheng"},"content":"        if (taskStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"yeo-yiheng"},"content":"            currentTask.setDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"yeo-yiheng"},"content":"        return currentTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"yeo-yiheng"},"content":"     * In-charge of loading the contents of the file storage into the temporary","lastModifiedDate":"2021-09-02"},{"lineNumber":169,"author":{"gitId":"yeo-yiheng"},"content":"     * arraylist that holds the tasks in order. This ensures that the user is always interacting","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"yeo-yiheng"},"content":"     * with the contents of the storage file at the start.","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"yeo-yiheng"},"content":"    public void loadArrayList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"yeo-yiheng"},"content":"        FILE.loadFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"yeo-yiheng"},"content":"        FILE.overwriteList(TASKS);","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"yeo-yiheng"},"content":"     * Retrieves the task based on the index in the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":179,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"yeo-yiheng"},"content":"     * @param index the index of the task in the task list to be retrieved","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"yeo-yiheng"},"content":"     * @return the specified task retrieved from the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"yeo-yiheng"},"content":"    public static TaskList getTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"yeo-yiheng"},"content":"        if (index \u003c 0 || index \u003e\u003d TASKS.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"yeo-yiheng"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"yeo-yiheng"},"content":"            return TASKS.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"yeo-yiheng"},"content":"     * Finds the tasks that matches the input keyword and subsequently","lastModifiedDate":"2021-09-02"},{"lineNumber":193,"author":{"gitId":"yeo-yiheng"},"content":"     * returns a collection of all tasks that matches the keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"yeo-yiheng"},"content":"     * @param searchWord the provided keyword to match to the tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"yeo-yiheng"},"content":"     * @return a collection of all tasks that matches the keyword","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"yeo-yiheng"},"content":"    public static ArrayList\u003cTaskList\u003e findMatching(String searchWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"yeo-yiheng"},"content":"        ArrayList\u003cTaskList\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"yeo-yiheng"},"content":"        for (TaskList t : TASKS) {","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"yeo-yiheng"},"content":"            String description \u003d t.getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"yeo-yiheng"},"content":"            if (description.contains(searchWord)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"yeo-yiheng"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"yeo-yiheng"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"yeo-yiheng"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"yeo-yiheng"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns the status icon of the task, depending on whether it is marked","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"yeo-yiheng"},"content":"     * done or not. Done is denoted by X, and whitespace otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"yeo-yiheng"},"content":"     * @return a String representing whether the task is done, where X denotes done and whitespace","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"yeo-yiheng"},"content":"     * denotes otherwise","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"yeo-yiheng"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":221,"author":{"gitId":"yeo-yiheng"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":222,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":223,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":224,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns the length of the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"yeo-yiheng"},"content":"     * @return length of task list","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"yeo-yiheng"},"content":"    public static int listLength() {","lastModifiedDate":"2021-08-23"},{"lineNumber":230,"author":{"gitId":"yeo-yiheng"},"content":"        return TASKS.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":232,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":233,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":234,"author":{"gitId":"yeo-yiheng"},"content":"     * Prints the contents of the task list onto the command line.","lastModifiedDate":"2021-08-24"},{"lineNumber":235,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":236,"author":{"gitId":"yeo-yiheng"},"content":"    public static String displayList() {","lastModifiedDate":"2021-09-02"},{"lineNumber":237,"author":{"gitId":"yeo-yiheng"},"content":"        return FILE.printTaskFile();","lastModifiedDate":"2021-09-02"},{"lineNumber":238,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":239,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":239}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.exception.DukeException.FileNotFoundException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" * Represents a possible type of task in our task list, known as a Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":" * This task is the most basic, with no added functionality to support deadline and","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":" * timing.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":" * @author yeo-yiheng","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"public class Todo extends TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"     * Creates an instance of a Todo class, a subclass of our task list class.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     * @param description the description of our task to be logged","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     * @param isExisting the boolean that distinguishes between an existing task loaded from","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"     *                   the task file or a newly added task during program execution","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public Todo(String description, boolean isExisting) throws FileNotFoundException {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        if (!isExisting) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"                FILE.saveTask(this); // Saves task to hard disk","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"                throw new FileNotFoundException();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns the String representation of a Todo task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"     * @return the String representation of a Todo task class","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yeo-yiheng":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    public void findDateRegex_date_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"        String date \u003d \"fluff fluff 2021-08-23 fluff\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"        LocalDate localDate \u003d Parser.findDate(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"        LocalDate expected \u003d LocalDate.parse(\"2021-08-23\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expected, localDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public void findDateRegex_date_fail() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"        String date \u003d \"fluff fluff no dates here fluff\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        LocalDate localDate \u003d Parser.findDate(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"        assertNull(localDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"    public void findTimeRegex_time_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        String time \u003d \"fluff fluff 1900\";","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"        String actual \u003d Parser.findTime(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(\"1900\", actual);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"    public void findTimeRegex_time_fail() {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"        String time \u003d \"fluff fluff no time here\";","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        String actual \u003d Parser.findTime(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"        assertNull(actual);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"    public void convertTimeAm_time24h_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        String time \u003d \"1000\";","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"        String actual \u003d Parser.convertTime(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(\"10.00 AM\", actual);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"    public void convertTimePm_time24h_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"        String time \u003d \"2130\";","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"        String actual \u003d Parser.convertTime(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(\"9.30 PM\", actual);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"    public void parseLineTodo_todo_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        String line \u003d \"[T][ ] test sentence\";","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"        Todo actual \u003d (Todo) Parser.parseFromFile(line);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(line, actual.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"    public void parseLineDeadline_deadline_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"        String line \u003d \"[D][ ] test sentence(23 AUGUST 2021 10.30 PM)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"        Deadline actual \u003d (Deadline) Parser.parseFromFile(line);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(line, actual.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"    public void parseLineEvent_event_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"        String line \u003d \"[E][ ] test sentence(23 AUGUST 2021 10.30 PM)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"        Event actual \u003d (Event) Parser.parseFromFile(line);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(line, actual.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":77}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    @TempDir","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    Path tempDirectory;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    public void writeToFile_string_success() throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"        Path path \u003d tempDirectory.resolve(\"tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"        Storage storage \u003d new Storage(path.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"            storage.saveTask(new Todo(\"test sentence\", false));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"        String actual \u003d (String) Files.readAllLines(path).toArray()[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(\"[T][ ] test sentence\", actual);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    public void overWriteFile_newString_success() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        Path path \u003d tempDirectory.resolve(\"tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"        Storage storage \u003d new Storage(path.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"            storage.saveTask(new Todo(\"test sentence\", false));","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"        ArrayList\u003cTaskList\u003e taskListArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"        taskListArrayList.add(new Todo(\"new test sentence\", false));","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"        storage.overwriteList(taskListArrayList);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"        String actual \u003d (String) Files.readAllLines(path).toArray()[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(\"[T][ ] new test sentence\", actual);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":49}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"    public void deadlineInstanceCreationDateAndTime_createGeneralInstance_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"        String expected \u003d \"[D][ ] test sentence(23 AUGUST 2021 7.30 PM)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"        Deadline deadline \u003d new Deadline(\"test sentence\" , \"2021-08-23 1930\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    public void deadlineInstanceCreationDate_createGeneralInstance_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"        String expected \u003d \"[D][ ] test sentence(23 AUGUST 2021)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"        Deadline deadline \u003d new Deadline(\"test sentence\", \"2021-08-23\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public void deadlineInstanceCreationOthers_createGeneralInstance_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"        String expected \u003d \"[D][ ] test sentence(by sunday or something)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        Deadline deadline \u003d new Deadline(\"test sentence\", \"by sunday or something\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"public class EventTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"    public void eventInstanceCreation_createGeneralInstance_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"        String expected \u003d \"[E][ ] test sentence(23 AUGUST 2021 7.30 PM - 9.00 PM)\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"        Event event \u003d new Event(\"test sentence\", \"2021-08-23 1930-2100\", false);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    public void eventInstanceCreationDate_createGeneralInstance_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"        String expected \u003d \"[E][ ] test sentence(23 AUGUST 2021)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"        Event event \u003d new Event(\"test sentence\", \"2021-08-23\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public void eventInstanceCreationOthers_createGeneralInstance_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"        String expected \u003d \"[E][ ] test sentence(by sunday or something)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        Event event \u003d new Event(\"test sentence\", \"by sunday or something\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":28}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"    public void todoInstanceCreation_createGeneralInstance_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"        Todo todo \u003d new Todo(\"test sentence\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(todo.toString(), \"[T][ ] test sentence\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"yeo-yiheng":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"todo say hello","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"deadline project /by sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"event splashdown /at nus","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"done 1","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"done 2","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"delete 3","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"bye","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yeo-yiheng":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeo-yiheng":1,"-":20}}]
