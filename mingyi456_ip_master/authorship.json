[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mingyi456":1,"-":23}},{"path":"duke_data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"1. [T][x] abc","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"2. [D][x] def (by: 123)","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"3. [E][x] ghi (at: 456)","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"4. [D][x] d (by: tmr)","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"5. [D][ ] y (by: today)","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"6. [E][ ] defend (at: today)","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"7. [T][ ] defg","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"mingyi456":7}},{"path":"src/main/java/duke/DataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"public class DataFile {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"    private File dataFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"    public DataFile(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"            this.dataFile \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"            this.dataFile.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"            System.out.println(\"Error creating/loading data file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"            this.dataFile \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"    public ArrayList\u003cTask\u003e parseTasks() {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"            String fileLine;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"                fileLine \u003d sc.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"                tasks.add(Parser.parseFileLine(fileLine));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"            System.out.println(\"Cannot parse file\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"        return tasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"    public void saveToDisk(String data) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"            FileWriter writer \u003d new FileWriter(this.dataFile);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"            writer.write(data);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"mingyi456"},"content":"            writer.close();","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"mingyi456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"mingyi456"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mingyi456"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mingyi456"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mingyi456"},"content":"            Scanner reader \u003d new Scanner(this.dataFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mingyi456"},"content":"            String contents \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"mingyi456"},"content":"            while (reader.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mingyi456"},"content":"                contents +\u003d reader.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mingyi456"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"mingyi456"},"content":"            return contents;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mingyi456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mingyi456"},"content":"            return \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mingyi456":62}},{"path":"src/main/java/duke/DateString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":" * Represents dates used by the Deadline and Event classes. Internally contains a","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":" * java.time.LocalDate object that outputs the date in a standardised pattern,","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":" * but silently falls back to using a string if the input cannot be parsed.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"public class DateString {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"    private final String dateString;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"     * Constructor which takes in a string and attempts to parse it to create a LocalDate","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"     * object. If the parsing is unsuccessful, silently defaults to using a string instead.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"     * @param str","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"    public DateString(String str) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"        this.dateString \u003d str;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"            this.localDate \u003d LocalDate.parse(str);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"            this.localDate \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"     * Returns the toString() method of the internal LocalDate object if valid,","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"     * or else returns the string given to the constructor.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"     * @return The string representation of this object.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"        if (this.localDate !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"            return localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"            return this.dateString;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mingyi456":46}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"    private final DateString dateLine;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"            throw new IllegalArgumentException(\"Description of Deadline cannot be empty!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"        this.dateLine \u003d new DateString(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"        this.dateLine \u003d new DateString(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"        return super.toString() + \" (by: \" + this.dateLine.toString() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mingyi456":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"     * Contains all the driver code currently, will be refactored in the future.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"     * @param args The array of command line arguments received. Currently unused.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"        // Source : https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dStandard\u0026t\u003dDude","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"        String logo2 \u003d \" ____            _      \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"                + \"|  _ \\\\ _   _  __| | ___ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"                + \"| | | | | | |/ _` |/ _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"                + \"| |_| | |_| | (_| |  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"                + \"|____/ \\\\__,_|\\\\__,_|\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"        System.out.println(\"Hello from\\n\" + logo2);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"        System.out.println(\"Hello! I\u0027m Dude\");","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"        Scanner stdIn \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"        DataFile dataFile \u003d new DataFile(\"./duke_data.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"        TaskList taskList \u003d new TaskList(dataFile);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"            String input \u003d getPrompt(stdIn);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"            isRunning \u003d processInput(input, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"    static String getPrompt(Scanner sc) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"mingyi456"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mingyi456"},"content":"     * Contains all the input parsing code currently, will be refactored in the future.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mingyi456"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mingyi456"},"content":"     * @param str The line of input entered by the user via stdin","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mingyi456"},"content":"     * @param taskList The instance of Tasklist used to store the current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mingyi456"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mingyi456"},"content":"    static boolean processInput(String str, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"mingyi456"},"content":"        Task newTask \u003d Parser.parseInput(str);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"mingyi456"},"content":"        if (newTask \u003d\u003d null) {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"mingyi456"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"mingyi456"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"mingyi456"},"content":"                taskList.save();","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"mingyi456"},"content":"                return false;","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"mingyi456"},"content":"            } else if (str.equals(\"list\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"mingyi456"},"content":"                System.out.println(taskList.list());","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"mingyi456"},"content":"            } else if (str.startsWith(\"done\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"mingyi456"},"content":"                String substr \u003d str.replaceFirst(\"done \", \"\");","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"mingyi456"},"content":"                int index \u003d Integer.parseInt(substr);","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"mingyi456"},"content":"                System.out.println(taskList.markDone(index));","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"mingyi456"},"content":"            } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"mingyi456"},"content":"                String substr \u003d str.replaceFirst(\"delete \", \"\");","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"mingyi456"},"content":"                int index \u003d Integer.parseInt(substr);","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"mingyi456"},"content":"                System.out.println(taskList.delete(index));","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"mingyi456"},"content":"            } else if (str.startsWith(\"find\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"mingyi456"},"content":"                String substr \u003d str.replaceFirst(\"find \", \"\");","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"mingyi456"},"content":"                System.out.println(taskList.findTask(substr));","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"mingyi456"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"mingyi456"},"content":"                System.out.println(\"??? Unknown command!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"mingyi456"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"mingyi456"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.add(newTask));","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"mingyi456"},"content":"        return true;","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"mingyi456"},"content":"/*        if (str.equals(\"bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"mingyi456"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-CodingStandard","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"mingyi456"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"mingyi456"},"content":"            taskList.save();","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"mingyi456"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"mingyi456"},"content":"        } else if (str.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.list());","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"mingyi456"},"content":"        } else if (str.startsWith(\"done\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d str.replaceFirst(\"done \", \"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"mingyi456"},"content":"            int index \u003d Integer.parseInt(substr);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.markDone(index));","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"mingyi456"},"content":"        } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d str.replaceFirst(\"delete \", \"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"mingyi456"},"content":"            int index \u003d Integer.parseInt(substr);","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.delete(index));","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"mingyi456"},"content":"        } else if (str.startsWith(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d str.replaceFirst(\"find\", \"\").stripLeading();","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.findTask(substr));","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"mingyi456"},"content":"        } else if (str.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d str.replaceFirst(\"todo\", \"\").stripLeading();","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.addToDo(substr));","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"mingyi456"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d str.replaceFirst(\"deadline\", \"\").stripLeading();","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"mingyi456"},"content":"            String[] substrArray \u003d substr.split(\" /by \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.addDeadLine(substrArray[0], substrArray[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"mingyi456"},"content":"        } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d str.replaceFirst(\"event\", \"\").stripLeading();","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"mingyi456"},"content":"            String[] substrArray \u003d substr.split(\" /at \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"mingyi456"},"content":"            System.out.println(taskList.addEvent(substrArray[0], substrArray[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"mingyi456"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"mingyi456"},"content":"            System.out.println(\"??? Unknown command!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"mingyi456"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"mingyi456"},"content":"}*/","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"mingyi456":115,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"    private final DateString time;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"            throw new IllegalArgumentException(\"Description of Event cannot be empty!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"        this.time \u003d new DateString(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"        this.time \u003d new DateString(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"        return super.toString() + \" (at: \" + this.time.toString() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mingyi456":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"    public static Task parseInput(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d input.replaceFirst(\"todo\", \"\").stripLeading();","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"            return new ToDo(substr);","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"            // System.out.println(taskList.addToDo(substr));","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d input.replaceFirst(\"deadline\", \"\").stripLeading();","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"            String[] substrArray \u003d substr.split(\" /by \", 2);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"            // System.out.println(taskList.addDeadLine(substrArray[0], substrArray[1]));","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"            return new Deadline(substrArray[0], substrArray[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"            String substr \u003d input.replaceFirst(\"event\", \"\").stripLeading();","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"            String[] substrArray \u003d substr.split(\" /at \", 2);","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"            // System.out.println(taskList.addEvent(substrArray[0], substrArray[1]));","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"            return new Event(substrArray[0], substrArray[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"            return null;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"    public static Task parseFileLine(String fileLine) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"        Task newTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"        if (fileLine.startsWith(\"[T]\", 3)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"            newTask \u003d new ToDo(fileLine.substring(10));","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"        } else if (fileLine.startsWith(\"[D]\", 3)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"            String[] subStringArray \u003d fileLine.substring(10).split(\" \\\\(by: \", 2);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"            String deadLineStr \u003d subStringArray[1];","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"            newTask \u003d new Deadline(subStringArray[0], deadLineStr.substring(0, deadLineStr.length() - 1));","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"            String[] subStringArray \u003d fileLine.substring(10).split(\" \\\\(at: \", 2);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"            String deadLineStr \u003d subStringArray[1];","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"            newTask \u003d new Event(subStringArray[0], deadLineStr.substring(0, deadLineStr.length() - 1));","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"        if (fileLine.startsWith(\"[x]\", 6)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"            newTask.markDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mingyi456"},"content":"        return newTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mingyi456":46}},{"path":"src/main/java/duke/Prompt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"public class Prompt {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mingyi456":5}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":" * Abstract class inherited by the ToDo, DeadLine and Event classes.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"abstract public class Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"    private final String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"    protected char type;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"        this.type \u003d \u0027 \u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"        return this.description;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"        return \"[\" + this.type + \"]\" + (this.isDone ? \"[x] \" : \"[ ] \") + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"     * Marks this task as done if not already so. Return value currently unused, was intended to","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"     * be used for the purposes of tracking if this task was previously marked as done, and this","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"     * will be implemented via exception tracking in the future.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"     * @return False if this task was previously marked as done, true otherwise.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"    public boolean markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mingyi456":42}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"    private final ArrayList\u003cTask\u003e arrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"    private final DataFile dataFile;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"    public TaskList(){","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"        this.arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"        this.dataFile \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"    public TaskList(DataFile dataFile) {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"        this.dataFile \u003d dataFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"        this.arrayList\u003d dataFile.parseTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"    public String add(Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"        this.arrayList.add(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"        String type \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"            type \u003d \"ToDo\";","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"            type \u003d \"DeadLine\";","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"            type \u003d \"Event\";","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"        return \"Added this \" + type + \" task:\\n\" + task.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"    public String list() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"        for (Task t : this.arrayList) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"            returnString +\u003d String.valueOf(i) + \". \" + t.toString() + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"            i++;","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"        return returnString;","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"mingyi456"},"content":"    public String markDone(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"mingyi456"},"content":"        Task t \u003d this.arrayList.get(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"mingyi456"},"content":"        boolean isValid \u003d t.markDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"mingyi456"},"content":"        if (isValid) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"mingyi456"},"content":"            return \"Nice! This task is marked as done\\n\" + t.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"mingyi456"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"mingyi456"},"content":"            return \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"mingyi456"},"content":"    public String delete(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"mingyi456"},"content":"        Task t \u003d this.arrayList.get(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"mingyi456"},"content":"        this.arrayList.remove(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"mingyi456"},"content":"        return \"Noted. Removed this task:\\n\" + t.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"mingyi456"},"content":"    public void save() {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"mingyi456"},"content":"        if (this.dataFile !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"mingyi456"},"content":"            this.dataFile.saveToDisk(this.list());","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"mingyi456"},"content":"    public String findTask(String searchString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"mingyi456"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"mingyi456"},"content":"        for (Task t : this.arrayList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mingyi456"},"content":"            if (t.getDescription().contains(searchString)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"mingyi456"},"content":"                result +\u003d t.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"mingyi456"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"mingyi456"},"content":"        return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"mingyi456"},"content":"// \u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-9","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"mingyi456":80}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"            throw new IllegalArgumentException(\"Description of ToDo cannot be empty!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mingyi456":11}},{"path":"src/test/java/duke/DateStringTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"public class DateStringTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"    public void constructor_invalidDate_silentDefaultToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"        DateString dateString \u003d new DateString(\"blah\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"        assertEquals(dateString.toString(), \"blah\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"    public void constructor_validDate_autoReformat(){","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"        DateString dateString \u003d new DateString(\"2019-10-15\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"        assertEquals(dateString.toString(), \"Oct 15 2019\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mingyi456":25}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"    public void test2() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"        boolean isRunning \u003d Duke.processInput(\"bye\", new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"        assertEquals(isRunning, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mingyi456":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mingyi456":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"REM This line is commented out in favour of replicating the behaviour of the provided runtest.sh","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"REM FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"fc ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"if errorlevel 1 (","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"    echo Test result: FAILED","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"\texit /b 1","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":") else (","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"    echo Test result: PASSED","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":")","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mingyi456":12,"-":18}}]
