[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"T | 0 | 1","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"T | 0 | werqerqwe","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"T | 0 | 1","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"T | 0 | 1","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ruthpohrp":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * Deadline (Task). Can be added to list in Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskstr Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     * @param deadline Deadline of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    public Deadline(String taskstr, LocalDate deadline) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"        super(taskstr);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        this.by \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * Returns time Deadline occurs at, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * @return","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        return this.by;","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"     * Returns simplified time Event occurs at, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"     * @return","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    public String getTimeStorage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        return this.date.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string of Deadline (Task).","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        return \"[D] \" + super.toString() + \"(by: \" + this.by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":54}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * Modified version of Duke (Personal Assistant Chatbot). Speaks owo language.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    private TaskList tasklist;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            tasklist \u003d storage.loadData();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"            System.out.println(\"Loadiwng file for you. . . Loaded!\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            tasklist \u003d new TaskList(); // creates new tasklist if one cannot be found.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        Ui.run(this.storage, this.tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ruthpohrp":37,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles all exceptions specific to Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    protected String linebreak \u003d \"~~*********___\\\\(owo)/___\\\\(owo)/___*********~~\";","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize all DukeExceptions.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"     * @param message To be printed when error in Main (Duke.java) occurs.","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        super(message + \u0027\\n\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":" * Occurs when Duke doesn\u0027t recognise the input.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    InvalidInputException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Sowwy, thiws commandw iswn\u0027t supporwted! TwT\");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"class IncorrectInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but input after it is invalid.","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword input recognised by Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"     * @param suggestion suggestion made to user.","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    IncorrectInputException(String keyword, String suggestion) {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Ohw no! Youw cawn\u0027t use \" + keyword + \" likw that! Twy \" + suggestion + \" inswead!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"class MissingInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but there is no input after it.","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword input recognised by Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"    MissingInputException(String keyword) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Oopsie uwu! Youw cawn\u0027t use \" + keyword + \" withoutw a descwiption forw it!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"class MissingNoException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but input (number) after it is invalid.","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword input recognised by Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"    MissingNoException(String keyword) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Thwere\u0027s no suchw taskw! Pwease enterw a *validw* numbewr after \u0027\"+ keyword + \"\u0027!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"class KeywordNotFoundError extends DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"    KeywordNotFoundError(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Sowwy! I can\u0027tw findw anyw taskws containing \" + keyword + \" ! \u003e_\u003c\");","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":" * Occurs when Duke tries to read txt file for Task list, but comes up empty.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"class LoadingFileError extends DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"    LoadingFileError(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"        super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"class TaskDoneError extends DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when user tries to mark a task that\u0027s done but it\u0027s already done.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"    TaskDoneError() {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Looksw wike thisw taskw is alweady done! That\u0027s gweat!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"class SaveFileError extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when there\u0027s an error with saving the file.","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"    SaveFileError() {","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Canw\u0027t save to a filew that doesn\u0027t exist, sorry!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"class LoadFileError extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when there\u0027s an error in loading and reading file.","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"    LoadFileError() {","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Oops! Somethingw\u0027s wrong with the text in thew saved file! \"","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"                + \"You may have to dewete itw!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"class SaveDirectoryError extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when directory to save file in doesn\u0027t exist.","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"    SaveDirectoryError(){","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Oh now! I guess the diwectowwy doesn\u0027t exist.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ruthpohrp":116}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * Event (Task). Can be added to list in Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskstr Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     * @param at Date/Time of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    public Event(String taskstr, LocalDate at) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"        super(taskstr);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        this.at \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d at;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * Returns time Event occurs at, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * @return Time Event occurs at.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        return this.at;","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"     * Returns simplified time Event occurs at, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"     * @return Simplified time Event occurs at.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    public String getTimeStorage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        return this.date.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string of Deadline (Task).","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        return \"[E] \" + super.toString() + \"(at: \" + this.at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class for parsing keywords, and handling unparsed Strings.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    Parser() {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     * Parses keywords.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     * @param str String to be parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    public String parseCommand(String str) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        if (str.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"            return \"bye\";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            return \"help\";","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            return \"list\";","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"            return \"todo\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            return \"deadline\";","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            return \"event\";","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"            return \"done\";","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"            return \"delete\";","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"            return \"find\";","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"     * Joins together String for find keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"     * @param strparse Array of Strings to be joined together.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"     * @return Keyword to be found.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    public String parseFind(String[] strparse) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strb \u003d new StringBuilder();","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 1; i \u003c strparse.length; i ++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"            strb.append(strparse[i]);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        return strb.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ruthpohrp":52}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":" * Allows reading and saving of tasks to a given file.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    private String filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor for DataEditor","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     * @param filePath","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * Reads txt file from path given and returns an ArrayList of the tasks inside.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Exception if any when reading file.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    public TaskList loadData() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        String homeDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        Path path \u003d Paths.get(homeDir, this.filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        boolean directoryExists \u003d Files.exists(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        if (directoryExists) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"                TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"                for (String str : lines) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"                    String[] strparse \u003d str.split(Pattern.quote(\" | \"));","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003c 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"                        continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"                        // incorrect task listed for some reason","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"                    } else if (strparse[0].equals(\"T\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"                        tasklist.addReadTodo(strparse[2], Integer.parseInt(strparse[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"                    } else if (strparse[0].equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"                        tasklist.addReadDeadline(strparse[2], Integer.parseInt(strparse[1]), strparse[3]);","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"                    } else if (strparse[0].equals(\"E\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"                        tasklist.addReadEvent(strparse[2], Integer.parseInt(strparse[1]), strparse[3]);","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"                return tasklist;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"                throw e;","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"                throw new LoadingFileError(\"Uwu! There\u0027s something wrong withw the existing file! \"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"                        + \"Did you meddle witwh it?\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"                        + \"Creating new file for you. . .\");","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"            throw new LoadingFileError(\"Uwu! Pre-existing File not foundw! \"","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"                    + \"Creating new file for you. . .\");","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"     * Saves tasklist in String form to txt file. If file does not exist, one is created.","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"     * @param tasklist tasklist to be converted into txt file, then saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Exception if any when saving file.","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"    public void saveData(TaskList tasklist) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"        String textToSave \u003d tasklist.saveAsString();","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        String homeDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"        Path path \u003d Paths.get(homeDir, this.filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"        boolean directoryExists \u003d Files.exists(path);","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"            } catch(IOException e){","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"                throw new SaveDirectoryError();","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"            Files.write(Paths.get(homeDir, this.filePath), textToSave.getBytes());","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"            throw new SaveFileError();","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ruthpohrp":97}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * Parent class. Inherited by a bunch of classes like Event and Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    protected String taskString;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskString Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    public Task(String taskString) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * Returns date stored in Task in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * Is blank because Todo doesn\u0027t have a Time. Is Overwritten in Event and Deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * @return \"\"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        return \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"     * Returns date stored in Task in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when wanting to convert date to simplified form for saving in file.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     * @return \"\"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    public String getTimeStorage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        return \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     * Returns the descriptive String of task. Used in displayList.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + taskString;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"     * Returns the pure String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"     * @return Pure String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"    public String getTaskStr() {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"        return taskString;","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string \u0027X\u0027 if task is done, \u0027 \u0027 if task is not.","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"     * @return string \u0027X\u0027 or \u0027x\u0027.","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if task is marked as done, False if task is already done.","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ruthpohrp":81}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":" * Stores list of Tasks in an array for reference.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    int counter;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        this.taskArr \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        this.counter \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor for TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskArr Arraylist for Tasks. Should have 100 capacity.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    TaskList(ArrayList\u003cTask\u003e taskArr) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        this.taskArr \u003d taskArr;","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        this.counter \u003d 0;","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Todo (Task) to TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     * @param strparse Array of Strings to be parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"    public void addTodo(String[] strparse) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder taskb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"            throw new IncorrectInputException(\"todo\", \"using \u0027todo (taskw)\u0027\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 1; i \u003c strparse.length; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"            taskb.append(strparse[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"            if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"                taskb.append(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"        taskArr.add(new Todo(taskb.toString()));","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Todo Task to TaskList. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"     * @param task String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"     * @param isDoneInt Whether task is done or not. 0 is not done, 1 is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"    public void addReadTodo(String task, int isDoneInt) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"        taskArr.add(new Todo(task));","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"        if (isDoneInt \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"            this.markReadDone(this.counter);","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Deadline Task to TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"     * @param strparse Array of Strings to be parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"    public void addDeadline(String[] strparse) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"            if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"                throw new MissingInputException(\"deadline\");","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder taskb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"            while (i \u003c strparse.length","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"                    \u0026\u0026 !strparse[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"                taskb.append(strparse[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"                if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"                    taskb.append(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"                i++;","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"            i++;","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"            if (taskb.toString().equals(\"\") || i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"deadline\", \"using \u0027deadline (task) /by (yyyy-mm-dd format)\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"            LocalDate deadline \u003d LocalDate.parse(strparse[i]);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"            taskArr.add(new Deadline(taskb.toString(), deadline));","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"            counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"            throw new IncorrectInputException(\"deadline\", \"using \u0027deadline (task) /by (yyyy-mm-dd format)\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Deadline Task to TaskList. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"     * @param task String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"     * @param isDoneInt Whether task is done or not. 0 is not done, 1 is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"     * @param by String of Date deadline task needs to be done by.","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"    public void addReadDeadline(String task, int isDoneInt, String by) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"        taskArr.add(new Deadline(task, LocalDate.parse(by)));","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"        if (isDoneInt \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"            this.markReadDone(this.counter);","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Event Task to TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"     * @param strparse Array of Strings to be parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"    public void addEvent(String[] strparse) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"            if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"                throw new MissingInputException(\"event\");","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder taskb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder atb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"            while (i \u003c strparse.length","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"                    \u0026\u0026 !strparse[i].equalsIgnoreCase(\"/at\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"                taskb.append(strparse[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"                if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"                    taskb.append(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"ruthpohrp"},"content":"                i++;","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"ruthpohrp"},"content":"            i++;","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"            if (taskb.toString().equals(\"\") || i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"event\", \"\u0027event (event) /at (date)\u0027\");","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"            LocalDate deadline \u003d LocalDate.parse(strparse[i]);","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"            taskArr.add(new Event(taskb.toString(), deadline));","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"            counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"            throw new IncorrectInputException(\"deadline\", \"a cowwect (yyyy-mm-dd format)\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Event Task to TaskList. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"     * @param task String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"     * @param isDoneInt Whether task is done or not. 0 is not done, 1 is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"     * @param at String of Date event occurs at.","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"ruthpohrp"},"content":"    public void addReadEvent(String task, int isDoneInt, String at) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"ruthpohrp"},"content":"        taskArr.add(new Event(task.toString(), LocalDate.parse(at)));","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"ruthpohrp"},"content":"        if (isDoneInt \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"ruthpohrp"},"content":"            this.markReadDone(this.counter);","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"ruthpohrp"},"content":"     * Marks task as done. Returns number of task in TaskList that is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"ruthpohrp"},"content":"     * @param strparse Array of Strings to be parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"ruthpohrp"},"content":"     * @return Number of tasks in TaskList that is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"ruthpohrp"},"content":"    public int markDone(String[] strparse) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"        if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingInputException(\"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"ruthpohrp"},"content":"            int i \u003d Integer.parseInt(strparse[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"ruthpohrp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"        int i \u003d Integer.parseInt(strparse[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"ruthpohrp"},"content":"        if ((i - 1) \u003e\u003d counter || (i - 1) \u003c 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"ruthpohrp"},"content":"        if (taskArr.get(i - 1).markAsDone()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"            return i;","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"ruthpohrp"},"content":"            throw new TaskDoneError();","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"ruthpohrp"},"content":"     * Marks task as done. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"ruthpohrp"},"content":"     * @param i Number of task in TaskList that is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"ruthpohrp"},"content":"    public void markReadDone(int i) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"ruthpohrp"},"content":"        boolean temp \u003d taskArr.get(i).markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"     * Removes Task from TaskList. Returns deleted Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"     * @param strparse Array of Strings to be parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"     * @return Deleted Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"    public Task delete(String[] strparse) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"        if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingInputException(\"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"            int i \u003d Integer.parseInt(strparse[1]) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"ruthpohrp"},"content":"        int i \u003d Integer.parseInt(strparse[1]) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"ruthpohrp"},"content":"        if (i \u003e\u003d counter || i \u003c 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"ruthpohrp"},"content":"        Task t \u003d taskArr.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":221,"author":{"gitId":"ruthpohrp"},"content":"        counter--;","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"ruthpohrp"},"content":"        taskArr.remove(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":223,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"ruthpohrp"},"content":"        return (t);","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":226,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":227,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":228,"author":{"gitId":"ruthpohrp"},"content":"     * Gets current number of tasks in TaskList - 1 (because it is counter).","lastModifiedDate":"2021-08-28"},{"lineNumber":229,"author":{"gitId":"ruthpohrp"},"content":"     * @return Current number of tasks in TaskList - 1","lastModifiedDate":"2021-08-28"},{"lineNumber":230,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"ruthpohrp"},"content":"    public int getTaskCounter() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"ruthpohrp"},"content":"        return this.counter;","lastModifiedDate":"2021-08-26"},{"lineNumber":234,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":235,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":236,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":237,"author":{"gitId":"ruthpohrp"},"content":"     * Displays list of Tasks in TaskList, numbered.","lastModifiedDate":"2021-08-28"},{"lineNumber":238,"author":{"gitId":"ruthpohrp"},"content":"     * @return List of Tasks in TaskList, numbered.","lastModifiedDate":"2021-08-28"},{"lineNumber":239,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":240,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"ruthpohrp"},"content":"    public String displayList() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 0; i \u003c this.counter; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":244,"author":{"gitId":"ruthpohrp"},"content":"            strb.append(i + 1).append(\". \").append(this.taskArr.get(i).toString()).append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":245,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":246,"author":{"gitId":"ruthpohrp"},"content":"        return strb.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":248,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":249,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":250,"author":{"gitId":"ruthpohrp"},"content":"     * Gets Task from TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":251,"author":{"gitId":"ruthpohrp"},"content":"     * @param i Specifies which Task to take.","lastModifiedDate":"2021-08-28"},{"lineNumber":252,"author":{"gitId":"ruthpohrp"},"content":"     * @return Task as specified.","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":254,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"ruthpohrp"},"content":"    public Task getTask(int i) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":256,"author":{"gitId":"ruthpohrp"},"content":"        return taskArr.get(counter - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":257,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":258,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":259,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":260,"author":{"gitId":"ruthpohrp"},"content":"     * Gets Task from TaskList, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":261,"author":{"gitId":"ruthpohrp"},"content":"     * @param i Specifies which Task to take.","lastModifiedDate":"2021-08-28"},{"lineNumber":262,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of Task as specified.","lastModifiedDate":"2021-08-28"},{"lineNumber":263,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":264,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":265,"author":{"gitId":"ruthpohrp"},"content":"    public String getTaskDescr(int i) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":266,"author":{"gitId":"ruthpohrp"},"content":"        return taskArr.get(i - 1).toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":267,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":268,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":270,"author":{"gitId":"ruthpohrp"},"content":"     * Returns last Task added to the TaskList, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":271,"author":{"gitId":"ruthpohrp"},"content":"     * @return Last Task added to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":272,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":273,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":274,"author":{"gitId":"ruthpohrp"},"content":"    public String lastAddedTask() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"ruthpohrp"},"content":"        return taskArr.get(counter - 1).toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":276,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":277,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":278,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":279,"author":{"gitId":"ruthpohrp"},"content":"     * Converts TaskList to String form to save in file. Different from displayList.","lastModifiedDate":"2021-08-28"},{"lineNumber":280,"author":{"gitId":"ruthpohrp"},"content":"     * @return TaskList in String form to save in file.","lastModifiedDate":"2021-08-28"},{"lineNumber":281,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method.","lastModifiedDate":"2021-08-28"},{"lineNumber":282,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":283,"author":{"gitId":"ruthpohrp"},"content":"    public String saveAsString() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":284,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strb \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":285,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 0; i \u003c this.counter; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":286,"author":{"gitId":"ruthpohrp"},"content":"            if (taskArr.get(i) instanceof Todo) {","lastModifiedDate":"2021-08-27"},{"lineNumber":287,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(\"T | \");","lastModifiedDate":"2021-08-26"},{"lineNumber":288,"author":{"gitId":"ruthpohrp"},"content":"            } else if (taskArr.get(i) instanceof Deadline) {","lastModifiedDate":"2021-08-27"},{"lineNumber":289,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(\"D | \");","lastModifiedDate":"2021-08-26"},{"lineNumber":290,"author":{"gitId":"ruthpohrp"},"content":"            } else if (taskArr.get(i) instanceof Event) {","lastModifiedDate":"2021-08-27"},{"lineNumber":291,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(\"E | \");","lastModifiedDate":"2021-08-26"},{"lineNumber":292,"author":{"gitId":"ruthpohrp"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":293,"author":{"gitId":"ruthpohrp"},"content":"                // nothing happens because it shouldn\u0027t reach here.","lastModifiedDate":"2021-08-26"},{"lineNumber":294,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":295,"author":{"gitId":"ruthpohrp"},"content":"            if (taskArr.get(i).isDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":296,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(\"1 | \");","lastModifiedDate":"2021-08-26"},{"lineNumber":297,"author":{"gitId":"ruthpohrp"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":298,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(\"0 | \");","lastModifiedDate":"2021-08-26"},{"lineNumber":299,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":300,"author":{"gitId":"ruthpohrp"},"content":"            strb.append(taskArr.get(i).getTaskStr());","lastModifiedDate":"2021-08-27"},{"lineNumber":301,"author":{"gitId":"ruthpohrp"},"content":"            if (taskArr.get(i) instanceof Deadline) {","lastModifiedDate":"2021-08-27"},{"lineNumber":302,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(\" | \");","lastModifiedDate":"2021-08-27"},{"lineNumber":303,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(taskArr.get(i).getTimeStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":304,"author":{"gitId":"ruthpohrp"},"content":"            } else if (taskArr.get(i) instanceof Event) {","lastModifiedDate":"2021-08-27"},{"lineNumber":305,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(\" | \");","lastModifiedDate":"2021-08-27"},{"lineNumber":306,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(taskArr.get(i).getTimeStorage());","lastModifiedDate":"2021-08-27"},{"lineNumber":307,"author":{"gitId":"ruthpohrp"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":308,"author":{"gitId":"ruthpohrp"},"content":"                // do nothing","lastModifiedDate":"2021-08-27"},{"lineNumber":309,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":310,"author":{"gitId":"ruthpohrp"},"content":"            strb.append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":311,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":312,"author":{"gitId":"ruthpohrp"},"content":"        return strb.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":313,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":314,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":315,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":316,"author":{"gitId":"ruthpohrp"},"content":"     * Finds Tasks that has the keyword for find.","lastModifiedDate":"2021-08-28"},{"lineNumber":317,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword to find.","lastModifiedDate":"2021-08-28"},{"lineNumber":318,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of Tasks found with the keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":319,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":320,"author":{"gitId":"ruthpohrp"},"content":"    public String find(String keyword) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":321,"author":{"gitId":"ruthpohrp"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":322,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strb \u003d new StringBuilder();","lastModifiedDate":"2021-08-28"},{"lineNumber":323,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":324,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":325,"author":{"gitId":"ruthpohrp"},"content":"            Task temp \u003d taskArr.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":326,"author":{"gitId":"ruthpohrp"},"content":"            if (temp.getTaskStr().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"ruthpohrp"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":328,"author":{"gitId":"ruthpohrp"},"content":"                strb.append(i).append(\". \").append(temp.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":329,"author":{"gitId":"ruthpohrp"},"content":"                if (i \u003c counter - 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":330,"author":{"gitId":"ruthpohrp"},"content":"                    strb.append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-28"},{"lineNumber":331,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":332,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":333,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":334,"author":{"gitId":"ruthpohrp"},"content":"        if (isFound) {","lastModifiedDate":"2021-08-28"},{"lineNumber":335,"author":{"gitId":"ruthpohrp"},"content":"            return strb.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":336,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":337,"author":{"gitId":"ruthpohrp"},"content":"            throw new KeywordNotFoundError(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":338,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":339,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":340,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":341,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ruthpohrp":341}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * Todo (Task). Can be added to list in Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskstr Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    public Todo(String taskstr) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"        super(taskstr);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string of Deadline (Task).","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":33}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * User interface. Handles text for user interface.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    Ui() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    public static void run(Storage storage, TaskList tasklist) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        String linebreakstart \u003d \"~~*********___\\\\(owo)/___\\\\(owo)/___*********~~\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        String linebreakend \u003d \"~~*********___\\\\(owo)/___\\\\(owo)/___*********~~\";","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        System.out.println(linebreakstart","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"                + \"\\nHewwo!! From:\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"                + logo","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"                + \"How mayw Iw hewlp youw, Mastwer? Pwease type \u0027help\u0027 for a list of commandws uwu\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"        boolean continueLoop \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        // for checking loop","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        while (continueLoop) {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"            // initiates loop.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"                String str \u003d in.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"                String[] strparse \u003d str.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"                // splits input to parse for keywords.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"                switch (parser.parseCommand(strparse[0])) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"                    // breaks loop, closes chatbot.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"                        if (strparse.length \u003e 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"                            throw new IncorrectInputException(\"bye\", \"\u0027bye\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"                        continueLoop \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"                case \"help\":","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"                    // lists command list","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"                        if (strparse.length \u003e 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"                            throw new IncorrectInputException(\"help\", \"\u0027help\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Commandws supported:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"- bye\\n- help\\n- list\\n- todo\\n- event\\n- deadline\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"                case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"                    // lists history of current tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"                        if (strparse.length \u003e 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                            throw new IncorrectInputException(\"list\", \"\u0027list\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Uwu! Herw arw yourw taskws:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"                        if (tasklist.getTaskCounter() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"                            System.out.println(\"Itw seewsm like youw wist is emptwy! Congwats!\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"                        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"                            System.out.println(tasklist.displayList());","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"                    // adds a todo task to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"                        tasklist.addTodo(strparse);","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"                        storage.saveData(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Uwu! Addewd yourw taskws:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(tasklist.lastAddedTask() + \u0027\\n\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"                                + (tasklist.getTaskCounter())","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"                                + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"                    // adds a deadline task to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"                        tasklist.addDeadline(strparse);","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"                        storage.saveData(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Uwu! Addewd yourw taskws:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(tasklist.lastAddedTask() + \u0027\\n\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"ruthpohrp"},"content":"                                + (tasklist.getTaskCounter())","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"                                + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"                case \"event\":","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"ruthpohrp"},"content":"                    // adds an event to the list. pretty much like deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"                        tasklist.addEvent(strparse);","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"                        storage.saveData(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Uwu! Addewd yourw taskws:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(tasklist.lastAddedTask() + \u0027\\n\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"ruthpohrp"},"content":"                                + (tasklist.getTaskCounter())","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"ruthpohrp"},"content":"                                + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"ruthpohrp"},"content":"                case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"ruthpohrp"},"content":"                    // marks a task as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"ruthpohrp"},"content":"                        int i \u003d tasklist.markDone(strparse);","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"ruthpohrp"},"content":"                        storage.saveData(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Thanwk youw forw youwr serwwice! Thwis taskw isw downe:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"   \"","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"ruthpohrp"},"content":"                                + tasklist.getTaskDescr(i)","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"ruthpohrp"},"content":"                                + \u0027\\n\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"ruthpohrp"},"content":"                    // deletes corresponding task on list.","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"ruthpohrp"},"content":"                        Task t \u003d tasklist.delete(strparse);","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"ruthpohrp"},"content":"                        storage.saveData(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Thanwk youw forw youwr serwwice! Thwis taskw hasw beenw deweted:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"   \"","lastModifiedDate":"2021-08-27"},{"lineNumber":185,"author":{"gitId":"ruthpohrp"},"content":"                                + t.toString()","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"                                + \u0027\\n\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"ruthpohrp"},"content":"                                + (tasklist.getTaskCounter())","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"ruthpohrp"},"content":"                                + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":191,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":194,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"ruthpohrp"},"content":"                case \"find\":","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"                        String temp \u003d tasklist.find(parser.parseFind(strparse));","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Foundw! Here are the matching tasks:\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(temp + \u0027\\n\u0027);","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-28"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"                    break;","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"                default:","lastModifiedDate":"2021-08-27"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"                    throw new InvalidInputException();","lastModifiedDate":"2021-08-27"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"                System.out.println(linebreakstart);","lastModifiedDate":"2021-08-27"},{"lineNumber":216,"author":{"gitId":"ruthpohrp"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":217,"author":{"gitId":"ruthpohrp"},"content":"                System.out.println(linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":219,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"ruthpohrp"},"content":"        System.out.println(linebreakstart","lastModifiedDate":"2021-08-27"},{"lineNumber":221,"author":{"gitId":"ruthpohrp"},"content":"                + \"\\nGoodbywe, Mastwer! Seew youw soown!\\n\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":222,"author":{"gitId":"ruthpohrp"},"content":"                + linebreakend);","lastModifiedDate":"2021-08-27"},{"lineNumber":223,"author":{"gitId":"ruthpohrp"},"content":"        // closing lines","lastModifiedDate":"2021-08-27"},{"lineNumber":224,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":225,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":226,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ruthpohrp":226}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public void testDisplayList() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Todo(\"Kill me\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Event(\"Revive me\", LocalDate.of(2022, 12,12)));","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        TaskList t \u003d new TaskList(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"T | 0 | Kill me\\nE | 0 | Revive me (at: Dec 12 2022)\", t.saveAsString());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    public void testSaveAsString() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        TaskList t \u003d new TaskList(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Event(\"Revive me\", LocalDate.of(2022, 12,12)));","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"1. [E] [] Revive me (at: Dec 12 2022)\", t.displayList());","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ruthpohrp":29}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class UiTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(3, 3);","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ruthpohrp":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":6}}]
