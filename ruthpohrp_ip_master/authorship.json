[{"path":"src/main/java/DataReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"public class DataReader {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ruthpohrp":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":" * Deadline (Task). Can be added to list in Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh (Lab 10H)","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskstr Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"     * @param deadline Deadline of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public Deadline(String taskstr, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        super(taskstr);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        this.by \u003d deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string of Deadline (Task).","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        return \"[D] \" + super.toString() + \"(by: \" + this.by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.util.*;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" * Modified version of Duke (Personal Assistant Chatbot). Speaks owo language.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh (Lab 10H)","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"        String linebreakstart \u003d \"~~*********___\\\\(owo)/___\\\\(owo)/___*********~~\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        String linebreakend \u003d \"~~*********___\\\\(owo)/___\\\\(owo)/___*********~~\";","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        System.out.println(linebreakstart","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"                + \"\\nHewwo!! From:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"                + logo","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"                + \"How mayw Iw hewlp youw, Mastwer? uwu\\n\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"                + linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        List\u003cTask\u003e taskarr \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        int arrcounter \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        // adds array for \u0027list\u0027 command, and arraycounter for no. of tasks on list currently","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        boolean continueloop \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        // for checking loop","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        while (continueloop) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"            // initiates loop.","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"            String str \u003d in.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"            String[] strparse \u003d str.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"            // splits input to parse for keywords.","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"            if (strparse[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"                // breaks loop, closes chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003e 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"                        throw new IncorrectInputException(\"bye\", \"\u0027bye\u0027\");","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"                    continueloop \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"                // lists history of current tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003e 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"                        throw new IncorrectInputException(\"list\", \"\u0027list\u0027\");","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Uwu! Herw arw yourw taskws:\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"                    if (arrcounter \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Itw seewsm like youw wist is emptwy! Congwats!\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"                        for (int i \u003d 0; i \u003c arrcounter; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"                            System.out.println((i + 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"                                    + \". \"","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"                                    + taskarr.get(i).toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"                                    + \u0027\\n\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                // adds a todo task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"                    StringBuilder taskb \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"                        throw new IncorrectInputException(\"todo\", \"using \u0027todo (taskw)\u0027\");","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"                    for (int i \u003d 1; i \u003c strparse.length; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"                        taskb.append(strparse[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"                        if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"                            taskb.append(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"                    taskarr.add(new Todo(taskb.toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"                    arrcounter++;","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Uwu! Addewd yourw taskws:\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"   \" + taskarr.get(arrcounter - 1).toString() + \u0027\\n\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"                            + (arrcounter)","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"                            + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"                // adds a deadline task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingInputException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"                    StringBuilder taskb \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"                    StringBuilder deadlineb \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"                    int i \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"                    while (i \u003c strparse.length","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"                            \u0026\u0026 !strparse[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"                        taskb.append(strparse[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"                        if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"                            taskb.append(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"                        i++;","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"                    i++;","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"                    while (i \u003c strparse.length) {","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"                        deadlineb.append(strparse[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"ruthpohrp"},"content":"                        if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"                            deadlineb.append(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"                        i++;","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"                    if (taskb.toString().equals(\"\") || deadlineb.toString().equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"                        throw new IncorrectInputException(\"deadline\", \"using \u0027deadline (task) /by (date)\u0027\");","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"ruthpohrp"},"content":"                    taskarr.add(new Deadline(taskb.toString(), deadlineb.toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"                    arrcounter++;","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Uwu! Addewd yourw taskws:\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"   \" + taskarr.get(arrcounter - 1).toString() + \u0027\\n\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"                            + (arrcounter)","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"                            + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"                // adds an event to the list. pretty much like deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingInputException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"ruthpohrp"},"content":"                    StringBuilder taskb \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"ruthpohrp"},"content":"                    StringBuilder atb \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"ruthpohrp"},"content":"                    int i \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"ruthpohrp"},"content":"                    while (i \u003c strparse.length","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"ruthpohrp"},"content":"                            \u0026\u0026 !strparse[i].equalsIgnoreCase(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"ruthpohrp"},"content":"                        taskb.append(strparse[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"ruthpohrp"},"content":"                        if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"ruthpohrp"},"content":"                            taskb.append(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"ruthpohrp"},"content":"                        i++;","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"ruthpohrp"},"content":"                    i++;","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"ruthpohrp"},"content":"                    while (i \u003c strparse.length) {","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"ruthpohrp"},"content":"                        atb.append(strparse[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"ruthpohrp"},"content":"                        if (i !\u003d strparse.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"                            atb.append(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"                        i++;","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"ruthpohrp"},"content":"                    if (taskb.toString().equals(\"\") || atb.toString().equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"ruthpohrp"},"content":"                        throw new IncorrectInputException(\"event\", \"\u0027event (event) /at (date)\u0027\");","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"ruthpohrp"},"content":"                    taskarr.add(new Event(taskb.toString(), atb.toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"                    arrcounter++;","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Uwu! Addewd yourw taskws:\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"   \" + taskarr.get(arrcounter - 1).toString() + \u0027\\n\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":185,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-19"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"                            + (arrcounter)","lastModifiedDate":"2021-08-19"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"                            + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"ruthpohrp"},"content":"                // marks a task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":197,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingInputException(\"done\");","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"                        int i \u003d Integer.parseInt(strparse[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingNoException(\"done\");","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"                    int i \u003d Integer.parseInt(strparse[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"                    if (i \u003e\u003d arrcounter || i \u003c 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingNoException(\"done\");","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"                    boolean check \u003d taskarr.get(i).markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"                    if (check) {","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Thanwk youw forw youwr serwwice! Thwis taskw isw downe:\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"   \"","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"                                + taskarr.get(i).toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"                                + \u0027\\n\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"ruthpohrp"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(\"Looksw wike thisw taskw is alweady done! That\u0027s gweat!\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"ruthpohrp"},"content":"                        System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":228,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":229,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":230,"author":{"gitId":"ruthpohrp"},"content":"                // deletes corresponding task on list.","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingInputException(\"delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":234,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":235,"author":{"gitId":"ruthpohrp"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":236,"author":{"gitId":"ruthpohrp"},"content":"                        int i \u003d Integer.parseInt(strparse[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":237,"author":{"gitId":"ruthpohrp"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingNoException(\"delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":239,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":240,"author":{"gitId":"ruthpohrp"},"content":"                    int i \u003d Integer.parseInt(strparse[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":241,"author":{"gitId":"ruthpohrp"},"content":"                    if (i \u003e\u003d arrcounter || i \u003c 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":242,"author":{"gitId":"ruthpohrp"},"content":"                        throw new MissingNoException(\"delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":243,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":244,"author":{"gitId":"ruthpohrp"},"content":"                    Task t \u003d taskarr.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":245,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":246,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Thanwk youw forw youwr serwwice! Thwis taskw hasw beenw deweted:\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"   \"","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"ruthpohrp"},"content":"                            + t.toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"ruthpohrp"},"content":"                            + \u0027\\n\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":250,"author":{"gitId":"ruthpohrp"},"content":"                    arrcounter--;","lastModifiedDate":"2021-08-19"},{"lineNumber":251,"author":{"gitId":"ruthpohrp"},"content":"                    taskarr.remove(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(\"Youw noww havew \"","lastModifiedDate":"2021-08-19"},{"lineNumber":253,"author":{"gitId":"ruthpohrp"},"content":"                            + (arrcounter)","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"ruthpohrp"},"content":"                            + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":255,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":256,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":257,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":261,"author":{"gitId":"ruthpohrp"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":262,"author":{"gitId":"ruthpohrp"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"ruthpohrp"},"content":"                    throw new InvalidInputException();","lastModifiedDate":"2021-08-19"},{"lineNumber":264,"author":{"gitId":"ruthpohrp"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":265,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakstart);","lastModifiedDate":"2021-08-19"},{"lineNumber":266,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":267,"author":{"gitId":"ruthpohrp"},"content":"                    System.out.println(linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":268,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":271,"author":{"gitId":"ruthpohrp"},"content":"        System.out.println(linebreakstart","lastModifiedDate":"2021-08-19"},{"lineNumber":272,"author":{"gitId":"ruthpohrp"},"content":"                + \"\\nGoodbywe, Mastwer! Seew youw soown!\\n\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":273,"author":{"gitId":"ruthpohrp"},"content":"                + linebreakend);","lastModifiedDate":"2021-08-19"},{"lineNumber":274,"author":{"gitId":"ruthpohrp"},"content":"        // closing lines","lastModifiedDate":"2021-08-19"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":276,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ruthpohrp":267,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles all exceptions specific to Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh (Lab 10H)","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    protected String linebreak \u003d \"~~*********___\\\\(owo)/___\\\\(owo)/___*********~~\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize all DukeExceptions.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     * @param message To be printed when error in Main (Duke.java) occurs.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        super(message + \u0027\\n\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":" * Occurs when Duke doesn\u0027t recognise the input.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    InvalidInputException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Sowwy, thiws commandw iswn\u0027t supporwted! TwT\");","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"class IncorrectInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but input after it is invalid.","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword input recognised by Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"     * @param suggestion suggestion made to user.","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    IncorrectInputException(String keyword, String suggestion) {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Ohw no! Youw cawn\u0027t use \" + keyword + \" likw that! Twy \" + suggestion + \" inswead!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"class MissingInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but there is no input after it.","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword input recognised by Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    MissingInputException(String keyword) {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Oopsie uwu! Youw cawn\u0027t use \" + keyword + \" withoutw a descwiption forw it!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"class MissingNoException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but input (number) after it is invalid.","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword input recognised by Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    MissingNoException(String keyword) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"        super (\"Thwere\u0027s no suchw taskw! Pwease enterw a *validw* numbewr after \u0027\"+ keyword + \"\u0027!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":58}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":" * Event (Task). Can be added to list in Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh (Lab 10H)","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskstr Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"     * @param at Date/Time of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public Event(String taskstr, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        super(taskstr);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string of Deadline (Task).","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        return \"[E] \" + super.toString() + \"(at: \" + this.at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":" * Parent class. Inherited by a bunch of classes like Event and Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh (Lab 10H)","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    protected String taskstr;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskstr Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public Task(String taskstr) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        this.taskstr \u003d taskstr;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + taskstr;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string \u0027X\u0027 if task is done, \u0027 \u0027 if task is not.","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     * @return string \u0027X\u0027 or \u0027x\u0027.","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if task is marked as done, False if task is already done.","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ruthpohrp":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":" * Todo (Task). Can be added to list in Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh (Lab 10H)","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize Todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskstr Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public Todo(String taskstr) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"        super(taskstr);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string of Deadline (Task).","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     * @return string of Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":6}}]
