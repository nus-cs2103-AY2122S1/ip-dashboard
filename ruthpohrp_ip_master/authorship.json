[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"# Super Pretty Ultra Hyper Mega Cute Shining God of Destruction Dukuwu ~~☆☆☆ tehe","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"\u003e dowcto, wewre losing him!!\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"\u003e qwick, hand me the defibwiwatow!!\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"\u003e please. turn off my [redacted] life support\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"\u003e                              - You after you use Dukuwu [(source)](https://i.redd.it/qcsnneo5fyh01.jpg)","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"## What Dukuwu Does To You","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"Dukuwu sucks your will to live. It\u0027s:","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"* Time consuming","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"* Sanity consuming","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"* Flesh consuming","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"Sounds fun, right? And the best part is that it\u0027s **F R E E !**","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"All you need to do are these three simple steps:","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"1. Download it [here](https://www.youtube.com/watch?v\u003ddQw4w9WgXcQ\u0026ab_channel\u003dRickAstley)","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"2. If you actually clicked the link, lmao ok no the actual one is [here](https://github.com/ruthpohrp/ip)","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"3. You ~~don\u0027t actually~~ want to download this ~~_WHY WOULD YOU_~~","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"4. please. turn off my life support","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"Features:","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"- [x] A detailed narration of my slow descent into my insanity","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"- [x] Nothing else","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"- [x] Oh yeah and Dukuwu helps you manage your tasks ig 🤔 just run the Duke file and type \u0027help\u0027 to find out more","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"Check my [website](https://ruthpohrp.github.io/ip/) and start using Dukewu now!","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"## ","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"Here\u0027s a sneak peek at what it looks like:","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"![Sneak Peek](docs/Ui.png?raw\u003dtrue)","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":25,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    archiveBaseName \u003d \"Dukewu\"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"repositories {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"dependencies {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ruthpohrp":23,"-":44}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"T | 0 | love","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"T | 0 | love you","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"# Super Pretty Ultra Hyper Mega Cute Shining God of Destruction Dukuwu ~~☆☆☆ tehe","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"\u003e dowcto, wewre losing him!!\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"\u003e qwick, hand me the defibwiwatow!!\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"\u003e please. turn off my [redacted] life support\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"\u003e                              - You after you use Dukuwu [(source)](https://i.redd.it/qcsnneo5fyh01.jpg)","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"By: `Ruth Poh` Since: `September 2021`","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"## 1. Introduction","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"Dukewu is a modified version of the Personal Assistant Chatbot Duke, complete with owo language support. ","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"Dukewu can help you **manage your tasks** with an **easy-to-read Graphical User Interface (GUI)** that ","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"operates using **text commands**.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"## 2. Quick Start","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"* Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"* Download the latest `duke.jar` [(here)](https://github.com/ruthpohrp/ip/releases).","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"* Copy the file to the folder you want to use as the home folder for your Dukewu.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"* Double-click the file to start the app. The GUI should appear in a few seconds.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Quickstart.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"## 3. Command Summary","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"| Summary | Command | Example |","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"|---------| ------- |---------|","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"|**Help:**|`help`|-|","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"|**List:**|`list`|-|","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"|**Todo:**|`todo TASK`|`todo finish my homework`|","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"|**Deadline:**|`deadline TASK /by DATE [TIME]`|`deadline Finish my homework /by 2021-09-16`","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"|**Event:**|`event TASK /at DATE [TIME]`|`event Christmas party at my neighbour\u0027s /at 2021-12-25`","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"|**Find:**|`find KEYWORDS [MORE KEYWORDS]`|`find catboys`","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"|**Delete:**|`delete NUMBER`|`delete 5`","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"|**Done:**|`done NUMBER`|`done 5`|","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"|**Clearall:**|`clearall` followed by `y`|-|","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"|**Exit:**|`bye`|-|","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"## 4. Command Features","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"**Command Format**","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `todo TASK`, `TASK` is a ","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"  parameter which can be used as `todo TASK`.","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"* Commands are case-insensitive, e.g. `todo TASK` is computed the same way as `ToDo TASK`","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"* Items in square brackets are optional e.g. `TASK DATE [TIME]` can be used as `TASK DATE` or as `TASK ","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"  DATE TIME`.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"* Parameters must be input in the order specified.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"\u003e 💡 By the way, I heard that if you type in \u0027love\u0027 into Dukewu, something nice will happen...","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"### 4.1 Viewing help: `help`","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"Displays a list of commands that Dukewu supports.","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"Format: `help`","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Help.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"### 4.2 Viewing the task list: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"Displays your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"Format: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"List.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"### 4.3 Creating a Todo task","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"Adds a task with no deadline to the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"Format: `todo TASK`","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"* `todo finish my homework`","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"* `todo prepare a burial so my teammates can let me down one last time`","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Todo.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"### 4.4 Creating a Deadline task","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"Adds a task with a deadline to the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"Format: `deadline TASK /by DATE [TIME]`","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"* `DATE` must be in the format `YYYY-MM-DD`","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"* `TIME`, if any, must be in the 24-hour format `XX:XX`","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"* `deadline Finish my homework /by 2021-09-16`","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"* `deadline Finish and submit my project /by 2021-09-17 23:59`","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Deadline.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"### 4.5 Creating a Event task","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"Adds a task with a time that it occurs to the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"Format: `event TASK /at DATE [TIME]`","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"* `DATE` must be in the format `YYYY-MM-DD`","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"* `TIME`, if any, must be in the 24-hour format `XX:XX`","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"* `event Christmas party at my neighbour\u0027s /at 2021-12-25`","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"* `event Grab Delivery collection /at 2021-12-25 23:59`","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Event.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"### 4.6 Finding entries: `find KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"Finds entries with certain keywords in them.","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"Format: `find KEYWORDS`","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"* The search is case-insensitive. e.g `cAt` will match `cat`","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"* The keywords are space-sensitive e.g. `cAtboy` will not match `catboy`","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"* Only the task description is searched, not date or time.","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"* `find catboys`","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"  ","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"  Returns `feed my catboys` and `buy clothes for my catboys`","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"* `find cat boys`","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"  ","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"  Returns `feed my cat boys` but not `feed my catboys` ","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Find.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"### 4.7 Deleting entries: `delete`","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"Deletes task number `NUMBER` on the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"Format: `delete NUMBER`","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"* Dukewu only accepts positive integers. Any funny attempts will result in an error.","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"* Entry must be a valid entry in the task list i.e. Trying to `delete 11` when there are only 10 entries ","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"ruthpohrp"},"content":"  in the list will result in an error.","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"\u003e 💡 **NOTE:** After deletion, task entries listed below the deleted task will shift upwards.","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"\u003e ⚠️ **WARNING:** This command cannot be reversed. Be careful when using this command!","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"* `delete 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"  ","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"    Deletes the 3rd entry in the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Delete.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"### 4.8 Marking entries as done: `done`","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"Marks a task in the task list as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"Format: `done NUMBER`","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"* Dukewu only accepts positive integers. Any funny attempts will result in an error.","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"* Entry must be a valid entry in the task list i.e. Trying to `delete 11` when there are only 10 entries","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"  in the list will result in an error.","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"ruthpohrp"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"ruthpohrp"},"content":"* `done 4`","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"ruthpohrp"},"content":"  ","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"  Marks the 4th entry in the task list as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Done.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"### 4.9 Clearing all entries: `clearall`","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"ruthpohrp"},"content":"Clears all entries from the task list. Asks for confirmation before deletion.","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"ruthpohrp"},"content":"\u003e ⚠️ **WARNING:** This command cannot be reversed. Be careful when using this command!","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"ruthpohrp"},"content":"Format: `clearall` followed by `y`","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Clearall.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"ruthpohrp"},"content":"### 4.10 Exiting the program: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"ruthpohrp"},"content":"Exits the program. ","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"ruthpohrp"},"content":"\u003e ⚠️ **WARNING:** Do not attempt to input anything into the GUI after inputting this command. Bad things ","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"ruthpohrp"},"content":"\u003e will happen!","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"ruthpohrp"},"content":"Format: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"Bye.png\" width\u003d\"400px\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"ruthpohrp"},"content":"### 4.11 Saving the data","lastModifiedDate":"2021-09-16"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"Task data is automatically saved into the hard disk after any command that changes the data. There is no ","lastModifiedDate":"2021-09-16"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"need to save manually. ","lastModifiedDate":"2021-09-16"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"## 5. FAQ","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"ruthpohrp"},"content":"**Q:** `Dukewu.jar` isn\u0027t opening when I double click it.\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"ruthpohrp"},"content":"**A:** If you\u0027re on Windows, go to settings and change it so it runs Java(TM) Platform SE binary by ","lastModifiedDate":"2021-09-16"},{"lineNumber":180,"author":{"gitId":"ruthpohrp"},"content":"default. If you\u0027re on Mac, make sure you have the latest version of Java installed before double-clicking ","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"on the .jar file. If all fails, you can manually open the .jar on the command terminal using the command ","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"ruthpohrp"},"content":"`-java Dukewu.jar`. (Make sure your current directory is the directory where your .jar is before using the ","lastModifiedDate":"2021-09-16"},{"lineNumber":183,"author":{"gitId":"ruthpohrp"},"content":"command.)  ","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":185,"author":{"gitId":"ruthpohrp"},"content":"**Q:** Will there be updates in the future?\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"**A:** Sadly, I do not plan to have any big updates in the future. I\u0027m trapped in homework hell.","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"ruthpohrp"},"content":"**Q:** What is the secret to acing CS2103T?\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"ruthpohrp"},"content":"**A:** I would like to know that too :\u0027)","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":176,"-":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" * Dukewu, the modified version of Duke (Personal Assistant Chatbot).","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" * Speaks owo language.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    private TaskList tasklist;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    private boolean shouldContinue;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"     * Initialises Dukewu.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * @param filePath File path to save data to","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        shouldContinue \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            tasklist \u003d storage.loadData();","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            System.out.println(Ui.getLoadingSuccessfulMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"            // creates new tasklist if one cannot be found.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"     * Sends response to Ui and gets a response.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"     * @param input Command input sent to Ui","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"     * @return Message from Ui","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"    public String getResponse(String input){","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"            shouldContinue \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        return ui.getMessage(this.storage, this.tasklist, input);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if Duke should continue receiving input from interface.","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     * @return False if input is not \"bye\", true otherwise","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        return !shouldContinue;","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ruthpohrp":54,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.IncorrectInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.MissingInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":" * Class for parsing keywords, and handling unparsed Strings.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     * Initialises Parser.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    public Parser() {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * Parses keywords.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * @param str String to be parsed","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of keyword","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Occurs when anything goes wrong during method","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    public String parseCommand(String str) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        if (str.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"            return \"bye\";","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"            return \"help\";","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"            return \"list\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"            return \"todo\";","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"            return \"deadline\";","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"            return \"event\";","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"            return \"done\";","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"            return \"delete\";","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"            return \"find\";","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"clearall\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"            return \"clearall\";","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"y\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"            return \"y\";","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"        } else if (str.equalsIgnoreCase(\"n\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"            return \"n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"            return str;","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"     * Joins together String for find keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"     * @param strParse Array of Strings to be joined together","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"     * @return Keyword to be found","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"    public String parseFind(String[] strParse) {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 1; i \u003c strParse.length; i++) {","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"            strBuilder.append(strParse[i]);","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"            if (i !\u003d strParse.length - 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"                strBuilder.append(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"        return strBuilder.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"     * Joins Array of Strings together without the keyword Todo at the start.","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"     * @param strParse Array of Strings to be parsed","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"     * @return Todo task","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Errors that occur during parsing (incorrect commands, etc.)","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"    public Todo parseTodo(String[] strParse) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder taskb \u003d new StringBuilder();","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"        if (strParse.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"            throw new IncorrectInputException(\"todo\", \"using \u0027todo feed my cat\u0027\");","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 1; i \u003c strParse.length; i++) {","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"            taskb.append(strParse[i]);","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"            if (i !\u003d strParse.length - 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"                taskb.append(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"        return new Todo(taskb.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"     * Examines String[] and produces a Deadline from it.","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"     * @param strParse Array of Strings to be parsed","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"     * @return Deadline Task","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Errors that occur during parsing (incorrect commands, etc.)","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"    public Deadline parseDeadline(String[] strParse) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"            if (strParse.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"                throw new MissingInputException(\"deadline\");","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"            //parses words before /by keyword","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"            while (i \u003c strParse.length","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"                    \u0026\u0026 !strParse[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"                strBuilder.append(strParse[i]);","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"                if (i \u003c strParse.length - 1","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"                        \u0026\u0026 !strParse[i + 1].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"                    strBuilder.append(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"                i++;","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"            i++;","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"            //parses words after /by keyword","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"            if (strBuilder.toString().equals(\"\") || (i !\u003d strParse.length - 1 \u0026\u0026 i !\u003d strParse.length - 2)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"deadline\",","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"                        \"using \u0027deadline feed my cat /by 2020-01-01 10:30\u0027. Time is optional!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"            assert strParse[i - 1].equalsIgnoreCase(\"/by\") : \"Deadline missing /by keyword\";","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"ruthpohrp"},"content":"            LocalDate date \u003d LocalDate.parse(strParse[i++]);","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"            if (i \u003d\u003d strParse.length - 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"                LocalTime time \u003d LocalTime.parse(strParse[i]);","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"                return new Deadline(strBuilder.toString(), date, time);","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"                return new Deadline(strBuilder.toString(), date);","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"ruthpohrp"},"content":"            throw new IncorrectInputException(\"deadline\",","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"                    \"using \u0027deadline feed my cat /by 2020-01-01 10:30\u0027 (Time is optional!)\");","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"     * Examines String[] and produces a Event from it.","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"     * @param strParse Array of Strings to be parsed","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"     * @return Event task","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Errors that occur during parsing (incorrect commands, etc.)","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"ruthpohrp"},"content":"    public Event parseEvent(String[] strParse) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"ruthpohrp"},"content":"            if (strParse.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"                throw new MissingInputException(\"event\");","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"            //parses words before /at keyword","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"ruthpohrp"},"content":"            while (i \u003c strParse.length","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"ruthpohrp"},"content":"                    \u0026\u0026 !strParse[i].equalsIgnoreCase(\"/at\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"ruthpohrp"},"content":"                strBuilder.append(strParse[i]);","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"ruthpohrp"},"content":"                if (i \u003c strParse.length - 1","lastModifiedDate":"2021-09-09"},{"lineNumber":160,"author":{"gitId":"ruthpohrp"},"content":"                        \u0026\u0026 !strParse[i + 1].equalsIgnoreCase(\"/at\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":161,"author":{"gitId":"ruthpohrp"},"content":"                    strBuilder.append(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":162,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"ruthpohrp"},"content":"                i++;","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"ruthpohrp"},"content":"            i++;","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"ruthpohrp"},"content":"            //parses words after /at keyword","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"ruthpohrp"},"content":"            if (strBuilder.toString().equals(\"\") || (i !\u003d strParse.length - 1 \u0026\u0026 i !\u003d strParse.length - 2)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"event\",","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"ruthpohrp"},"content":"                        \"using \u0027event feed neighbour\u0027s cat /at 2020-01-01 08:00\u0027 (Time is optional!)\");","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"ruthpohrp"},"content":"            assert strParse[i - 1].equalsIgnoreCase(\"/at\") : \"Event missing /at keyword\";","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"ruthpohrp"},"content":"            LocalDate date \u003d LocalDate.parse(strParse[i++]);","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"            if (i \u003d\u003d strParse.length - 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"                LocalTime time \u003d LocalTime.parse(strParse[i]);","lastModifiedDate":"2021-09-09"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"                return new Event(strBuilder.toString(), date, time);","lastModifiedDate":"2021-09-09"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"ruthpohrp"},"content":"                return new Event(strBuilder.toString(), date);","lastModifiedDate":"2021-09-09"},{"lineNumber":178,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"ruthpohrp"},"content":"            throw new IncorrectInputException(\"event\",","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"                    \"using \u0027event feed neighbour\u0027s cat /at 2020-01-01 08:00\u0027. Time is optional!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":184,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":185,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"     * Converts date to a readable String representation.","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"     * @param date Date to be converted","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of readable Date","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"ruthpohrp"},"content":"    public String simplifyDate(LocalDate date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":191,"author":{"gitId":"ruthpohrp"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":192,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":193,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":194,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"ruthpohrp"},"content":"     * Converts time to a readable String representation.","lastModifiedDate":"2021-09-16"},{"lineNumber":196,"author":{"gitId":"ruthpohrp"},"content":"     * @param time Time to be converted","lastModifiedDate":"2021-09-16"},{"lineNumber":197,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of readable time","lastModifiedDate":"2021-09-16"},{"lineNumber":198,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"    public String simplifyTime(LocalTime time) {","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"ruthpohrp"},"content":"        int hour \u003d time.getHour();","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"        int minute \u003d time.getMinute();","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"        String hourInString;","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"        String minuteInString;","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"        String amOrPm;","lastModifiedDate":"2021-09-09"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"        if (hour \u003c 12) {","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"            hourInString \u003d String.valueOf(hour);","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"            amOrPm \u003d \"am\";","lastModifiedDate":"2021-09-09"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"        } else if (hour \u003d\u003d 12) {","lastModifiedDate":"2021-09-16"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"            hourInString \u003d String.valueOf(hour);","lastModifiedDate":"2021-09-16"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"            amOrPm \u003d \"pm\";","lastModifiedDate":"2021-09-16"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"            hourInString \u003d String.valueOf(hour - 12);","lastModifiedDate":"2021-08-31"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"            amOrPm \u003d \"pm\";","lastModifiedDate":"2021-09-09"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"        if (minute \u003c 10) {","lastModifiedDate":"2021-08-31"},{"lineNumber":216,"author":{"gitId":"ruthpohrp"},"content":"            minuteInString \u003d \"0\" + String.valueOf(minute);","lastModifiedDate":"2021-08-31"},{"lineNumber":217,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":218,"author":{"gitId":"ruthpohrp"},"content":"            minuteInString \u003d String.valueOf(minute);","lastModifiedDate":"2021-08-31"},{"lineNumber":219,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":220,"author":{"gitId":"ruthpohrp"},"content":"        return hourInString + \".\" + minuteInString + amOrPm;","lastModifiedDate":"2021-09-09"},{"lineNumber":221,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":222,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ruthpohrp":222}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.LoadingFileError;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.EmptyFileError;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.SaveDirectoryError;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.SaveFileError;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":" * Allows reading and saving of tasks to a given file.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    private String filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"     * Initialises Storage.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"     * @param filePath File path where task list data is stored","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"     * Reads txt file from path given and returns a TaskList of the tasks inside.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"     * @return TaskList of tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Exceptions that occur when loading file","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    public TaskList loadData() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        String homeDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"        Path path \u003d Paths.get(homeDir, this.filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        boolean directoryExists \u003d Files.exists(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"            throw new EmptyFileError();","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"            for (String str : lines) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"                String[] strparse \u003d str.split(Pattern.quote(\" | \"));","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"                // incorrect task listed for some reason","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"                if (strparse.length \u003c 3 || strparse.length \u003e 5) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"                    continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"                } else if (strparse[0].equals(\"T\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"                    taskList.addReadTodo(strparse[2], Integer.parseInt(strparse[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                } else if (strparse[0].equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003c 5) {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"                        taskList.addReadDeadline(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"                                Integer.parseInt(strparse[1]), strparse[3], null);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"                    } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"                        taskList.addReadDeadline(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"                                Integer.parseInt(strparse[1]), strparse[3], strparse[4]);","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"                } else if (strparse[0].equals(\"E\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"                    if (strparse.length \u003c 5) {","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"                        //event has a time","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"                        taskList.addReadEvent(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"                                Integer.parseInt(strparse[1]), strparse[3], null);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"                    } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"                        //event doesn\u0027t have a time","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"                        taskList.addReadEvent(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"                                Integer.parseInt(strparse[1]), strparse[3], strparse[4]);","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"                    }","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"            return taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"            throw new LoadingFileError();","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"     * Saves TaskList in String form to txt file. If file does not exist, one is created.","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskList taskList to be converted into txt file, then saved","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Exceptions that occur when saving file","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"    public void saveData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"        String textToSave \u003d taskList.saveAsString();","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"        String homeDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"        Path path \u003d Paths.get(homeDir, this.filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"        boolean directoryExists \u003d Files.exists(path);","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"            } catch(IOException e){","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"                throw new SaveDirectoryError();","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"            Files.write(Paths.get(homeDir, this.filePath), textToSave.getBytes());","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"            throw new SaveFileError();","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ruthpohrp":109}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.*;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":" * Stores list of Tasks in an array for reference.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    private int counter;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        this.counter \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor for TaskList","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     * @param tasks Arraylist for Tasks. Should have 100 capacity.","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        this.counter \u003d tasks.size();","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Todo (Task) to TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"     * @param todo Todo task.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Todo Task to TaskList. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     * @param task String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"     * @param isDoneInt Whether task is done or not. 0 is not done, 1 is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"    public void addReadTodo(String task, int isDoneInt) {","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"        tasks.add(new Todo(task));","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        if (isDoneInt \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"            this.markReadDone(this.counter);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Deadline Task to TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"     * @param deadline Deadline task.","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Deadline Task to TaskList. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"     * @param task String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"     * @param isDoneInt Whether task is done or not. 0 is not done, 1 is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"     * @param date Date deadline task needs to be done by.","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"     * @param time Time deadline occurs by.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"    public void addReadDeadline(String task, int isDoneInt, String date, String time) {","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"            tasks.add(new Deadline(task, LocalDate.parse(date)));","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"            tasks.add(new Deadline(task, LocalDate.parse(date), LocalTime.parse(time)));","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"        if (isDoneInt \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"            this.markReadDone(this.counter);","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Event Task to TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"     * @param event Event task.","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"        tasks.add(event);","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"     * Adds Event Task to TaskList. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"     * @param task String of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"     * @param isDoneInt Whether task is done or not. 0 is not done, 1 is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"     * @param date Date event occurs at.","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"     * @param time Time event occurs at.","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"    public void addReadEvent(String task, int isDoneInt, String date, String time) {","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"            tasks.add(new Event(task, LocalDate.parse(date)));","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"            tasks.add(new Event(task, LocalDate.parse(date), LocalTime.parse(time)));","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"        }        if (isDoneInt \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"            this.markReadDone(this.counter);","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"        counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"     * Marks task as done. Returns number of task in TaskList that is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"     * @param strParse Array of Strings to be parsed.","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"     * @return Number of tasks in TaskList that is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"     * @throws MissingInputException When there is a missing input after the keyword \"done\".","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"     * @throws MissingNoException When there is a missing number after the keyword.","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"     * @throws TaskDoneException When task is already marked as done.","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"    public int markDone(String[] strParse) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"        if (strParse.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingInputException(\"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"            int taskListNo \u003d Integer.parseInt(strParse[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"ruthpohrp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"        int taskListNo \u003d Integer.parseInt(strParse[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"        if ((taskListNo - 1) \u003e\u003d counter || (taskListNo - 1) \u003c 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"        if (tasks.get(taskListNo - 1).markAsDone()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"ruthpohrp"},"content":"            return taskListNo;","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"ruthpohrp"},"content":"            throw new TaskDoneException();","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"     * Marks task as done. Occurs when loading from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskListNo Number of task in TaskList that is done.","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"    public void markReadDone(int taskListNo) {","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"ruthpohrp"},"content":"        boolean temp \u003d tasks.get(taskListNo).markAsDone();","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"     * Removes Task from TaskList. Returns deleted Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"     * @param strParse Array of Strings to be parsed.","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"     * @return Deleted Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"     * @throws MissingInputException When there is a missing input after the keyword \"delete\".","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"ruthpohrp"},"content":"     * @throws MissingNoException When there is a missing number after the keyword.","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"ruthpohrp"},"content":"    public Task delete(String[] strParse) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"ruthpohrp"},"content":"        if (strParse.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-09"},{"lineNumber":160,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingInputException(\"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"ruthpohrp"},"content":"            int taskListNo \u003d Integer.parseInt(strParse[1]) - 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":164,"author":{"gitId":"ruthpohrp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"ruthpohrp"},"content":"        int taskListNo \u003d Integer.parseInt(strParse[1]) - 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"ruthpohrp"},"content":"        if (taskListNo \u003e\u003d counter || taskListNo \u003c 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"ruthpohrp"},"content":"            throw new MissingNoException(\"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"ruthpohrp"},"content":"        Task t \u003d tasks.get(taskListNo);","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"ruthpohrp"},"content":"        counter--;","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"        tasks.remove(taskListNo);","lastModifiedDate":"2021-09-09"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"        return (t);","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"ruthpohrp"},"content":"     * Gets current number of tasks in TaskList - 1 (because it is counter).","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"ruthpohrp"},"content":"     * @return Current number of tasks in TaskList - 1","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"ruthpohrp"},"content":"    public int getTaskCounter() {","lastModifiedDate":"2021-09-09"},{"lineNumber":183,"author":{"gitId":"ruthpohrp"},"content":"        return this.counter;","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"     * Displays list of Tasks in TaskList, numbered.","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"ruthpohrp"},"content":"     * @return List of Tasks in TaskList, numbered.","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"ruthpohrp"},"content":"    public String displayList() {","lastModifiedDate":"2021-09-09"},{"lineNumber":191,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":192,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 0; i \u003c this.counter; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"ruthpohrp"},"content":"            strBuilder.append(i + 1).append(\". \").append(this.tasks.get(i).toString()).append(\u0027\\n\u0027);","lastModifiedDate":"2021-09-09"},{"lineNumber":194,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"ruthpohrp"},"content":"        return strBuilder.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":196,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"     * Gets Task from TaskList, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskListNo Specifies which Task to take.","lastModifiedDate":"2021-09-09"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of Task as specified.","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"    public String getTaskDescr(int taskListNo) {","lastModifiedDate":"2021-09-09"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"        return tasks.get(taskListNo - 1).toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"     * Returns last Task added to the TaskList, in String form.","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"     * @return Last Task added to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"    public String lastAddedTask() {","lastModifiedDate":"2021-09-09"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"        return tasks.get(counter - 1).toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"ruthpohrp"},"content":"     * Converts TaskList to String form to save in file. Different from displayList.","lastModifiedDate":"2021-08-28"},{"lineNumber":217,"author":{"gitId":"ruthpohrp"},"content":"     * @return TaskList in String form to save in file.","lastModifiedDate":"2021-08-28"},{"lineNumber":218,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":219,"author":{"gitId":"ruthpohrp"},"content":"    public String saveAsString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":220,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":221,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 0; i \u003c this.counter; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"ruthpohrp"},"content":"            strBuilder.append(tasks.get(i).toStorageString());","lastModifiedDate":"2021-09-09"},{"lineNumber":223,"author":{"gitId":"ruthpohrp"},"content":"            if (i \u003c this.counter - 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":224,"author":{"gitId":"ruthpohrp"},"content":"                strBuilder.append(\u0027\\n\u0027);","lastModifiedDate":"2021-09-09"},{"lineNumber":225,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":226,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":227,"author":{"gitId":"ruthpohrp"},"content":"        return strBuilder.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":228,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":230,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"ruthpohrp"},"content":"     * Finds Tasks that has the keyword for find.","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword to find.","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"ruthpohrp"},"content":"     * @return String of Tasks found with the keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":234,"author":{"gitId":"ruthpohrp"},"content":"     * @throws KeywordNotFoundException When there is nothing to find.","lastModifiedDate":"2021-09-09"},{"lineNumber":235,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":236,"author":{"gitId":"ruthpohrp"},"content":"    public String find(String keyword) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":237,"author":{"gitId":"ruthpohrp"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":238,"author":{"gitId":"ruthpohrp"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":239,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":240,"author":{"gitId":"ruthpohrp"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"ruthpohrp"},"content":"            Task temp \u003d tasks.get(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":242,"author":{"gitId":"ruthpohrp"},"content":"            if (temp.getTaskString().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-08-31"},{"lineNumber":243,"author":{"gitId":"ruthpohrp"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":244,"author":{"gitId":"ruthpohrp"},"content":"                strBuilder.append(i + 1).append(\". \").append(temp.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":245,"author":{"gitId":"ruthpohrp"},"content":"                if (i \u003c counter - 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":246,"author":{"gitId":"ruthpohrp"},"content":"                    strBuilder.append(\u0027\\n\u0027);","lastModifiedDate":"2021-09-09"},{"lineNumber":247,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":248,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":249,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":250,"author":{"gitId":"ruthpohrp"},"content":"        if (isFound) {","lastModifiedDate":"2021-08-28"},{"lineNumber":251,"author":{"gitId":"ruthpohrp"},"content":"            return strBuilder.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":252,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"ruthpohrp"},"content":"            throw new KeywordNotFoundException(keyword);","lastModifiedDate":"2021-09-08"},{"lineNumber":254,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"ruthpohrp"},"content":"     * Clears taskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"ruthpohrp"},"content":"    public void clearTaskList() {","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"ruthpohrp"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"ruthpohrp"},"content":"        this.counter \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":263,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":266,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for Tasks from tasklist.","lastModifiedDate":"2021-09-16"},{"lineNumber":267,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskNo Number task to get","lastModifiedDate":"2021-09-16"},{"lineNumber":268,"author":{"gitId":"ruthpohrp"},"content":"     * @return Task as requested","lastModifiedDate":"2021-09-16"},{"lineNumber":269,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":270,"author":{"gitId":"ruthpohrp"},"content":"    public Task getTask(int taskNo) {","lastModifiedDate":"2021-09-16"},{"lineNumber":271,"author":{"gitId":"ruthpohrp"},"content":"        return this.tasks.get(taskNo - 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":272,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":273,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":274,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ruthpohrp":274}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * User interface. Handles text for user interface.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    private static boolean isActivatedClearCommand \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    Ui() {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     * Executes command stated in string and saves taskList changes to storage.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     * @param storage  Storage for storing TaskList data","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskList TaskList of tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"     * @param str Command string","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"     * @return Message after executing command stated in string","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    public String getMessage(Storage storage, TaskList taskList, String str) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"            // splits input to parse for keywords.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"            String[] strParse \u003d str.split(\" \");","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"            String command \u003d this.parser.parseCommand(strParse[0]);","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"            if (isActivatedClearCommand) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"                if (command.equals(\"y\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"                    //do nothing","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"                    command \u003d \"n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"                isActivatedClearCommand \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"            if (str.equalsIgnoreCase(\"i love you duke\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"                command \u003d \"love\";","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"            switch (command) {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"                // breaks loop, closes chatbot.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"                ByeCommand bye \u003d new ByeCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"                return bye.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"            case \"help\":","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"                // lists command list","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"                HelpCommand help \u003d new HelpCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"                return help.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"            case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                // lists history of current tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"                ListCommand list \u003d new ListCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"                return list.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"                // adds a Todo task to the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"                TodoCommand todo \u003d new TodoCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"                return todo.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"                // adds a deadline task to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"                DeadlineCommand deadline \u003d new DeadlineCommand(storage,","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"                        taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"                return deadline.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"            case \"event\":","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"                // adds an event to the list. pretty much like deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"                EventCommand event \u003d new EventCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"                return event.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"            case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"                // marks a task as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"                DoneCommand done \u003d new DoneCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"                return done.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                // deletes corresponding task on list.","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"                 DeleteCommand delete \u003d new DeleteCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"                 return delete.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"            case \"find\":","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"                FindCommand find \u003d new FindCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"                return find.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"            case \"clearall\":","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"                isActivatedClearCommand \u003d true;","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"                ClearallCommand clearall \u003d new ClearallCommand(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"                return clearall.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"            case \"y\":","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"                ClearallConfirmCommand confirm \u003d new ClearallConfirmCommand(storage,","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"                        taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"                return confirm.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"            case \"n\":","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"                ClearallRejectCommand reject \u003d new ClearallRejectCommand(storage,","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"                        taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"                return reject.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"                //Fallthrough","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"            case \"love\":","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"                DukeLovesYouCommand love \u003d new DukeLovesYouCommand(","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"                        storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"                return love.execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"            default:","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for welcome message for Dukewu.","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"     * @return Welcome message for Dukewu","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"        return (\"Hewwo and welcomew tow Dukewu!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"                \"Dukewu aimws tow helpw youw orgwanise your wist of taskws.\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"                \"Pwease typwe \u0027help\u0027 for mwore infow! Uwu!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for successful loading of data for Dukewu.","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"     * @return Successful loading of data message","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"    public static String getLoadingSuccessfulMessage() {","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"        return (\"Loadiwng file for you. . . Loaded!\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ruthpohrp":135}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.IncorrectInputException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" * Class for executing the \u0027bye\u0027 command.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public ByeCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * Executes the bye command.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     * @return Goodbye message","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     * @throws DukeException Error that occurs if wrong bye command is inputted","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            if (strParse.length \u003e 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"bye\", \"\u0027bye\u0027\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            return (\"Goodbywe, Mastwer! Seew youw soown!\\n\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":34}},{"path":"src/main/java/duke/commands/ClearallCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.EmptyTaskListException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.IncorrectInputException;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"public class ClearallCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    public ClearallCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"            if (strParse.length \u003e 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"clearall\", \"\u0027clearall\u0027\");","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            if (taskList.getTaskCounter() \u003c 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                throw new EmptyTaskListException();","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            return (\"Pwease confirm clear task list by typing \u0027y\u0027 !\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":31}},{"path":"src/main/java/duke/commands/ClearallConfirmCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"public class ClearallConfirmCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    public ClearallConfirmCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"            if (strParse.length \u003e 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            taskList.clearTaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"            storage.saveData(taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            return (\"Alright. Cleared! Uwu!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":30}},{"path":"src/main/java/duke/commands/ClearallRejectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.IncorrectInputException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class ClearallRejectCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public ClearallRejectCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"            return (\"Alright. Pwease continue on!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":17}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * Abstract class for executing Commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    protected String[] strParse;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public Command(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"        this.strParse \u003d strParse;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    public abstract String execute();","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for error message.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"     * @param e DukeException thrown","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"     * @return Error message of DukeException","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    public String getErrorMessage(DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        return e.getMessage();","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":33}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public DeadlineCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            taskList.addDeadline(parser.parseDeadline(strParse));","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"            storage.saveData(taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Uwu! Addewd yourw taskws:\\n\").append(taskList.lastAddedTask() + \u0027\\n\u0027);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Youw noww havew \" + (taskList.getTaskCounter())","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                    + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":30}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public DeleteCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"            Task t \u003d taskList.delete(strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            storage.saveData(taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Thanwk youw forw youwr serwwice! Thwis taskw hasw beenw deweted:\\n\")","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"                    .append(t.toString() + \u0027\\n\u0027);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Youw noww havew \"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                    + (taskList.getTaskCounter())","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"                    + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":31}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public DoneCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"            int taskNo \u003d taskList.markDone(strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            storage.saveData(taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Thanwk youw forw youwr serwwice! Thwis taskw isw downe:\\n\")","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"                    .append(taskList.getTaskDescr(taskNo) + \u0027\\n\u0027);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":28}},{"path":"src/main/java/duke/commands/DukeLovesYouCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class DukeLovesYouCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    public DukeLovesYouCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"        return (\"Oh! Love! Dukewu loves you too! (ღˇωˇ)~♥\");","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":16}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public EventCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            taskList.addEvent(parser.parseEvent(strParse));","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"            storage.saveData(taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Uwu! Addewd yourw taskws:\\n\").append(taskList.lastAddedTask() + \u0027\\n\u0027);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Youw noww havew \" + (taskList.getTaskCounter())","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                    + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":30}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public FindCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            String tasksFound \u003d taskList.find(parser.parseFind(strParse));","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Foundw! Here are the matching tasks:\\n\")","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"                    .append(tasksFound + \u0027\\n\u0027);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":28}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.IncorrectInputException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public HelpCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            if (strParse.length \u003e 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"help\", \"\u0027help\u0027\");","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"            return (\"Commandws supported:\\n\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"                    + \"- bye\\n- clearall\\n- help\\n- list\\n- todo\\n- event\\n- deadline\\n- \"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                    + \"delete\\n- done\\n- find\\n\\nPlease check our website at https://ruthpohrp\" +","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"                    \".github.io/ip/ for more details!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":29}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.IncorrectInputException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public ListCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            if (strParse.length \u003e 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"                throw new IncorrectInputException(\"list\", \"\u0027list\u0027\");","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Uwu! Herw arw yourw taskws:\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            if (taskList.getTaskCounter() \u003d\u003d 0) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                stringBuilder.append(\"Itw seewsm like youw wist is emptwy! Congwats!\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"            } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"                stringBuilder.append(taskList.displayList());","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":33}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public TodoCommand(Storage storage, TaskList taskList, String[] strParse) {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(storage, taskList, strParse);","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public String execute() {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"            taskList.addTodo(parser.parseTodo(strParse));","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"            storage.saveData(taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Uwu! Addewd yourw taskws:\\n\").append(taskList.lastAddedTask() + \u0027\\n\u0027);","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"            stringBuilder.append(\"Youw noww havew \" + (taskList.getTaskCounter())","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"                    + \" taskw(s) inw thew wist! uwu\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            return this.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":31}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles all exceptions specific to Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     * Constructor to initialize all DukeExceptions.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     * @param message To be printed when error in Dukewu occurs.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"        super(message + \u0027\\n\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":15}},{"path":"src/main/java/duke/exceptions/EmptyFileError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles empty file errors.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" *","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"public class EmptyFileError extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke tries to read txt file for Task list, but comes up empty.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    public EmptyFileError() {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Uwu! Pre-existing File not foundw! \"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"                + \"Creating new file for you. . .\");","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":15}},{"path":"src/main/java/duke/exceptions/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"public class EmptyTaskListException extends DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke tries to clear the task list but it is already empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    public EmptyTaskListException() {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Hey! Youw can\u0027t clwear a task wist that is already emptwy!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":10}},{"path":"src/main/java/duke/exceptions/IncorrectInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"public class IncorrectInputException extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but input after it is invalid.","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword keyword input recognised by Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"     * @param suggestion suggestion made to user.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public IncorrectInputException(String keyword, String suggestion) {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Ohw no! Youw cawn\u0027t use \" + keyword + \" likw that! Twy \" + suggestion + \" inswead!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":12}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles invalid input exceptions.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke doesn\u0027t recognise the input.","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Sowwy, thiws commandw iswn\u0027t supporwted! TwT\");","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":13}},{"path":"src/main/java/duke/exceptions/KeywordNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles keyword not found exceptions.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class KeywordNotFoundException extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke tries to find tasks with keyword, but can\u0027t find any.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword Keyword input used to find tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    public KeywordNotFoundException(String keyword) {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Sowwy! I can\u0027tw findw anyw taskws containing \" + keyword + \" ! \u003e_\u003c\");","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":14}},{"path":"src/main/java/duke/exceptions/LoadingFileError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles loading file error exceptions.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class LoadingFileError extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when there\u0027s an error in loading and reading file.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public LoadingFileError() {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Uwu! There\u0027s something wrong withw the existing file! \"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"                + \"Did you meddle witwh it?\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"                + \"Creating new file for you. . .\");","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":15}},{"path":"src/main/java/duke/exceptions/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles missing input exceptions.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class MissingInputException extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but there is no input after it.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword Keyword input recognised by Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    public MissingInputException(String keyword) {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Oopsie uwu! Youw cawn\u0027t use \" + keyword + \" withoutw a descwiption forw it!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":14}},{"path":"src/main/java/duke/exceptions/MissingNoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles missing number exceptions.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class MissingNoException extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when Duke recognises keyword, but input (number) after it is invalid.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     * @param keyword Keyword input recognised by Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    public MissingNoException(String keyword) {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Thwere\u0027s no suchw taskw! Pwease enterw a *validw* numbewr after \u0027\"+ keyword + \"\u0027!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":14}},{"path":"src/main/java/duke/exceptions/SaveDirectoryError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles saving to directory errors.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class SaveDirectoryError extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when directory to save file in doesn\u0027t exist.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public SaveDirectoryError(){","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Oh now! I guess the diwectowwy doesn\u0027t exist.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":13}},{"path":"src/main/java/duke/exceptions/SaveFileError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles saving to file errors.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class SaveFileError extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when there\u0027s an error with saving the file.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public SaveFileError() {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Canw\u0027t save to a filew that doesn\u0027t exist, sorry!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":13}},{"path":"src/main/java/duke/exceptions/TaskDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Class that handles task is already done exceptions.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"public class TaskDoneException extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"     * Occurs when user tries to mark a task that\u0027s done but it\u0027s already done.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public TaskDoneException() {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        super(\"Looksw wike thisw taskw is alweady done! That\u0027s gweat!\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruthpohrp":13}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.gui;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        dialog.setFont(new Font(\"Lucida Grande\", 14));","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"        dialog.setPadding(new Insets(0, 0, 0, 10));","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"     * Gets DialogBox for user.","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"     * @param text User text","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"     * @param img User image","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"     * @return DialogBox for user","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"     * Gets DialogBox for Dukewu.","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"     * @param text Dukewu text","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"     * @param img Dukewu image","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"     * @return DialogBox for Dukewu","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"     * Gets Dukewu (Welcome Message) DialogBox.","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"     * @param img Dukewu image","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"     * @return Dukewu DialogBox with welcome message as text","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"    public static DialogBox getDukeWelcome(Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"        var db \u003d new DialogBox(Ui.getWelcomeMessage(), img);","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"        db.flip();","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"        return db;","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"ruthpohrp":91}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.gui;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class Launcher {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"ruthpohrp":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.gui;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":" * GUI for Duke using FXML.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"            stage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ruthpohrp":32}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.gui;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":" * Controller for Dukewu. Provides the layout for the other controls.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userBorryPeek.png\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukeBorryFingerGun.png\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeWelcome(dukeImage));","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"            CompletableFuture.delayedExecutor(2L, TimeUnit.SECONDS).execute(Platform::exit);","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"ruthpohrp":64}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * Creates a Deadline Task with a specified task with a date and time (optional).","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"     * Initializes Deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskString String representation of the deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * @param date Date of deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    public Deadline(String taskString, LocalDate date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        super(taskString);","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d date;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        super.time \u003d null;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"     * Initializes Deadline, with Date and Time.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskString String representation of the deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * @param date Date deadline is done by","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * @param time Time deadline is done by","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    public Deadline(String taskString, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        super(taskString);","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d date;","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        super.time \u003d time;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for date.","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"     * @return Readable string representation of date","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for date and time Deadline occurs by.","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     * @return Simplified string form of date and time","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"    public String getDateTimeStorage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"            return this.date.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"            return this.date.toString() + \" | \" + this.time.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"     * Returns simplified string representation of deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"     * @return Simplified string representation of deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"        return (\"D | \" + this.getIsDoneBinary() + \" | \" + super.taskString + \" | \" + this.getDateTimeStorage());","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"     * Returns readable string representation of deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"     * @return Readable string representation of deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"            return \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"                    + parser.simplifyDate(this.date) + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"            return \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"                    + parser.simplifyDate(this.date)","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"                    + \" \" + parser.simplifyTime(this.time)","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                    + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":86}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" * Creates a Event Task with a specified task with a date and time (optional).","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"     * Initializes Event.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskString String representation of the event","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     * @param date Date event occurs","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    public Event(String taskString, LocalDate date) {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"        super(taskString);","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d date;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        super.time \u003d null;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * Initializes Event, with Date and Time.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskString String representation of the event","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * @param date Date event occurs","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     * @param time Time event occurs","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    public Event(String taskString, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        super(taskString);","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d date;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        super.time \u003d time;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for date.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"     * @return Readable string representation of date","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for date and time Event occurs at.","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"     * @return Simplified string form of date and time","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    public String getDateTimeStorage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"            return this.date.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"            return this.date.toString() + \" | \" + this.time.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"     * Returns simplified string representation of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"     * @return Simplified string representation of event","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"        return (\"E | \" + this.getIsDoneBinary() + \" | \" + super.taskString + \" | \" + this.getDateTimeStorage());","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"     * Returns readable string representation of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"     * @return Readable string representation of event","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"            return \"[E] \" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"                    + parser.simplifyDate(this.date) + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"            return \"[E] \" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"                    + parser.simplifyDate(this.date)","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                    + \" \" + parser.simplifyTime(this.time)","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"                    + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":87}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" * Encloses a Task with a date and time that can be marked as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    protected String taskString;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"     * Initialises Task.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskString String representation of the task","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    public Task(String taskString) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"     * Getter method for taskString.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"     * @return String representation of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    public String getTaskString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        return taskString;","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"     * Returns binary format for isDone.","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"     * @return 1 is isDone, 0 is !isDone","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    public String getIsDoneBinary() {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"            return \"1\";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"            return \"0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    public abstract String getDate();","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if Task has a time.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if task has a time, false if not.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    public boolean hasTime() {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        return (this.time !\u003d null);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"     * Returns String representation of the Task (with description).","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"     * @return In form \u0027[X] taskString\u0027.","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        return \"[\" + this.getTaskStatus() + \"] \" + taskString;","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string \u0027X\u0027 if Task is done, \u0027 \u0027 if task is not.","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"     * @return string \u0027X\u0027 or \u0027x\u0027.","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"     * Marks Task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if task is marked as done, False if task is already done.","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"    public abstract String getDateTimeStorage();","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ruthpohrp":89}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":" * Todo (Task)","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":" * @author Ruth Poh","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     * Creates a Deadline Task with a specified todo.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     * @param taskString String representation of the todo","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public Todo(String taskString) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"        super(taskString);","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        super.date \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        super.time \u003d null;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     * Returns blank string as todo does not have a date.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     * @return Blank String","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     * Returns blank string as todo does not have a date or time.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"     * @return Blank String","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    public String getDateTimeStorage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"     * Returns string representation of todo for storage.","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"     * @return In format \u0027T | isDoneStatus | taskString\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        return (\"T | \" + this.getIsDoneBinary() + \" | \" + super.taskString);","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     * Returns descriptive string representation of todo.","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"     * @return In format \u0027[T]: taskString\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"69.0\" fitWidth\u003d\"69.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"ruthpohrp":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"ruthpohrp":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public void parseCommandTest() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"bye\", parser.parseCommand(\"bYE\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    public void parseTodo() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        String[] strParse \u003d new String[] {\"todo\", \"kill\", \"me\"};","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"kill me\", parser.parseTodo(strParse).getTaskString());","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    public void parseTime() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        LocalTime time \u003d LocalTime.parse(\"13:00\");","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"1.00pm\", parser.simplifyTime(time));","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    public void parseEvent() throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        String[] strParse \u003d new String[] {\"event\", \"kill\", \"me\" ,\"now\", \"/at\", \"2020-01-01\", \"23:23\"};","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        Event event \u003d parser.parseEvent(strParse);","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"E | 0 | kill me now | 2020-01-01 | 23:23\", event.toStorageString());","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"ruthpohrp":40}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"public class StorageTest {","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public void storageTest() throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"        String string \u003d \"D | 1 | qerewlrqwer | 2022-12-12 | 23:59\";","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"        lines.add(string);","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        for (String str : lines) {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"            String[] strparse \u003d str.split(Pattern.quote(\" | \"));","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"            // incorrect task listed for some reason","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"            if (strparse.length \u003c 3 || strparse.length \u003e 5) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"                continue;","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equals(\"T\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"                taskList.addReadTodo(strparse[2], Integer.parseInt(strparse[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equals(\"D\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"                if (strparse.length \u003c 5) {","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"                    taskList.addReadDeadline(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"                            Integer.parseInt(strparse[1]), strparse[3], null);","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"                    taskList.addReadDeadline(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"                            Integer.parseInt(strparse[1]), strparse[3], strparse[4]);","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"            } else if (strparse[0].equals(\"E\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"                if (strparse.length \u003c 5) {","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"                    //event has a time","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"                    taskList.addReadEvent(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"                            Integer.parseInt(strparse[1]), strparse[3], null);","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"                    //event doesn\u0027t have a time","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"                    taskList.addReadEvent(strparse[2],","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"                            Integer.parseInt(strparse[1]), strparse[3], strparse[4]);","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"[D] [X] qerewlrqwer (by: Dec 12 2022 11.59pm)\",","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"                taskList.getTask(1).toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ruthpohrp":51}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    public void getTaskDescrTest() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Todo(\"Kill me\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Event(\"Revive me\", LocalDate.of(2022, 12,12)));","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"        TaskList tasks \u003d new TaskList(tasklist);","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"[T] [ ] Kill me\", tasks.getTaskDescr(1));","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    public void saveAsStringTest() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Todo(\"Kill me\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Event(\"Revive me\", LocalDate.of(2022, 12,12)));","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Event(\"Revive me\", LocalDate.of(2022, 12,12),","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"                LocalTime.parse(\"23:23\")));","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        TaskList tasks \u003d new TaskList(tasklist);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"T | 0 | Kill me\\nE | 0 | Revive me | 2022-12-12\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"                \"E | 0 | Revive me | 2022-12-12 | 23:23\", tasks.saveAsString());","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    public void saveAsStringDateTest() throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Todo(\"Kill me\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Event(\"Revive me\", LocalDate.of(2022, 12,12)));","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"        tasklist.add(new Event(\"Revive me\", LocalDate.of(2022, 12,12),","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"                LocalTime.parse(\"23:23\")));","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        TaskList tasks \u003d new TaskList(tasklist);","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(\"T | 0 | Kill me\\nE | 0 | Revive me | 2022-12-12\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"                \"E | 0 | Revive me | 2022-12-12 | 23:23\", tasks.saveAsString());","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"ruthpohrp":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ruthpohrp":6}}]
