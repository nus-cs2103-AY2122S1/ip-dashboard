[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"javafx {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.base\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"aikenwx":28,"-":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":" * Class that represent a dialog made in the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    private Label text;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     * Instantiates a DialogBox object.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"     * @param label The given Label object.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"     * @param imageView The given imageView object","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"    public DialogBox(Label label, ImageView imageView) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        text \u003d label;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"        displayPicture \u003d imageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"     * Constructor for a new user DialogBox.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"     * @param label The given Label object.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"     * @param imageView The given imageView object","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"     * @return","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"    public static DialogBox getUserDialog(Label label, ImageView imageView) {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"        return new DialogBox(label, imageView);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"     * Constructor for a new Duke DialogBox.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"     * @param label The given Label object.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"     * @param imageView The given imageView object","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"     * @return","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"    public static DialogBox getDukeDialog(Label label, ImageView imageView) {","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"        DialogBox db \u003d new DialogBox(label, imageView);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"aikenwx":73}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":" * Duke program implements a basic task bot application. He serves like an efficient butler.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"     * Initialises a new Duke object with storage path data/taskList.txt","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"        this.storage \u003d new Storage(\"data/taskList.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"            this.tasks \u003d storage.loadTasks();","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"     * Initialises a new Duke object by taking in a filePath for storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"     * @param filePath This will be the location where user tasks are in the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"            this.tasks \u003d storage.loadTasks();","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"        Ui ui \u003d new Ui(stage);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"        ui.showGui(this.tasks, this.storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aikenwx":50,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":" * Represents exceptions specific to Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"     * Initialises a DukeException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"     * @param message","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aikenwx":18}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":" * Class responsible for launching Duke run by GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"aikenwx":14}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"import duke.command.FindByDateCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"import duke.command.FindByDescriptionCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":" * The Parser class is responsible for parsing all user commands and input dates and times for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"    private static final String ERROR_MESSAGE \u003d \"Wrong format Sir/Mdm. Dates and times must be given as only a date: \"","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        + \"DATE\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"        + \"or as date and time: DATE TIME\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"        + \"Accepted formats for DATE: YYYY-MM-DD, DD/MM/YYYY\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        + \"Accepted formats for TIME (24H format): TT:TT, TTTT\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"        + \"Examples for DATE TIME: 13/2/2019 1800, 13/2/2019 18:00, 2019-02-13 1800,\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"        + \"2019-02-13 18:00\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"        + \"Examples for DATE: 13/2/2019, 2019-02-13\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"     * Returns an executable Command after parsing the user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"     * If the command is invalid, a DukeException is thrown","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"     * @param input   User command line input.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"     * @param ui      A Duke user interface object.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"     * @param tasks   List of all tasks in the user\u0027s current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"     * @param storage Current storage object used to store the user\u0027s current tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"     * @return Executable command.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"    public static Command parse(String input, Ui ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"            return new ExitCommand(ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"            return new ListCommand(tasks, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"        } else if (input.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"            return generateMarkTaskCommand(input, ui, tasks, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"            return generateDeleteTaskCommand(input, ui, tasks, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"        } else if (input.split(\" \")[0].equals(\"find/date\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"            return generateFindByDateCommand(input, ui, tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"        } else if (input.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"            return generateFindByDescriptionCommand(input, ui, tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"        } else if (input.equals(\"sort\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"            return generateSortCommand(ui, tasks, storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"        } else if (input.split(\" \")[0].equals(\"todo\") || input.split(\" \")[0].equals(\"event\")","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"            || input.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"            return generateAddCommand(input, ui, tasks, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"Pardon me Sir/Mdm, but I do not understand.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"     * Parses date and time Strings into a LocalDateTime object.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"     * @param dateInput The input String for date.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"     * @param timeInput The input Sting for time.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"    public static LocalDateTime parseDateAndTime(String dateInput, String timeInput) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"        LocalDate date \u003d parseDate(dateInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"        LocalTime time \u003d parseTime(timeInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"     * Formats LocalDateTime object into String for UI display.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"     * @param dateTime   The LocalDateTime object to be formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"     * @param isDateOnly Determines whether time will be displayed along with the date.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"     * @return Formatted date and/or time String.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"    public static String getDateTimeString(LocalDateTime dateTime, boolean isDateOnly) {","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"        int len \u003d dateTime.toString().length();","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"        if (isDateOnly) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"            return String.format(\"%s %s %s\", dateTime.getDayOfMonth(), dateTime.getMonth().toString().substring(0, 1)","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"                + dateTime.getMonth().toString().substring(1).toLowerCase(), dateTime.getYear());","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"        return String.format(\"%s %s %s %s\", dateTime.getDayOfMonth(), dateTime.getMonth().toString().substring(0, 1)","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"                + dateTime.getMonth().toString().substring(1).toLowerCase(), dateTime.getYear(),","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"            dateTime.toString().substring(len - 5));","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"    private static LocalDate parseDate(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"            date \u003d LocalDate.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"            String[] dayMonthAndTime \u003d input.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"            if (dayMonthAndTime.length !\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(ERROR_MESSAGE);","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"                int day \u003d Integer.parseInt(dayMonthAndTime[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"                int month \u003d Integer.parseInt(dayMonthAndTime[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"                int year \u003d Integer.parseInt(dayMonthAndTime[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"                date \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"            } catch (DateTimeException | NumberFormatException f) {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(ERROR_MESSAGE);","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"        return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"    private static LocalTime parseTime(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"        LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"aikenwx"},"content":"            time \u003d LocalTime.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"aikenwx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"aikenwx"},"content":"            if (input.length() !\u003d 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(ERROR_MESSAGE);","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"aikenwx"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"aikenwx"},"content":"                int hour \u003d Integer.parseInt(input.substring(0, 2));","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"aikenwx"},"content":"                int minute \u003d Integer.parseInt(input.substring(2));","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"aikenwx"},"content":"                time \u003d LocalTime.of(hour, minute);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"aikenwx"},"content":"            } catch (NumberFormatException | DateTimeException f) {","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(ERROR_MESSAGE);","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"aikenwx"},"content":"        return time;","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"aikenwx"},"content":"    private static Command generateMarkTaskCommand(String input, Ui ui, TaskList tasks, Storage storage)","lastModifiedDate":"2021-09-08"},{"lineNumber":154,"author":{"gitId":"aikenwx"},"content":"        throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":155,"author":{"gitId":"aikenwx"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"aikenwx"},"content":"        int taskToMark;","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"aikenwx"},"content":"        // No task given to mark","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"aikenwx"},"content":"        if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"aikenwx"},"content":"            throw (new DukeException(\"Please specify a task you would like marked as done Sir/Mdm:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"aikenwx"},"content":"                + ui.list(tasks)));","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"aikenwx"},"content":"            taskToMark \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"aikenwx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":166,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"Please enter a proper number within this range Sir/Mdm:\\n\" + ui.list(tasks));","lastModifiedDate":"2021-09-01"},{"lineNumber":167,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"aikenwx"},"content":"        // No tasks in task list","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"aikenwx"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"aikenwx"},"content":"            throw (new DukeException(\"You have no tasks to mark as done Sir/Mdm!\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"aikenwx"},"content":"        // Task not in enumerated range","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"aikenwx"},"content":"        if (taskToMark \u003c 0 || taskToMark \u003e tasks.size() - 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"aikenwx"},"content":"            throw (new DukeException(\"Please specify a task within this range Sir/Mdm:\\n\" + ui.list(tasks)));","lastModifiedDate":"2021-09-01"},{"lineNumber":178,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"aikenwx"},"content":"        return new MarkDoneCommand(tasks.get(taskToMark), tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":180,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"aikenwx"},"content":"    private static Command generateDeleteTaskCommand(String input, Ui ui, TaskList tasks, Storage storage)","lastModifiedDate":"2021-09-08"},{"lineNumber":183,"author":{"gitId":"aikenwx"},"content":"        throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":184,"author":{"gitId":"aikenwx"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":185,"author":{"gitId":"aikenwx"},"content":"        int taskToDelete;","lastModifiedDate":"2021-09-01"},{"lineNumber":186,"author":{"gitId":"aikenwx"},"content":"        //No task given to delete","lastModifiedDate":"2021-09-01"},{"lineNumber":187,"author":{"gitId":"aikenwx"},"content":"        if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":188,"author":{"gitId":"aikenwx"},"content":"            throw (new DukeException(\"Please specify a task you would like to delete Sir/Mdm:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":189,"author":{"gitId":"aikenwx"},"content":"                + ui.list(tasks)));","lastModifiedDate":"2021-09-01"},{"lineNumber":190,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":191,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":192,"author":{"gitId":"aikenwx"},"content":"            taskToDelete \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"aikenwx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":194,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"Please enter a proper number within this range Sir/Mdm:\\n\" + ui.list(tasks));","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":196,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":197,"author":{"gitId":"aikenwx"},"content":"        // No tasks in task list","lastModifiedDate":"2021-09-01"},{"lineNumber":198,"author":{"gitId":"aikenwx"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":199,"author":{"gitId":"aikenwx"},"content":"            throw (new DukeException(\"You have no tasks to delete Sir/Mdm!\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":200,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":202,"author":{"gitId":"aikenwx"},"content":"        // Task not in enumerated range","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"aikenwx"},"content":"        if (taskToDelete \u003c 0 || taskToDelete \u003e tasks.size() - 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":204,"author":{"gitId":"aikenwx"},"content":"            throw (new DukeException(\"Please specify a task within this range Sir/Mdm:\\n\" + ui.list(tasks)));","lastModifiedDate":"2021-09-01"},{"lineNumber":205,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"aikenwx"},"content":"        return new DeleteCommand(taskToDelete, tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"aikenwx"},"content":"    private static Command generateFindByDateCommand(String input, Ui ui, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"aikenwx"},"content":"        String[] values \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"aikenwx"},"content":"        // No date given","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"aikenwx"},"content":"        if (values.length !\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"Please specify a date for which to find deadlines and events \"","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"aikenwx"},"content":"                + \"Sir/Mdm!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"aikenwx"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"aikenwx"},"content":"                LocalDate date \u003d Parser.parseDate(values[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"aikenwx"},"content":"                return new FindByDateCommand(date, tasks, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":219,"author":{"gitId":"aikenwx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":220,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(\"Wrong format for date Sir/Mdm. Examples of dates accepted: \"","lastModifiedDate":"2021-09-01"},{"lineNumber":221,"author":{"gitId":"aikenwx"},"content":"                    + \"2/12/2019, 2019-12-02\");","lastModifiedDate":"2021-09-01"},{"lineNumber":222,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":224,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":225,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":226,"author":{"gitId":"aikenwx"},"content":"    private static Command generateFindByDescriptionCommand(String input, Ui ui, TaskList tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":227,"author":{"gitId":"aikenwx"},"content":"        String searchPhrase \u003d input.substring(4).trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":228,"author":{"gitId":"aikenwx"},"content":"        return new FindByDescriptionCommand(searchPhrase, tasks, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":229,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":230,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":231,"author":{"gitId":"aikenwx"},"content":"    private static Command generateAddCommand(String input, Ui ui, TaskList tasks, Storage storage)","lastModifiedDate":"2021-09-08"},{"lineNumber":232,"author":{"gitId":"aikenwx"},"content":"        throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":233,"author":{"gitId":"aikenwx"},"content":"        Pattern todoPattern \u003d Pattern.compile(\"(^(todo ))\");","lastModifiedDate":"2021-09-01"},{"lineNumber":234,"author":{"gitId":"aikenwx"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"(^(deadline ))\");","lastModifiedDate":"2021-09-01"},{"lineNumber":235,"author":{"gitId":"aikenwx"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"(^(event ))\");","lastModifiedDate":"2021-09-01"},{"lineNumber":236,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":237,"author":{"gitId":"aikenwx"},"content":"        if (todoPattern.matcher(input).find() || input.equals(\"todo\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":238,"author":{"gitId":"aikenwx"},"content":"            Task newTask \u003d Task.of(TaskType.TODO, input);","lastModifiedDate":"2021-09-06"},{"lineNumber":239,"author":{"gitId":"aikenwx"},"content":"            return new AddCommand(newTask, tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":240,"author":{"gitId":"aikenwx"},"content":"        } else if (deadlinePattern.matcher(input).find() || input.equals(\"deadline\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":241,"author":{"gitId":"aikenwx"},"content":"            Task newTask \u003d Task.of(TaskType.DEADLINE, input);","lastModifiedDate":"2021-09-06"},{"lineNumber":242,"author":{"gitId":"aikenwx"},"content":"            return new AddCommand(newTask, tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":243,"author":{"gitId":"aikenwx"},"content":"        } else if (eventPattern.matcher(input).find() || input.equals(\"event\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":244,"author":{"gitId":"aikenwx"},"content":"            Task newTask \u003d Task.of(TaskType.EVENT, input);","lastModifiedDate":"2021-09-06"},{"lineNumber":245,"author":{"gitId":"aikenwx"},"content":"            return new AddCommand(newTask, tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":246,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":247,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"Pardon me Sir/Mdm, but I do not understand.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":248,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":249,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":250,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":251,"author":{"gitId":"aikenwx"},"content":"    private static Command generateSortCommand(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":252,"author":{"gitId":"aikenwx"},"content":"        return new SortCommand(tasks, ui, storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":253,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":254,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":255,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":255}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":" * Class that handles storage for a user\u0027s data inside a hard disk. Data is saved as a pre-formatted text file","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    protected String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"     * Initialises Storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"     * @param filePath Specifies the directory and filename of the stored user data in the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"     * Loads up user data from the hard disk using the filePath indicated in the Storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"     * @return TaskList containing all the user\u0027s current tasks stored in hard disk","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"    public TaskList loadTasks() throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"        createDirectory();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"        File taskList \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"            if (taskList.exists()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"                Scanner scanner \u003d new Scanner(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"                    switch (line.charAt(2)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"                        loadDeadline(line, taskArrayList);","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"                        break;","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"                        loadEvent(line, taskArrayList);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"                        break;","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"                        loadTodo(line, taskArrayList);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"                        break;","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"                    default:","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"                        throw new DukeException(\"Cannot load task of unknown type\");","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"                    }","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"                taskList.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"                assert taskList.exists() : \"file at path \" + this.filePath + \" should exist\";","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"                return new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"        return new TaskList(taskArrayList);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"    private void createDirectory() {","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"        File dataDir \u003d new File(this.filePath.substring(0, this.filePath.lastIndexOf(\u0027/\u0027)));","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"        dataDir.mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"     * Saves the user\u0027s tasks into the hard disk. Data is stored as a formatted text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"     * @param tasks Tasks stored into hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"        createDirectory();","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"        File taskListFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"        String storageString \u003d tasks.getStorageString();","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"            if (!taskListFile.exists()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"                taskListFile.createNewFile();","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"            fw.write(storageString);","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"            fw.close();","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"    private void loadDeadline(String line, ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"        String[] storedValues \u003d line.substring(5).split(\"[|]\", 4);","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"        boolean isDone \u003d storedValues[0].trim().equals(\"X\");","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"        boolean isDateOnly \u003d storedValues[1].trim().equals(\"X\");","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(storedValues[2].trim());","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"        String description \u003d storedValues[3].trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(new Deadline(description, date, isDone, isDateOnly));","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"    private void loadEvent(String line, ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"        String[] storedValues \u003d line.substring(5).split(\"[|]\", 5);","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"        boolean isDone \u003d storedValues[0].trim().equals(\"X\");","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"        boolean isDateOnly \u003d storedValues[1].trim().equals(\"X\");","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(storedValues[2].trim());","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(storedValues[3].trim());","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"        String description \u003d storedValues[4].trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(new Event(description, startDate, endDate, isDone, isDateOnly));","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"    private void loadTodo(String line, ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"        String[] storedValues \u003d line.substring(5).split(\"[|]\", 2);","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"        boolean isDone \u003d storedValues[0].trim().equals(\"X\");","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"        String description \u003d storedValues[1].trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(new Todo(description, isDone));","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"aikenwx":135}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":" * Class responsible for all UI interactions with user.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"    private Stage stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"    private AnchorPane mainLayout;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"     * Constructor for jUnit testing","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"    public Ui() {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"     * Constructor for Ui class","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"    public Ui(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"        // setting variables","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"        mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"        // setup styling/ formatting","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"     * Displays the message of any DukeException thrown by Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"     * @param e DukeException to be printed.","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"    protected void showException(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"        String message \u003d e.getMessage() + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"     * Gives greetings to users as they log into Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"    protected void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Good Day Sir/Mdm, I am Duke.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"     * Bids users goodbye as they exit the app.","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"    public void end() {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Goodbye Sir/Mdm. Hope to serve you again soon!\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"        Platform.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"     * Gives confirmation upon user\u0027s command to add task.","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"     * @param task  The given task to be added.","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"     * @param tasks The task list that the task is added to.","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"    public void add(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Understood Sir/Mdm, I have added the indicated task: \" + \"\\n   \" + task + \"\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"            + \"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task.\" : \" tasks.\") + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"     * Shows the list of current tasks to the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"aikenwx"},"content":"     * @param tasks The current tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"aikenwx"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Here are your tasks Sir/Mdm:\\n\" + list(tasks) + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"aikenwx"},"content":"     * Gives confirmation to the user that a task is marked as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"aikenwx"},"content":"     * @param task The task to be marked as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"aikenwx"},"content":"    public void markDone(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Good job Sir/Mdm! I shall mark this task as complete:\\n   \"","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"aikenwx"},"content":"            + task + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"aikenwx"},"content":"     * Gives confirmation that a task has been deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"aikenwx"},"content":"     * @param task  The task to be deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"aikenwx"},"content":"     * @param tasks The user\u0027s current tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"aikenwx"},"content":"    public void delete(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Much obliged Sir/Mdm! I shall delete this task:\\n   \"","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"aikenwx"},"content":"            + task + \"\\n\" + \"Now you have \" + tasks.size()","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"aikenwx"},"content":"            + (tasks.size() \u003d\u003d 1 ? \" task.\" : \" tasks.\") + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":166,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":167,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"aikenwx"},"content":"     * Confirms that task list is sorted and shows the list to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"aikenwx"},"content":"     * @param tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"aikenwx"},"content":"    public void showSortedList(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Roger Sir/Mdm! Your tasks are now sorted:\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"aikenwx"},"content":"            + list(tasks) + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-05"},{"lineNumber":179,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":183,"author":{"gitId":"aikenwx"},"content":"     * Produces a string enumerating the tasks of the given task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":184,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":185,"author":{"gitId":"aikenwx"},"content":"     * @param tasks The given tasks list to enumerate.","lastModifiedDate":"2021-08-30"},{"lineNumber":186,"author":{"gitId":"aikenwx"},"content":"     * @return","lastModifiedDate":"2021-08-30"},{"lineNumber":187,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":188,"author":{"gitId":"aikenwx"},"content":"    public String list(TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"aikenwx"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"aikenwx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"aikenwx"},"content":"            list \u003d list + (i \u003d\u003d 0 ? \"\" : \"\\n\") + (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"aikenwx"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":197,"author":{"gitId":"aikenwx"},"content":"     * Informs user of all tasks found by date.","lastModifiedDate":"2021-08-30"},{"lineNumber":198,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":199,"author":{"gitId":"aikenwx"},"content":"     * @param foundTasks The tasks that have been found by date.","lastModifiedDate":"2021-08-30"},{"lineNumber":200,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":201,"author":{"gitId":"aikenwx"},"content":"    public void findByDate(TaskList foundTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Here are the deadlines and events that match the date Sir/Mdm:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"aikenwx"},"content":"            + list(foundTasks) + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":204,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":205,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":210,"author":{"gitId":"aikenwx"},"content":"     * Informs user of all tasks found by matching words.","lastModifiedDate":"2021-08-30"},{"lineNumber":211,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":212,"author":{"gitId":"aikenwx"},"content":"     * @param foundTasks The tasks that have been found by matching words.","lastModifiedDate":"2021-08-30"},{"lineNumber":213,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":214,"author":{"gitId":"aikenwx"},"content":"    public void findByDescription(TaskList foundTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"aikenwx"},"content":"        String message \u003d \"Here are the results of the search Sir/Mdm:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"aikenwx"},"content":"            + list(foundTasks) + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"aikenwx"},"content":"        displayDukeReply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":219,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":222,"author":{"gitId":"aikenwx"},"content":"     * Display GUI and greet user.","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":224,"author":{"gitId":"aikenwx"},"content":"    public void showGui(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":225,"author":{"gitId":"aikenwx"},"content":"        // Create event listeners","lastModifiedDate":"2021-09-01"},{"lineNumber":226,"author":{"gitId":"aikenwx"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":227,"author":{"gitId":"aikenwx"},"content":"            handleUserInput(tasks, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":228,"author":{"gitId":"aikenwx"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":229,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":230,"author":{"gitId":"aikenwx"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":231,"author":{"gitId":"aikenwx"},"content":"            handleUserInput(tasks, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":232,"author":{"gitId":"aikenwx"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":233,"author":{"gitId":"aikenwx"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-01"},{"lineNumber":234,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":235,"author":{"gitId":"aikenwx"},"content":"        stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":236,"author":{"gitId":"aikenwx"},"content":"        this.greet();","lastModifiedDate":"2021-09-01"},{"lineNumber":237,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":238,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":239,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":240,"author":{"gitId":"aikenwx"},"content":"    private void handleUserInput(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":241,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":242,"author":{"gitId":"aikenwx"},"content":"        String userInputText \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":243,"author":{"gitId":"aikenwx"},"content":"        Label userTextLabel \u003d new Label(userInputText);","lastModifiedDate":"2021-09-01"},{"lineNumber":244,"author":{"gitId":"aikenwx"},"content":"        userTextLabel.setPadding(new Insets(0, 10, 0, 0));","lastModifiedDate":"2021-09-01"},{"lineNumber":245,"author":{"gitId":"aikenwx"},"content":"        ImageView userImage \u003d new ImageView(user);","lastModifiedDate":"2021-09-01"},{"lineNumber":246,"author":{"gitId":"aikenwx"},"content":"        clipImageViewToCircle(userImage, 100);","lastModifiedDate":"2021-09-01"},{"lineNumber":247,"author":{"gitId":"aikenwx"},"content":"        DialogBox userDialogBox \u003d DialogBox.getUserDialog(userTextLabel, userImage);","lastModifiedDate":"2021-09-01"},{"lineNumber":248,"author":{"gitId":"aikenwx"},"content":"        userDialogBox.setPadding(new Insets(0, 0, 30, 0));","lastModifiedDate":"2021-09-01"},{"lineNumber":249,"author":{"gitId":"aikenwx"},"content":"        setDialogBoxBackgroundColor(userDialogBox, \"#1FDA12\");","lastModifiedDate":"2021-09-01"},{"lineNumber":250,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":251,"author":{"gitId":"aikenwx"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-01"},{"lineNumber":252,"author":{"gitId":"aikenwx"},"content":"            userDialogBox","lastModifiedDate":"2021-09-01"},{"lineNumber":253,"author":{"gitId":"aikenwx"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":254,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":255,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":256,"author":{"gitId":"aikenwx"},"content":"            Parser.parse(userInputText, this, tasks, storage).execute();","lastModifiedDate":"2021-09-01"},{"lineNumber":257,"author":{"gitId":"aikenwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":258,"author":{"gitId":"aikenwx"},"content":"            this.showException(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":259,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":260,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":261,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":262,"author":{"gitId":"aikenwx"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":263,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":264,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":265,"author":{"gitId":"aikenwx"},"content":"    private void displayDukeReply(String dukeReply) {","lastModifiedDate":"2021-09-01"},{"lineNumber":266,"author":{"gitId":"aikenwx"},"content":"        Label dukeTextLabel \u003d new Label(dukeReply);","lastModifiedDate":"2021-09-01"},{"lineNumber":267,"author":{"gitId":"aikenwx"},"content":"        dukeTextLabel.setPadding(new Insets(0, 0, 0, 10));","lastModifiedDate":"2021-09-01"},{"lineNumber":268,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":269,"author":{"gitId":"aikenwx"},"content":"        ImageView dukeImage \u003d new ImageView(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":270,"author":{"gitId":"aikenwx"},"content":"        clipImageViewToCircle(dukeImage, 100);","lastModifiedDate":"2021-09-01"},{"lineNumber":271,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":272,"author":{"gitId":"aikenwx"},"content":"        DialogBox dukeDialogBox \u003d DialogBox.getDukeDialog(dukeTextLabel, dukeImage);","lastModifiedDate":"2021-09-01"},{"lineNumber":273,"author":{"gitId":"aikenwx"},"content":"        dukeDialogBox.setPadding(new Insets(0, 0, 30, 0));","lastModifiedDate":"2021-09-01"},{"lineNumber":274,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":275,"author":{"gitId":"aikenwx"},"content":"        setDialogBoxBackgroundColor(dukeDialogBox, \"#12B1DA\");","lastModifiedDate":"2021-09-01"},{"lineNumber":276,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":277,"author":{"gitId":"aikenwx"},"content":"        dialogContainer.getChildren().add(dukeDialogBox);","lastModifiedDate":"2021-09-01"},{"lineNumber":278,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":279,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":280,"author":{"gitId":"aikenwx"},"content":"    private void clipImageViewToCircle(ImageView imageView, int length) {","lastModifiedDate":"2021-09-01"},{"lineNumber":281,"author":{"gitId":"aikenwx"},"content":"        imageView.setPreserveRatio(false);","lastModifiedDate":"2021-09-01"},{"lineNumber":282,"author":{"gitId":"aikenwx"},"content":"        imageView.setSmooth(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":283,"author":{"gitId":"aikenwx"},"content":"        Circle circle \u003d new Circle(length / 2, length / 2, Math.min(length, length) / 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":284,"author":{"gitId":"aikenwx"},"content":"        imageView.setClip(circle);","lastModifiedDate":"2021-09-01"},{"lineNumber":285,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":286,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":287,"author":{"gitId":"aikenwx"},"content":"    private void setDialogBoxBackgroundColor(DialogBox dialogBox, String hexValue) {","lastModifiedDate":"2021-09-01"},{"lineNumber":288,"author":{"gitId":"aikenwx"},"content":"        dialogBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(hexValue), null, null)));","lastModifiedDate":"2021-09-01"},{"lineNumber":289,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":290,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":291,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":292,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":292}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    private Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"     * Instantiates a command to add tasks. Tasks can be Todo, Event or Deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"     * @param task    The task to add.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"     * @param tasks   The list of tasks to add to.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"     * @param ui      Ui to handle interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"     * @param storage Storage for tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"    public AddCommand(Task task, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"     * Retrieves the type of the task to be added as a TaskType enum.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"     * @return Type of added task.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"    public TaskType getTaskType() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"        } else if (task instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"            return TaskType.TODO;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\" Something went wrong: Not an addable Task!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"        ui.add(task, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":61}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":" * Represents an executable command made by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"     * Executes the command, invoking Duke to do something.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"     * Return information on whether the command should cause and exit for the Duke app.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"     * @return Information on whether to exit.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    private int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"     * Instantiates a command to delete a Task from the task list. Task is deleted based on current indexing.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"     * @param index Given index of the task to delete.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"     * @param tasks The task list to delete task from.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"     * @param ui Ui to handle interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     * @param storage Storage for tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    public DeleteCommand(int index, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"        ui.delete(task, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"     * Command to exit Duke app.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"     * @param ui Ui to handle interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"    public ExitCommand(Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"        ui.end();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":28}},{"path":"src/main/java/duke/command/FindByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"public class FindByDateCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"     * Instantiates command to find task by date.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"     * @param date Date to be searched.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"     * @param tasks Task list by which task is to be searched from.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"     * @param ui Ui to handle interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"    public FindByDateCommand(LocalDate date, TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"        TaskList foundTasks \u003d tasks.findByDate(this.date);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        ui.findByDate(foundTasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":35}},{"path":"src/main/java/duke/command/FindByDescriptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"public class FindByDescriptionCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"    private String searchPhrase;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"     * Finds a task by a matching line of text within its description.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"     * @param searchPhrase The text to be searched.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"     * @param tasks The task list by which the text is to be searched from.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"     * @param ui Ui to handle interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    public FindByDescriptionCommand(String searchPhrase, TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"        this.searchPhrase \u003d searchPhrase;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"        TaskList foundTasks \u003d tasks.findByDescription(searchPhrase);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        ui.findByDescription(foundTasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aikenwx":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"     * Instantiates command to print the list of current tasks for the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"     * @param tasks The current list of the user\u0027s tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"     * @param ui Ui to handle interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    public ListCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"        ui.showList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":27}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"    private Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"     * Instantiates command that marks a task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"     * @param task Task to be marked as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"     * @param tasks List of current user tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"     * @param ui Ui to handle interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     * @param storage Storage for tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    public MarkDoneCommand(Task task, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        ui.markDone(this.task);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":37}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"     * Instantiates command that marks a task as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"     * @param tasks List of current user tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"     * @param ui Ui to handle interactions.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"     * @param storage Storage for tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    public SortCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    public void execute() {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"        tasks.sortByDate();","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"        ui.showSortedList(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"aikenwx":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":" * A task with a done-by date, or due date.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    protected String taskType \u003d \"[D]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    protected boolean isDateOnly \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"     * Constructor for a Deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"     * @param date The due-date of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"     * Constructor for a Deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"     * @param date The due-date of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"     * @param isDateOnly Represents whether only date is given (without time).","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"    public Deadline(String description, LocalDateTime date, boolean isDateOnly) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"        this.isDateOnly \u003d isDateOnly;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"     * Constructor for a Deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"     * @param date The due-date of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"     * @param isDone Represents whether the task has been completed.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"     * @param isDateOnly Represents whether only date is given (without time).","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"    public Deadline(String description, LocalDateTime date, boolean isDone, boolean isDateOnly) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"        this.isDateOnly \u003d isDateOnly;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"     * Factory constructor for Deadline. Parses String input to obtain date and/or time for due date.","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"     * @param input The input from the user representing date and/or time.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"     * @return Deadline with the given inputs.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"    public static Deadline of(String description, String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"        String exceptionMessage \u003d \"Wrong format Sir/Mdm. Dates and times must be given as only a date: \"","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"            + \"DATE\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"            + \"or as date and time: DATE TIME\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"            + \"Accepted formats for DATE: YYYY-MM-DD, DD/MM/YYYY\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"            + \"Accepted formats for TIME (24H format): TT:TT, TTTT\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"            + \"Examples for DATE TIME: 13/2/2019 1800, 13/2/2019 18:00, 2019-02-13 1800,\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"            + \"2019-02-13 18:00\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"            + \"Examples for DATE: 13/2/2019, 2019-02-13\";","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"        String[] dateAndOrTime \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"        boolean isDateOnly;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"        if (dateAndOrTime.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"            dateTime \u003d Parser.parseDateAndTime(dateAndOrTime[0], \"00:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"            isDateOnly \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"        } else if (dateAndOrTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"            dateTime \u003d Parser.parseDateAndTime(dateAndOrTime[0], dateAndOrTime[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"            isDateOnly \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(exceptionMessage);","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"        return new Deadline(description, dateTime, isDateOnly);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"     * Getter for isDateOnly.","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"     * @return Gives isDateOnly","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"    public boolean getIsDateOnly() {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"        return isDateOnly ? true : false;","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"     * Getter for the current due date.","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"     * @return Current due date.","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"        return LocalDateTime.parse(date.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"    protected LocalDateTime getComparisonTime() {","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"        return this.getDate();","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"        return taskType + super.toString() + \" (by: \" + Parser.getDateTimeString(this.date, isDateOnly) + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"        } else if (o instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"            Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"            return description.equals(deadline.description) \u0026\u0026 isDateOnly \u003d\u003d deadline.isDateOnly","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"                \u0026\u0026 isDone \u003d\u003d deadline.isDone \u0026\u0026 date.equals(deadline.date);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"aikenwx":140}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":" * A task with that spans across a period of time.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    protected String taskType \u003d \"[E]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    protected boolean isDateOnly \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"     * @param startDateTime The start date and/or time of the Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"     * @param endDateTime The end date and/or time of the Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"     * @param isDone Represents whether the task has been completed.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"     * @param isDateOnly Represents whether only date is given (without time).","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime, boolean isDone,","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"                 boolean isDateOnly) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"        this.isDateOnly \u003d isDateOnly;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"     * @param startDateTime The start date and/or time of the Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"     * @param endDateTime The end date and/or time of the Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"     * @param isDateOnly Represents whether only date is given (without time).","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime, boolean isDateOnly) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"        this.isDateOnly \u003d isDateOnly;","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"     * Factory constructor for Event. Parses String input to obtain date and/or time for start and end dates.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"     * @param input The input date and/time of an Event.","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"     * @return Event with the given inputs.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"    public static Event of(String description, String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"        String exceptionMessage \u003d \"Wrong format for event timeline Sir/Mdm. Please use either formats:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"            + \"\u0027DATE TIME to DATE TIME\u0027 or \u0027DATE to DATE\u0027 \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"            + \"Hint: Use \u0027to\u0027 keyword and ensure that start and end date either both\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"            + \"include TIME or both exclude TIME\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"            + \"Examples for DATE TIME to DATE TIME: 13/2/2019 1800 to 13/2/2019 1900\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"            + \"Examples for DATE: 13/2/2019 to 14/2/2019\";","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"        String[] dateTimes \u003d input.split(\"to\");","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"        if (dateTimes.length !\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(exceptionMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime startDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime endDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"        boolean isDateOnly;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"        String[] dateTimeStartInput \u003d dateTimes[0].trim().split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"        String[] dateTimeEndInput \u003d dateTimes[1].trim().split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"        if (dateTimeStartInput.length \u003d\u003d 1 \u0026\u0026 dateTimeEndInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"            startDate \u003d Parser.parseDateAndTime(dateTimeStartInput[0], \"00:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"            endDate \u003d Parser.parseDateAndTime(dateTimeEndInput[0], \"00:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"            isDateOnly \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"        } else if (dateTimeStartInput.length \u003d\u003d 2 \u0026\u0026 dateTimeStartInput.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"            startDate \u003d Parser.parseDateAndTime(dateTimeStartInput[0], dateTimeStartInput[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"            endDate \u003d Parser.parseDateAndTime(dateTimeEndInput[0], dateTimeEndInput[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"            assert startDate.compareTo(endDate) \u003c 0 : \"startDate should be earlier than endDate\";","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"            isDateOnly \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(exceptionMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"        if (startDate.compareTo(endDate) \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"The end date must come after the start date Sir/Mdm!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"        return new Event(description, startDate, endDate, isDateOnly);","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"     * Getter for isDateOnly.","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"     * @return Gives isDateOnly","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"    public boolean getIsDateOnly() {","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"        return isDateOnly ? true : false;","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"     * Getter for the start date of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"     * @return Start date.","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"        return LocalDateTime.parse(startDateTime.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"     * Getter for the end date of the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"     * @return End date.","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"        return LocalDateTime.parse(endDateTime.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"aikenwx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"aikenwx"},"content":"        return taskType + super.toString() + \" (at: \" + Parser.getDateTimeString(this.startDateTime, isDateOnly)","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"aikenwx"},"content":"            + \" to \" + Parser.getDateTimeString(this.endDateTime, isDateOnly) + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"aikenwx"},"content":"    protected LocalDateTime getComparisonTime() {","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"aikenwx"},"content":"        return this.getStartDateTime();","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"aikenwx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"aikenwx"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"aikenwx"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"aikenwx"},"content":"        } else if (o instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"aikenwx"},"content":"            Event event \u003d (Event) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"aikenwx"},"content":"            return description.equals(event.description) \u0026\u0026 isDateOnly \u003d\u003d event.isDateOnly","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"aikenwx"},"content":"                \u0026\u0026 isDone \u003d\u003d event.isDone \u0026\u0026 startDateTime.equals(event.startDateTime)","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"aikenwx"},"content":"                \u0026\u0026 endDateTime.equals(event.endDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"aikenwx"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"aikenwx":164}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":" * Represents a user\u0027s task. Contains mainly a description of the task as well as other useful information.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"     * Initializes a Task. Note that taskFactory method should be used instead.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"     * Gets description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"     * @return Description.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        return description.substring(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"     * Information on whether the task has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"     * @return Information on task completion.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"        return isDone ? true : false;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"     * The main factory constructor method for Todo, Deadline and Event instances.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"     * @param taskType Enum representing the type of task to be initialized.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"     * @param input    The raw input command from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"     * @return Task constructed based of input command.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"    public static Task of(TaskType taskType, String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"        Task newTask;","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"        if (taskType \u003d\u003d taskType.TODO) {","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"            String description \u003d input.substring(4).trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(\"Please provide a description of the todo Sir/Mdm.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"            newTask \u003d new Todo(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"        } else if (taskType \u003d\u003d taskType.DEADLINE) {","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"            int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"                if (input.equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"                    throw new DukeException(\"Please provide a description and date of the deadline Sir/Mdm.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"                    throw new DukeException(\"Please provide a date of the deadline Sir/Mdm.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"            String description \u003d input.substring(9, index).trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(\"Please provide a description of the deadline Sir/Mdm.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"            String date \u003d input.substring(index + 3).trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"            newTask \u003d Deadline.of(description, date);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"        } else if (taskType \u003d\u003d taskType.EVENT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"            int index \u003d input.indexOf(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"                if (input.equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"                    throw new DukeException(\"Please provide a description and timeline of the event Sir/Mdm.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"                    throw new DukeException(\"Please provide a timeline of the event Sir/Mdm.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"            String description \u003d input.substring(5, index).trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"                throw new DukeException(\"Please provide a description of the event Sir/Mdm.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"            String date \u003d input.substring(index + 3).trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"            newTask \u003d Event.of(description, date);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"            throw new DukeException(\"Something wrong happened: Unknown task type given\");","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"        return newTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"     * Returns an enum representing the type of this Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"     * @return","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"     * Marks the Task instance as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"     * Returns the LocalDateTime stored in the task, if any.","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"     * The LocalDateTime is to be used for comparison with other tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"     * @return LocalDateTime for comparison.","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"    protected LocalDateTime getComparisonTime() {","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"        return null;","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"        if (this.getComparisonTime() \u003d\u003d null \u0026\u0026 task.getComparisonTime() \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"            return 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"aikenwx"},"content":"        } else if (this.getComparisonTime() \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"aikenwx"},"content":"            return -1;","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"aikenwx"},"content":"        } else if (task.getComparisonTime() \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"aikenwx"},"content":"            return 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"aikenwx"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"aikenwx"},"content":"            return this.getComparisonTime().compareTo(task.getComparisonTime());","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"aikenwx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"aikenwx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"aikenwx":154}},{"path":"src/main/java/duke/task/TaskDateTimeComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"public class TaskDateTimeComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"        return task1.compareTo(task2);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"aikenwx":12}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":" * A list of a user\u0027s tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"     * Finds among its members, all tasks with dates that match the given date.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"     * @param date Date to match.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"     * @return All tasks with matching dates.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"    public TaskList findByDate(LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"                if (event.startDateTime.toLocalDate().compareTo(date) \u003c\u003d 0 \u0026\u0026 event.endDateTime.toLocalDate()","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"                    .compareTo(date) \u003e\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"                if (deadline.date.toLocalDate().equals(date)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"        return foundTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"     * Finds among its members, all tasks with text that match the given text.","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"     * @param input Text to match.","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"     * @return All tasks with matching text.","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"    public TaskList findByDescription(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"            if (task.description.contains(input)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"                foundTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"        return foundTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"     * Sorts the current tasks by date.","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"    public void sortByDate() {","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"        this.tasks.sort(new TaskDateTimeComparator());","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"     * Builds and returns the format string for storing current tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"     * @return Storage String","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"        String text \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"            if (currentTask instanceof Event) {","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"                Event event \u003d (Event) currentTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"                text +\u003d String.format(\"| E | %s | %s | %s | %s | %s\\n\", event.getIsDone() ? \"X\" : \" \",","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"                    event.getIsDateOnly() ? \"X\" : \" \", event.getStartDateTime(), event.getEndDateTime(),","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"                    event.getDescription());","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"            } else if (currentTask instanceof Deadline) {","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"                Deadline deadline \u003d (Deadline) currentTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"                text +\u003d String.format(\"| D | %s | %s | %s | %s\\n\", deadline.getIsDone() ? \"X\" : \" \",","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"                    deadline.getIsDateOnly() ? \"X\" : \" \", deadline.getDate(), deadline.getDescription());","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"                Todo todo \u003d (Todo) currentTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"                text +\u003d String.format(\"| T | %s | %s\\n\", todo.getIsDone() ? \"X\" : \" \", todo.getDescription());","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"        return text;","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"        } else if (o instanceof TaskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"            TaskList taskList \u003d (TaskList) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"aikenwx"},"content":"            return this.tasks.equals(taskList.tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"aikenwx"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"aikenwx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"aikenwx"},"content":"        return this.tasks.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":147}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"    TODO, EVENT, DEADLINE","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aikenwx":6}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":" * A task with just a description.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":" * @author Aiken Wong","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"    protected String taskType \u003d \"[T]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"     * @param isDone Represents whether the task has been completed.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"        return taskType + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"        } else if (o instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"            Todo todo \u003d (Todo) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"            return description.equals(todo.description) \u0026\u0026 isDone \u003d\u003d todo.isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aikenwx":49}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"import duke.command.FindByDateCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"    private TaskList makeTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"        Event event \u003d new Event(\"Give tuition\", LocalDateTime.parse(\"2021-11-23T00:00\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"            LocalDateTime.parse(\"2021-11-23T00:00\"), false, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"        Todo todo \u003d new Todo(\"Feed Momo\", true);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", LocalDateTime.parse(\"2021-11-23T00:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"        TaskList tasks \u003d new TaskList(taskArrayList);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"    public void testParseValidInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"        String inputList \u003d \"list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"        String inputDone \u003d \"done 1\";","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"        String inputFind \u003d \"find/date 2021-11-23\";","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"        String inputDelete \u003d \"delete 1\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"        String inputTodo \u003d \"todo party\";","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"        String inputDeadline \u003d \"deadline party /by 2021-11-23\";","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"        String inputEvent \u003d \"event party /at 2021-11-23 to 2021-11-24\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"        String inputExit \u003d \"bye\";","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parse(inputList, null, makeTasks(), null)","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"                instanceof ListCommand, \"Wrongly parses list command\");","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parse(inputDone, null, makeTasks(), null)","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"                instanceof MarkDoneCommand, \"Wrongly parses mark done command\");","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parse(inputFind, null, makeTasks(), null)","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"                instanceof FindByDateCommand, \"Wrongly parses find command\");","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parse(inputDelete, null, makeTasks(), null)","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"                instanceof DeleteCommand, \"Wrongly parses delete command\");","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parse(inputExit, null, makeTasks(), null)","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"                instanceof ExitCommand, \"Wrongly parses exit command\");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"            AddCommand todo \u003d (AddCommand) Parser.parse(inputTodo, null, makeTasks(), null);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, todo.getTaskType() \u003d\u003d TaskType.TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"                \"Wrongly parses add todo command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"            AddCommand event \u003d (AddCommand) Parser.parse(inputEvent, null, makeTasks(), null);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, event.getTaskType() \u003d\u003d TaskType.EVENT,","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"                \"Wrongly parses add todo command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"            AddCommand deadline \u003d (AddCommand) Parser.parse(inputDeadline, null, makeTasks(), null);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, deadline.getTaskType() \u003d\u003d TaskType.DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"                \"Wrongly parses add todo command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail();","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"        String expectedUiList \u003d \"1. [E][ ] Give tuition (at: 23 November 2021 to 23 November 2021)\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"            + \"2. [T][X] Feed Momo\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"            + \"3. [D][ ] Assignment (by: 23 November 2021 00:00)\";","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"        class StubUi extends Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"            @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"            public String list(TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"                return expectedUiList;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"        String expectedExceptionMessageMarkTask \u003d \"Please specify a task you would like marked as done Sir/Mdm:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"            + expectedUiList;","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"aikenwx"},"content":"            Parser.parse(\"done\", new StubUi(), makeTasks(), null);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(expectedExceptionMessageMarkTask, e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"aikenwx"},"content":"        String expectedExceptionMessageNoTask \u003d \"You have no tasks to mark as done Sir/Mdm!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"aikenwx"},"content":"            Parser.parse(\"done 1\", null, new TaskList(), null);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(expectedExceptionMessageNoTask, e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"aikenwx"},"content":"        String expectedExceptionMessageNotANumber \u003d \"Please enter a proper number within this range Sir/Mdm:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"aikenwx"},"content":"            + expectedUiList;","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"aikenwx"},"content":"            Parser.parse(\"done I\", new StubUi(), makeTasks(), null);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(expectedExceptionMessageNotANumber, e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"aikenwx"},"content":"        String expectedExceptionMessageNotInRange \u003d \"Please specify a task within this range Sir/Mdm:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"aikenwx"},"content":"            + expectedUiList;","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"aikenwx"},"content":"            Parser.parse(\"done 4\", new StubUi(), makeTasks(), null);","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(expectedExceptionMessageNotInRange, e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"aikenwx"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"aikenwx"},"content":"    public void testParseBadInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"aikenwx"},"content":"        String inputUnknown \u003d \"blah\";","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"aikenwx"},"content":"            Parser.parse(inputUnknown, null, null, null);","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(\"Pardon me Sir/Mdm, but I do not understand.\", e.getMessage(),","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"aikenwx"},"content":"                \"DukeException should have been thrown with \\\"Pardon me Sir/Mdm, but I do not \"","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"aikenwx"},"content":"                    + \"understand.\\\" message\");","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"aikenwx"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"aikenwx"},"content":"    public void testDateTimeToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-11-23T00:00\");","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"aikenwx"},"content":"        Assertions.assertEquals(\"23 November 2021\", Parser.getDateTimeString(dateTime, true),","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"aikenwx"},"content":"            Parser.getDateTimeString(dateTime, true));","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"aikenwx"},"content":"        Assertions.assertEquals(\"23 November 2021 00:00\", Parser.getDateTimeString(dateTime, false),","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"aikenwx"},"content":"            Parser.getDateTimeString(dateTime, false));","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"aikenwx"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"aikenwx"},"content":"    public void testParseDateAndTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"aikenwx"},"content":"        String dateOne \u003d \"2021-11-23\";","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"aikenwx"},"content":"        String dateTwo \u003d \"23/11/2021\";","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"aikenwx"},"content":"        String dateWrong \u003d \"23112021\";","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"aikenwx"},"content":"        String timeOne \u003d \"00:00\";","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"aikenwx"},"content":"        String timeTwo \u003d \"0000\";","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"aikenwx"},"content":"        String timeWrong \u003d \"00.00\";","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"aikenwx"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.parse(\"2021-11-23T00:00\");","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parseDateAndTime(dateOne, timeOne).equals(expectedDateTime),","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"aikenwx"},"content":"                \"parseDateTime failed\");","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parseDateAndTime(dateOne, timeTwo).equals(expectedDateTime),","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"aikenwx"},"content":"                \"parseDateTime failed\");","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parseDateAndTime(dateTwo, timeOne).equals(expectedDateTime),","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"aikenwx"},"content":"                \"parseDateTime failed\");","lastModifiedDate":"2021-08-29"},{"lineNumber":185,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(true, Parser.parseDateAndTime(dateTwo, timeTwo).equals(expectedDateTime),","lastModifiedDate":"2021-08-29"},{"lineNumber":186,"author":{"gitId":"aikenwx"},"content":"                \"parseDateTime failed\");","lastModifiedDate":"2021-08-29"},{"lineNumber":187,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail();","lastModifiedDate":"2021-09-08"},{"lineNumber":189,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"aikenwx"},"content":"        String expectedMessage \u003d \"Wrong format Sir/Mdm. Dates and times must be given as only a date: DATE\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"aikenwx"},"content":"            + \"or as date and time: DATE TIME\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"aikenwx"},"content":"            + \"Accepted formats for DATE: YYYY-MM-DD, DD/MM/YYYY\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"aikenwx"},"content":"            + \"Accepted formats for TIME (24H format): TT:TT, TTTT\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"aikenwx"},"content":"            + \"Examples for DATE TIME: 13/2/2019 1800, 13/2/2019 18:00, 2019-02-13 1800,\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"aikenwx"},"content":"            + \"2019-02-13 18:00\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"aikenwx"},"content":"            + \"Examples for DATE: 13/2/2019, 2019-02-13\";","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"aikenwx"},"content":"            Parser.parseDateAndTime(dateWrong, timeOne).equals(expectedDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail(\"parseDateTime failed to detect correct exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(expectedMessage, e.getMessage(), e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"aikenwx"},"content":"            Parser.parseDateAndTime(dateWrong, timeWrong).equals(expectedDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"aikenwx"},"content":"            Assertions.fail(\"parseDateTime failed to detect correct exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"aikenwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(expectedMessage, e.getMessage(), e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aikenwx":218}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"    private static TaskList makeTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"        Event event \u003d new Event(\"Give tuition\", LocalDateTime.parse(\"2021-11-23T00:00\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"            LocalDateTime.parse(\"2021-11-23T00:00\"), false, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"        Todo todo \u003d new Todo(\"Feed Momo\", true);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", LocalDateTime.parse(\"2021-11-23T00:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"        taskArrayList.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"        TaskList tasks \u003d new TaskList(taskArrayList);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"    private static void createTestStore() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"        File dataDir \u003d new File(\"testData\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"        dataDir.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"        File testTaskListFile \u003d new File(\"testData/testTaskList.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"            testTaskListFile.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"            FileWriter fw \u003d new FileWriter(\"testData/testTaskList.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"            fw.write(\"| E |   | X | 2021-11-23T00:00 | 2021-11-23T00:00 | Give tuition\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"                + \"| T | X | Feed Momo\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"                + \"| D |   |   | 2021-11-23T00:00 | Assignment\");","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"    public void testLoad() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"aikenwx"},"content":"        TaskList expectedTaskList \u003d makeTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"aikenwx"},"content":"        String filePath \u003d \"testData/testTaskList.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"aikenwx"},"content":"        createTestStore();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"aikenwx"},"content":"        Storage testStorage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"aikenwx"},"content":"        Assertions.assertEquals(true, testStorage.loadTasks().equals(expectedTaskList));","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"aikenwx"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"aikenwx"},"content":"    public void testSave() {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"aikenwx"},"content":"        String filePath \u003d \"testData2/testTaskList.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"aikenwx"},"content":"        Storage testStorage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"aikenwx"},"content":"        testStorage.saveTasks(makeTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"aikenwx"},"content":"        File testFile2 \u003d new File(\"testData2/testTaskList.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"aikenwx"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"aikenwx"},"content":"            Scanner scanner \u003d new Scanner(testFile2);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"aikenwx"},"content":"            String expectedText \u003d \"| E |   | X | 2021-11-23T00:00 | 2021-11-23T00:00 | Give tuition\"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"aikenwx"},"content":"                + \"| T | X | Feed Momo\"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"aikenwx"},"content":"                + \"| D |   |   | 2021-11-23T00:00 | Assignment\";","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"aikenwx"},"content":"            String allText \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"aikenwx"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"aikenwx"},"content":"                allText +\u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"aikenwx"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"aikenwx"},"content":"            Assertions.assertEquals(expectedText, allText);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"aikenwx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"aikenwx"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"aikenwx"},"content":"        } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"aikenwx"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"aikenwx"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"aikenwx"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"aikenwx"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aikenwx":100}},{"path":"src/test/testData/testTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"| E |   | X | 2021-11-23T00:00 | 2021-11-23T00:00 | Give tuition","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"| T | X | Feed Momo","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"| D |   |   | 2021-11-23T00:00 | Assignment","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aikenwx":3}},{"path":"src/test/testData2/testTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"| E |   | X | 2021-11-23T00:00 | 2021-11-23T00:00 | Give tuition","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"| T | X | Feed Momo","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"| D |   |   | 2021-11-23T00:00 | Assignment","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aikenwx":3}},{"path":"testData/testTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"| E |   | X | 2021-11-23T00:00 | 2021-11-23T00:00 | Give tuition","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"| T | X | Feed Momo","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"| D |   |   | 2021-11-23T00:00 | Assignment","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"aikenwx":3}},{"path":"testData2/testTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"| E |   | X | 2021-11-23T00:00 | 2021-11-23T00:00 | Give tuition","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"| T | X | Feed Momo","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"| D |   |   | 2021-11-23T00:00 | Assignment","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"aikenwx":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aikenwx"},"content":"todo check email","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aikenwx"},"content":"todo feed momo","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aikenwx"},"content":"list 0","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aikenwx"},"content":"deadline assignment /2021-11-24 1500","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"aikenwx"},"content":"deadline assignment /by 2021-11-24 1500","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"aikenwx"},"content":"deadline project /by 2/2/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"aikenwx"},"content":"deadline project /by 2/2/2021 12","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"aikenwx"},"content":"deadline project /by gibberish hello","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"aikenwx"},"content":"deadline project /by even more gibberish hello","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"deadline project /by hello","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"aikenwx"},"content":"event exam /23/11/2021 to 24/11/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"aikenwx"},"content":"event exam /at 23/11/2021 to 2021-11-25","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"aikenwx"},"content":"event test /at23/11/2021 1600to25/11/2021 17:00","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"aikenwx"},"content":"event test /at 25/11/2021 1600 to 23/11/2021 1600","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"aikenwx"},"content":"event test /at gibberish hello to gibberish hello","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"event test /at more gibberish hello to more gibberish hello","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"aikenwx"},"content":"event test /at hello to hello","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"aikenwx"},"content":"event test /at","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"aikenwx"},"content":"find/date 24-1-2021","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"aikenwx"},"content":"find/date 2021-24-11","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aikenwx"},"content":"find/date 2/2/2021","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aikenwx"},"content":"find/date 24/11/2021","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aikenwx"},"content":"find momo","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aikenwx"},"content":"find test","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aikenwx"},"content":"find lalalalalala","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aikenwx"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"aikenwx"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"aikenwx"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"aikenwx"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"aikenwx"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"aikenwx"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"aikenwx"},"content":"done 5","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"aikenwx"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"aikenwx"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"aikenwx"},"content":"done ok","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"aikenwx"},"content":"done 400","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"aikenwx"},"content":"done 4g5","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"aikenwx"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"aikenwx"},"content":"todoodle","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"aikenwx"},"content":"Assemble Avengers","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"aikenwx"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"aikenwx"},"content":"event party","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"aikenwx"},"content":"event /at date","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"aikenwx"},"content":"event /atdate","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"aikenwx"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"aikenwx"},"content":"deadline project","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"aikenwx"},"content":"deadline /by 2021-11-24","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"aikenwx"},"content":"deadline /by2021-11-24","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"aikenwx"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"aikenwx"},"content":"delete ok","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"aikenwx"},"content":"delete 5","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"aikenwx"},"content":"delete 4g5","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"aikenwx"},"content":"delete 1000","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"aikenwx"},"content":"delete 5","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"aikenwx"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"aikenwx"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"aikenwx"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"aikenwx"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"aikenwx"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"aikenwx"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aikenwx":60}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"aikenwx"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aikenwx":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"aikenwx"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aikenwx":1,"-":37}}]
