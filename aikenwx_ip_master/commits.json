{"authorDailyContributionsMap":{"aikenwx":[{"date":"2021-08-17","commitResults":[{"hash":"04a5aaac02db1c6209f2ae977db12c4f53a64f1b","messageTitle":"Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":6}}},{"hash":"adb0fb7103f564e540f730674102a531dba69011","messageTitle":"Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":4}}},{"hash":"72e235b3061e02672c035112df88e173fa152780","messageTitle":"Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":6}}}]},{"date":"2021-08-18","commitResults":[{"hash":"efddd0d7b95304ba937f49ece510e854bb4f25d4","messageTitle":"Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":7}}},{"hash":"984cb83473e82ed6b5116ee034f7037a96e9a94c","messageTitle":"A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0}}},{"hash":"c8afc39d324932645ede576aa726526e15c14fe1","messageTitle":"Level-5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"java":{"insertions":103,"deletions":57}}},{"hash":"c71fd192971f8e50ee4fc018e95cece17b8e977b","messageTitle":"Level-6","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":1},"java":{"insertions":60,"deletions":23}}}]},{"date":"2021-08-19","commitResults":[{"hash":"213e6499172c4d3ee55998757e7d250cef9cfc08","messageTitle":"A-Enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":34}}}]},{"date":"2021-08-22","commitResults":[{"hash":"660f9ada5a371090d703af51fcc977db36e879b0","messageTitle":"Update initialise date/timeline keywords in taskFactory method","messageBody":"\u0027/\u0027 keyword does not meet the \u0027/at\u0027 and \u0027/by\u0027 keyword requirements set\nfor initialising an event and a deadline repectively.\n\nLet\u0027s,\n* update taskFactory method to accept \u0027/at\u0027 and \u0027/by\u0027 keywords when\n  initializing Event and Deadline classes respectively.\n* update input.txt and EXPECTED.TXT to reflect new changes in tests too.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"txt":{"insertions":42,"deletions":35},"java":{"insertions":75,"deletions":75}}},{"hash":"b6a5df29c96585ee8fe6201d79d9b5041bb3064a","messageTitle":"Add save task list to hard disk feature","messageBody":"Task list is not save to hard disk and is reset each time the Duke stops\nrunning.\n\nSaving the task list to the hard disk allows for future retrieval each\ntime Duke reloads.\n\nLet\u0027s create a FileManager class to handle saving and retrieval of task\nlists.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":131,"deletions":13}}}]},{"date":"2021-08-23","commitResults":[{"hash":"b04840f0acd4c633b9be4328c75b132993e66541","messageTitle":"Add parsing and interpretation for dates and time","messageBody":"Date and time stored as per input string, which does not allow Duke to\nuse such data in more meaningful ways.\n\nBy restricting format of input dates and time and then parsing the data\ninto java.time.LocalDateTime, we can perform useful data manipulation\nlike finding events and deadlines by date.\n\nLet\u0027s\n* Add date fields for Event and Deadline\n* Add parsing for input dates and time into java.time.LocalDateTime\n* Add find by date command\n* Update tests to test date formatting and parsing and find command\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":23,"deletions":8},"java":{"insertions":445,"deletions":208}}}]},{"date":"2021-08-24","commitResults":[{"hash":"1f16e49d844ebbed7deaf9a0490eb427c661701b","messageTitle":"Extract Duke into Parser, Ui and command classes:","messageBody":"Duke contains many methods such as addTask and markAsDone that can be\nsimilarly grouped. Furthermore many UI and parsing related methods\nexists throughout the programme that can be similarly grouped to avoid\ncode duplication.\n\nExtracting such similar behaviour into seperate classes create distinct\nroles for each class and prevents Duke from becoming too large with\nvariious categories of methods with different behaviours.\n\nLet\u0027s\n* Pull command operations into various command classes with Command as\n  the parent abstract class.\n* Create a Ui class to handle all UI related operations.\n* Crete a Parser class to handle all parsing related operations.\n* Rename FileManager class to Storage class to better represent the use\n  case for the class.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":484,"deletions":334}}}]},{"date":"2021-08-25","commitResults":[{"hash":"2b3f8bf49b8a46b83806a68e050ee514235ef902","messageTitle":"Create duke, command and task packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":253,"deletions":122},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"56a680b11917fa0d86941c71d27e6a9b8efdeee7","messageTitle":"Add jUnit tests for Parser and Storage","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":379,"deletions":9}}},{"hash":"a790bf355fb188108e1fa51e2a172beccfa0b05f","messageTitle":"Add JavaDoc comments to Duke","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":482,"deletions":346}}},{"hash":"d580163f1a768c9aacddd0748e724211cbec1b4e","messageTitle":"Add find by keyword functionality","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":4},"java":{"insertions":87,"deletions":32}}},{"hash":"82d46f4f5e9e4ca7d9c071dd0f92e15ebced8740","messageTitle":"Check Coding Standard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2021-08-26","commitResults":[{"hash":"db21a715952b09af9549c293a85039e26c4da4d6","messageTitle":"Update expected test results","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-08-29","commitResults":[{"hash":"82d9426cda446bad221f1cdb744e95380097e882","messageTitle":"Correct violatations to Java coding standard.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":17}}},{"hash":"7e5369e369ded4536bf1ced7df1e24f335bd92ec","messageTitle":"Add gradle support to Duke","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"txt":{"insertions":6,"deletions":0}}},{"hash":"749b3000c7a262851b816cd58ce3d721401b40e6","messageTitle":"Correct more coding standard violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":229,"deletions":221}}},{"hash":"21209516fe63f37cdd9997373e0dd1d1cfb43343","messageTitle":"Add GUI to Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":175,"deletions":2}}},{"hash":"2779c7aabe97ce9ab05f6aee802f9a64b47ccdef","messageTitle":"Add visual improvements to GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":3}}}]},{"date":"2021-08-30","commitResults":[{"hash":"82bbf2e54fbc821f3ee80202275b06650348968e","messageTitle":"Host Duke on GUI implementation","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":4},"java":{"insertions":238,"deletions":133}}},{"hash":"1b4997c0ab904557b63dfef65e4c77f7b26214e7","messageTitle":"Fix coding violations","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":8,"deletions":0},"java":{"insertions":12,"deletions":23}}},{"hash":"770231a71b2d0a6365135e00d4be04b7586de047","messageTitle":"Add more JavaDoc documentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":326,"deletions":26}}}]},{"date":"2021-09-01","commitResults":[{"hash":"80a63eefef10315ec6b0a9933c743210279b3d3d","messageTitle":"Refactor code to improve readability and reduce code duplication","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":144,"deletions":160}}}]}]},"authorFileTypeContributionMap":{"aikenwx":{"java":2141,"md":0,"fxml":0,"sh":1,"bat":1,"gradle":21,"txt":72}},"authorContributionVariance":{"aikenwx":174632.48},"authorDisplayNameMap":{"aikenwx":"CS2103T-T11-2 AIKE..HENG"}}
