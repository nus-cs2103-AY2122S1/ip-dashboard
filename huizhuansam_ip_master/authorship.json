[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huizhuansam":3,"-":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"    /** Hardcoded file path to save location. */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private static final String FILEPATH \u003d \"./data/tasks.json\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    /** The storage utility. */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    /** The list of tasks. */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    /** The program ui. */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * Duke constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * @param filePath The file path to save location.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"            ui.showLoadSuccess();","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     * Entry point for the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"     * @throws IOException If the ui encounters error while reading user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"    private void run() throws IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"            try {","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"            } finally {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"            }","lastModifiedDate":"2021-08-13"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"            new Duke(FILEPATH).run();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"huizhuansam":66,"-":4}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.enums.Tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.UnknownTaskTypeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"/** Represents an \"add\" command */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    /** The Task object. */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    private Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * AddCommand constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * @param task The Task object.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    private AddCommand(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     * AddCommand factory method.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     * @param content The user\u0027s input content.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * @return An AddCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the input is badly formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     * @throws UnknownTaskTypeException If the task type is unknown.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidDateException If the date is not in yyyy-MM-dd format.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"    public static AddCommand of(String content)","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"            throws BadInputFormatException,","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"            UnknownTaskTypeException,","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"            EmptyDescriptionException,","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"            InvalidDateException {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"        AddCommand command;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"        switch (taskTypeParser(content)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"        case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"            command \u003d new AddCommand(Todo.of(taskDescriptionParser(content)));","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"            command \u003d new AddCommand(Deadline.of(taskDescriptionParser(content)));","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"        case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"            command \u003d new AddCommand(Event.of(taskDescriptionParser(content)));","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"            throw new UnknownTaskTypeException(content);","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"        return command;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"     * Adds the Task into the TaskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The list of tasks in the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"     * @param ui The UI object.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"     * @param storage The storage utility.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"        ui.print(\"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"                task.toString(),","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"                String.format(\"Now you have %d %s in the list.\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"     * Helper method that parses the user input and returns a Tasks enum according to the first word of the input split","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"     * by regex.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"     * @param content The user\u0027s input content.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"     * @return A Tasks enum.","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"    private static Tasks taskTypeParser(String content) {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"huizhuansam"},"content":"        return Tasks.valueOfLabel(content.trim().split(\" \")[0]);","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"huizhuansam"},"content":"     * Helper method that parses the user input and returns a string that contains the description of the Task split by","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"huizhuansam"},"content":"     * regex.","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"huizhuansam"},"content":"     * @param content The user\u0027s input content.","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"huizhuansam"},"content":"     * @return The description of the Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"huizhuansam"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"huizhuansam"},"content":"    private static String taskDescriptionParser(String content) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"huizhuansam"},"content":"            return content.trim().split(\" \", 2)[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"huizhuansam"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"huizhuansam"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":108}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"/** An abstract class representing the user\u0027s commands. */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The list of tasks in the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     * @param ui The UI object.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * @param storage The storage utility.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     * @throws IOException If there is an IO exception.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     * @throws NoSuchTaskException If no tasks are found.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, NoSuchTaskException;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    /** Returns true if the Command is an exit command, else false.*/","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":25}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"/** Represents the \"delete\" command. */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"    /** The index of the Task to be deleted. */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private int index;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * DeleteCommand constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * @param index The index of the Task to be deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    private DeleteCommand(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * DeleteCommand factory method.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * @param index The index of the Task to be deleted as a numeric string.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     * @return A DeleteCommand object.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the provided input string is not a numeric.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public static DeleteCommand of(String index) throws BadInputFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"            return new DeleteCommand(Integer.parseInt(index) - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"     * Removes the Task from the specified index in storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The list of tasks in the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     * @param ui The UI object.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"     * @param storage The storage utility.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     * @throws NoSuchTaskException If the task does not exist at the specified index.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws NoSuchTaskException {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"        ui.print(\"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"                tasks.deleteTask(index - 1).toString(),","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"                String.format(\"Now you have %d %s in the list.\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":57}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"/** Represents the \"done\" command. */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"    /** The index of the Task to be marked as done. */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private int index;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * DoneCommand constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * @param index The index of the Task to be marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    private DoneCommand(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * DoneCommand factory method.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * @param index The index of the Task to be deleted as a numeric string.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     * @return A DoneCommand object.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the provided input string is not a numeric.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public static DoneCommand of(String index) throws BadInputFormatException {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"            return new DoneCommand(Integer.parseInt(index) - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"     * Marks the Task at the specified index as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The list of tasks in the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     * @param ui The UI object.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"     * @param storage The storage utility.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     * @throws NoSuchTaskException If the task does not exist at the specified index.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws NoSuchTaskException {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"        ui.print(\"Nice! I\u0027ve marked this task as done:\", tasks.getTask(index).markTaskAsDone().toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"/** Represents the \"exit\" command. */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     * ExitCommand factory method.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * @param content The user\u0027s input content.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     * @return An ExitCommand object.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the user\u0027s input contains more than a singular \"bye\" keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    public static ExitCommand of(String content) throws BadInputFormatException {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"        if (content.trim().length() \u003e 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     * Cleans up the UI and writes to disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The list of tasks in the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     * @param ui The UI object.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     * @param storage The storage utility.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     * @throws IOException If the storage encounters and IO exception.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"        ui.print(\"Bye. See ya l8er allig8er!\", \"\\033[3m*shutting down......*\\033[0m\");","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"        ui.cleanup();","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"        storage.write(tasks);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"        return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"/** Represents the \"find\" command. */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"    /** The keyword to be matched. */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    private String keyword;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     * FindCommand constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * @param keyword The keyword to be matched.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    private FindCommand(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * FindCommand factory method.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * @param keyword The keyword to be matched.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     * @return A FindCommand object.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    public static FindCommand of(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     * Prints the tasks matching the keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     * @param ui The UI object.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     * @param storage The storage utility.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        ui.print(\"Here are the tasks containing \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"        ui.print(tasks.filter((task) -\u003e task.keywordMatcher(keyword)).toStringArray());","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"        return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":48}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"/** Represents the \"list\" command. */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    /** The Date object. */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"    private Date date;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    /** Default ListCommand constructor. */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     * ListCommand constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     * @param date The Date object.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    private ListCommand(Date date) {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     * ListCommand factory method.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     * @param content The content of the user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     * @return A ListCommand object.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the content input contains more than the \"list\" keyword and date.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidDateException If the date in the content input is not in the yyyy-MM-dd format.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    public static ListCommand of(String content) throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"        if (content.trim().length() \u003c 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"        return new ListCommand(Date.of(content));","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     * Prints the user\u0027s Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The list of tasks in the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"     * @param ui The UI object.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"     * @param storage The storage utility.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"        if (tasks.size() \u003c 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"            ui.print(\"No tasks yet!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"            return;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"            ui.print(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"            ui.print(tasks.toStringArray());","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"            return;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"        ui.print(\"Here are the tasks happening on \" + date + \":\");","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"        ui.print(tasks.toStringArray(date));","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":70}},{"path":"src/main/java/duke/date/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.date;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"/** A Date wrapper class. */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"public class Date {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"    /** The LocalDate. */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * The Date constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * @param date The LocalDate.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    Date(LocalDate date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * Date factory method.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * @param dateString The date string in yyyy-MM-dd format.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     * @return A Date object.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidDateException If the given dateString is not in yyyy-MM-dd format.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public static Date of(String dateString) throws InvalidDateException {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"            return new Date(LocalDate.parse(dateString));","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"     * Parses the Date into a JSON string.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     * @return A JSON string representation of the Date.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"    public String toJSONString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"        if (other instanceof Date) {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"            Date another \u003d (Date) other;","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"            return another.toString().equals(this.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"        return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":60}},{"path":"src/main/java/duke/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.enums;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"public enum Commands {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    ADD(\"add\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    FIND(\"find\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"    INVALID(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    private final String LABEL;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    private static final Map\u003cString, Commands\u003e BY_LABEL \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    Commands(String label) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"        LABEL \u003d label;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    static {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"        for (Commands command : values()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"            BY_LABEL.put(command.LABEL, command);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        return LABEL;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    public static Commands valueOfLabel(String label) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"        return BY_LABEL.getOrDefault(label, INVALID);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":37}},{"path":"src/main/java/duke/enums/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.enums;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"public enum Tasks {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    INVALID(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private final String LABEL;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    private static final Map\u003cString, Tasks\u003e BY_LABEL \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    Tasks(String label) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"        LABEL \u003d label;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    static {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"        for (Tasks t : values()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"            BY_LABEL.put(t.LABEL, t);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"        return LABEL;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"    public static Tasks valueOfLabel(String label) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"        return BY_LABEL.getOrDefault(label, INVALID);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":34}},{"path":"src/main/java/duke/exception/BadInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class BadInputFormatException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public BadInputFormatException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"The input is badly formatted.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":11}},{"path":"src/main/java/duke/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class EmptyCommandException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public EmptyCommandException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"Command input cannot be empty!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":7}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class EmptyDescriptionException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"Missing task description\");","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":7}},{"path":"src/main/java/duke/exception/FileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class FileNotFoundException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":4}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class InvalidDateException extends InvalidInputException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public InvalidDateException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"This is not a valid date!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"huizhuansam":7}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"Input is invalid\");","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    protected InvalidInputException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":11}},{"path":"src/main/java/duke/exception/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public NoSuchTaskException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"Task does not exist!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":7}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public UnknownCommandException(String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"Command \\\"\" + input + \"\\\" not found.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":7}},{"path":"src/main/java/duke/exception/UnknownTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public class UnknownTaskTypeException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    public UnknownTaskTypeException(String content) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"        super(\"No such task type \\\"\" + content + \"\\\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":7}},{"path":"src/main/java/duke/task/DatedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"/** Represents an abstract Task that has a Date attribute */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"public abstract class DatedTask extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    /** The Date of the Task. */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    protected Date date;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     * The DatedTask constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"     * @param date The date of the Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    protected DatedTask(String description, Date date) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * The DatedTask constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     * @param date The date of the Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone The done status of the Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"    protected DatedTask(String description, Date date, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * Date getter.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     * @return The Date attribute of the Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    public Date getDate() {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"        return date;","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":41}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"/** Represents a Deadline object.*/","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"public class Deadline extends DatedTask {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     * Deadline constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     * @param description The Deadline\u0027s description.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the deadline is badly formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    Deadline(String description) throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"        this(parseToDescription(description), parseToDate(description));","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     * Deadline constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     * @param description The Deadline\u0027s description.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * @param by The date to complete the task by.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    Deadline(String description, Date by) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"        super(description, by);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     * Deadline constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     * @param description The Deadline\u0027s description.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * @param by The date to complete the task by.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone The done status of the Deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    private Deadline(String description, Date by, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"        super(description, by, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     * Factory Deadline method.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     * @param description The user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     * @return A new Deadline object.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    public static Deadline of(String description) throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"        return new Deadline(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"     * Factory Deadline method.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"     * @param description The Deadline\u0027s description.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"     * @param by The date to complete the Task by.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone The done status of the Task","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"     * @return A new Deadline object.","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"    public static Deadline of(String description, Date by, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"        return new Deadline(description, by, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"     * Helper method to parse the user\u0027s input into a Date object by splitting using regex delimited by the \"/by\"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"     * keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"     * @param description The user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"     * @return A Date object.","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the given input is not well formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidDateException If the date contained in the input does not adhere to the yyyy-MM-dd format.","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"    private static Date parseToDate(String description) throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d description.split(\" /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"        return Date.of(tokens[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"     * Helper method to parse the user\u0027s input into the Deadline description by splitting using regex delimited by the","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"     * \"/by\" keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"     * @param description The user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"     * @return The description of the Deadline as string.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the given input is not well formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"    private static String parseToDescription(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d description.split(\" /by \");","lastModifiedDate":"2021-08-13"},{"lineNumber":90,"author":{"gitId":"huizhuansam"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2021-08-13"},{"lineNumber":91,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-13"},{"lineNumber":92,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":93,"author":{"gitId":"huizhuansam"},"content":"        return tokens[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":95,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":96,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":97,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":98,"author":{"gitId":"huizhuansam"},"content":"        return String.format(\"[D]%s %s (by: %s)\", isDone ? \"[X]\" : \"[ ]\", description, date);","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":100,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"huizhuansam"},"content":"    public JSONObject toJSONObject() {","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"huizhuansam"},"content":"        JSONObject obj \u003d new JSONObject();","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"type\", \"deadline\");","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"description\", description);","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"isDone\", isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"date\", date.toJSONString());","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"huizhuansam"},"content":"        return obj;","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":111}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"/** Represents an Event object. */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"public class Event extends DatedTask {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     * Event constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     * @param description The event\u0027s description","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the description is badly formatted","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    Event(String description) throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"        this(parseToDescription(description), parseToDate(description));","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     * Event constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     * @param description the event\u0027s description","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * @param at the event\u0027s time","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    Event(String description, Date at) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"        super(description, at);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    private Event(String description, Date at, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        super(description, at, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     * Factory Event method.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"     * @param description The user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"     * @return An Event object.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the input is badly formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    public static Event of(String description) throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"        return new Event(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"     * Factory Event method.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"     * @param description The Event\u0027s description.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"     * @param at The Event\u0027s date.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone The Event\u0027s done status.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"     * @return An Event object.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    public static Event of(String description, Date at, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"        return new Event(description, at, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"     * Helper method to parse the user\u0027s input into a Date object by splitting using regex delimited by the \"/at\"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"     * keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"     * @param description The user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"     * @return A Date object.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the given input is not well formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidDateException If the date contained in the input does not adhere to the yyyy-MM-dd format.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"    private static Date parseToDate(String description) throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d description.split(\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"        return Date.of(tokens[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"     * Helper method to parse the user\u0027s input into the Event description by splitting using regex delimited by the","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"     * \"/at\" keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"     * @param description The user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"     * @return The description of the Deadline as string.","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException If the given input is not well formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"    private static String parseToDescription(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d description.split(\" /at \");","lastModifiedDate":"2021-08-13"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2021-08-13"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-13"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"        return tokens[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":90,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":91,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":92,"author":{"gitId":"huizhuansam"},"content":"        return String.format(\"[E]%s %s (at: %s)\", isDone ? \"[X]\" : \"[ ]\", description, date);","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":94,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"huizhuansam"},"content":"    public JSONObject toJSONObject() {","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"huizhuansam"},"content":"        JSONObject obj \u003d new JSONObject();","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"type\", \"event\");","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"description\", description);","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"isDone\", isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"date\", date.toJSONString());","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"huizhuansam"},"content":"        return obj;","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":105}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.enums.Tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.UnknownTaskTypeException;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"/** Represents a Task object. */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"    /** The description of the task */","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    protected String description;","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    /** The status of the task */","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    /** Default Task constructor */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    protected Task() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"        this(\"\");","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     * Task constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        this(description, false);","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * Task constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone the status of the task","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"    /** Marks the task\u0027s status as done */","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"    public Task markTaskAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"        return this;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"     * Returns the Task as a JSON object.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"     * @return A JSON object.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"    public abstract JSONObject toJSONObject();","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"     * Returns a Task object or its subclass from a JSON object.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"     * @param obj The JSON object.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"     * @return A Task object.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"     * @throws UnknownTaskTypeException If the Task type is not known.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidDateException If the given date is badly formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"    public static Task fromJSONObject(JSONObject obj) throws UnknownTaskTypeException, InvalidDateException {","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"        Task task;","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"        String taskType \u003d (String) obj.get(\"type\");","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"        String description \u003d (String) obj.get(\"description\");","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"        boolean isDone \u003d (boolean) obj.get(\"isDone\");","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"        switch (Tasks.valueOfLabel(taskType)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"            task \u003d Deadline.of(description, Date.of((String) obj.get(\"date\")), isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"        case EVENT:","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"            task \u003d Event.of(description, Date.of((String) obj.get(\"date\")), isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"        case TODO:","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"            task \u003d Todo.of(description, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"        default:","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"            throw new UnknownTaskTypeException(taskType);","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"        return task;","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"     * Matches a keyword with the description of the Task. The keyword must match a whole word in the description.","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"     * @param keyword The keyword as a string.","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"huizhuansam"},"content":"     * @return True if the description matches the keyword, false otherwise.","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"huizhuansam"},"content":"    public final boolean keywordMatcher(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"huizhuansam"},"content":"        return Pattern.compile(\".*\\\\b\" + keyword + \"\\\\b.*\").matcher( description ).find();","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":95}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"/** Represents a Todo object. */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"     * Todo constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    Todo(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * Todo constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone The done status of the Todo.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     * Factory Todo method.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     * @param description The description","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     * @return A new Todo object","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    public static Todo of(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        return new Todo(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"     * Factory Todo method.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"     * @param description The description.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone The done status of the Todo.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     * @return a new Todo object","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"    public static Todo of(String description, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"        return String.format(\"[T]%s %s\", isDone ? \"[X]\" : \"[ ]\", description);","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"    public JSONObject toJSONObject() {","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"        JSONObject obj \u003d new JSONObject();","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"type\", \"todo\");","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"description\", description);","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"        obj.put(\"isDone\", isDone);","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"        return obj;","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":61}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.util;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import duke.enums.Commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"/** Utility class that handles parsing of user input to program command. */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"public class Parser {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     * Returns a Commands enum type from the user\u0027s full command input by regex splitting the command string and","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     * returning the first word.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     * @param fullCommand The full command input from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * @return Commands enum type.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    private static Commands commandParser(String fullCommand) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"        return Commands.valueOfLabel(fullCommand.trim().split(\" \")[0]);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     * Returns a string containing the content of the full command input by removing the command keyword and returning","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     * the remainder of the string using regex.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     * @param fullCommand The full command input from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     * @return The content of the command as string.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"    private static String contentParser(String fullCommand) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"        String[] token \u003d fullCommand.trim().split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"        if (token.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"            return \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        return token[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     * Checks for empty user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"     * @param fullCommand The full command input from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"     * @throws EmptyCommandException If the command is empty or consists of only whitespace.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"    private static void blankCommandChecker(String fullCommand) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"        if (fullCommand.trim().length() \u003c 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"     * Parses the user\u0027s full input to Command object.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"     * @param fullCommand The full command input from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"     * @return A Command object.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"     * @throws DukeException If an exception is found.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"        blankCommandChecker(fullCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"        Command command;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"        switch (commandParser(fullCommand)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"        case EXIT:","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"            command \u003d ExitCommand.of(contentParser(fullCommand));","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"        case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"            command \u003d ListCommand.of(contentParser(fullCommand));","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"        case ADD:","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"            command \u003d AddCommand.of(contentParser(fullCommand));","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"        case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"            command \u003d DoneCommand.of(contentParser(fullCommand));","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"        case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"            command \u003d DeleteCommand.of(contentParser(fullCommand));","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"        case FIND:","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"            command \u003d FindCommand.of(contentParser(fullCommand));","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"            throw new UnknownCommandException(fullCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"        return command;","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"huizhuansam":89}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.util;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.FileNotFoundException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.UnknownTaskTypeException;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"import java.io.File;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"/** Utility class that handles reading and writing from device storage. */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"public class Storage {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    /** The FileWriter object. */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    private static FileWriter fileWriter;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    /** The JSONParser object. */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    private static JSONParser jsonParser;","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    /** The file path to read and write from. */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    private String filePath;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    /** Default Storage constructor. Use for JUnit tests ONLY.*/","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    protected Storage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        filePath \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     * Storage constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"     * @param filePath The file path to read and write from.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     * Loads the program file from the file path if the file exists, else creates the file and its associated","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     * directories. Returns an ArrayList of Tasks constructed from data in the program file.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"     * @return An ArrayList of Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"     * @throws FileNotFoundException If the file in specified in the filepath does not exist.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"            boolean directoryExists \u003d !file.getParentFile().mkdir();","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"            boolean fileExists \u003d !file.createNewFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"            if (directoryExists \u0026\u0026 fileExists) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"                return parseFromJSON(filePath);","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"     * Writes the tasks to a JSON file in the specified file path.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"     * @param tasks The TaskList created from the instance of the Duke program.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"    public void write(TaskList tasks) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"        JSONArray arr \u003d new JSONArray();","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"        tasks.forEach((task) -\u003e arr.add(task.toJSONObject()));","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"            fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"            fileWriter.write(arr.toJSONString());","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"        } finally {","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"            try {","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"                fileWriter.flush();","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"                fileWriter.close();","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"     * Parses the JSON file from the specified path and returns an ArrayList of Tasks constructed from data in the","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"huizhuansam"},"content":"     * specified file.","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"huizhuansam"},"content":"     * @param filePath The file path to read and write from.","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"huizhuansam"},"content":"     * @return An ArrayList of Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"huizhuansam"},"content":"    public ArrayList\u003cTask\u003e parseFromJSON(String filePath) {","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"huizhuansam"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"huizhuansam"},"content":"        jsonParser \u003d new JSONParser();","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"huizhuansam"},"content":"        try (FileReader reader \u003d new FileReader(filePath)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"huizhuansam"},"content":"            JSONArray arr \u003d (JSONArray) jsonParser.parse(reader);","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"huizhuansam"},"content":"            arr.forEach((task) -\u003e {","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"huizhuansam"},"content":"                try {","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"huizhuansam"},"content":"                    tasks.add(Task.fromJSONObject((JSONObject) task));","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"huizhuansam"},"content":"                } catch (UnknownTaskTypeException | InvalidDateException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"huizhuansam"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"huizhuansam"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"huizhuansam"},"content":"            });","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"huizhuansam"},"content":"        } catch (IOException | ParseException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"huizhuansam"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"huizhuansam"},"content":"        return tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":113}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.util;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.task.DatedTask;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"/** A wrapper class that holds the list of Tasks. */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    /** The actual list holding the Tasks. */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    /** Default TaskList constructor. */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     * TaskList constructor. Used for constructing the list from storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     * @param list The ArrayList of Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * @param task The Task object.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"        list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"     * @return Size of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"    public int size() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"        return list.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"     * Returns the Task at the specified index in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"     * @param index The index of Task to be obtained.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"     * @return The Task at the specified index.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"     * @throws NoSuchTaskException If the index exceeds the size of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"    public Task getTask(int index) throws NoSuchTaskException {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"            return list.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"     * Deletes the Task from the specified index and returns the deleted Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"     * @param index The index of Task to be deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"     * @return The Task deleted at the specified index.","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"     * @throws NoSuchTaskException If the index exceeds the size of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"    public Task deleteTask(int index) throws NoSuchTaskException {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"            return list.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"     * Returns an array of string representation of the Tasks in the list, numbered from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"     * @return An array of string representation of the Tasks in the list, numbered from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"    public String[] toStringArray() {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"        String[] copy \u003d list.stream().map(Object::toString).toArray(String[]::new);","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"            copy[i] \u003d (i + 1) + \".\" + copy[i];","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"huizhuansam"},"content":"        return copy;","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"huizhuansam"},"content":"     * Returns an array of string representation of the Task in the list that matches the date given, numbered from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"huizhuansam"},"content":"     * @param date The date to be queried.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"huizhuansam"},"content":"     * @return An array of string representation of the Task in the list that matches the date given, numbered from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"huizhuansam"},"content":"    public String[] toStringArray(Date date) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"huizhuansam"},"content":"        return list.stream()","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"huizhuansam"},"content":"                .filter((task) -\u003e task instanceof DatedTask)","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"huizhuansam"},"content":"                .filter((task) -\u003e ((DatedTask) task).getDate().equals(date))","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"huizhuansam"},"content":"                .map(Object::toString)","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"huizhuansam"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"huizhuansam"},"content":"     * Performs an action on each Task in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"huizhuansam"},"content":"     * @param consumer The action to be performed on the Task objects in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"huizhuansam"},"content":"    public void forEach(Consumer\u003cTask\u003e consumer) {","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"huizhuansam"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"huizhuansam"},"content":"            consumer.accept(list.get(i));","lastModifiedDate":"2021-08-20"},{"lineNumber":115,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"huizhuansam"},"content":"     * Returns a TaskList containing Task that satisfy the supplied predicate.","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"huizhuansam"},"content":"     * @param predicate The predicate to test the Task with.","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"huizhuansam"},"content":"     * @return A TaskList containing Task that satisfies the given predicate.","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"huizhuansam"},"content":"    public TaskList filter(Function\u003cTask, Boolean\u003e predicate) {","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"huizhuansam"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"huizhuansam"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"huizhuansam"},"content":"            if (predicate.apply(list.get(i))) {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"huizhuansam"},"content":"                res.add(list.get(i));","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"huizhuansam"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"huizhuansam"},"content":"        return new TaskList(res);","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":133}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.util;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"/** Represents the user interface that handles user\u0027s input and program output. */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"public class Ui {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"    /** The reader that reads from system input. */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    private static final BufferedReader READER \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    /** The dividing line. */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"    private static final String LINE \u003d \"\\t************************************************************\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    /** The Duke logo. */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    private static final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    /** Prints the dividing line. */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     * Prints the error message.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     * @param errorMessage The error message from a caught exception.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        System.out.println(\"\\t\" + errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    /** Indicates the program found a save and is loading the data from storage. */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    public void showLoadSuccess() {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"        System.out.println(\"Found a save, loading......\");","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    /** Indicates the program could not load data from storage. */","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"        System.out.println(\"No saves found!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"    /** The text to be displayed when program starts. */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"        System.out.println(\"Hello from\");","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"        showLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"        print(\"\\033[3m*booting up......*\\033[0m\", \"I\u0027m the Hui Zhuan Bot v2.0!\", \"What do you want me to do?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"        showLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"     * Reads the system input and returns the input as a string.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"     * @return String representation of the system input.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"     * @throws IOException If an input exception occurred.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"        return READER.readLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"     * Closes the reader.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"     * @throws IOException If an input exception occurred.","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"    public void cleanup() throws IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"        READER.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"     * Prints the provided variable length argument of strings.","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"     * @param input A variable length argument of strings.","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"    public void print(String...input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"        for (String out : input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"            System.out.println(\"\\t\" + out);","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"huizhuansam":84}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.UnknownTaskTypeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    public void testInvalidDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(InvalidDateException.class, () -\u003e AddCommand.of(\"event event 1 /at 10-10-2020\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    public void testUnknownTaskType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(UnknownTaskTypeException.class, () -\u003e AddCommand.of(\"unknown event 1 /at 2020-10-10\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    public void testEmptyDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e AddCommand.of(\"event\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public void testBadInputFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(BadInputFormatException.class, () -\u003e AddCommand.of(\"event event 1\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"    public void testIsExit()","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"            throws UnknownTaskTypeException,","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"            BadInputFormatException,","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"            EmptyDescriptionException,","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"            InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        assertFalse(AddCommand.of(\"event event 1 /at 2020-10-10\").isExit());","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":42}},{"path":"src/test/java/duke/date/DateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.date;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"public class DateTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(\"Oct 10 2020\", new Date(LocalDate.parse(\"2020-10-10\")).toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    public void testJSONConversion() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(\"2020-10-10\", new Date(LocalDate.parse(\"2020-10-10\")).toJSONString());","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    public void testEquals() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(new Date(LocalDate.parse(\"2020-10-10\")), new Date(LocalDate.parse(\"2020-10-10\")));","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public void testNotEquals() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        assertNotEquals(new Date(LocalDate.parse(\"2020-10-10\")), new Date(LocalDate.parse(\"2020-10-11\")));","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"    public void testFactoryMethod() throws InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(\"Oct 10 2020\", Date.of(\"2020-10-10\").toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"    public void testInvalidDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(InvalidDateException.class, () -\u003e Date.of(\"10-10-2020\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":43}},{"path":"src/test/java/duke/stub/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.stub;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    public StorageStub() {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"        super();","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":9}},{"path":"src/test/java/duke/stub/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.stub;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":6}},{"path":"src/test/java/duke/stub/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.stub;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    public JSONObject toJSONObject() {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"        return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":11}},{"path":"src/test/java/duke/stub/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.stub;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":6}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    public void testStringConversion() throws InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"                \"[D][ ] deadline 1 (by: Oct 10 2020)\",","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"                new Deadline(\"deadline 1\", Date.of(\"2020-10-10\")).toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    public void testInvalidDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(InvalidDateException.class, () -\u003e new Deadline(\"deadline 1\", Date.of(\"10-10-2020\")));","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    public void testJSONConversion() throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"        JSONObject object \u003d new JSONObject();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"type\", \"deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"isDone\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"description\", \"deadline 1\");","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"date\", \"2020-10-10\");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"                object.toJSONString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"                new Deadline(\"deadline 1 /by 2020-10-10\").toJSONObject().toJSONString());","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    public void testInvalidInputFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(BadInputFormatException.class, () -\u003e new Deadline(\"deadline 1\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"    public void testFactoryMethod1() throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"                new Deadline(\"deadline 1 /by 2020-10-10\").toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"                Deadline.of(\"deadline 1 /by 2020-10-10\").toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"    public void testFactoryMethod2() throws InvalidDateException, BadInputFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"                new Deadline(\"deadline 1 /by 2020-10-10\").toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"                Deadline.of(\"deadline 1\", Date.of(\"2020-10-10\"), false).toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":56}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.BadInputFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"public class EventTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    public void testStringConversion() throws InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"                \"[E][ ] event 1 (at: Oct 10 2020)\",","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"                new Event(\"event 1\", Date.of(\"2020-10-10\")).toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    public void testInvalidDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(InvalidDateException.class, () -\u003e new Event(\"event 1\", Date.of(\"10-10-2020\")));","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    public void testJSONConversion() throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"        JSONObject object \u003d new JSONObject();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"type\", \"event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"isDone\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"description\", \"event 1\");","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"date\", \"2020-10-10\");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(object.toJSONString(), new Event(\"event 1 /at 2020-10-10\").toJSONObject().toJSONString());","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    public void testInvalidInputFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"        assertThrows(BadInputFormatException.class, () -\u003e new Event(\"event 1\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"    public void testFactoryMethod1() throws BadInputFormatException, InvalidDateException {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"                new Event(\"event 1 /at 2020-10-10\").toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"                Event.of(\"event 1 /at 2020-10-10\").toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"    public void testFactoryMethod2() throws InvalidDateException, BadInputFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"                new Event(\"event 1 /at 2020-10-10\").toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"                Event.of(\"event 1\", Date.of(\"2020-10-10\"), false).toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":54}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(\"[T][ ] todo 1\", new Todo(\"todo 1\").toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    public void testJSONConversion() {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"        JSONObject object \u003d new JSONObject();","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"type\", \"todo\");","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"isDone\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"        object.put(\"description\", \"todo 1\");","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(object.toJSONString(), new Todo(\"todo 1\").toJSONObject().toJSONString());","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    public void testFactoryMethod1() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(new Todo(\"todo 1\").toString(), Todo.of(\"todo 1\").toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public void testFactoryMethod2() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        assertEquals(new Todo(\"todo 1\", true).toString(), Todo.of(\"todo 1\", true).toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"huizhuansam":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"add todo one","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"add todo two","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"add todo three","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"done 1","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"done 2","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"done 3","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"add deadline one /by 2020-10-10","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"add deadline two /by 2020-11-11","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"add deadline three /by 2020-12-12","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"done 4","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"done 5","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"done 6","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"add event one /at 2020-10-10","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"add event two /at 2020-11-11","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"add event three /at 2020-12-12","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"done 7","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"done 8","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"done 9","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"list 2020-10-10","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"list 2020-11-11","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"list 2020-12-12","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"list 2020-01-01","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"bye","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":30}}]
