[{"path":"src/main/java/BadInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"public class BadInputFormatException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"    public BadInputFormatException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"        super(\"The input is badly formatted.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":5}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"public enum Command {","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"    ADD(\"add\"),","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    TODO(\"todo\");","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private final String text;","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    Command(String text) {","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"        this.text \u003d text;","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     * Returns a Command enum from the command string.","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     * @param text the command text","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * @return the Command enum","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     * @throws UnknownCommandException if the command text is an unknown command","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    public static Command fromString(String text) throws UnknownCommandException {","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        for (Command command : Command.values()) {","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"            if (Objects.equals(command.text, text)) {","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"                return command;","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"            }","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        throw new UnknownCommandException();","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"        return text;","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":38}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":" * Represents a Deadline object.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"    /** The date to complete the task by */","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    private String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"     * Deadline constructor.","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     * @param description the deadline\u0027s description","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException if the deadline is badly formatted","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    private Deadline(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"        this(parse(description)[0], parse(description)[1]);","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     * Deadline constructor.","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     * @param description the deadline\u0027s description","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * @param by the date to complete the task by","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    private Deadline(String description, String by) {","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     * Factory Deadline method.","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     * @param description the user\u0027s input","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     * @return a new Deadline object","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"    public static Deadline of(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"        return new Deadline(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"     * Parses the description into tokens as string arrays.","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     * @param description the user\u0027s input","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"     * @return an array of tokens represented as strings; index 0 contains the description, index 1 contains the time","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException if the input is not properly formatted","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"    private static String[] parse(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d description.split(\" /by \");","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"        return tokens;","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"        return String.format(\"[D]%s %s (by: %s)\", isDone ? \"[X]\" : \"[ ]\", description, by);","lastModifiedDate":"2021-08-13"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":58}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    /** Handles user input for the program. */","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    private static void run() {","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"        // Greeting","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"        Printer.print(","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"                \"\\033[3m*booting up......*\\033[0m\",","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"                \"I\u0027m the Hui Zhuan Bot v1.0!\",","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"                \"What do you want me to do?\");","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"        while (true) {","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"            try {","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"                String userInput \u003d reader.readLine();","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"                    break;","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"                }","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"                Processor.process(userInput);","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"                Printer.print(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"            }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        // Goodbye","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        Printer.print(\"Bye. See ya l8er allig8er!\", \"\\033[3m*shutting down......*\\033[0m\");","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"        run();","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"huizhuansam":34,"-":10}},{"path":"src/main/java/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"public class EmptyCommandException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"    public EmptyCommandException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"        super(\"Command input cannot be empty!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":5}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"public class EmptyDescriptionException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"        super(\"Missing task description\");","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":" * Represents an Event object.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"    /** The time when the event is happening. */","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    private String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"     * Event constructor.","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     * @param description the event\u0027s description","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException if the description is badly formatted","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    private Event(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"        this(parse(description)[0], parse(description)[1]);","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     * Event constructor.","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"     * @param description the event\u0027s description","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * @param at the event\u0027s time","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    private Event(String description, String at) {","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     * Factory Event method.","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     * @param description the user\u0027s input","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     * @return a new Event object","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException if the input is badly formatted","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    public static Event of(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"        return new Event(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"     * Parses the description into tokens as string arrays.","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"     * @param description the user\u0027s input","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"     * @return an array of tokens represented as strings; index 0 contains the description, index 1 contains the time","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException if the input is not properly formatted","lastModifiedDate":"2021-08-13"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    private static String[] parse(String description) throws BadInputFormatException {","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d description.split(\" /at \");","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"        return tokens;","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"        return String.format(\"[E]%s %s (at: %s)\", isDone ? \"[X]\" : \"[ ]\", description, at);","lastModifiedDate":"2021-08-13"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":59}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"        super(\"Input is invalid\");","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    protected InvalidInputException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":9}},{"path":"src/main/java/Memory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":" * Holds the tasks and relevant metadata. Provides methods of accessing, manipulating, and deleting data.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"public class Memory {","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"    /** The array holding the tasks */","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * Adds a task string to the Memory.","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * @param task the task string","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    public static void add(Task task) {","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"        list.add(task);","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"        Printer.print(","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"                String.format(\"\\t%s\", task.toString()),","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"                String.format(","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"                        \"Now you have %d %s in the list\",","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"                        Memory.getSize(),","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"                        Memory.getSize() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"     * Marks the task in memory as done by string index.","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"     * @param stringIndex the index of the task as a string","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"     * @throws TaskOutOfRangeException if the input index exceeds the number of tasks present","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException if the input does not specify a valid index","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    public static void markTaskAsDoneByIndex(String stringIndex)","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"            throws BadInputFormatException, TaskOutOfRangeException {","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"        if (isInvalidIndex(stringIndex)) {","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"        int index \u003d Integer.parseInt(stringIndex);","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"        if (index \u003e getSize()) {","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"            throw new TaskOutOfRangeException();","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":46,"author":{"gitId":"huizhuansam"},"content":"        list.get(Integer.parseInt(stringIndex) - 1).markTaskAsDone();","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"huizhuansam"},"content":"     * Deletes the task from Memory by the index.","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"huizhuansam"},"content":"     * @param stringIndex the task index in Memory","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"huizhuansam"},"content":"     * @throws TaskOutOfRangeException if the input index exceeds the number of tasks present","lastModifiedDate":"2021-08-13"},{"lineNumber":54,"author":{"gitId":"huizhuansam"},"content":"     * @throws BadInputFormatException if the input does not specify a valid index","lastModifiedDate":"2021-08-13"},{"lineNumber":55,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":56,"author":{"gitId":"huizhuansam"},"content":"    public static void deleteTaskByIndex(String stringIndex)","lastModifiedDate":"2021-08-13"},{"lineNumber":57,"author":{"gitId":"huizhuansam"},"content":"            throws TaskOutOfRangeException, BadInputFormatException {","lastModifiedDate":"2021-08-13"},{"lineNumber":58,"author":{"gitId":"huizhuansam"},"content":"        if (isInvalidIndex(stringIndex)) {","lastModifiedDate":"2021-08-13"},{"lineNumber":59,"author":{"gitId":"huizhuansam"},"content":"            throw new BadInputFormatException();","lastModifiedDate":"2021-08-13"},{"lineNumber":60,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":61,"author":{"gitId":"huizhuansam"},"content":"        int index \u003d Integer.parseInt(stringIndex);","lastModifiedDate":"2021-08-13"},{"lineNumber":62,"author":{"gitId":"huizhuansam"},"content":"        if (index \u003e getSize()) {","lastModifiedDate":"2021-08-13"},{"lineNumber":63,"author":{"gitId":"huizhuansam"},"content":"            throw new TaskOutOfRangeException();","lastModifiedDate":"2021-08-13"},{"lineNumber":64,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":65,"author":{"gitId":"huizhuansam"},"content":"        Printer.print(","lastModifiedDate":"2021-08-13"},{"lineNumber":66,"author":{"gitId":"huizhuansam"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-08-13"},{"lineNumber":67,"author":{"gitId":"huizhuansam"},"content":"                list.remove(index - 1).toString(),","lastModifiedDate":"2021-08-13"},{"lineNumber":68,"author":{"gitId":"huizhuansam"},"content":"                String.format(","lastModifiedDate":"2021-08-13"},{"lineNumber":69,"author":{"gitId":"huizhuansam"},"content":"                        \"Now you have %d %s in the list.\",","lastModifiedDate":"2021-08-13"},{"lineNumber":70,"author":{"gitId":"huizhuansam"},"content":"                        getSize(),","lastModifiedDate":"2021-08-13"},{"lineNumber":71,"author":{"gitId":"huizhuansam"},"content":"                        getSize() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-13"},{"lineNumber":72,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":73,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":74,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":75,"author":{"gitId":"huizhuansam"},"content":"     * Appends an index number to the tasks in memory in increasing order, starting from 1.","lastModifiedDate":"2021-08-13"},{"lineNumber":76,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":77,"author":{"gitId":"huizhuansam"},"content":"     * @return a new string deque with the numbered tasks","lastModifiedDate":"2021-08-13"},{"lineNumber":78,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":79,"author":{"gitId":"huizhuansam"},"content":"    private static ArrayDeque\u003cString\u003e indexAppender() {","lastModifiedDate":"2021-08-13"},{"lineNumber":80,"author":{"gitId":"huizhuansam"},"content":"        return IntStream.range(0, getSize())","lastModifiedDate":"2021-08-13"},{"lineNumber":81,"author":{"gitId":"huizhuansam"},"content":"                .mapToObj((pos) -\u003e String.format(\"%d.%s\", pos + 1, list.get(pos).toString()))","lastModifiedDate":"2021-08-13"},{"lineNumber":82,"author":{"gitId":"huizhuansam"},"content":"                .collect(Collectors.toCollection(ArrayDeque::new));","lastModifiedDate":"2021-08-13"},{"lineNumber":83,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":84,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":85,"author":{"gitId":"huizhuansam"},"content":"    /** Prints the contents of the memory */","lastModifiedDate":"2021-08-13"},{"lineNumber":86,"author":{"gitId":"huizhuansam"},"content":"    public static void print() {","lastModifiedDate":"2021-08-13"},{"lineNumber":87,"author":{"gitId":"huizhuansam"},"content":"        ArrayDeque\u003cString\u003e output \u003d indexAppender();","lastModifiedDate":"2021-08-13"},{"lineNumber":88,"author":{"gitId":"huizhuansam"},"content":"        output.addFirst(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-13"},{"lineNumber":89,"author":{"gitId":"huizhuansam"},"content":"        Printer.print(output.toArray(String[]::new));","lastModifiedDate":"2021-08-13"},{"lineNumber":90,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":91,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":92,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":93,"author":{"gitId":"huizhuansam"},"content":"     * Checks if the string passed in is a valid numeral.","lastModifiedDate":"2021-08-13"},{"lineNumber":94,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":95,"author":{"gitId":"huizhuansam"},"content":"     * @param string the string to be checked","lastModifiedDate":"2021-08-13"},{"lineNumber":96,"author":{"gitId":"huizhuansam"},"content":"     * @return true if the string is a numeral, false otherwise","lastModifiedDate":"2021-08-13"},{"lineNumber":97,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":98,"author":{"gitId":"huizhuansam"},"content":"    private static boolean isInvalidIndex(String string) {","lastModifiedDate":"2021-08-13"},{"lineNumber":99,"author":{"gitId":"huizhuansam"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d+$\");","lastModifiedDate":"2021-08-13"},{"lineNumber":100,"author":{"gitId":"huizhuansam"},"content":"        if (string \u003d\u003d null) {","lastModifiedDate":"2021-08-13"},{"lineNumber":101,"author":{"gitId":"huizhuansam"},"content":"            return true;","lastModifiedDate":"2021-08-13"},{"lineNumber":102,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":103,"author":{"gitId":"huizhuansam"},"content":"        return !pattern.matcher(string).matches();","lastModifiedDate":"2021-08-13"},{"lineNumber":104,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":105,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":106,"author":{"gitId":"huizhuansam"},"content":"    /** Returns the number of tasks in the array */","lastModifiedDate":"2021-08-13"},{"lineNumber":107,"author":{"gitId":"huizhuansam"},"content":"    private static int getSize() {","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"huizhuansam"},"content":"        return list.size();","lastModifiedDate":"2021-08-13"},{"lineNumber":109,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":110,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":110}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":" * Utility class that handles parsing of strings to other useful data structures.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"public class Parser {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"     * Parses the user\u0027s input into a string array of tokens, delimited by whitespace.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     * @return an array of tokens represented as strings","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidInputException if the input string is null","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    public static String[] tokenParser(String input) throws InvalidInputException {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"        return input.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"     * Parses the user\u0027s input into a string containing the description of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"     * @param command the type of command","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * @return the description","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     * @throws EmptyDescriptionException if the input does not contain a description","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"    public static String descriptionParser(String input, Command command) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d Arrays.stream(input.trim()","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"                .split((command.toString())))","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"                .map(String::trim)","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"        return tokens[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"huizhuansam":39}},{"path":"src/main/java/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":" * Utility class that handles all output to the console.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"public class Printer {","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"     * Parses and formats the output.","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"     * @param output variable length arguments, where each argument corresponds to a new line to be printed","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"     * @return a formatted string","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"    private static String outputParser(String ...output) {","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"        String divider \u003d \"\\t************************************************************\\n\";","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"        return String.format(","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"                \"%s%s%s\",","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"                divider,","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"                Arrays.stream(output)","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"                        .map(str -\u003e String.format(\"\\t%s\\n\", str))","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"                        .reduce((res, curr) -\u003e res + curr)","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"                        .orElse(\"\"),","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"                divider);","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * Prints the formatted output to the console.","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     * @param output variable length arguments, where each argument corresponds to a new line to be printed","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"    public static void print(String ...output) {","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        System.out.println(outputParser(output));","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":33}},{"path":"src/main/java/Processor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"public class Processor {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"     * Processes the user\u0027s input based on the commands contained in the input string.","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"     * @throws InvalidInputException if the user\u0027s input is not a valid input","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    public static void process(String input) throws InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"        String[] tokens \u003d Parser.tokenParser(input);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"        int len \u003d tokens.length;","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"        switch (Command.fromString(command)) {","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"        case LIST:","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"            if (len \u003e 1) {","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"                throw new BadInputFormatException();","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"            }","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"            Memory.print();","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"        case DONE:","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"            Memory.markTaskAsDoneByIndex(tokens[1]);","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"        case DELETE:","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"            Memory.deleteTaskByIndex(tokens[1]);","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"        case TODO:","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"            Memory.add(Todo.of(Parser.descriptionParser(input, Command.TODO)));","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"            Memory.add(Deadline.of(Parser.descriptionParser(input, Command.DEADLINE)));","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"        case EVENT:","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"            Memory.add(Event.of(Parser.descriptionParser(input, Command.EVENT)));","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"            break;","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"        default:","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"huizhuansam"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":44}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":" * Represents a task object.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"    /** The description of the task */","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"    protected String description;","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"    /** The status of the task */","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"    /** Task constructor */","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    private Task() {","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"        this(\"\");","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * Task constructor.","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"        this(description, false);","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"     * Task constructor.","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"     * @param isDone the status of the task","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"huizhuansam"},"content":"    private Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"huizhuansam"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"huizhuansam"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"huizhuansam"},"content":"    /** Marks the task\u0027s status as done */","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"huizhuansam"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"huizhuansam"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"huizhuansam"},"content":"        Printer.print(\"Nice! I\u0027ve marked this task as done:\", this.toString());","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":41}},{"path":"src/main/java/TaskOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"public class TaskOutOfRangeException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"    public TaskOutOfRangeException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"        super(\"Task does not exist!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":" * Represents a Todo object.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"     * Todo constructor.","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"     * @param description the description","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"    private Todo(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"     * Factory Todo method.","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"     * @param description the description","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"     * @return a new Todo object","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"    public static Todo of(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"        return new Todo(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"        return String.format(\"[T]%s %s\", isDone ? \"[X]\" : \"[ ]\", description);","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":28}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"public class UnknownCommandException extends InvalidInputException {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"        super(\"Command not found.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huizhuansam"},"content":"todo one","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"huizhuansam"},"content":"todo two","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"huizhuansam"},"content":"todo three","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"huizhuansam"},"content":"done 1","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"huizhuansam"},"content":"done 2","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"huizhuansam"},"content":"done 3","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"huizhuansam"},"content":"deadline one /by Sunday","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"huizhuansam"},"content":"deadline two /by Monday","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"huizhuansam"},"content":"deadline three /by Tuesday","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"huizhuansam"},"content":"done 4","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"huizhuansam"},"content":"done 5","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"huizhuansam"},"content":"done 6","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"huizhuansam"},"content":"event one /at Mon 2-4pm","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"huizhuansam"},"content":"event two /at Tues 2-4pm","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"huizhuansam"},"content":"event three /at Wed 2-4pm","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"huizhuansam"},"content":"done 7","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"huizhuansam"},"content":"done 8","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"huizhuansam"},"content":"done 9","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"huizhuansam"},"content":"delete 10","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"huizhuansam"},"content":"delete 9","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"huizhuansam"},"content":"delete 8","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"huizhuansam"},"content":"delete 7","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"huizhuansam"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"huizhuansam"},"content":"bye","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"huizhuansam":30}}]
