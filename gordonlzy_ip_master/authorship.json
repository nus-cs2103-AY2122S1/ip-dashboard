[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gordonlzy":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"D | 0 | buy book | Sep 27 2021, 9 am","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"T | 0 | do not join sports club","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"D | 0 | gym | Aug 25 2021, 8 am","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"gordonlzy":5}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"gordonlzy":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"public class Duke {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    protected Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    protected Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Duke Class specifying the filepath","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        storage \u003d new Storage(Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"            ArrayList\u003cTask\u003e taskList \u003d storage.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"                throw new DukeException(\"task list is empty\");","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":44}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for DukeException specifying the error message","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"gordonlzy":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"gordonlzy":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    protected Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"gordonlzy":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    protected Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"    protected Image victorImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/victor.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"                DialogBox.getDukeDialog(response, victorImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"gordonlzy":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"import duke.command.IncorrectCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"import duke.command.UpdateCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"     * Parses a string to a Command","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"     * @param fullCommand the command in string","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"     * @return            the command in Command class","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"        String[] inputValues \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"        String commandInstruction \u003d inputValues[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"        String parameter1 \u003d getParameters(inputValues)[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        String parameter2 \u003d getParameters(inputValues)[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"        String parameter3 \u003d getParameters(inputValues)[2];","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"            switch (commandInstruction) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"            case ListCommand.INSTRUCTION_LIST:","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"            case TodoCommand.INSTRUCTION_TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"                return new TodoCommand(parameter1);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"            case DeadlineCommand.INSTRUCTION_DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"                return new DeadlineCommand(parameter1, parameter2);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"            case EventCommand.INSTRUCTION_EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"                return new EventCommand(parameter1, parameter2);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"            case DoneCommand.INSTRUCTION_DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"                return new DoneCommand(parameter1);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"            case DeleteCommand.INSTRUCTION_DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"                return new DeleteCommand(parameter1);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"            case FindCommand.INSTRUCTION_FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"                return new FindCommand(parameter1);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"            case UpdateCommand.INSTRUCTION_UPDATE:","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"                return new UpdateCommand(parameter1, parameter2, parameter3);","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"            case ExitCommand.INSTRUCTION_EXIT:","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"                return new IncorrectCommand(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what \"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"                        + \"that means :-(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"     * Retrieves the parameters from an array of String input values","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"gordonlzy"},"content":"     * @param inputValues an array of input values","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"gordonlzy"},"content":"     * @return            an array of parameters","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"gordonlzy"},"content":"    public static String[] getParameters(String[] inputValues) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"gordonlzy"},"content":"        String parameter1 \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"gordonlzy"},"content":"        String parameter2 \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"gordonlzy"},"content":"        String parameter3 \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"gordonlzy"},"content":"        if (inputValues.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"gordonlzy"},"content":"            if (inputValues[1].contains(\"-\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"gordonlzy"},"content":"                String[] inputParameters \u003d inputValues[1].split(\" \", 3);","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"gordonlzy"},"content":"                if (inputParameters.length \u003e 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"gordonlzy"},"content":"                    parameter1 \u003d inputParameters[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"gordonlzy"},"content":"                    parameter2 \u003d inputParameters[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"gordonlzy"},"content":"                    parameter3 \u003d inputParameters[2];","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"gordonlzy"},"content":"                } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"gordonlzy"},"content":"                    parameter1 \u003d inputParameters[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"gordonlzy"},"content":"                    parameter2 \u003d inputParameters[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"gordonlzy"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"gordonlzy"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"gordonlzy"},"content":"                String[] inputParameters \u003d inputValues[1].split(\"\\\\s/((at)|(by))\\\\s\");","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"gordonlzy"},"content":"                if (inputParameters.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"gordonlzy"},"content":"                    parameter1 \u003d inputParameters[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"gordonlzy"},"content":"                    parameter2 \u003d inputParameters[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"gordonlzy"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"gordonlzy"},"content":"                    parameter1 \u003d inputParameters[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"gordonlzy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"gordonlzy"},"content":"        return new String[]{parameter1, parameter2, parameter3};","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":94}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    protected Path filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    protected Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Storage Class specifying the filepath","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * Returns an ArrayList of tasks loaded from data source","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     * @return           an arraylist of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        boolean directoryExists \u003d Files.exists(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"            if (directoryExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"                List\u003cString\u003e data \u003d Files.readAllLines(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"                for (String str : data) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"                    Task task \u003d convertDataToTask(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"     * Saves the given task to the data source","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"     * @param task the given task to save","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"    public void save(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"        boolean directoryExists \u003d Files.exists(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"            if (directoryExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"                String newData \u003d task.toData() + \u0027\\n\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"                Files.write(filePath, newData.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"gordonlzy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"gordonlzy"},"content":"                throw new DukeException(\"Data file doesn\u0027t exist\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"gordonlzy"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"gordonlzy"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"gordonlzy"},"content":"     * Update the given task in the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"gordonlzy"},"content":"     * @param taskNumber the task number of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"gordonlzy"},"content":"     * @param task       the task given","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"gordonlzy"},"content":"     * @param action     actions to perform to the task, eg: d-delete, m-modify","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"gordonlzy"},"content":"    public void update(int taskNumber, Task task, String action) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"gordonlzy"},"content":"        boolean directoryExists \u003d Files.exists(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"gordonlzy"},"content":"            if (directoryExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"gordonlzy"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"gordonlzy"},"content":"                if (action.equals(\"m\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"gordonlzy"},"content":"                    lines.set(taskNumber - 1, task.toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"gordonlzy"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"gordonlzy"},"content":"                    lines.remove(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"gordonlzy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"gordonlzy"},"content":"                Files.write(filePath, lines);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"gordonlzy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"gordonlzy"},"content":"                throw new DukeException(\"Data file doesn\u0027t exist\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"gordonlzy"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"gordonlzy"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"gordonlzy"},"content":"     * Convert data retrieved from data source to Task","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"gordonlzy"},"content":"     * @param data the data retrieved from data source","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"gordonlzy"},"content":"     * @return     the converted Task","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"gordonlzy"},"content":"    private Task convertDataToTask(String data) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"gordonlzy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"gordonlzy"},"content":"            String[] dataValues \u003d data.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"gordonlzy"},"content":"            String type \u003d dataValues[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"gordonlzy"},"content":"            boolean isCompleted \u003d dataValues[1].equals(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"gordonlzy"},"content":"            String description \u003d dataValues[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"gordonlzy"},"content":"            String date;","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"gordonlzy"},"content":"            if (dataValues.length \u003e 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"gordonlzy"},"content":"                date \u003d dataValues[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"gordonlzy"},"content":"                switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"gordonlzy"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"gordonlzy"},"content":"                    return new Deadline(description, isCompleted, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"gordonlzy"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"gordonlzy"},"content":"                    return new Event(description, isCompleted, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"gordonlzy"},"content":"                default :","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"gordonlzy"},"content":"                    throw new DukeException(\"something went wrong\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"gordonlzy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"gordonlzy"},"content":"            return new Todo(description, isCompleted);","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"gordonlzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"gordonlzy"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"gordonlzy"},"content":"        return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":126}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Achievable;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for TaskList Class when not loading data","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for TaskList Class when loading data","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * Marks the task with the given task number as done","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * @param taskNumber the task number of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     * @return           the task marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    public Task markAsDone(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        return task;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"     * Adds the given task to the TaskList","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     * @param task a task","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"     * Removes the task with the given task number","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"     * @param taskNumber the task number of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"     * @return           the task removed","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"    public Task remove(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"        return task;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"     * Changes the date of the task with the given task number","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"     * @param taskNumber the task number of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"gordonlzy"},"content":"     * @param taskDate   the task date of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"gordonlzy"},"content":"     * @return           the task modified","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"gordonlzy"},"content":"    public Task changeDate(int taskNumber, String taskDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"gordonlzy"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"gordonlzy"},"content":"        if (task instanceof Achievable) {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"gordonlzy"},"content":"            Achievable achievable \u003d (Achievable) task;","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"gordonlzy"},"content":"            achievable.changeDate(taskDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"gordonlzy"},"content":"        return task;","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"gordonlzy"},"content":"     * Changes the description of the task with the given task number","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"gordonlzy"},"content":"     * @param taskNumber      the task number of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"gordonlzy"},"content":"     * @param taskDescription the task description of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"gordonlzy"},"content":"     * @return                the task modified","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"gordonlzy"},"content":"    public Task changeDescription(int taskNumber, String taskDescription) {","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"gordonlzy"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"gordonlzy"},"content":"        task.changeDescription(taskDescription);","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"gordonlzy"},"content":"        return task;","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"gordonlzy"},"content":"     * Mark the task with the given task number as incomplete","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"gordonlzy"},"content":"     * @param taskNumber      the task number of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"gordonlzy"},"content":"     * @return                the task modified","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"gordonlzy"},"content":"    public Task markAsIncomplete(int taskNumber) {","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"gordonlzy"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"gordonlzy"},"content":"        task.markAsIncomplete();","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"gordonlzy"},"content":"        return task;","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"gordonlzy"},"content":"     * Finds the tasks that match the given description","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"gordonlzy"},"content":"     * @param description the description of tasks to be found","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"gordonlzy"},"content":"     * @return            the tasks that match the description","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"gordonlzy"},"content":"    public ArrayList\u003cTask\u003e match(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"gordonlzy"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"gordonlzy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"gordonlzy"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"gordonlzy"},"content":"                foundTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"gordonlzy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"gordonlzy"},"content":"        return foundTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"gordonlzy"},"content":"     * Returns the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"gordonlzy"},"content":"     * @return           the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"gordonlzy"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"gordonlzy"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of TaskList","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"gordonlzy"},"content":"     * @return           the toString of TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"gordonlzy"},"content":"        return \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":133}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    protected Scanner sc;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Ui Class","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"     * Formats print the given error message","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"     * @param errorMessage the error message that is retrieved from the error","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"        formatPrint(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     * Formats print the given varargs into the indented format","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     * @param lines the varargs containing all the lines to be printed with indentation","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    public void formatPrint(String... lines) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"        System.out.println(\"\\n    ____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"            System.out.printf(\"     %s\\n\", line);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     * Formats print all the tasks in TaskList with indentation","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks a TaskList of all the tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    public String getList(TaskList tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"        StringBuilder str \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        for (Task task : tasks.getList()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"            str.append(\"   \").append(count).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"            count++;","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"        return str.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":53}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"     * Execute the command","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"     * Check if the command is an ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":26}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    protected Deadline deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for DeadlineCommand Class specifying parameter_1 and parameter_2","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    public DeadlineCommand(String parameter1, String parameter2) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"        if (parameter1.equals(\"\") || parameter2.equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The description or the date a deadline cannot be empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"        deadline \u003d new Deadline(parameter1, parameter2);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"        storage.save(this.deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        tasks.add(this.deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + this.deadline.toString() + \"\\n\" + tasks.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_DEADLINE + \"] - \" + deadline.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":59}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_DELETE \u003d \"delete\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    protected int taskNumber;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for DeleteCommand Class specifying the task number","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    public DeleteCommand(String taskNumber) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        if (taskNumber.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The task number of delete cannot be empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        this.taskNumber \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        Task task \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"        storage.update(taskNumber, task, \"d\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        return \"Noted. I\u0027ve removed this task:\" + \"  \" + task.toString() + tasks.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_DELETE + \"] - \" + taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":58}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_DONE \u003d \"done\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    protected int taskNumber;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for DoneCommand Class specifying the task number","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    public DoneCommand(String taskNumber) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        if (taskNumber.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The task number of done cannot be empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        this.taskNumber \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        Task task \u003d tasks.markAsDone(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"        storage.update(taskNumber, task, \"m\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"  [X] \" + task.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_DONE + \"] - \" + taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":58}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_EVENT \u003d \"event\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    protected Event event;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for EventCommand Class specifying parameter_1 and parameter_2","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    public EventCommand(String parameter1, String parameter2) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        if (parameter1.equals(\"\") || parameter2.equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The description and the date of an event cannot be empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        event \u003d new Event(parameter1, parameter2);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        storage.save(this.event);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"        tasks.add(this.event);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + this.event.toString() + \"\\n\" + tasks.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_EVENT + \"] - \" + event.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":58}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_EXIT \u003d \"bye\";","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        return \"See ya round, buckaroo.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_EXIT + \"]\";","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":42}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_FIND \u003d \"find\";","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    protected String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for FindCommand Class specifying the task number","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    public FindCommand(String description) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The task number of delete cannot be empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"        TaskList foundTasks \u003d new TaskList(tasks.match(description));","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"        return ui.getList(foundTasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_FIND + \"] - \" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"gordonlzy":55}},{"path":"src/main/java/duke/command/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"    protected String errorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for IncorrectCommand Class specifying the error message","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    public IncorrectCommand(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        return \"[error]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":49}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_LIST \u003d \"list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"        return ui.getList(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_LIST + \"]\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":43}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_TODO \u003d \"todo\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    protected Todo todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for TodoCommand Class specifying parameter_1","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    public TodoCommand(String parameter1) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        if (parameter1.equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        todo \u003d new Todo(parameter1);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"        storage.save(this.todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"        tasks.add(this.todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + this.todo.toString() + \"\\n\" + tasks.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_TODO + \"] - \" + todo.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":56}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import duke.*;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"    public static final String INSTRUCTION_UPDATE \u003d \"update\";","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    protected int taskNumber;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    protected String flag;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    protected String modification;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for UpdateCommand Class specifying the task number","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    public UpdateCommand(String taskNumber, String flag, String modification) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"        if (taskNumber.equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The task number of update cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        if (flag.equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The flag of update cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"        if ((flag.equals(\"-t\") || flag.equals(\"-d\")) \u0026\u0026 modification.equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"OOPS!!! The modification of update cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"        this.taskNumber \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"        this.modification \u003d modification;","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"     * Executes the command","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"     * @param tasks    the TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"     * @param ui       the Ui","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"     * @param storage  the data source","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"     * @return         string stating the command result","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"        Task task;","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"        switch (flag) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"        case \"-t\":","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"            task \u003d tasks.changeDate(taskNumber - 1, modification);","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        case \"-d\":","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"            task \u003d tasks.changeDescription(taskNumber - 1, modification);","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"        case \"-D\":","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"            task \u003d tasks.markAsIncomplete(taskNumber - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"            throw new DukeException(\"Invalid flag\");","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"        storage.update(taskNumber, task, \"m\");","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"        return \"Nice! I\u0027ve modified this task:\\n\" + task.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"     * Checks if the command is an ExitCommand","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"gordonlzy"},"content":"     * @return           boolean stating if command is ExitCommand","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"gordonlzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"gordonlzy"},"content":"        return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"gordonlzy"},"content":"     * Returns the toString of the class","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + INSTRUCTION_UPDATE + \"] - \" + taskNumber;","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"gordonlzy":79}},{"path":"src/main/java/duke/task/Achievable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"public interface Achievable {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"    void changeDate(String date);","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"gordonlzy":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class Deadline extends Task implements Achievable {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    protected String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Deadline Class specifying the description and the deadline \u0027by\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        String[] dateTime \u003d by.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        String rawDate \u003d dateTime[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        String[] dayMonthYear \u003d rawDate.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"        LocalDate date \u003d LocalDate.of(Integer.parseInt(dayMonthYear[2]), Integer.parseInt(dayMonthYear[1]),","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"                Integer.parseInt(dayMonthYear[0]));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"        assert dateTime.length \u003e 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"        String rawTime \u003d dateTime[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        String processedRawTime \u003d rawTime.substring(0, 2) + \":\" + rawTime.substring(2);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"        LocalTime time \u003d LocalTime.parse(processedRawTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"        String formattedTime \u003d time.format(DateTimeFormatter.ofPattern(\"h a\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"        this.by \u003d formattedDate + \", \" + formattedTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Deadline Class specifying the description, isDone and the deadline \u0027by\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"    public void changeDate(String by) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"        String[] dateTime \u003d by.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"        String rawDate \u003d dateTime[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        String[] dayMonthYear \u003d rawDate.split(\"/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"        LocalDate date \u003d LocalDate.of(Integer.parseInt(dayMonthYear[2]), Integer.parseInt(dayMonthYear[1]),","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"                Integer.parseInt(dayMonthYear[0]));","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"        assert dateTime.length \u003e 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"        String rawTime \u003d dateTime[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"        String processedRawTime \u003d rawTime.substring(0, 2) + \":\" + rawTime.substring(2);","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"        LocalTime time \u003d LocalTime.parse(processedRawTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"        String formattedTime \u003d time.format(DateTimeFormatter.ofPattern(\"h a\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"        this.by \u003d formattedDate + \", \" + formattedTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"gordonlzy"},"content":"     * Return the toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"gordonlzy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"gordonlzy"},"content":"     * Return the string format for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"gordonlzy"},"content":"     * @return           string format of task for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"gordonlzy"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"gordonlzy"},"content":"        return \"D\" + super.toData() + \" | \" + this.by;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"gordonlzy":80}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class Event extends Task implements Achievable {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Event Class specifying the description and the date \u0027at\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        String[] dateTime \u003d at.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        String rawDate \u003d dateTime[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        String[] dayMonthYear \u003d rawDate.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"        LocalDate date \u003d LocalDate.of(Integer.parseInt(dayMonthYear[2]), Integer.parseInt(dayMonthYear[1]),","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"                Integer.parseInt(dayMonthYear[0]));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"        assert dateTime.length \u003e 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"        // store date and time","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        String rawTime \u003d dateTime[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"        String processedRawTime \u003d rawTime.substring(0, 2) + \":\" + rawTime.substring(2);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"        LocalTime time \u003d LocalTime.parse(processedRawTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"        String formattedTime \u003d time.format(DateTimeFormatter.ofPattern(\"h a\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"        this.at \u003d formattedDate + \", \" + formattedTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Event Class specifying the description, isDone and the date \u0027at\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"    public Event(String description, boolean isDone, String at) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    public void changeDate(String at) {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"        String[] dateTime \u003d at.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        String rawDate \u003d dateTime[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"        String[] dayMonthYear \u003d rawDate.split(\"/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"        LocalDate date \u003d LocalDate.of(Integer.parseInt(dayMonthYear[2]), Integer.parseInt(dayMonthYear[1]),","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"                Integer.parseInt(dayMonthYear[0]));","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"        assert dateTime.length \u003e 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"        // store date and time","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"        String rawTime \u003d dateTime[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"        String processedRawTime \u003d rawTime.substring(0, 2) + \":\" + rawTime.substring(2);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"        LocalTime time \u003d LocalTime.parse(processedRawTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"        String formattedTime \u003d time.format(DateTimeFormatter.ofPattern(\"h a\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"        this.at \u003d formattedDate + \", \" + formattedTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"gordonlzy"},"content":"     * Return the toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"gordonlzy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"gordonlzy"},"content":"     * Return the string format for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"gordonlzy"},"content":"     * @return           string format of task for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"gordonlzy"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"gordonlzy"},"content":"        return \"E\" + super.toData() + \" | \" + this.at;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"gordonlzy":82}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Task Class specifying the description","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Task Class specifying the description and isDone","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"     * Return a status icon based on if task isDone, \"X\" if done, \" \" if not done","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"     * @return           the status icon based on isDone","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"     * Return a completion binary based on if task isDone, \"1\" if done, \"0\" if not done","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"     * @return           the completion binary based on isDone","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    public String getCompletionBinary() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with 1","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"     * Return the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"     * @return           the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        return this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"     * Mark the task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"gordonlzy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"gordonlzy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"gordonlzy"},"content":"     * Mark the task as incomplete","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"gordonlzy"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"gordonlzy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"gordonlzy"},"content":"     * Change the description of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"gordonlzy"},"content":"    public void changeDescription(String description) {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"gordonlzy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"gordonlzy"},"content":"     * Return the toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"gordonlzy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"gordonlzy"},"content":"     * Return the string format for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"gordonlzy"},"content":"     * @return           string format of task for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"gordonlzy"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"gordonlzy"},"content":"        return \" | \" + getCompletionBinary() + \" | \" + description;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"gordonlzy":89}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Todo Class specifying the description","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"     * Class constructor for Todo Class specifying the description and isDone","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"     * Return the toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"     * @return           toString of the class","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"     * Return the string format for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"     * @return           string format of task for data source","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        return \"T\" + super.toData();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"gordonlzy":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"gordonlzy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"gordonlzy":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"     * Test the parse method","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"    public void testParse() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"        Command deadlineActual \u003d Parser.parse(\"deadline gym /by 25/8/2021 0800\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"gym\", \"25/8/2021 0800\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(deadlineCommand.toString(), deadlineActual.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"        Command deleteActual \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(deleteCommand.toString(), deleteActual.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"        Command doneActual \u003d Parser.parse(\"done 1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(doneCommand.toString(), doneActual.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"        Command eventActual \u003d Parser.parse(\"event gym /at 25/8/2021 0800\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"        EventCommand eventCommand \u003d new EventCommand(\"gym\", \"25/8/2021 0800\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(eventCommand.toString(), eventActual.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"        Command exitActual \u003d Parser.parse(\"bye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(exitCommand.toString(), exitActual.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"        Command listActual \u003d Parser.parse(\"list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(listCommand.toString(), listActual.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"        Command todoActual \u003d Parser.parse(\"todo something\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"gordonlzy"},"content":"        TodoCommand todoCommand \u003d new TodoCommand(\"something\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(todoCommand.toString(), todoActual.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":51}},{"path":"src/test/java/duke/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"     * Test the isExit method","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    public void testIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(true, exitCommand.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":16}},{"path":"src/test/java/duke/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"     * Test the isExit method","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    public void testIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(false, listCommand.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":16}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"     * Test the testToData method","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"    public void testToData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"        String expected \u003d \"D | 0 | gym | Aug 25 2021, 8 am\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"        Deadline deadline \u003d new Deadline(\"gym\", \"25/8/2021 0800\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"        assertEquals(expected, deadline.toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":17}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"gordonlzy":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"deadline gym /by 25/8/2021 0800","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"event marathon /at 27/8/2021 0800","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"done 5","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"delete 7","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"delete 6","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"delete 5","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"gordonlzy":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"find ../src/main/java/*/*.java  \u003e sources.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gordonlzy":3,"-":37}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"../src/main/java/duke/Duke.java","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"../src/main/java/duke/DukeException.java","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"../src/main/java/duke/Parser.java","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"../src/main/java/duke/Storage.java","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"../src/main/java/duke/TaskList.java","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"../src/main/java/duke/Ui.java","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"gordonlzy":6}}]
