[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EssWhyy":15,"-":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"# Mr. Meeseeks Bot","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"Mr. Meeseeks Bot can chat with you ","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"to help keep track of various tasks you have!","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"![Ui Mockup](./Ui.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"### Track 3 Different Types of Tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"Mr. Meeseeks helps to keep track of 3 different types of tasks: ","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"To-do, Deadline \u0026 Event","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"### Manipulate and Sort Tasks ","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"Mr. Meeseeks can help add new tasks, mark your tasks as done, delete completed tasks, ","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"and sort tasks by their category and date/time!","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"### Save and Load Tasks for Later","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"Mr. Meeseeks saves your list of tasks in a separate text file on every update. ","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"When you exit the bot and return the next time, ","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"the bot reloads the list from the text file. ","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"You can continue where you left off! ","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"### SETUP","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"Download Meeseeks.jar from the repo ","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"### `start/help` - Shows list of bot commands","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"If you are new and unfamiliar with using the bot, ","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"this should be the first command you type into the GUI, ","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"it shows a list of possible user commands to use!","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"Type into the GUI and Mr. Meeseeks Bot will process and show you a response!","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"### `todo` - Creates a new Todo task","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"A Todo task is the most basic task. ","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"It consists of a simple description","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"To create a todo task, follow the following syntax:","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"`todo (description)`","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"- Input: `todo eat lunch`","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"- Output: `[T] [] eat lunch`","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"- Result : New ToDo task is created and added to Task List.","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"### `deadline` - Creates a new Deadline task","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"A Deadline task consists of a description like a ToDo.","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"EssWhyy"},"content":"It also has a Date and Time which represents the deadline.","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"Follow the following syntax:","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"EssWhyy"},"content":"`deadline (description) yyyy-mm-dd hh:mm`","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"EssWhyy"},"content":"(If the date \u0026 time are not valid, an error message will prompt the user.)","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"EssWhyy"},"content":"- Input: `deadline CS2100 Assignment 2021-09-14 13:00`","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"EssWhyy"},"content":"- Output: `[D] [] CS2100 Assignment (by: 2021-09-14 13:00)`","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"EssWhyy"},"content":"- Result : New Deadline task is created and added to Task List.","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"### `event` - Creates a new Event task","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"EssWhyy"},"content":"An Event task consists of a description like a ToDo.","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"EssWhyy"},"content":"It has a Date, a startTime and endTime to represent the duration.","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"`event (description) yyyy-mm-dd hh:mm hh:mm`","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"EssWhyy"},"content":"(If the date \u0026 times are not valid, an error message will prompt the user.)","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"EssWhyy"},"content":"- Input: `event CS2101 Meeting 2021-09-18 15:00 16:00`","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"EssWhyy"},"content":"- Output: `[E] [] CS2101 Meeting (at: 2021-09-18 15:00 to 16:00)`","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"EssWhyy"},"content":"- Result : New Event task is created and added to Task List.","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"EssWhyy"},"content":"### `list` - Shows the current list of tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"EssWhyy"},"content":"- Input: `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"EssWhyy"},"content":"- Output: ","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"EssWhyy"},"content":"  1. [T] [ ] eat lunch","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"EssWhyy"},"content":"  2. [D] [ ] CS2100 Assignment (by: 2021-09-14 13:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"EssWhyy"},"content":"  3. [E] [ ] CS2101 Meeting (at: 2021-09-18 15:00 to 16:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"EssWhyy"},"content":"### `sort` - Sorts the task list by type and date/time","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"EssWhyy"},"content":"Sorts the list by type first: todos, then deadlines, then events.","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"EssWhyy"},"content":"Deadlines and Events will then be sorted by dates and (start) times","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"EssWhyy"},"content":"Existing List:","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"EssWhyy"},"content":"1. [D] [ ] SEP Application (by: 2021-10-05 23:59)","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"EssWhyy"},"content":"2. [E] [ ] New Year\u0027s Day (at: 2021-01-01 15:00 to 17:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"EssWhyy"},"content":"3. [T] [ ] Eat lunch","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"EssWhyy"},"content":"4. [D] [ ] CS2103T project (by: 2021-09-23 23:59)","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"EssWhyy"},"content":"5. [E] [ ] CCA Practice (at: 2021-09-25 19:00 to 21:00) ","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"EssWhyy"},"content":"6. [E] [ ] CS2103T meeting (at: 2021-09-25 15:00 to 16:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"EssWhyy"},"content":"- Input: `sort`","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"EssWhyy"},"content":"- Output:","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"EssWhyy"},"content":"1. [T] [ ] Eat lunch","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"EssWhyy"},"content":"2. [D] [ ] CS2103T project (by: 2021-09-23 23:59)","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"EssWhyy"},"content":"3. [D] [ ] SEP Application (by: 2021-10-05 23:59)","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"EssWhyy"},"content":"4. [E] [ ] New Year\u0027s Day (at: 2021-01-01 15:00 to 17:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"EssWhyy"},"content":"5. [E] [ ] CS2103T meeting (at: 2021-09-25 15:00 to 16:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"EssWhyy"},"content":"6. [E] [ ] CCA Practice (at: 2021-09-25 19:00 to 21:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"EssWhyy"},"content":"- Result: The list is sorted according to task type, ","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"EssWhyy"},"content":"  then within deadlines and events, the tasks are ordered chronologically by date and then time","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"EssWhyy"},"content":"### `done` - Marks a task in the list as done","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"EssWhyy"},"content":"First find the task number of the task to mark as done (use the `list` command)","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"EssWhyy"},"content":"Then input `done (task Number)`, the task will be marked as done with an \u0027X\u0027","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"EssWhyy"},"content":"Re-marking a task that is already marked as done will have no effect.","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"EssWhyy"},"content":"Existing list:","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"EssWhyy"},"content":"  1. [T] [ ] eat lunch","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"EssWhyy"},"content":"  2. [D] [ ] CS2100 Assignment (by: 2021-09-14 13:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"EssWhyy"},"content":"  3. [E] [ ] CS2101 Meeting (at: 2021-09-18 15:00 to 16:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"EssWhyy"},"content":"- input: `done 2`","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"EssWhyy"},"content":"- output:`[D] [X] CS2100 Assignment (by: 2021-09-14 13:00)`","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"EssWhyy"},"content":"- result: The deadline task at position 2 is marked as done.","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"EssWhyy"},"content":"### `delete` - Deletes a task from the list","lastModifiedDate":"2021-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"EssWhyy"},"content":"Similar to the `done` command, find the task number of the task in the list to be deleted.","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":153,"author":{"gitId":"EssWhyy"},"content":"Then input `delete (task Number)` and the task will be deleted.","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"EssWhyy"},"content":"Existing list:","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"EssWhyy"},"content":"  1. [T] [ ] eat lunch","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"EssWhyy"},"content":"  2. [D] [ ] CS2100 Assignment (by: 2021-09-14 13:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"EssWhyy"},"content":"  3. [E] [ ] CS2101 Meeting (at: 2021-09-18 15:00 to 16:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"EssWhyy"},"content":"- Input: `delete 2`","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"EssWhyy"},"content":"- Output: ","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"EssWhyy"},"content":"    1. [T] [ ] eat lunch","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"EssWhyy"},"content":"    2. [E] [ ] CS2101 Meeting (at: 2021-09-18 15:00 to 16:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"EssWhyy"},"content":"- Result: The deadline task at position 2 is deleted, the remaining tasks are ","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"EssWhyy"},"content":"shifted up the list.","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"EssWhyy"},"content":"  ","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"EssWhyy"},"content":"### `find` - Returns all tasks which match a target description","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"EssWhyy"},"content":"Based on what the user inputs, the bot will search for all tasks which ","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"EssWhyy"},"content":"have a description containing the exact target string and show to the user.","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"EssWhyy"},"content":"`find (target description string)`","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"EssWhyy"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"EssWhyy"},"content":"Existing list:","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"EssWhyy"},"content":"  1. [T] [ ] eat lunch","lastModifiedDate":"2021-09-24"},{"lineNumber":185,"author":{"gitId":"EssWhyy"},"content":"  2. [D] [ ] CS2100 Assignment (by: 2021-09-14 13:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":186,"author":{"gitId":"EssWhyy"},"content":"  3. [E] [ ] CS2101 Meeting (at: 2021-09-18 15:00 to 16:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":187,"author":{"gitId":"EssWhyy"},"content":"  4. [D] [ ] CS2100 Project (by: 2021-10-01 23:59)","lastModifiedDate":"2021-09-24"},{"lineNumber":188,"author":{"gitId":"EssWhyy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":190,"author":{"gitId":"EssWhyy"},"content":"- Input: `find CS2100`","lastModifiedDate":"2021-09-24"},{"lineNumber":191,"author":{"gitId":"EssWhyy"},"content":"- Output:","lastModifiedDate":"2021-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":193,"author":{"gitId":"EssWhyy"},"content":"    [D] [ ] CS2100 Assignment (by: 2021-09-14 13:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":194,"author":{"gitId":"EssWhyy"},"content":"    [D] [ ] CS2100 Project (by: 2021-10-01 23:59)","lastModifiedDate":"2021-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"EssWhyy":172,"-":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eDuke\u003c/code\u003e is the Overarching class for the Duke Bot.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":" * It links the back-end Parser with the front-end JavaFX UI.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003egetResponse(String input)\u003c/code\u003e parses an input string using the Duke parser","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"     * It then runs back-end code and returns an output response String to show to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"     * @param input String input by the user in the JavaFX GUI","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"     * @return response returned by Duke after parsing the user input","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"        return parser.parseCommand(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"    ","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"EssWhyy":26,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"public class Launcher {","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"EssWhyy":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import duke.mainwindow.MainWindow;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"            stage.show();","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"EssWhyy":33}},{"path":"src/main/java/duke/dialogbox/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.dialogbox;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"import duke.mainwindow.MainWindow;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"    private void flip() {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"EssWhyy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"EssWhyy"},"content":"        db.flip();","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"EssWhyy"},"content":"        return db;","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"EssWhyy":63}},{"path":"src/main/java/duke/mainwindow/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.mainwindow;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import duke.dialogbox.DialogBox;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"        );","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"EssWhyy":55}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eParser\u003c/code\u003e class contains main bot logic to parse user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":" * The constructor does not take in any parameters, and the Storage and taskList","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":" * attributes are initialised automatically upon creation.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":" *","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":" * Parser contains several backend methods such as deleteTask(int index) or makeDeadline(int index)","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":" * for specific user commands/inputs","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"public class Parser{","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    private final String FILEPATH \u003d \"./tasks.txt\";","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"    private final Storage storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    private TaskList tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003ehelp()\u003c/code\u003e shows a list of usable commands that the user can enter into the bot.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"     * @return a string which shows the list of possible user commands","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"    private String showHelp(){","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"        return \"I\u0027m Mr Meeseeks look at me! :)\\n\"","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"                + \"Type in \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\" and I will keep track of a task!\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"                + \"Type \\\"list\\\" to show all tasks so far\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"                + \"Type \\\"done\\\" to mark a task as done\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"                + \"Type \\\"find\\\" to search for a task by keywords\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"                + \"Type \\\"bye\\\" to exit\";","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003elist()\u003c/code\u003e reads the current TaskList and shows a list of tasks the user has so far.","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"     * @return listDialog, a string which shows the current list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"    private String listTasks(){","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"        String listDialog \u003d \"Okay! Here\u0027s a list of your tasks so far:\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"        listDialog +\u003d tasks.returnAllTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"        return listDialog;","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003emarkTaskAsDone(String input)\u003c/code\u003e marks a task at a specific index as done","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"     * @param input input string in the GUI, should contain the index for the task to be marked as done","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"EssWhyy"},"content":"     * @return a dialog string showing the task marked as done,","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"EssWhyy"},"content":"     * shows an error message if there are no tasks or task number is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"EssWhyy"},"content":"    private String markTaskAsDone(String input){","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"EssWhyy"},"content":"        try{","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"EssWhyy"},"content":"            assert tasks.getSize() \u003e 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"EssWhyy"},"content":"        } catch (AssertionError e){","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! There are no tasks to mark as done...\";","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"EssWhyy"},"content":"            int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"            tasks.markDone(index-1);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"            storage.save(tasks.getList());","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"EssWhyy"},"content":"            return \"Can Do! I\u0027ve marked the below task as done\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"EssWhyy"},"content":"                + tasks.getTask(index-1).toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"EssWhyy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Please enter a valid task number to mark as done\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"EssWhyy"},"content":"                    + \"from 1 to \" + tasks.getSize();","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003edeleteTask(String input)\u003c/code\u003e deletes a task at a specific index","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"EssWhyy"},"content":"     * @param input input string in the GUI, should contain the index for the task to be deleted","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"EssWhyy"},"content":"     * @return a dialog string showing the task that got deleted,","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"EssWhyy"},"content":"     * shows an error message if there are no tasks or task number is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"EssWhyy"},"content":"    private String deleteTask(String input){","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"EssWhyy"},"content":"        try{","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"EssWhyy"},"content":"            assert tasks.getSize() \u003e 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"EssWhyy"},"content":"        } catch (AssertionError e){","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! There are no tasks to delete...\";","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"EssWhyy"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"EssWhyy"},"content":"            String deletedTask \u003d tasks.getTask(index-1).toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"EssWhyy"},"content":"            tasks.delete(index-1);","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"EssWhyy"},"content":"            storage.save(tasks.getList());","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"EssWhyy"},"content":"            return \"Okay Boom! The below task is gone\\n\" + deletedTask","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"EssWhyy"},"content":"                    + \"\\n There are now \" + tasks.getSize() + \" tasks\";","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"EssWhyy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Please enter a valid task number to delete\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"EssWhyy"},"content":"                    + \"from 1 to \" + tasks.getSize();","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003emakeToDo(String input)\u003c/code\u003e creates a ToDo task from user input","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"EssWhyy"},"content":"     * @param input input string in the GUI, should contain a description for the new todo task","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"EssWhyy"},"content":"     * @return a dialog string showing the new todo task created,","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"EssWhyy"},"content":"     * shows an error message if there is no description in the input.","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"EssWhyy"},"content":"    private String makeToDo(String input){","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"EssWhyy"},"content":"        try{","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"EssWhyy"},"content":"            assert tasks.getSize() \u003c\u003d 100;","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"EssWhyy"},"content":"        } catch (AssertionError e){","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Max task list size of 100 reached\";","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"EssWhyy"},"content":"            String description \u003d input.substring(5);","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"EssWhyy"},"content":"            Task todo \u003d new ToDo(description, false);","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"EssWhyy"},"content":"            tasks.add(todo);","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"EssWhyy"},"content":"            storage.save(tasks.getList());","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"EssWhyy"},"content":"            return \"Can Do! I\u0027ve created the todo task below:\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"EssWhyy"},"content":"                    + todo.toString() + \"\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"EssWhyy"},"content":"                    +\"There are now \" + tasks.getSize() + \" tasks.\";","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"EssWhyy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Please enter a description for the task\";","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003emakeDeadline(String input)\u003c/code\u003e creates a Deadline task from user input","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"EssWhyy"},"content":"     * @param input input string in the GUI, should contain a description,","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"EssWhyy"},"content":"     * as well as a Date and Time for the new Deadline task","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"EssWhyy"},"content":"     * @return a dialog string showing the new Deadline task created,","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"EssWhyy"},"content":"     * shows an error message if there is no description in the input or the date/time is invalid","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"EssWhyy"},"content":"    private String makeDeadline(String input){","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"EssWhyy"},"content":"        try{","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"EssWhyy"},"content":"            assert tasks.getSize() \u003c\u003d 100;","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"EssWhyy"},"content":"        } catch (AssertionError e){","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Max task list size of 100 reached\";","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"EssWhyy"},"content":"        int endIndex \u003d input.length()-1;","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"EssWhyy"},"content":"            String timeString \u003d input.substring(endIndex-4);","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"EssWhyy"},"content":"            String dateString \u003d input.substring(endIndex-15, endIndex-5);","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"EssWhyy"},"content":"            LocalTime time \u003d LocalTime.from(DateTimeFormatter.ISO_LOCAL_TIME.parse(timeString));","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"EssWhyy"},"content":"            LocalDate date \u003d LocalDate.from(DateTimeFormatter.ISO_LOCAL_DATE.parse(dateString));","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"EssWhyy"},"content":"            String description \u003d input.substring(9, endIndex-16);","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":164,"author":{"gitId":"EssWhyy"},"content":"            Task deadline \u003d new Deadline(description, date,time,false);","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"EssWhyy"},"content":"            tasks.add(deadline);","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"EssWhyy"},"content":"            storage.save(tasks.getList());","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"EssWhyy"},"content":"            return \"Can Do! I\u0027ve created the deadline task below:\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"EssWhyy"},"content":"                    + deadline.toString() + \"\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"EssWhyy"},"content":"                    +\"There are now \" + tasks.getSize() + \" tasks.\";","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"EssWhyy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Please follow the format:\\n deadline (description) yyyy-mm-dd hh:ss\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"EssWhyy"},"content":"                    + \"Check if the date/time is valid and if there is any missing spaces/characters\";","lastModifiedDate":"2021-09-21"},{"lineNumber":173,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003emakeEvent(String input)\u003c/code\u003e creates an Event task from user input","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"EssWhyy"},"content":"     * @param input input string in the GUI, should contain a description,","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"EssWhyy"},"content":"     * a Date, start Time and end Time for the new Event task","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"EssWhyy"},"content":"     * @return a dialog string showing the new Event task created,","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"EssWhyy"},"content":"     * shows an error message if there is no description in the input or the date/time strings are invalid","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"EssWhyy"},"content":"    private String makeEvent(String input){","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"EssWhyy"},"content":"        try{","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"EssWhyy"},"content":"            assert tasks.getSize() \u003c\u003d 100;","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"EssWhyy"},"content":"        } catch (AssertionError e){","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Max task list size of 100 reached\";","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"EssWhyy"},"content":"        int endIndex \u003d input.length()-1;","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"EssWhyy"},"content":"            String endTimeString \u003d input.substring(endIndex-4);","lastModifiedDate":"2021-09-21"},{"lineNumber":198,"author":{"gitId":"EssWhyy"},"content":"            String startTimeString \u003d input.substring(endIndex-10,endIndex-5);","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"EssWhyy"},"content":"            String dateString \u003d input.substring(endIndex-21, endIndex-11);","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"EssWhyy"},"content":"            LocalTime endTime \u003d LocalTime.from(DateTimeFormatter.ISO_LOCAL_TIME.parse(endTimeString));","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"EssWhyy"},"content":"            LocalTime startTime \u003d LocalTime.from(DateTimeFormatter.ISO_LOCAL_TIME.parse(startTimeString));","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"EssWhyy"},"content":"            LocalDate date \u003d LocalDate.from(DateTimeFormatter.ISO_LOCAL_DATE.parse(dateString));","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"EssWhyy"},"content":"            String description \u003d input.substring(6, endIndex-22);","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"EssWhyy"},"content":"            Task event \u003d new Event(description, date, startTime, endTime,false);","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"EssWhyy"},"content":"            tasks.add(event);","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"EssWhyy"},"content":"            storage.save(tasks.getList());","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"EssWhyy"},"content":"            return \"Can Do! I\u0027ve created the event task below:\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"EssWhyy"},"content":"                    + event.toString() + \"\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"EssWhyy"},"content":"                    +\"There are now \" + tasks.getSize() + \" tasks.\";","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"EssWhyy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Please follow the format:\\n event (description) yyyy-mm-dd hh:ss hh:ss\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"EssWhyy"},"content":"                    + \"Check if the date \u0026 times are valid and if there are any missing spaces/characters\";","lastModifiedDate":"2021-09-24"},{"lineNumber":216,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":218,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003efindTask(String input)\u003c/code\u003e finds all tasks which match a target description in the input","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":222,"author":{"gitId":"EssWhyy"},"content":"     * @param input input string in the GUI, should contain a target description for the method to search for","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"EssWhyy"},"content":"     * @return a dialog string showing all tasks with description that match what the user keyed in,","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"EssWhyy"},"content":"     * shows an error message if there is no description in the input.","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"EssWhyy"},"content":"    private String findTask(String input){","lastModifiedDate":"2021-09-21"},{"lineNumber":229,"author":{"gitId":"EssWhyy"},"content":"        try{","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"EssWhyy"},"content":"            assert tasks.getSize() \u003e 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"EssWhyy"},"content":"        } catch (AssertionError e){","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! There are no tasks to search for...\";","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":234,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":235,"author":{"gitId":"EssWhyy"},"content":"        String target;","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"EssWhyy"},"content":"            target \u003d input.substring(5);","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"EssWhyy"},"content":"        } catch(Exception e){","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! Please enter a target description for me to find\";","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"EssWhyy"},"content":"        String output \u003d \"Ok! Here are the tasks that match your query description: \\\"\" + target + \"\\\"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":245,"author":{"gitId":"EssWhyy"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++){","lastModifiedDate":"2021-09-18"},{"lineNumber":246,"author":{"gitId":"EssWhyy"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-18"},{"lineNumber":247,"author":{"gitId":"EssWhyy"},"content":"            if (task.getDescription().contains(target)){","lastModifiedDate":"2021-09-18"},{"lineNumber":248,"author":{"gitId":"EssWhyy"},"content":"                output +\u003d task.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":249,"author":{"gitId":"EssWhyy"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":250,"author":{"gitId":"EssWhyy"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":251,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":252,"author":{"gitId":"EssWhyy"},"content":"        return output;","lastModifiedDate":"2021-09-21"},{"lineNumber":253,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":254,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":255,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":256,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003esortTask()\u003c/code\u003e sorts the taskList.","lastModifiedDate":"2021-09-23"},{"lineNumber":257,"author":{"gitId":"EssWhyy"},"content":"     * Tasks are sorted by type first: ToDos, Deadlines then Events","lastModifiedDate":"2021-09-23"},{"lineNumber":258,"author":{"gitId":"EssWhyy"},"content":"     * Following which Deadlines are sorted chronologically by date then by time","lastModifiedDate":"2021-09-23"},{"lineNumber":259,"author":{"gitId":"EssWhyy"},"content":"     * Events are sorted chronologically by date and then by startTime","lastModifiedDate":"2021-09-23"},{"lineNumber":260,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":261,"author":{"gitId":"EssWhyy"},"content":"     * @return a dialog string showing the new sorted task.","lastModifiedDate":"2021-09-23"},{"lineNumber":262,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":263,"author":{"gitId":"EssWhyy"},"content":"    private String sortTasks(){","lastModifiedDate":"2021-09-23"},{"lineNumber":264,"author":{"gitId":"EssWhyy"},"content":"        try{","lastModifiedDate":"2021-09-23"},{"lineNumber":265,"author":{"gitId":"EssWhyy"},"content":"            assert tasks.getSize() \u003e 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":266,"author":{"gitId":"EssWhyy"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":267,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! There are no tasks to search for...\";","lastModifiedDate":"2021-09-23"},{"lineNumber":268,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":269,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":270,"author":{"gitId":"EssWhyy"},"content":"        ArrayList\u003cTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":271,"author":{"gitId":"EssWhyy"},"content":"        ArrayList\u003cToDo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":272,"author":{"gitId":"EssWhyy"},"content":"        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"EssWhyy"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":274,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":275,"author":{"gitId":"EssWhyy"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++){","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"EssWhyy"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-23"},{"lineNumber":277,"author":{"gitId":"EssWhyy"},"content":"            if (task instanceof ToDo){","lastModifiedDate":"2021-09-23"},{"lineNumber":278,"author":{"gitId":"EssWhyy"},"content":"                todos.add( (ToDo) task);","lastModifiedDate":"2021-09-23"},{"lineNumber":279,"author":{"gitId":"EssWhyy"},"content":"            } else if (task instanceof Deadline){","lastModifiedDate":"2021-09-23"},{"lineNumber":280,"author":{"gitId":"EssWhyy"},"content":"                deadlines.add( (Deadline) task);","lastModifiedDate":"2021-09-23"},{"lineNumber":281,"author":{"gitId":"EssWhyy"},"content":"            } else{","lastModifiedDate":"2021-09-23"},{"lineNumber":282,"author":{"gitId":"EssWhyy"},"content":"                events.add( (Event) task);","lastModifiedDate":"2021-09-23"},{"lineNumber":283,"author":{"gitId":"EssWhyy"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":284,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":285,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":286,"author":{"gitId":"EssWhyy"},"content":"        Collections.sort(deadlines);","lastModifiedDate":"2021-09-23"},{"lineNumber":287,"author":{"gitId":"EssWhyy"},"content":"        Collections.sort(events);","lastModifiedDate":"2021-09-23"},{"lineNumber":288,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":289,"author":{"gitId":"EssWhyy"},"content":"        sortedTasks.addAll(todos);","lastModifiedDate":"2021-09-23"},{"lineNumber":290,"author":{"gitId":"EssWhyy"},"content":"        sortedTasks.addAll(deadlines);","lastModifiedDate":"2021-09-23"},{"lineNumber":291,"author":{"gitId":"EssWhyy"},"content":"        sortedTasks.addAll(events);","lastModifiedDate":"2021-09-23"},{"lineNumber":292,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":293,"author":{"gitId":"EssWhyy"},"content":"        tasks \u003d new TaskList(sortedTasks);","lastModifiedDate":"2021-09-23"},{"lineNumber":294,"author":{"gitId":"EssWhyy"},"content":"        return \"Ok! I\u0027ve sorted the task list. Here\u0027s the new list!\\n\" + tasks.returnAllTasks();","lastModifiedDate":"2021-09-23"},{"lineNumber":295,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":296,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":297,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":298,"author":{"gitId":"EssWhyy"},"content":"     * Takes in an input string and processes it based on the command type (first word in the string)","lastModifiedDate":"2021-09-22"},{"lineNumber":299,"author":{"gitId":"EssWhyy"},"content":"     * Shows an error message if the command type is not recognised.","lastModifiedDate":"2021-09-22"},{"lineNumber":300,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":301,"author":{"gitId":"EssWhyy"},"content":"     * @param input input String which corresponds to a user command,","lastModifiedDate":"2021-09-22"},{"lineNumber":302,"author":{"gitId":"EssWhyy"},"content":"     * plus other info which will be used in the backend methods","lastModifiedDate":"2021-09-22"},{"lineNumber":303,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":304,"author":{"gitId":"EssWhyy"},"content":"     * @return string which shows an update of the program state and will be shown to the user in the GUI","lastModifiedDate":"2021-09-22"},{"lineNumber":305,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":306,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":307,"author":{"gitId":"EssWhyy"},"content":"    public String parseCommand(String input) {","lastModifiedDate":"2021-09-21"},{"lineNumber":308,"author":{"gitId":"EssWhyy"},"content":"        ","lastModifiedDate":"2021-09-21"},{"lineNumber":309,"author":{"gitId":"EssWhyy"},"content":"        if (input.equals(\"help\") || input.equals(\"start\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":310,"author":{"gitId":"EssWhyy"},"content":"            return showHelp();","lastModifiedDate":"2021-09-23"},{"lineNumber":311,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":312,"author":{"gitId":"EssWhyy"},"content":"            return listTasks();","lastModifiedDate":"2021-09-23"},{"lineNumber":313,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.equals(\"sort\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":314,"author":{"gitId":"EssWhyy"},"content":"            return sortTasks();","lastModifiedDate":"2021-09-23"},{"lineNumber":315,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":316,"author":{"gitId":"EssWhyy"},"content":"            return markTaskAsDone(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":317,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":318,"author":{"gitId":"EssWhyy"},"content":"            return deleteTask(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":319,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":320,"author":{"gitId":"EssWhyy"},"content":"            return makeToDo(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":321,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":322,"author":{"gitId":"EssWhyy"},"content":"            return makeDeadline(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":323,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":324,"author":{"gitId":"EssWhyy"},"content":"            return makeEvent(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":325,"author":{"gitId":"EssWhyy"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":326,"author":{"gitId":"EssWhyy"},"content":"            return findTask(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":327,"author":{"gitId":"EssWhyy"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":328,"author":{"gitId":"EssWhyy"},"content":"            return \"Oops! I didn\u0027t recognise that command!\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":329,"author":{"gitId":"EssWhyy"},"content":"                + \"Type \\\"help\\\" for a list of commands\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":330,"author":{"gitId":"EssWhyy"},"content":"                + \"Make sure to check for spaces and invalid characters/case\";","lastModifiedDate":"2021-09-21"},{"lineNumber":331,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":332,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":333,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EssWhyy":333}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"import java.io.File;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eStorage\u003c/code\u003e class handles saving and loading of task list for a file","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":" * A Storage object is initialised with a String \"path\"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":" * \"path\" represents the file directory path to the task file","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":" * Storage object implements two methods save(tasks) and load() which handles the saving/loading.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"public class Storage{","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    protected final String path; //path of task file","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    public Storage(String path){","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"     * Saves an arraylist of tasks to the file at this.path","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"     * @param tasks arraylist of task objects to be saved in the arraylist.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"     * Tasks will be converted into their toString() equivalent before saving to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"        //create a new file if not available","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"            File myObj \u003d new File(this.path);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"                System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"            System.out.println(\"Oops! An error occurred.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"        //write each task to the file as a new line","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"EssWhyy"},"content":"            FileWriter myWriter \u003d new FileWriter(this.path);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"EssWhyy"},"content":"            for (int i \u003d 1; i \u003c tasks.size()+1; i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"                myWriter.write(i + \". \" + tasks.get(i-1).toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"EssWhyy"},"content":"                myWriter.write(\"\\n\");","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"EssWhyy"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"EssWhyy"},"content":"            myWriter.close();","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"EssWhyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"EssWhyy"},"content":"            System.out.println(\"Oops! An error occurred.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"EssWhyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"    //parse description of to-do task","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"EssWhyy"},"content":"    private ToDo parseToDo(String line, int lineNumber){","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"EssWhyy"},"content":"        int startIndex \u003d String.valueOf(lineNumber).length() + 3;","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"        boolean done \u003d (line.charAt(startIndex+4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"        String description \u003d line.substring(startIndex+7);","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"EssWhyy"},"content":"        return new ToDo(description, done);","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"EssWhyy"},"content":"    //parse description, date and time of deadline task","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"EssWhyy"},"content":"    private Deadline parseDeadline(String line, int lineNumber){","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"EssWhyy"},"content":"        int startIndex \u003d String.valueOf(lineNumber).length() + 3;","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"EssWhyy"},"content":"        int endIndex \u003d line.length()-1;","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"EssWhyy"},"content":"        LocalDate date;","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"EssWhyy"},"content":"        LocalTime time;","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"EssWhyy"},"content":"        String description \u003d line.substring(startIndex+7, endIndex-22);","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"EssWhyy"},"content":"        boolean done \u003d (line.charAt(startIndex+4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"EssWhyy"},"content":"        String dateString \u003d line.substring(endIndex-16,endIndex-6);","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"EssWhyy"},"content":"        String timeString \u003d line.substring(endIndex-5, endIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"EssWhyy"},"content":"        date \u003d LocalDate.from(DateTimeFormatter.ISO_LOCAL_DATE.parse(dateString));","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"EssWhyy"},"content":"        time \u003d LocalTime.from(DateTimeFormatter.ISO_LOCAL_TIME.parse(timeString));","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"EssWhyy"},"content":"        return new Deadline(description, date, time, done);","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"EssWhyy"},"content":"    //parse description, date and start/end times of event task","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"EssWhyy"},"content":"    private Event parseEvent(String line, int lineNumber){","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"EssWhyy"},"content":"        int startIndex \u003d String.valueOf(lineNumber).length() + 3;","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"EssWhyy"},"content":"        int endIndex \u003d line.length()-1;","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"EssWhyy"},"content":"        LocalDate date;","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"EssWhyy"},"content":"        LocalTime startTime, endTime;","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"EssWhyy"},"content":"        boolean done \u003d (line.charAt(startIndex+4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"EssWhyy"},"content":"        String description \u003d line.substring(startIndex + 7, endIndex - 31);","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"EssWhyy"},"content":"        String dateString \u003d line.substring(endIndex-25, endIndex-15);","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"EssWhyy"},"content":"        String startTimeString \u003d line.substring(endIndex-14, endIndex-9);","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"EssWhyy"},"content":"        String endTimeString \u003d line.substring(endIndex-5,endIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"EssWhyy"},"content":"        date \u003d LocalDate.from(DateTimeFormatter.ISO_LOCAL_DATE.parse(dateString));","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"EssWhyy"},"content":"        startTime \u003d LocalTime.from(DateTimeFormatter.ISO_LOCAL_TIME.parse(startTimeString));","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"EssWhyy"},"content":"        endTime \u003d LocalTime.from(DateTimeFormatter.ISO_LOCAL_TIME.parse(endTimeString));","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"EssWhyy"},"content":"        return new Event(description, date, startTime, endTime, done);","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"EssWhyy"},"content":"     * loads file at this.path, converts each line into a Task object (to do, deadline or event)","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"EssWhyy"},"content":"     * using the respective helper method.","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"EssWhyy"},"content":"     * then inserts task into an ArrayList of Tasks to be used for TaskList object.","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"EssWhyy"},"content":"     * @return ArrayList of Tasks loaded from file","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"EssWhyy"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"EssWhyy"},"content":"        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"EssWhyy"},"content":"        BufferedReader reader;","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"EssWhyy"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"EssWhyy"},"content":"            reader \u003d new BufferedReader(new FileReader(this.path));","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"EssWhyy"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"EssWhyy"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"EssWhyy"},"content":"                int startIndex \u003d String.valueOf(lineNumber).length() + 3;","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"EssWhyy"},"content":"                if (line.charAt(startIndex) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"EssWhyy"},"content":"                    loadedList.add(parseToDo(line,lineNumber));","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"EssWhyy"},"content":"                } else if (line.charAt(startIndex) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"EssWhyy"},"content":"                    loadedList.add(parseDeadline(line,lineNumber));","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"EssWhyy"},"content":"                } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"EssWhyy"},"content":"                    loadedList.add(parseEvent(line,lineNumber));","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"EssWhyy"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"EssWhyy"},"content":"                //read next line","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"EssWhyy"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"EssWhyy"},"content":"                lineNumber++;","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"EssWhyy"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"EssWhyy"},"content":"            System.out.println(\"Successfully loaded task list from file!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"EssWhyy"},"content":"            reader.close();","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"EssWhyy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"EssWhyy"},"content":"            System.out.println(\"Oops! I couldn\u0027t find or parse the task list file.\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"EssWhyy"},"content":"                    + \"Starting over with a brand new list.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"EssWhyy"},"content":"        return loadedList;","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EssWhyy":160}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eDeadline\u003c/code\u003e subclass has two additional attributes:","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":" * A LocalDate \"date\" and a Localtime \"time\" to indicate the deadline of the Deadline object","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":" * The [D] in toString() identifies a Deadline object","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"public class Deadline extends Task implements Comparable\u003cDeadline\u003e{","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    public Deadline(String description, LocalDate date, LocalTime time, boolean isDone) {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"        //input: dd/mm/yyyy, time","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"    private LocalDate getDate(){","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"        return date;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"    private LocalTime getTime(){","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"        return time;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"    public int compareTo(Deadline d) {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"        return Comparator.comparing(Deadline::getDate)","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"                .thenComparing(Deadline::getTime).compare(this, d);","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"        //output: yyyy-mm-dd, time","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"        return \"[D] \" + \"[\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"                + \" (by: \" + this.date + \" \" + this.time + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EssWhyy":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eEvent\u003c/code\u003e subclass includes two LocalTime attributes \"startTime\" and \"endTime\"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":" * to indicate the time range of the Event object","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":" * The [E] in toString() identifies an Event object","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"public class Event extends Task implements Comparable\u003cEvent\u003e{","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime, boolean isDone) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"        //fixed date","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"        //ensure startTime is before endTime","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"        if(startTime.compareTo(endTime) \u003e 0){","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"            this.startTime \u003d endTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"            this.endTime \u003d startTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"        } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"    private LocalDate getDate(){","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"        return date;","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"    private LocalTime getStartTime(){","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"        return startTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"    public int compareTo(Event e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"        return Comparator.comparing(Event::getDate)","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"                .thenComparing(Event::getStartTime).compare(this, e);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"        return \"[E] \" + \"[\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"                + \" (at: \" + this.date + \" \" + this.startTime + \" to \" + this.endTime + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EssWhyy":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eTask\u003c/code\u003e class which is the parent class of To-Do, Deadline and Event","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":" * A basic task consists of a description and a boolean to indicate if the task is done.","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"public class Task {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"    protected String description;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"    public String getDescription() { return this.description; }","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"    public String toString(){","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EssWhyy":34}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eToDo\u003c/code\u003e subclass is almost identical to a Task Class","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":" * The [T] in toString() identifies a To-Do object.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"    public ToDo(String description, boolean isDone){","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    public String toString(){","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"        return \"[T] \" + \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EssWhyy":21}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke.tasklist;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":" * \u003ccode\u003eTaskList\u003c/code\u003e class represents a list of Tasks with added functionality","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":" * Initialise a TaskList with an existing ArrayList of Tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":" * or without one to start from scratch with an empty TaskList","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":" * Implements 3 getter methods getList(), getSize() and getTask(index)","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":" * and 4 other methods add(task), delete(index), markDone(index) and returnAllTasks()","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"public class TaskList{","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"    //contains the list of tasks and operations to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    //if list cannot be loaded, create an empty list to start","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"    public TaskList(){","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){ this.tasks \u003d tasks; }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"    public ArrayList\u003cTask\u003e getList(){","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"        return this.tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    public int getSize(){","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"    public Task getTask(int index){","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"    //add a task at the end of the list","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"    public void add(Task task){","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"    //delete a task at a specific index","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"    public void delete(int index){","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"    //mark task at specific index as done","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"    public void markDone(int index){","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"        this.tasks.get(index).setDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"     * \u003ccode\u003ereturnAllTasks()\u003c/code\u003e returns a response string of all tasks in the current TaskList.","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"     * @return output string of all tasks in the current TaskList concatenated together.","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"EssWhyy"},"content":"    public String returnAllTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"EssWhyy"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"EssWhyy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"EssWhyy"},"content":"            output +\u003d taskNumber + \". \";","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"EssWhyy"},"content":"            output +\u003d t.toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EssWhyy"},"content":"            output +\u003d \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"EssWhyy"},"content":"            taskNumber++;","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"EssWhyy"},"content":"        return output;","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EssWhyy":70}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"260\"/\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"EssWhyy":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.mainwindow.MainWindow\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"1.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"637.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"EssWhyy":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"    public void createTask_success(){","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"        LocalDate date1 \u003d LocalDate.of(2021, 4, 20);","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"        LocalDate date2 \u003d LocalDate.of(2021, 6,9);","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"        LocalTime time \u003d LocalTime.of(8,30);","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"        LocalTime startTime \u003d LocalTime.of(13, 30);","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"        LocalTime endTime \u003d LocalTime.of(16,30);","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(\"[T] [ ] Sleep\",","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"                new duke.task.ToDo(\"Sleep\",false).toString());","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(\"[D] [ ] Finish Project (by: 2021-04-20 08:30)\",","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"                new duke.task.Deadline(\"Finish Project\", date1, time,false ).toString());","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(\"[E] [X] CS2103T TP (at: 2021-06-09 13:30 to 16:30)\",","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"                new duke.task.Event(\"CS2103T TP\", date2, startTime, endTime, true).toString());","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"    public void load_invalidPath(){","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"        ArrayList\u003cduke.task.Task\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"        String WRONGPATH \u003d \"./blah.txt\";","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"        duke.storage.Storage storage \u003d new duke.storage.Storage(WRONGPATH);","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(emptyList, storage.load());","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"    public void getTask_success(){","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"        duke.tasklist.TaskList tasklist \u003d new duke.tasklist.TaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"        tasklist.add(new duke.task.ToDo(\"task1\", false));","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"        tasklist.add(new duke.task.ToDo(\"task2\", false));","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"        tasklist.add(new duke.task.ToDo(\"task3\", false));","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"        tasklist.delete(0);","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"        tasklist.delete(0);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(\"[T] [ ] task3\", tasklist.getTask(0).toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"EssWhyy":52}}]
