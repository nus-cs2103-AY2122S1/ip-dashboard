[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"public enum Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"    BYE,","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"    LIST,","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"    DONE,","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    DELETE,","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    TODO;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    private static final String INCOHERENT_INPUT_MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    public static Command initialiseCommand(String commandString) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"            return Command.valueOf(commandString.toUpperCase());","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        } catch (IllegalArgumentException err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(INCOHERENT_INPUT_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"yourally2":19}},{"path":"src/main/java/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"public class DateTime {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    // TODO: multiple regexes for date","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    private static final String DATE_REGEX \u003d \"(\\\\d{4}-\\\\d{2}-\\\\d{2}).+\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    // Negative lookahead the dash so it doesn\u0027t capture the date","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    private static final String TIME_REGEX \u003d \"(\\\\d{4})(?!-)(.+)?\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    public DateTime(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        Pattern datePattern \u003d Pattern.compile(DATE_REGEX);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"        Matcher dateMatcher \u003d datePattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        if (dateMatcher.matches()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"//            System.out.println(dateMatcher.group(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"            date \u003d LocalDate.parse(dateMatcher.group(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        Pattern timePattern \u003d Pattern.compile(TIME_REGEX);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        Matcher timeMatcher \u003d timePattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        if (timeMatcher.matches()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"//            System.out.println(timeMatcher.group(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"            time \u003d LocalTime.parse(timeMatcher.group(1), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        // Maybe use an optional class","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        return String.format(\"%s%s\",","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"                date !\u003d null ? date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")): \"\",","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"                time !\u003d null ? \" \" + time.format(DateTimeFormatter.ofPattern(\"hh.mm a\")) : \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yourally2":39}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"    private final DateTime dueDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    private static final String DEADLINE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    private static final String INVALID_DEADLINE_MESSAGE \u003d \"Invalid use of deadline command. Use \u0027deadline \u003ctext\u003e /by \u003cdatetime\u003e\u0027\";","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    private static final String MISSING_DEADLINE_MESSAGE \u003d \"Some arguments are missing. Use \u0027deadline \u003ctext\u003e /by \u003cdatetime\u003e\u0027\";","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    private static final char SYMBOL \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    private Deadline(String text, String dueDate) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"        super(text);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"        this.dueDate \u003d new DateTime(dueDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    public static Deadline newDeadline(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        if (input.split(\" \").length \u003c 3) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(MISSING_DEADLINE_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        String[] deadlineInfo \u003d input.split(DEADLINE_DELIMITER);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        if (deadlineInfo.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(INVALID_DEADLINE_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        String deadline \u003d deadlineInfo[1].trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        String deadlineText \u003d deadlineInfo[0].trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        return new Deadline(deadlineText, deadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    public String getSaveFormat(){","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"        return String.format(\"%c | %d | %s | %s\", SYMBOL, super.getDoneInt(), this.getText(), this.dueDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        return String.format(\"[%c]%s (by: %s)\", SYMBOL, super.toString(), this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"yourally2":39}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    // Messages","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    private static final String REWELCOME_MESSAGE \u003d \"Welcome back!\\nWhat can I do for you again?\";","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\\n%s\";","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    private static final String NO_TASKS_IN_LIST_MESSAGE \u003d \"You have no tasks currently. Go create some!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n %s\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    private static final String INVALID_NUMBER \u003d \"Please input a valid task number\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    private static final String TOO_MANY_ARGUMENTS_LIST_MESSAGE \u003d \"An argument after \u0027list\u0027 is not required. Just \u0027list\u0027 will do.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    // Errors","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    private static final String MISSING_DELETE_NUMBER_MESSAGE \u003d \"Please input a number after the delete command\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    private static final String MISSING_DONE_NUMBER_MESSAGE \u003d \"Please input a number after the done command\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private static void inputLoop(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        boolean canContinue \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        while (canContinue) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"                String firstWord \u003d inputArr[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"                String remainingText \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"                if (input.length() \u003e firstWord.length() + 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"                    remainingText \u003d input.substring(firstWord.length() + 1).trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"                Command command \u003d Command.initialiseCommand(firstWord);","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"                switch (command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"                    case LIST:","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"                        if (!remainingText.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"                            throw new DukeException(TOO_MANY_ARGUMENTS_LIST_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"                        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"                            Message.display_message(NO_TASKS_IN_LIST_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"                        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"                            Message.display_message(String.format(LIST_MESSAGE, taskList));","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"                    case DONE:","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"                        if (remainingText.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"                            throw new DukeException(MISSING_DONE_NUMBER_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"                        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"                            int taskIndex \u003d Integer.parseInt(remainingText);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"                            Message.display_message(String.format(DONE_MESSAGE, taskList.markTaskAsDone(taskIndex)));","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"                        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"                            throw new DukeException(INVALID_NUMBER);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                    case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"                        if (remainingText.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"                            throw new DukeException(MISSING_DELETE_NUMBER_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"                        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"                            int taskIndex \u003d Integer.parseInt(remainingText);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"                            Message.display_message(taskList.deleteTask(taskIndex));","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"                        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"                            throw new DukeException(INVALID_NUMBER);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"                    case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"                        ToDo myTodo \u003d ToDo.newTodo(remainingText);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"                        Message.display_message(taskList.addTask(myTodo));","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"                        storage.writeTaskToFile(myTodo);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"                    case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"                        Deadline myDeadline \u003d Deadline.newDeadline(remainingText);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"                        Message.display_message(taskList.addTask(myDeadline));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"                        storage.writeTaskToFile(myDeadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"                    case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"                        Event myEvent \u003d Event.newEvent(remainingText);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"                        Message.display_message(taskList.addTask(myEvent));","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"                        storage.writeTaskToFile(myEvent);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"                    case BYE:","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"                        canContinue \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"                Message.display_message(err.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        Storage myStorage \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        if (myStorage.doesTaskFileExist()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"            Message.display_message(WELCOME_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"            Message.display_message(REWELCOME_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"        inputLoop(taskList, myStorage);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        Message.display_message(EXIT_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yourally2":98,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"    public  DukeException(String error) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"        super(error);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"yourally2":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"    private final DateTime eventDatetime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"    private static final String EVENT_DELIMITER \u003d \"/at\";","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    private static final String INVALID_EVENT_MESSAGE \u003d \"Invalid use of event command. Use \u0027event \u003ctext\u003e /at \u003cdatetime\u003e\u0027\";","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"    private static final String MISSING_EVENT_MESSAGE \u003d \"Some arguments are missing. Use \u0027event \u003ctext\u003e /at \u003cdatetime\u003e\u0027\";","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    private static final char SYMBOL \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    private Event(String text, String eventDatetime) {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"        super(text);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"        this.eventDatetime \u003d new DateTime(eventDatetime);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    public static Event newEvent(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        if (input.split(\" \").length \u003c 3) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(MISSING_EVENT_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"        String[] eventInfo \u003d input.split(EVENT_DELIMITER);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        if (eventInfo.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(INVALID_EVENT_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        String event \u003d eventInfo[1].trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        String eventText \u003d eventInfo[0].trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        return new Event(eventText, event);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        return String.format(\"%c | %d | %s | %s\", SYMBOL, super.getDoneInt(), this.getText(), this.eventDatetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.eventDatetime);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"yourally2":36}},{"path":"src/main/java/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"import static java.lang.Math.max;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"public class Message {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"    private static final int BOX_LENGTH \u003d 80;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    private static final int INDENT_LENGTH \u003d 4;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"    private static final String INDENT \u003d \" \".repeat(INDENT_LENGTH);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    // Message methods","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    private static void horizontal_line() {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"        System.out.print(\"_\".repeat(BOX_LENGTH) + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    public static void display_message(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"        horizontal_line();","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        String[] lineArr \u003d message.split(\"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"        // Print sides of the box","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"        for (String line : lineArr) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"            int remainingSpace \u003d max(BOX_LENGTH - line.length() - INDENT_LENGTH - 2, 0);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"            System.out.println(\"|\" + INDENT + line + \" \".repeat(remainingSpace) + \"|\");","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        horizontal_line();","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"yourally2":24}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"import java.io.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    private static final String OUTER_DIR \u003d \"data\";","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"    private static final String FILE \u003d \"taskList.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    private static final String[] FILE_PATH_ARR \u003d  {\".\", OUTER_DIR , FILE};","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    private static final String CREATE_FILE_ERROR \u003d \"An error occurred. Unable to create taskList file.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    private static final String CLOSE_WRITER_ERROR \u003d \"An error occurred. Unable to close writer to taskList.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    private boolean didTaskFileExist \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    private BufferedWriter bufferedWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    public Storage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"        File taskFile \u003d new File(getPath());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        this.createOuterDirectory();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"            if (!taskFile.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"                readTaskFile(taskFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"                this.didTaskFileExist \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"//            System.out.println(taskFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"            FileWriter fileWriter \u003d new FileWriter(taskFile, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"            this.bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"            System.out.println(CREATE_FILE_ERROR);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    public void closeWriter() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"            this.bufferedWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"            System.out.println(CLOSE_WRITER_ERROR);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    public boolean didTaskFileExist() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        return this.didTaskFileExist;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    public void writeTaskToFile(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"            bufferedWriter.append(task.getSaveFormat());","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"            System.out.println(\"Error writing task to file.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    private void readTaskFile(File taskFile) throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        Scanner taskScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        while (taskScanner.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"            String taskLine \u003d taskScanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"            System.out.println(taskLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        taskScanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"    private String getPath() {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        return String.join(File.separator, FILE_PATH_ARR);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"    private void createOuterDirectory() {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        File directory \u003d new File(OUTER_DIR);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"            directory.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"            System.out.println(CREATE_FILE_ERROR);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yourally2":72}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"    private final String text;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    public Task(String text) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"        this.text \u003d text;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    private String getDoneStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    public int getDoneInt() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"        return  this.isDone ? 1 : 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    public String getText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        return this.text;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    abstract String getSaveFormat();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        return String.format(\"[%s] %s\", getDoneStatus(), getText());","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"yourally2":32}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    // Messages","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"    private static final String OUT_OF_BOUNDS_TASK \u003d \"Could not find task. Check the task number again?\";","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    private static final String NUMBER_OF_TASKS_MESSAGE \u003d \"Now you have %d %s in the list.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    private static final String ADD_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n  %s\\n\" + NUMBER_OF_TASKS_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    private static final String REMOVE_TASK_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\\n %s\\n\" + NUMBER_OF_TASKS_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    private static final String INVALID_TASKLIST_MESSAGE \u003d \"Error reading taskLst. TaskList is probably invalid.\"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    // Nouns","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    private String taskWord() {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"        return this.size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    private final List\u003cTask\u003e taskArr;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        this.taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    public int size() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        return taskArr.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        this.taskArr.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        return String.format(ADD_TASK_MESSAGE, task, this.size(), taskWord());","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    public ToDo addSavedTask(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        String[] inputArr \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"            char symbol \u003d inputArr[0].charAt(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"            String isDone \u003d inputArr[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"            String text \u003d inputArr[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"            switch (symbol) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"                case ToDo.SYMBOL:","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"                    this.addTask()","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"            if (isDone \u003d\u003d \"1\") {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        } catch (ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"            System.out.println(INVALID_TASKLIST_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    public String markTaskAsDone(int taskIndex) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        // Task index starts from 1","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        int index \u003d taskIndex - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"            Task task \u003d taskArr.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"            task.markDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"            return task.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(OUT_OF_BOUNDS_TASK);","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"    public String deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        // Task index starts from 1","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        int index \u003d taskIndex - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"            Task task \u003d taskArr.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"            return String.format(REMOVE_TASK_MESSAGE, task, this.size(), taskWord());","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(OUT_OF_BOUNDS_TASK);","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        StringBuilder printedList \u003d new StringBuilder();","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        for (int i \u003d 0; i \u003c taskArr.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"            // Index from 1 onwards","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"            String index \u003d Integer.toString(i + 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"            printedList.append(String.format(\"%s. %s\\n\", index, this.taskArr.get(i)));","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        // Remove the last newline","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        return printedList.toString().trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"yourally2":91}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"    private static final String MISSING_TODO_MESSAGE \u003d \"Please input text after the todo command\";","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"    public static final char SYMBOL \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    private ToDo(String text) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"        super(text);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    public static ToDo newTodo(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"            throw new DukeException(MISSING_TODO_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"        String todoText \u003d input.trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        return new ToDo(todoText);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    public String getSaveFormat(){","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"        return String.format(\"%c | %d | %s\", SYMBOL, super.getDoneInt(), this.getText());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        return String.format(\"[%c]%s\", SYMBOL, super.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"yourally2":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"todo eat lunch","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"deadline finish assignment /by Dec 20th","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"event eat food party /at Aug 20th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"todo eat dinner","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"todo find friends","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"toijoijdo","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"yourally2":14}}]
