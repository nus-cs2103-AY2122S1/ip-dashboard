{"authorDailyContributionsMap":{"yourally2":[{"date":"2021-08-18","commitResults":[{"hash":"a49fc5e040e1f3825984d77a4423bf4671cc3d1f","messageTitle":"Add Level 1: Greet, Echo, Exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":6}}},{"hash":"84592dcc5049ce26b7d4516bcab0ec9c8908c2c2","messageTitle":"Add Level 2: Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":4}}},{"hash":"d95ae0b1400866fde578640b26d7af1bbead3bd9","messageTitle":"Add Level 3: Mark as Done * Remove newline at the end when printing list","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":6}}},{"hash":"b98d9d2efe6a66677f200cc75bb56dc8b27c4950","messageTitle":"refactor: Todo into Task and TodoList into TaskList * Accommodate the introduction of ToDos","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":46}}}]},{"date":"2021-08-19","commitResults":[{"hash":"b51dd4401180a499fa0045a48cfac6b7c2232e03","messageTitle":"Add Level 4: ToDos, Events, Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":8}}},{"hash":"790807d86181c1d466f4653da16c41844bdfd265","messageTitle":"Add A-TextUiTesting: Automated Text UI Testing * Add plural and singular based on number of tasks * Update .gitignore","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":7,"deletions":14},"sh":{"insertions":0,"deletions":0}}},{"hash":"9abe3fef2804d9d7f15cbd6213d59095d1655a90","messageTitle":"Add Level-5: Handle Errors * Add DukeException class to handle handle errors","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":31}}},{"hash":"23d5c330e066519ffe8d899af85e737738ebd5aa","messageTitle":"Add Level 6: Delete * Further encapsulation for task messages in TaskList","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":11}}},{"hash":"103e4aeab9f64b5ebeaea3c4c99dbf125e9f35c4","messageTitle":"Add A-Enums: add enums in the form of Commands * encapsulate errors related to number of arguments inside Command enum * change to while loop","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":47}}}]},{"date":"2021-08-23","commitResults":[{"hash":"0c7682d916f63e11b4f01a5af5e2988812dd613d","messageTitle":"Style: minor touchups","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":11}}},{"hash":"83c144598a5e0fb03f65dddc23cdde5d35a42bfc","messageTitle":"Add message box","messageBody":"Message boxes make the User Interface more appealing.\nHowever, it has a small visual bug if the number of characters exceed\nthe message box.\n* Add new class Message\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":36,"deletions":21}}},{"hash":"93471100edd3fc0ef8138fbecc464566757c19bc","messageTitle":"Fix: IllegalArgumentException is no longer caught for everything","messageBody":"This is so that in the main loop, IllegalArgumentException is no longer\ncaught for all statements, but only when Command is instantiated.\nThus, we\n* Encapsulate initialisation of Command\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":8}}},{"hash":"e960a36652e7babf7464fe14ce1c87b87d56cea6","messageTitle":"Refactor(Message): use foreach loop, add comment","messageBody":"Foreach loops are cleaner, and comments help to explain the code.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"063b5a08c53d970c33e7963179a68c9a8561f4e7","messageTitle":"Fix(Command): fix arguments not being verified","messageBody":"Verification is now done outside the method because previously it just\nverifies the command string itself, not the arguments.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":5}}},{"hash":"0d06bdc740110f5c6666d9d4afd3fdb310708add","messageTitle":"Refactor(Duke): abstracted inputLoop","messageBody":"This is to make it more extensible in case of multiple inputLoops.\nAlso, I did\n* add credits to StackOverflow for Overriding enums\n* abstract out the plural and singular for Tasks\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":8}}},{"hash":"ff2fa0bc03810b374ce28e6cadefc4e9ae2ef195","messageTitle":"Fix: fix NullPointerException when calling size of ArrayList","messageBody":"Previously size() would give an NPE when size() is run without first\ninitialising taskArr.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"980cdd9f4c261d59a9a27d9019f8767b352348a2","messageTitle":"Refactor: abstract creation of Deadline and Event into their respective Classes","messageBody":"This is to follow OOP principles more closely: all the behaviour/errors\ninvolved in the creation of Deadline and Event are now in their\nrespective Classes and no longer in both Command and Duke.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":20}}},{"hash":"8eaf31f6811f60178a5da157db1288f90d923f17","messageTitle":"Refactor(Command): remove checking input functionality","messageBody":"It makes more sense for the error checking to be all in one place. As\nstated before, this is to follow OOP principles.\nAlso fix bug where size not being updated for taskWord\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":75}}}]},{"date":"2021-08-24","commitResults":[{"hash":"ab8b3ad5c9160fe7e37d176d75fbcd0e36e9f5a1","messageTitle":"Add saving when adding tasks and loading","messageBody":"* Creates a text file to store the task list\n* Storage of deleted tasks are not implemented yet\n","fileTypesAndContributionMap":{"java":{"insertions":247,"deletions":70}}},{"hash":"2598d07a8c3bed30a80d068597ba94ce693020b0","messageTitle":"Add Level 7: Save * Add saving for add, delete, done actions","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":27}}}]},{"date":"2021-08-25","commitResults":[{"hash":"c24d63da5db3fce4a4025fc483ef0878a4223f74","messageTitle":"Add formatting for DateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}},{"hash":"c51a5337253208c6958517c46b2c7697a13c0d01","messageTitle":"Add Level 8: Dates and Times Uses regex to detect if it is a valid string and parses it accordingly.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":10}}},{"hash":"aa47f40e9bd86af0b9431562fd5dc09f8a51b95f","messageTitle":"Add Parser class To abstract out methods related to user commands. The Ui class is already abstracted as the Message class which prints messages.","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"51e4a7cdb6ee6da76972e1cede2ab083216b90e8","messageTitle":"Add duke, command, task and util packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":1},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":2,"deletions":2}}},{"hash":"94c8c9cc78199b074bf21c2e06367fb766f0ffba","messageTitle":"Add JUnit Tests Add tests for Command, Storage, and TaskList","messageBody":"","tags":["v0.1","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":146,"deletions":4}}}]},{"date":"2021-08-26","commitResults":[{"hash":"0119da50f02aa8878c65cd0f373851e357f9dc99","messageTitle":"Add Javadocs to all methods","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":281,"deletions":5}}},{"hash":"d7fb725e84c3f5a07bd28afb2ea608ecbf5ff0b7","messageTitle":"Follow the Coding Standard From this point onward, ensure any new code added are compliant with the given coding standard.","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"a8369703c226eca86b37173b526efaa81aa7a263","messageTitle":"Add Level 9: Find Makes finding tasks that you want easier","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":1}}}]},{"date":"2021-08-29","commitResults":[{"hash":"3d05b257811aa13d015c73f902dc5c15b5e49bb8","messageTitle":"Refactor code for more OOP and align with reqs","messageBody":"* Rename Message class to Ui\n* Move tasks folder outside command folder\n* Refactor Duke for more OOP\n","fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":111}}},{"hash":"ab089fa783fea0828b10edc4e1eacf2d8fe2ccb3","messageTitle":"Abstract out *Command classes and refactor code","messageBody":"* Fix tests accordingly\n* Extract out parsing logic to Parser\n","fileTypesAndContributionMap":{"java":{"insertions":381,"deletions":119}}}]},{"date":"2021-08-31","commitResults":[{"hash":"8a66e5179d074f5413ae5c120224b16887394892","messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":27,"deletions":20}}}]},{"date":"2021-09-01","commitResults":[{"hash":"ef1731f0316a97103f340f0a1fcac12438271592","messageTitle":"Fix DateTime not parsing both date and time at once","messageBody":"* Fix bug where taskList is written to twice\n* Change behaviour such that it only works for a specific format\nThis is so that there will not be confusing behaviour where non-datetime\nwords etc are inputted when you do /by or /at\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":51}}},{"hash":"e53495ae5516986d57e3bdecb65eba9b765396cd","messageTitle":"Add better error messages when using wrong format dateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":22}}},{"hash":"890afae0412b19ae9bde5d1421ba4d5b5438ddc5","messageTitle":"Add checkstyle and correct all checkstyle errors","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":148,"deletions":137}}}]}]},"authorFileTypeContributionMap":{"yourally2":{"java":1324,"md":26,"fxml":0,"sh":2,"bat":1,"gradle":1,"txt":14}},"authorContributionVariance":{"yourally2":41397.79},"authorDisplayNameMap":{"yourally2":"CS2103T-F11-1 KEVI..CHUN"}}
