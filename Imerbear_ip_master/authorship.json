[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"    mainClassName \u003d \"winston.Launcher\"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"    archiveBaseName \u003d \"winston\"","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"    enableAssertions \u003d false","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Imerbear":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"Winston *frees* your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"* text-based with a GUI","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"* easy to learn","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"* Fast to use","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"All you need to do is,","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"1. ~~ask for the download link~~","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"2. download it from [here](https://github.com/Imerbear/ip)","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"2. double click it","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"3. add tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"4. let it manage tasks for you :star_struck:","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"And it is **FREE!**","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"* [x] Manages tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"* [x] User-friendly GUI","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"* [ ] Manages deadlines (Coming soon)","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"* [ ] Sends reminders (Coming soon)","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"### Manages tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"Winston is able to help you manage your tasks through commands fed in through text. The commands to use Winston can be found under the header Usage.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"## Usage","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"### `todo` - Adds a todo task","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"Adds a todo task to the list","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"`todo (task description)`","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"task description: The task you would like to add","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"Winston will reply with the number of uncompleted tasks left, where x will be the number of tasks left","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"x Uncompleted Tasks Left","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"### `deadline` - Adds a task with a deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"Adds a task with a given deadline to the list","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"Note:","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"*Ensure that there is a \" \" in front of the date","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"*Use - to seperate the year, months and days","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"*Even if the month can be written as 9, use 09 instead","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Imerbear"},"content":"`deadline (task description) /by (Date in YYYY-MM-DD format)`","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"Imerbear"},"content":"task description: The task you would like to add","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"Imerbear"},"content":"Winston will reply with the number of uncompleted tasks left, where x will be the number of tasks left","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"Imerbear"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"Imerbear"},"content":"x Uncompleted Tasks Left","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"Imerbear"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"Imerbear"},"content":"### `event` - Adds an event","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"Imerbear"},"content":"Adds an event to the list","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Imerbear"},"content":"Note:","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Imerbear"},"content":"*Ensure that there is a \" \" in front of the date","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"Imerbear"},"content":"*Use - to seperate the year, months and days","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"Imerbear"},"content":"*Even if the month can be written as 9, use 09 instead","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"Imerbear"},"content":"`event (task description) /at (Date in YYYY-MM-DD format)`","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"Imerbear"},"content":"task description: The task you would like to add","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"Imerbear"},"content":"Winston will reply with the number of uncompleted tasks left, where x will be the number of tasks left","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"Imerbear"},"content":"x Uncompleted Tasks Left","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"Imerbear"},"content":"### `list` - Lists all the tasks currently saved","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"Imerbear"},"content":"Shows all the tasks that have been saved by winston","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Imerbear"},"content":"`list`","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"Imerbear"},"content":"A list of all the tasks that you have saved and their current completion status","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"Imerbear"},"content":"### `findstring` - Finds all tasks that have the given string as part of its description","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"Imerbear"},"content":"Shows a list of all tasks that have a description with the given substring","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"Imerbear"},"content":"`findstring (search string)`","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"Imerbear"},"content":"search string: A word or a line that you are looking for","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"Imerbear"},"content":"Winston will return a list of all matching tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"Imerbear"},"content":"### `done` - Mark a task as complete","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"Imerbear"},"content":"Marks a task as complete based on the index of the task found in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"Imerbear"},"content":"`done 3`","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"Imerbear"},"content":"The task will show [X] instead of [ ]","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"Imerbear"},"content":"Winston will give a confirmation that he has marked the task","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"Imerbear"},"content":"### `delete` - Delete task from the list","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"Imerbear"},"content":"Deletes a task based on the index of the task found in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"Imerbear"},"content":"`delete 3`","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"Imerbear"},"content":"Winston will give a confirmation that he has deleted the task and display the list again","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"Imerbear"},"content":"### `update` - Updates a task thats alr in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"Imerbear"},"content":"Updates a task with another task to the list","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"Imerbear"},"content":"`update (list index) (task)`","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"Imerbear"},"content":"task: Either todo, event or deadline. With their respective syntax as shown in the other parts of the UG","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"Imerbear"},"content":"list index: The position of the desired update","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"Imerbear"},"content":"Winston will reply with the updated list and the the task index that has been updated","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"Imerbear"},"content":"### `bye` - Terminates winston","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"Imerbear"},"content":"Terminates the winston chatbot, winston will stop listening to commands upon termination","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"Imerbear"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"Imerbear"},"content":"`bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"Imerbear"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"Imerbear"},"content":"Winston will give a confirmation that the program has terminated","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Imerbear":148,"-":20}},{"path":"src/main/java/winston/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the deadline command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    private final String dueDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    public AddDeadlineCommand(TaskList taskList, String description, String dueDate) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     * Adds a \u0027deadline\u0027 to the TaskList and prints the number of uncompleted tasks remaining","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        super.taskList.addTask(new DeadLine(description, dueDate));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"        String result \u003d Ui.printTasksLeft(taskList.numberOfIncompleteTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":26}},{"path":"src/main/java/winston/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the event command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final String dateAndTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    private final String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    public AddEventCommand(TaskList taskList, String description, String dateAndTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     * Adds an \u0027event\u0027 to the TaskList and prints the number of uncompleted tasks remaining","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        super.taskList.addTask(new Event(this.description, this.dateAndTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"        String result \u003d Ui.printTasksLeft(taskList.numberOfIncompleteTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":26}},{"path":"src/main/java/winston/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the event command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    public AddTodoCommand(TaskList taskList, String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * Adds a \u0027toDoTask\u0027 to the TaskList and prints the number of uncompleted tasks remaining","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        super.taskList.addTask(new ToDoTask(this.description));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        String result \u003d  Ui.printTasksLeft(taskList.numberOfIncompleteTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":24}},{"path":"src/main/java/winston/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the commands that will be used during the usage of winston","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    public Command(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    public abstract String run();","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":14}},{"path":"src/main/java/winston/DateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":" * A class that handles parsing and formatting of dates","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"public class DateHandler {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    public DateHandler() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"     * A method that will convert a date in strong format to LocalDate format","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * @param str String of the date","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     * @return date of type Local Date","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    public static LocalDate readDate(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        return LocalDate.parse(str);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"     * A method that will convert date to a different format and return a string","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"     * @param date date of Type LocalDate to be converted to a string in a different format","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"     * @return date of type string in format d MMM yyyy","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"    public static String convertDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":31}},{"path":"src/main/java/winston/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":" * A class extension of Task representing a deadline task.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    private final String type;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"     * Constructor for DeadLine","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * @param description is the string of the description of the given task.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     * @param isCompleted is the status of the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     * @param dueDate is the due date of the task in String format.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    public DeadLine(String description, String dueDate, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        this.dueDate \u003d DateHandler.readDate(dueDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"        type \u003d \"D\";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"     * Constructor for DeadLine","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"     * @param description is the string of the description of the given task.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"     * @param dueDate is the due date of the task in String format.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"    public DeadLine(String description, String dueDate) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"        super(description, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"        type \u003d \"D\";","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"        this.dueDate \u003d DateHandler.readDate(dueDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"     * Method to convert information from object instance into a different format to be saved.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"     *   ","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"     * @return a string with the type, completion status, task description and due date.","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"    public String saveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"        assert(type \u003d\u003d \"D\");","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"        return this.type + \",\" + super.saveFormat() + \",\" + this.dueDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"     *  Method to convert information from object instance into a more readable format.","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"     *   ","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"     * @return a string with the type, completion status, task description and due date.","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"        return \"[\" + type + \"] \" + super.toString() + \" (Due: \" + DateHandler.convertDate(dueDate) + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Imerbear":57}},{"path":"src/main/java/winston/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the delete command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    public DeleteCommand(TaskList taskList, int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * Deletes a task from the TaskList based on the index provided and prints number of uncompleted tasks remaining.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        super.taskList.deleteTask(this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        String result \u003d  Ui.deleteItem() + Ui.printTasksLeft(super.taskList.numberOfIncompleteTasks());","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"        return result + \"\\n\" + super.taskList.getList();","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":24}},{"path":"src/main/java/winston/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"        displayPicture.setClip(new Circle(60, 55, 56));","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"Imerbear"},"content":"    public static DialogBox getWinstonDialog(String text, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Imerbear"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"Imerbear"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Imerbear":63}},{"path":"src/main/java/winston/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the done command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    public DoneCommand(TaskList tasklist, int index) {         ","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     * Marks a task from the TaskList based on the index provided as complete and prints number of uncompleted ","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     * tasks remaining.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        super.taskList.markTask(this.index);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"        String result \u003d Ui.printDontWorry() + Ui.printTasksLeft(super.taskList.numberOfIncompleteTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":26}},{"path":"src/main/java/winston/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":" * A class extension of Task representing a deadline task.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    private final String type;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    private final LocalDate dateAndTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"     * Constructor for Event","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * @param description is the string of the description of the given task.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    public Event(String description, String dateAndTime, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        this.dateAndTime \u003d DateHandler.readDate(dateAndTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"        super(description, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"        this.dateAndTime \u003d DateHandler.readDate(dateAndTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"     * Method to convert information from object instance into a different format to be saved.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"     * @return a string with the type, completion status, task description and due date.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"    public String saveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"        assert(type \u003d\u003d \"E\");","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"        return this.type + \",\" + super.saveFormat() + \",\" + this.dateAndTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"     *  Method to convert information from object instance into a more readable format.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"     * @return a string with the type, completion status, task description and due date.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"        return \"[\" + this.type + \"] \" + super.toString() + \" (On: \" + DateHandler.convertDate(this.dateAndTime) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Imerbear":49}},{"path":"src/main/java/winston/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"    private String str;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"     * Represents an findString command from the parent abstract class Command.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    public FindCommand(TaskList taskList, String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        this.str \u003d str;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * Creates a new TaskList containing all tasks with given string as a substring and prints out","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     * a list containing all of these tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        TaskList tList \u003d taskList.findString(this.str);","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        String result \u003d Ui.printMatchingTasks() + Ui.printList(tList);","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"//        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Imerbear":25}},{"path":"src/main/java/winston/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents an invalid command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private String errorMessage;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"     * Constructor for InvalidCommand","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"     * @param taskList the taskList with the list of tasks desired","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    public InvalidCommand(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"        this.errorMessage \u003d \"Invalid Command\";","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"     * Constructor for InvalidCommand","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"     * @param taskList the taskList with the list of tasks desired","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    public InvalidCommand(TaskList taskList, String errorMessage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"     * Prints a message to let user\u0027s know that the command given was invalid.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"        String result \u003d  Ui.invalidTask(errorMessage);","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":37}},{"path":"src/main/java/winston/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Imerbear":12}},{"path":"src/main/java/winston/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":" * A GUI for Winston using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    private Winston winston \u003d new Winston();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"            scene.getStylesheets().add(\"/css/stylesheet.css\");","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"            stage.setTitle(\"Winston\");","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWinston(winston);","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Imerbear":34}},{"path":"src/main/java/winston/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    private Winston winston;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tracer.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    private final Image winstonImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/winston.png\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"        dialogContainer.getChildren().add(DialogBox.getWinstonDialog(Ui.welcomeMessage(), winstonImage));","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"    public void setWinston(Winston d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"        winston \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"        if (!input.equals(\"\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"            String response \u003d winston.getResponse(input, winston);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"                    DialogBox.getWinstonDialog(response, winstonImage)","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"            );","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Imerbear":55}},{"path":"src/main/java/winston/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":" * A class that manages user commands.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"     * Constructor for class Parser.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     * @param taskList the TaskList that will be modified based on commands.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"     * Method that parses the given user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"     * @param str user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"     * @return A command depending on the user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"    public Command parse(String str) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"        String[] splitBySpace \u003d str.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"        String cmd \u003d splitBySpace[0].toLowerCase();","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"        final String invalidDateMessage \u003d \"Invalid date format. Please give a valid date format. E.g 2021-12-12\";","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"            return new TerminateCommand(this.taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"            return new ShowListCommand(this.taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"                int index \u003d Integer.parseInt(splitBySpace[1]);","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"                if (index \u003c\u003d taskList.size() \u0026\u0026 index \u003e 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"                    return new DoneCommand(this.taskList, index);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"                    return new InvalidCommand(taskList);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"            } catch (InputMismatchException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"                int index \u003d Integer.parseInt(splitBySpace[1]);","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"                if (index \u003c\u003d taskList.size() \u0026\u0026 index \u003e 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"                    return new DeleteCommand(this.taskList, index);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"                    return new InvalidCommand(taskList);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"            } catch (InputMismatchException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Imerbear"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Imerbear"},"content":"                return new AddTodoCommand(this.taskList, str.substring(5));","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"            } catch (InputMismatchException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Imerbear"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Imerbear"},"content":"                int endIndex \u003d str.indexOf(\"/by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Imerbear"},"content":"                String date \u003d str.substring(endIndex + 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Imerbear"},"content":"                String task \u003d str.substring(str.indexOf(\" \") + 1, endIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Imerbear"},"content":"                LocalDate.parse(date);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Imerbear"},"content":"                return new AddDeadlineCommand(this.taskList, task, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Imerbear"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList, invalidDateMessage);","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"Imerbear"},"content":"            } catch (InputMismatchException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Imerbear"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Imerbear"},"content":"                int endIndex \u003d str.indexOf(\"/at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Imerbear"},"content":"                String date \u003d str.substring(endIndex + 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Imerbear"},"content":"                String task \u003d str.substring(str.indexOf(\" \") + 1, endIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Imerbear"},"content":"                LocalDate.parse(date);","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Imerbear"},"content":"                return new AddEventCommand(this.taskList, task, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Imerbear"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList, invalidDateMessage);","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"Imerbear"},"content":"            } catch (InputMismatchException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"findstring\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Imerbear"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Imerbear"},"content":"                int index \u003d str.indexOf(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Imerbear"},"content":"                String keyword \u003d str.substring(index + 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Imerbear"},"content":"                return new FindCommand(taskList, keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Imerbear"},"content":"            } catch (InputMismatchException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Imerbear"},"content":"                return new InvalidCommand(taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Imerbear"},"content":"        } else if (cmd.equals(\"update\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"Imerbear"},"content":"            return new UpdateCommand(taskList, splitBySpace, str);","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"Imerbear"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Imerbear"},"content":"            return new InvalidCommand(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":103}},{"path":"src/main/java/winston/ShowListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the list command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class ShowListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    public ShowListCommand(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"     * Prints the all tasks on TaskList as well as the number of uncompleted tasks remaining.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"        String result \u003d Ui.printList(taskList) + Ui.printTasksLeft(taskList.numberOfIncompleteTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":20}},{"path":"src/main/java/winston/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":" * A class that manages storage for the bot.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    private final java.nio.file.Path path;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"     * Constructor for class Storage.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    public Storage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"        String pathToThisFile \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"        Path dataDir \u003d Paths.get(pathToThisFile, \"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"        final boolean isDirectoryExist \u003d Files.exists(dataDir);","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        path \u003d java.nio.file.Paths.get(pathToThisFile, \"data\", \"winston.txt\");","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"            if (isDirectoryExist) {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"                if (Files.exists(path)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"                    readFromFile();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"                    Files.createFile(path);","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"                Files.createDirectory(java.nio.file.Paths.get(pathToThisFile, \"data\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"                Files.createFile(path);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"            System.out.println(\"Something went wrong!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"            System.out.println(\"Something unexpected happened during the creation of files!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"     * Method used to readFromFile the file if it exists.","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"     * @return an ArrayList\u003cTask\u003e of the information stores in the file. If the file doesn\u0027t exist, it returns","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"     * an empty ArrayList\u003cTask\u003e.","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"    public ArrayList\u003cTask\u003e readFromFile() {","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(this.path);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"            for (String line : lines) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"                list.add(createTask(line));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Imerbear"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Imerbear"},"content":"            System.out.println(\"Error when reading file!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Imerbear"},"content":"        return list;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Imerbear"},"content":"     * A method that assist the readFromFile method to create tasks based on the data stored on the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"Imerbear"},"content":"     * @param line the lines found in the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"Imerbear"},"content":"     * @return A task based on the information on the given line.","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Imerbear"},"content":"    private Task createTask(String line) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Imerbear"},"content":"        char taskType \u003d line.charAt(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Imerbear"},"content":"        boolean isCompleted;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Imerbear"},"content":"        String[] lineData \u003d line.split(\",\");","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"Imerbear"},"content":"        isCompleted \u003d lineData[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Imerbear"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Imerbear"},"content":"            return new ToDoTask(lineData[2], isCompleted);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Imerbear"},"content":"        } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Imerbear"},"content":"            return new Event(lineData[2], lineData[3], isCompleted);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Imerbear"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Imerbear"},"content":"            return new DeadLine(lineData[2], lineData[3], isCompleted);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Imerbear"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Imerbear"},"content":"            throw new IOException(\"There is an error in the saved file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Imerbear"},"content":"     * A method to saveToFile the data on the TaskList to the given file.","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"Imerbear"},"content":"     * @param tList The TaskList to be saved.","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"Imerbear"},"content":"     * @return A boolean on whether save was successful","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Imerbear"},"content":"    public boolean saveToFile(TaskList tList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"Imerbear"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Imerbear"},"content":"            Files.deleteIfExists(this.path);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Imerbear"},"content":"            PrintWriter out \u003d new PrintWriter(\"data/winston.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Imerbear"},"content":"            String dataToSave \u003d tList.listSaveDataFormatter();","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"Imerbear"},"content":"            if (dataToSave !\u003d \"\") {","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"Imerbear"},"content":"                out.println(dataToSave);","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Imerbear"},"content":"            out.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Imerbear"},"content":"            return true;","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Imerbear"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Imerbear"},"content":"            System.out.println(\"Error overwriting file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Imerbear"},"content":"            return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":109}},{"path":"src/main/java/winston/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the tasks that the user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"     * Private constructor for Task.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"     * @param description is the string of the description of the given task.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"     * @param isCompleted whether the task is completed or not.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"        this.isDone \u003d isCompleted;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"     * Mark a task as complete.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    public void setComplete() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"     * Check the completion of the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"     * @return \"[X]\" if task is completed and \"[ ]\" if the task isn\u0027t.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"    public String taskCompletionStatus() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"     * Method to convert information from object instance into a different format to be saved.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"     * @return a string with completion status, task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"    protected String saveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"            return 1 + \",\" + this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"            return 0 + \",\" + this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"     * A method that determines if a string can be found in this task\u0027s description.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"     * @param str given string.","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"     * @return a boolean on whether a given string is a substring of the description.","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Imerbear"},"content":"    public boolean isSubString(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Imerbear"},"content":"        return this.description.toLowerCase().contains(str.toLowerCase());","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Imerbear"},"content":"     *  Method to convert information from object instance into a more readable format.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Imerbear"},"content":"     * @return a string with the task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"Imerbear"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Imerbear"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Imerbear":72}},{"path":"src/main/java/winston/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"    private final ArrayList\u003cwinston.Task\u003e list;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private winston.Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"     * Number of tasks left to be completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     * @return the number of tasks left in the list that are not completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    public int numberOfIncompleteTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        assert(counter \u003e list.size());","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"            if (task.taskCompletionStatus().equals(\"[ ]\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"                counter +\u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"        return counter;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"     * Adds a task to the arraylist.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"     * @param task An Object of type Task to be added to the Arraylist.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"        assert (storage.saveToFile(this));","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"    public void setTask(Task task, int index) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"        list.set(index, task);","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"        assert (storage.saveToFile(this));","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"    public int size() {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"        return this.list.size();","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"     * Marks the Task of given (position - 1) as completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Imerbear"},"content":"     * @param position An integer corresponding to the task you wish to complete.","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Imerbear"},"content":"    public void markTask(int position) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"        list.get(position - 1).setComplete();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Imerbear"},"content":"        assert (storage.saveToFile(this));","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Imerbear"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Imerbear"},"content":"     * Removing a Task from the arraylist based on position.","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Imerbear"},"content":"     * @param position the position of the Task to be removed from the arraylist","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Imerbear"},"content":"     *                 (Note: position will be index of item in array list + 1).","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Imerbear"},"content":"    public void deleteTask(int position) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Imerbear"},"content":"        list.remove(position - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Imerbear"},"content":"        assert (storage.saveToFile(this));","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Imerbear"},"content":"        storage.saveToFile(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Imerbear"},"content":"     * Transforms the arraylist of tasks into a string for visualisation.","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Imerbear"},"content":"     * @return A string of the arraylist of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Imerbear"},"content":"    public String getList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Imerbear"},"content":"        int size \u003d list.size();","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"Imerbear"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"Imerbear"},"content":"            return Ui.emptyListMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"Imerbear"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"Imerbear"},"content":"            int counter \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Imerbear"},"content":"            StringBuilder result \u003d new StringBuilder(Ui.hiYaMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"Imerbear"},"content":"            assert(counter \u003e size);","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"Imerbear"},"content":"            for (Task task : this.list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Imerbear"},"content":"                result.append(counter + \". \" + task.taskCompletionStatus() + task.toString() + \"\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"Imerbear"},"content":"                counter +\u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Imerbear"},"content":"            result.setLength(result.length() - 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"Imerbear"},"content":"            return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"Imerbear"},"content":"     * A method that returns converts the list into saveToFile format.","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"Imerbear"},"content":"     * @return A string of the list in saveToFile format.","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"Imerbear"},"content":"    public String listSaveDataFormatter() {","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"Imerbear"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Imerbear"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Imerbear"},"content":"            result.append(task.saveFormat()).append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Imerbear"},"content":"        if (result.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"Imerbear"},"content":"            return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"Imerbear"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"Imerbear"},"content":"            return result.substring(0, result.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"Imerbear"},"content":"     *  A method that searches through the TaskList for a given string.","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"Imerbear"},"content":"     *  ","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"Imerbear"},"content":"     * @param str The string to look for.","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"Imerbear"},"content":"     * @return another TaskList with all Tasks that has a description that matches the given string.","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"Imerbear"},"content":"    public TaskList findString(String str) {","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"Imerbear"},"content":"        ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Imerbear"},"content":"        this.list.stream()","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"Imerbear"},"content":"                .filter(x -\u003e x.isSubString(str))","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"Imerbear"},"content":"                .forEach(y -\u003e arrList.add(y));","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"Imerbear"},"content":"        System.out.println(arrList.size());","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"Imerbear"},"content":"        return new TaskList(arrList);","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":131}},{"path":"src/main/java/winston/TerminateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * Represents the bye command from the parent abstract class Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class TerminateCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    public TerminateCommand(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"     * A method that prints the terminating message found in class Ui","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"     * @return A string of the termination message","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"        String result \u003d Ui.terminationMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        assert(!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":22}},{"path":"src/main/java/winston/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * A class extension of Task representing a ToDoTask.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class ToDoTask extends winston.Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final String type;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"     * Constructor for ToDoTask.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"     * @param description is the string of the description of the given task.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    public ToDoTask(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        super(description, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"     * Method to convert information from object instance into a different format to be saved.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"     * @return a string with the type, completion status, task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"    public String saveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"        assert (type \u003d\u003d \"T\");","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"        return this.type + \",\" + super.saveFormat();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"     *  Method to convert information from object instance into a more readable format.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"     * @return a string with the type, completion status, task description and due date.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"        return \"[\" + this.type + \"] \" + super.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Imerbear":44}},{"path":"src/main/java/winston/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * A class that manages all lines that handles user experience and lines that are commonly used.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    public static String invalidTask(String errorMessage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        return \"Error: \" + errorMessage + \"\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    public static String printTasksLeft(int tasksLeft) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"        return tasksLeft + \" Uncompleted Tasks Left\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    public static String printList(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        return taskList.getList() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"    public static String deleteItem() {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"        return \"IT GOT DELETED SIA!\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"    public static String printDontWorry() {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"        return \"Time to raise my APM!\\nTASK IS MARKED!\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"    public static String printMatchingTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"        return \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"    public static String welcomeMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"        return \"Winston reporting!\\nWhat can I do for you? \\n\" ","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"                + \"Available Commands: done, list, todo, deadline, event, bye, delete, findstring, update\";","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"    public static String terminationMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"        return \"See ya later!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"    public static String updateMessage(int messageNumber) {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"        return \"Task \" + messageNumber + \" updated\";","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"    public static String emptyListMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"        return \"The list is empty!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"    public static String hiYaMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"        return \"Hiya! These are your tasks!\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Imerbear":54}},{"path":"src/main/java/winston/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":" * Represents an update command from the parent abstract class Command.","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"public class UpdateCommand extends Command{","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    private int index;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    private final String[] arr;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    private final String userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"     * Constructor for UpdateCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"     * @param taskList the taskList with the list of tasks desired.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"     * @param arrOfCommand The array of user instructions that is split by spaces and lowerCased.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"     * @param userInput Instructions from the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"    public UpdateCommand(TaskList taskList, String[] arrOfCommand, String userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"        super(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        arr \u003d arrOfCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"     * Tests if  user update command is valid.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"     * @return a boolean on whether the user instructions are valid.","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"    private boolean isValid() {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"        if (arr.length \u003c 4) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"            return false;   ","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"        index \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"        String cmd \u003d arr[2];","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"        return cmd.equals(\"todo\") || cmd.equals(\"deadline\") || cmd.equals(\"event\");","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Imerbear"},"content":"     * Returns a task based on what the user wants to change the current task to.","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Imerbear"},"content":"     * @param str A string of the same format as parse from class Parser.","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Imerbear"},"content":"     * @return A child of parent class task.","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Imerbear"},"content":"    public Task updateTask(String str) {","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"Imerbear"},"content":"        String cmd \u003d arr[2];","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"Imerbear"},"content":"        if (isValid()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"Imerbear"},"content":"            if (cmd.equals(\"todo\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"Imerbear"},"content":"                try {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"Imerbear"},"content":"                    return new ToDoTask(str.substring(5));","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"Imerbear"},"content":"                } catch (InputMismatchException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"Imerbear"},"content":"                    return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"Imerbear"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"Imerbear"},"content":"            } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"Imerbear"},"content":"                try {","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Imerbear"},"content":"                    int endIndex \u003d str.indexOf(\"/by \");","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Imerbear"},"content":"                    String date \u003d str.substring(endIndex + 4);","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Imerbear"},"content":"                    String task \u003d str.substring(str.indexOf(\" \") + 1, endIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Imerbear"},"content":"                    LocalDate.parse(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Imerbear"},"content":"                    return new DeadLine(task, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Imerbear"},"content":"                } catch (InputMismatchException | IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Imerbear"},"content":"                    return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Imerbear"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"Imerbear"},"content":"            } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Imerbear"},"content":"                try {","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"Imerbear"},"content":"                    int endIndex \u003d str.indexOf(\"/at \");","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"Imerbear"},"content":"                    String date \u003d str.substring(endIndex + 4);","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"Imerbear"},"content":"                    String task \u003d str.substring(str.indexOf(\" \") + 1, endIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"Imerbear"},"content":"                    LocalDate.parse(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"Imerbear"},"content":"                    return new Event(task, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Imerbear"},"content":"                } catch (InputMismatchException | IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"Imerbear"},"content":"                    return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"Imerbear"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"Imerbear"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Imerbear"},"content":"                return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"Imerbear"},"content":"        return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"Imerbear"},"content":"     * Prints a message to let user\u0027s know that the command given is either invalid or","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"Imerbear"},"content":"     * the update command has worked.","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"Imerbear"},"content":"     * @return A string of what has happened.","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Imerbear"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"Imerbear"},"content":"    public String run() {","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"Imerbear"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"Imerbear"},"content":"        try{","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"Imerbear"},"content":"            String updateInstructions \u003d userInput.substring(9);","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"Imerbear"},"content":"            task \u003d updateTask(updateInstructions);","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"Imerbear"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"Imerbear"},"content":"            return Ui.invalidTask(\"Invalid Task\");","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Imerbear"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"Imerbear"},"content":"            return Ui.invalidTask(\"Invalid Task\");","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Imerbear"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"Imerbear"},"content":"            taskList.setTask(task, index - 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"Imerbear"},"content":"            String result \u003d Ui.printList(taskList) + Ui.updateMessage(index);","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Imerbear"},"content":"            assert (!result.equals(\"\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Imerbear"},"content":"            return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Imerbear":109}},{"path":"src/main/java/winston/Winston.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":" * A class that creates your personal assistant Winston","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"public class Winston {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"     * Constructor for class Winston","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    public Winston() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"        TaskList taskList \u003d new TaskList(storage.readFromFile());","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"        taskList.setStorage(storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"     * A method that calls commands based on the input string","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"     * ","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"     * @param str Input string that is used to call commands. ","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"     * @param winston the class that manages the other classes.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"     * @return The reply of the bot.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"    protected String getResponse(String str, Winston winston) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"        Command command \u003d winston.parser.parse(str);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"        return command.run();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Imerbear":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"\u003cfx:root fx:id \u003d \"dialogBox\" alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"200\" fitWidth\u003d\"120\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Imerbear":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"winston.MainWindow\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Imerbear":19}},{"path":"src/test/java/winston/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    Parser parser \u003d new Parser(new TaskList(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"    public void parseTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        Command c \u003d parser.parse(\"deadline test1 /by 1999-09-19\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"        assertTrue(c instanceof AddDeadlineCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"    public void parseTest2() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        Command c \u003d parser.parse(\"event test2 /at 1999/12\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Imerbear":28}},{"path":"src/test/java/winston/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"package winston;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Imerbear"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Imerbear"},"content":"    }    ","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Imerbear"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Imerbear"},"content":"    public void completedTaskTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Imerbear"},"content":"        ArrayList\u003cTask\u003e list \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Imerbear"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Imerbear"},"content":"            if (i % 2 \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Imerbear"},"content":"                list.add(new ToDoTask(\"test\", true));","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Imerbear"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"                list.add(new ToDoTask(\"test\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Imerbear"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Imerbear"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Imerbear"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Imerbear"},"content":"        assertEquals(taskList.numberOfIncompleteTasks(), 10);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Imerbear"},"content":"    ","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Imerbear"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Imerbear"},"content":"    public void getListDataTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Imerbear"},"content":"        ArrayList\u003cTask\u003e list \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Imerbear"},"content":"        list.add(new ToDoTask(\"test1\", true));","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Imerbear"},"content":"        list.add(new DeadLine(\"test1 2\",\"2020-12-12\", false));","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Imerbear"},"content":"        list.add(new Event(\"test1 3\",\"2021-01-01\", true));","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Imerbear"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Imerbear"},"content":"        String str \u003d \"T,1,test1\\nD,0,test1 2,2020-12-12\\nE,1,test1 3,2021-01-01\";","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Imerbear"},"content":"        assertEquals(taskList.listSaveDataFormatter(), str);","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"Imerbear"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Imerbear"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Imerbear":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Imerbear"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Imerbear"},"content":"read a book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Imerbear"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Imerbear"},"content":"CS2103T IP","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Imerbear"},"content":"Thursday 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Imerbear"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Imerbear"},"content":"CS2101 Lesson","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Imerbear"},"content":"Tmr 10AM","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Imerbear"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Imerbear"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Imerbear"},"content":"2","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Imerbear"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Imerbear":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Imerbear"},"content":"java -classpath ../bin Winston \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Imerbear":1,"-":37}}]
