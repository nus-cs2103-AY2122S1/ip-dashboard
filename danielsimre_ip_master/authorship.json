[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"# Energy","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"![Energy Logo](./src/main/resources/images/GivePLZTransparent.png?raw\u003dtrue) ","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"Energy is a desktop app that helps you manage your tasks, optimized for use via a Command-Line Interface,  ","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"combined with a sleek Graphical User Interface with minimal clutter. If you are a fast typist, Energy is the ideal task management app for you.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"## Setup Guide","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"2. Go to the [releases page](https://github.com/danielsimre/ip/releases) for this repository, and download the latest version.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"3. Copy the jar file to the folder that you want to use as the home folder.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"4. Double-click the jar file to start the app. A GUI should appear.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"## User Guide","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"A user guide containing a full list of functions, as well as their respective commands can be found at this link:","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"https://danielsimre.github.io/ip/","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"danielsimre":12,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    archiveBaseName \u003d \"energy\"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"danielsimre":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"![Energy Logo](./GivePLZTransparent.png?raw\u003dtrue)","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"Energy is a desktop app that helps you manage your tasks, optimized for use via a Command-Line Interface,  ","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"combined with a sleek Graphical User Interface with minimal clutter. If you are a fast typist, Energy is the ideal task","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"management app for you.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    * [Tasks](#tasks)","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        * [Adding a todo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        * [Adding a deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"        * [Adding an event task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        * [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"        * [Marking a task as done: `done`](#marking-a-task-as-done-done)","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        * [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        * [Listing all tasks due in X hours/days/months: `due`](#listing-all-tasks-due-in-x-hoursdaysmonths-due)","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        * [Listing all tasks occurring on a certain date: `ondate`](#listing-all-tasks-occurring-on-a-certain-date-ondate)","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        * [Listing all tasks containing a keyword/keyphrase: `find`](#listing-all-tasks-containing-a-keywordkeyphrase-find)","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    * [Aliases](#aliases)","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"        * [Adding an alias: `addalias`](#adding-an-alias-addalias)","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        * [Listing all aliases: `listalias`](#listing-all-aliases-listalias)","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        * [Deleting an alias: `deletealias`](#deleting-an-alias-deletealias)","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    * [Exiting the program](#exiting-the-program-bye)","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    * [Files](#files)","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"        * [Saving the task/alias data](#saving-the-taskalias-data)","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"        * [Editing the save file](#editing-the-save-file)","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        * [Editing the config file](#editing-the-config-file)","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"## Quick Start","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"1. Ensure that you have [Java 11](https://www.oracle.com/java/technologies/downloads/) or above installed.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"2. Go to the [releases page](https://github.com/danielsimre/ip/releases) for this repository, and download the latest","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"   version.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"3. Copy the jar file to the folder that you want to use as the home folder.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"4. Double-click the jar file to start the app. A GUI (like the one shown below) should appear.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"   ![Energy UI](./Ui_Small.png?raw\u003dtrue)","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"5. Type the command in the command box and press enter, or click the send button. Here are some commands you could try:","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    * `todo Task 1`: Adds a todo task with the description \"Task 1\".","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    * `list`: Lists all tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"    * `done 1`: Marks the first task in the list as done.","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"    * `delete 1`: Deletes the first task in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    * `bye`: Exits the app.","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"6. Refer to the Features section below for a detailed list of all commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"Notes for all commands:","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"* Words within rounded brackets specify parameters that the user will have to input. Do not include the brackets in your","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"  input. \u003cbr/\u003e Example: For `todo (description)`, a valid input would be `todo Task 1`.","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"* The format for parameters are specified within square brackets. \u003cbr/\u003e Example: For `deadline (description) /by (date[YYYY-MM-DD]) (time[HH:MM])`, the format for time is HH:MM.","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"* `|` is a reserved character. Parameters that include the `|` symbol will be rejected.","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"* When supplying parameters to commands, you must follow the format given exactly.","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"  (Do not exclude parameters, include any extra parameters or reorder the parameters.)","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"* Parameters for commands that do not take in any parameters such as `bye` or `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"  will be ignored.","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"### Tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"#### Adding a todo task: `todo`","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"Adds a todo task, which is a task with a description, to the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"Format: `todo (task description)`","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"Example: `todo Buy groceries` adds a task with the description \"Buy groceries\".","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"#### Adding a deadline task: `deadline`","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"Adds a deadline task, which is a task with a description along with a date and time, to the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"Format: `deadline (description) /by (date[YYYY-MM-DD]) (time[HH:MM])`,","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"Example: `deadline Finish presentation /by 2021-09-30 23:59` adds a task with the description \"Finish presentation\"","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"with a date of September 30th, 2021, 11:59 PM.","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"#### Adding an event task: `event`","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"Adds an event task, which is a task with a description along with a date, start time and end time, to the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"Format: `event (description) /at (date[YYYY-MM-DD]) (start time[HH:MM]) (end time[HH:MM])`,","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"Example: `event Meet with professor /at 2021-09-18 11:00 13:00` adds a task with the description \"Meet with professor\"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"with a date of September 18th, 2021, 11:00 AM - 1:00 PM.","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"#### Listing all tasks: `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"Lists all tasks currently stored in the program, in order of when they were added.","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"Format: `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"#### Marking a task as done: `done`","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"Marks a task as done, depending on the task index specified.","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"Format: `done (task index)`","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"Example: `done 2` will mark the second task in the list as done.","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"#### Deleting a task: `delete`","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"Deletes a task from the list, depending on the task index specified.","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"Format: `delete (task index)`","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"Example: `delete 3` will delete the third task in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"#### Listing all tasks due in X hours/days/months: `due`","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"Lists all tasks due in X hours/days/months, depending on the user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"Format: `due (number)(h/d/m)`","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"Example: `due 10d` gets all tasks due within 10 days from now. (This includes tasks that are already due now.)","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"#### Listing all tasks occurring on a certain date: `ondate`","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"Lists all tasks occurring on a given input date.","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"Format: `ondate (date[YYYY-MM-DD])`","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"Example: `ondate 2021-09-30` gets all tasks occurring on September 30th, 2021.","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"#### Listing all tasks containing a keyword/keyphrase: `find`","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"Lists all tasks containing a given keyword or keyphrase.","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"Format: `find (keyword/keyphrase)`","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"Example: `find return` lists all tasks containing the word `return` in their description.","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"danielsimre"},"content":"### Aliases","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":161,"author":{"gitId":"danielsimre"},"content":"#### Adding an alias: `addalias`","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":163,"author":{"gitId":"danielsimre"},"content":"Adds an alias to a command. In the future, this alias can be used in place of the original command keyword.","lastModifiedDate":"2021-09-18"},{"lineNumber":164,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"danielsimre"},"content":"Format: `addalias (command) (alias)`","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"danielsimre"},"content":"Example: `addalias todo t` Adds the alias t to the todo command. Then `t Return book` will function exactly the same way","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"danielsimre"},"content":"as `todo Return Book`.","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":170,"author":{"gitId":"danielsimre"},"content":"Notes:","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"danielsimre"},"content":"* To add on to the above example, `addalias t t2` will be a valid command! `t2` would have the same function as `todo`.","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"danielsimre"},"content":"  (Since `t` is an alias of `todo`)","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"danielsimre"},"content":"* You can even add an alias for `addalias`, such as `addalias addalias aa`. Then `aa todo t` is a valid command.","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"danielsimre"},"content":"* You cannot use commands as aliases. (e.g. `addalias todo deadline` is invalid.)","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"danielsimre"},"content":"* You cannot use an existing alias as an alias for another command. (e.g. If `t` is already an alias for `todo`","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"danielsimre"},"content":"  , `addalias deadline t` is invalid.)","lastModifiedDate":"2021-09-18"},{"lineNumber":178,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":179,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":180,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":181,"author":{"gitId":"danielsimre"},"content":"#### Listing all aliases: `listalias`","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"danielsimre"},"content":"Lists all aliases added by the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":185,"author":{"gitId":"danielsimre"},"content":"Format: `listalias`","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":187,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":188,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":189,"author":{"gitId":"danielsimre"},"content":"#### Deleting an alias: `deletealias`","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"danielsimre"},"content":"Deletes an alias, which frees up the alias for use for other commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":193,"author":{"gitId":"danielsimre"},"content":"Format: `deletealias (alias)`","lastModifiedDate":"2021-09-18"},{"lineNumber":194,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":195,"author":{"gitId":"danielsimre"},"content":"Example: `deletealias t` removes the alias t.","lastModifiedDate":"2021-09-18"},{"lineNumber":196,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"danielsimre"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"danielsimre"},"content":"Exits the program.","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":203,"author":{"gitId":"danielsimre"},"content":"Format: `bye`","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":205,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":207,"author":{"gitId":"danielsimre"},"content":"### Files","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":209,"author":{"gitId":"danielsimre"},"content":"#### Saving the task/alias data","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":211,"author":{"gitId":"danielsimre"},"content":"There is no need to save manually. Any change made to task or alias data is saved automatically to the hard drive.","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":213,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"danielsimre"},"content":"#### Editing the save file","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"danielsimre"},"content":"Task data is saved in the file [JAR file location]/data/tasks.txt. Advanced users can edit this file directly to update","lastModifiedDate":"2021-09-18"},{"lineNumber":218,"author":{"gitId":"danielsimre"},"content":"the task list. If any changes made cause the format to the invalid, Energy will start with a blank task list on the next","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"danielsimre"},"content":"run.","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"danielsimre"},"content":"#### Editing the config file","lastModifiedDate":"2021-09-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":225,"author":{"gitId":"danielsimre"},"content":"Alias data is saved in the file [JAR file location]/data/config.txt. Advanced users can edit this file directly to","lastModifiedDate":"2021-09-18"},{"lineNumber":226,"author":{"gitId":"danielsimre"},"content":"add/delete aliases. If any changes made cause the format to the invalid, Energy will start with no aliases on the next","lastModifiedDate":"2021-09-18"},{"lineNumber":227,"author":{"gitId":"danielsimre"},"content":"run.","lastModifiedDate":"2021-09-18"},{"lineNumber":228,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":229,"author":{"gitId":"danielsimre"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":231,"author":{"gitId":"danielsimre"},"content":"## Command Summary","lastModifiedDate":"2021-09-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":233,"author":{"gitId":"danielsimre"},"content":"| Action      | Format, Examples |","lastModifiedDate":"2021-09-18"},{"lineNumber":234,"author":{"gitId":"danielsimre"},"content":"|-------------|-----------------| ","lastModifiedDate":"2021-09-18"},{"lineNumber":235,"author":{"gitId":"danielsimre"},"content":"| Add Alias   | `addalias (command) (alias)` \u003cbr /\u003e e.g. `addalias todo t` |","lastModifiedDate":"2021-09-18"},{"lineNumber":236,"author":{"gitId":"danielsimre"},"content":"| Add Todo Task    | `todo (description)` \u003cbr /\u003e e.g. `todo Go for a run` |","lastModifiedDate":"2021-09-18"},{"lineNumber":237,"author":{"gitId":"danielsimre"},"content":"| Add Deadline Task | `deadline (description) /by (date[YYYY-MM-DD]) (time[HH:MM])` \u003cbr/\u003e e.g. `deadline Finish presentation /by 2021-09-30 23:59`","lastModifiedDate":"2021-09-18"},{"lineNumber":238,"author":{"gitId":"danielsimre"},"content":"| Add Event Task | `event (description) /at (date[YYYY-MM-DD]) (start time[HH:MM]) (end time[HH:MM])` \u003cbr/\u003e e.g. `event Meet with professor /at 2021-09-18 11:00 13:00`","lastModifiedDate":"2021-09-18"},{"lineNumber":239,"author":{"gitId":"danielsimre"},"content":"| Delete Alias | `deletealias (alias)` \u003cbr/\u003e e.g. `deletealias t`","lastModifiedDate":"2021-09-18"},{"lineNumber":240,"author":{"gitId":"danielsimre"},"content":"| Delete Task | `delete (task index)` \u003cbr/\u003e e.g. `delete 3`","lastModifiedDate":"2021-09-18"},{"lineNumber":241,"author":{"gitId":"danielsimre"},"content":"| Exit Program | `bye`","lastModifiedDate":"2021-09-18"},{"lineNumber":242,"author":{"gitId":"danielsimre"},"content":"| Mark Task as Done | `done (task index)` \u003cbr/\u003e e.g. `done 3`","lastModifiedDate":"2021-09-18"},{"lineNumber":243,"author":{"gitId":"danielsimre"},"content":"| List all Aliases | `listalias`","lastModifiedDate":"2021-09-18"},{"lineNumber":244,"author":{"gitId":"danielsimre"},"content":"| List all Tasks | `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":245,"author":{"gitId":"danielsimre"},"content":"| List all Due Tasks | `due (number)(h/d/m)` \u003cbr/\u003e e.g. `due 12h`","lastModifiedDate":"2021-09-18"},{"lineNumber":246,"author":{"gitId":"danielsimre"},"content":"| List all Tasks occurring on a date | `ondate (date[YYYY-MM-DD])` \u003cbr/\u003e e.g. `ondate 2021-09-30`","lastModifiedDate":"2021-09-18"},{"lineNumber":247,"author":{"gitId":"danielsimre"},"content":"| List all Tasks containing keyphrase | `find (keyword/keyphrase)` \u003cbr/\u003e e.g. `find borrow`","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"danielsimre":221,"-":26}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.Main;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"danielsimre":12}},{"path":"src/main/java/energy/Energy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.result.AliasHandler;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":" * The driver class for the Energy chat bot.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"public class Energy {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     * Object to handle UI-related functions (e.g. printing messages and lines)","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     * Object to handle loading from/save to a save file","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * Object to represent the user\u0027s task list (e.g. add/delete/mark as done)","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    private String initMessage \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    private boolean isTerminated \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    private boolean hasException \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"     * Creates a Energy chat bot instance, using a default file path for loading/saving.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"    public Energy() {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        this(Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\"),","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"                Paths.get(System.getProperty(\"user.dir\"), \"data\", \"config.txt\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"     * Creates an Energy chat bot instance, using a file path for loading/saving.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * @param saveFilePath Relative path to the location of the save file.","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     * @param configFilePath Relative path to the location of the config file.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    public Energy(Path saveFilePath, Path configFilePath) {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"        this.storage \u003d new Storage(saveFilePath, configFilePath);","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"        loadTasksFromFile(saveFilePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        loadAliasesFromFile(configFilePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        initMessage +\u003d ui.showIntroduction();","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"     * Load tasks from the specified save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"     * @param saveFilePath Relative path to the location of the save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"    private void loadTasksFromFile(Path saveFilePath) {","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"            if (!Files.exists(saveFilePath)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"                initMessage +\u003d ui.showSaveFileNotFoundError();","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"                taskList \u003d new TaskList();","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"                storage.saveTasksToFile(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"            } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"                taskList \u003d storage.loadTasksFromFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"            hasException \u003d true;","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"            initMessage +\u003d ui.showSaveFileLoadingError(e.getMessage());","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"     * Load aliases from the specified config file.","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"     * @param configFilePath Relative path to the location of the config file.","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"    private void loadAliasesFromFile(Path configFilePath) {","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"            // Initialize Parser to recognize aliases for commands","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"            AliasHandler aliasHandler \u003d new AliasHandler();","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"            if (!Files.exists(configFilePath)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"                initMessage +\u003d ui.showConfigFileNotFoundError();","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"                storage.saveAliasesToFile(aliasHandler);","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"            } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"                aliasHandler \u003d storage.loadAliasesFromFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"            Parser.setAliasHandler(aliasHandler);","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"            hasException \u003d true;","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"            initMessage +\u003d ui.showConfigLoadingError(e.getMessage());","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"     * Returns the messages generated on the initialization of Energy.","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"     * @return A string message to be used by the JavaFX GUI.","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"    public String getInitMessage() {","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"        return initMessage;","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"     * Gives a user input to the Energy chat bot, and returns the appropriate response.","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"     * @param input The user input from the GUI.","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"     * @return A string message to be used by the JavaFX GUI.","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"            hasException \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"            Command command \u003d Parser.parseCommandFromInput(input.trim());","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"            Result result \u003d command.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"            // Energy should always give a non-empty response to a command","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"            assert (!result.getMessage().equals(\"\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"            // Update user-related state (tasks and aliases)","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"            taskList \u003d result.getTaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"            Parser.setAliasHandler(result.getAliasHandler());","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"            isTerminated \u003d command.isTerminated();","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"            return result.getMessage();","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"            hasException \u003d true;","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"            return ui.showError(\"The data failed to save to the save file with error:\"","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"            hasException \u003d true;","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"     * Returns a boolean representing whether or not the program should continue running.","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"     * @return True if a bye/terminating command has been inputted, false otherwise.","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"        return isTerminated;","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"     * Returns a boolean representing whether or not an exception was thrown","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"     * while executing a command.","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"     * @return True if an exception was caught, false otherwise.","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"    public boolean hasException() {","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"        return hasException;","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"danielsimre":157}},{"path":"src/main/java/energy/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.controller.MainWindow;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":" * A GUI for Energy using FXML.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"    private final Energy energy \u003d new Energy();","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"            Image energyImage \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"                    new Image(getClass().getResourceAsStream(\"/images/GivePLZTransparent.png\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"            fxmlLoader.setRoot(new MainWindow());","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"            stage \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEnergy(energy);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"            stage.getIcons().add(energyImage);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"danielsimre":34}},{"path":"src/main/java/energy/command/AddAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.result.AliasHandler;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to add an alias.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"public class AddAliasCommand extends Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     * Creates an AddAliasCommand, which relies on user inputs to function.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public AddAliasCommand(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * Adds an alias and saves the new alias to the config file.","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If an error occurs during the save operation.","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        AliasHandler aliasHandler \u003d Parser.getAliasHandler();","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        // This pair contains the updated AliasHandler along with an output message","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        Pair\u003cAliasHandler, String\u003e aliasHandlerPair \u003d aliasHandler.addAlias(ui, input);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        AliasHandler newAliasHandler \u003d aliasHandlerPair.getKey();","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        storage.saveAliasesToFile(newAliasHandler);","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        String message \u003d aliasHandlerPair.getValue();","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, newAliasHandler, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"danielsimre":47}},{"path":"src/main/java/energy/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to add a task.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     * Creates an AddTaskCommand, which relies on user inputs to function.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public AddTaskCommand(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * Adds a todo/deadline/event task and saves the new task list to the save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If an error occurs during the save operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        // This splits up the input into task attributes.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        // (i.e. Task type, task name, if the task is done or not, date/time)","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d Parser.splitWith(input, 0, \" \",","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"                \"The description of a todo/deadline/event task cannot be empty.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        // This pair contains the updated task list along with an output message","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        Pair\u003cTaskList, String\u003e taskListPair \u003d taskList.addTask(ui, splitInputs);","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"        TaskList newTaskList \u003d taskListPair.getKey();","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"        storage.saveTasksToFile(newTaskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"        String message \u003d taskListPair.getValue();","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"        return new Result(newTaskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":50}},{"path":"src/main/java/energy/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to exit the program.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"     * Prints a goodbye message and exits the program.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, ui.showMessage(\"Goodbye. Have a nice day!\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * Returns true if the command terminates Energy, false otherwise.","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * @return True, as ByeCommand terminates Energy.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":35}},{"path":"src/main/java/energy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":" * A class that represents a valid command that can be executed according to the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    protected final String input;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     * Creates a command that does not rely on user inputs to function.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    public Command() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        this.input \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"     * Creates a command that relies on user inputs to function.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    public Command(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * Executes the function associated with the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If an error occurs during a save/load operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"    public abstract Result execute(TaskList taskList, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"     * Returns true if the command terminates Energy, false otherwise.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     * @return False by default, unless the command is a terminating command (e.g. ByeCommand)","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":51}},{"path":"src/main/java/energy/command/DeleteAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.result.AliasHandler;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to delete an alias.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"public class DeleteAliasCommand extends Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     * Creates an DeleteAliasCommand, which relies on user inputs to function.","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    public DeleteAliasCommand(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     * Deletes an alias, as well as remove it from the config file.","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If an error occurs during the save operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        AliasHandler aliasHandler \u003d Parser.getAliasHandler();","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        // This pair contains the updated AliasHandler along with an output message","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        Pair\u003cAliasHandler, String\u003e aliasHandlerPair \u003d aliasHandler.deleteAlias(ui, input);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        AliasHandler newAliasHandler \u003d aliasHandlerPair.getKey();","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        storage.saveAliasesToFile(newAliasHandler);","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"        String message \u003d aliasHandlerPair.getValue();","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, newAliasHandler, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":48}},{"path":"src/main/java/energy/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to delete a task.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * Creates a DeleteTaskCommand, which relies on user inputs to function.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public DeleteTaskCommand(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * Deletes a task from the task list and saves the new task list to the save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If an error occurs during the save operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        // This pair contains the updated task list along with an output message","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        Pair\u003cTaskList, String\u003e taskListPair \u003d taskList.deleteTask(ui, input);","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        TaskList newTaskList \u003d taskListPair.getKey();","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        storage.saveTasksToFile(newTaskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        String message \u003d taskListPair.getValue();","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        return new Result(newTaskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":44}},{"path":"src/main/java/energy/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to mark a task as done.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * Creates a DoneCommand, which relies on user inputs to function.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public DoneCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * Marks a specified task as done and saves the new task list to the save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If an error occurs during the save operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        // This pair contains the updated task list along with an output message","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        Pair\u003cTaskList, String\u003e taskListPair \u003d taskList.markTask(ui, input);","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        TaskList newTaskList \u003d taskListPair.getKey();","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        storage.saveTasksToFile(newTaskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        String message \u003d taskListPair.getValue();","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        return new Result(newTaskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":44}},{"path":"src/main/java/energy/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to get all tasks due within","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":" * a certain timeframe.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"     * Creates a DueCommand, which relies on user inputs to function.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    public DueCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"     * Displays all tasks due before a certain period, for example all tasks due before","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     * the time now, +x hours/days/months.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        TaskList dueTaskList \u003d taskList.getDueTasks(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showMessage(\"Here are the tasks occurring within this time period:\")","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"                + ui.showMessage(dueTaskList.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":39}},{"path":"src/main/java/energy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to find all tasks containing","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":" * a certain keyword or keyphrase.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"     * Creates a FindCommand, which relies on user inputs to function.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"     * Displays all tasks that contain a phrase given by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        TaskList matchingTaskList \u003d taskList.findTasks(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showMessage(\"Here are the matching tasks in your list:\")","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"                + ui.showMessage(matchingTaskList.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":38}},{"path":"src/main/java/energy/command/ListAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.result.AliasHandler;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants a list of all aliases.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"public class ListAliasCommand extends Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     * Displays all aliases that the user has configured.","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        AliasHandler aliasHandler \u003d Parser.getAliasHandler();","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showMessage(\"Here are your configured aliases:\")","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"                + ui.showMessage(aliasHandler.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"danielsimre":30}},{"path":"src/main/java/energy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants a list of all tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"     * Displays all tasks in the user\u0027s task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showMessage(\"Here is your task list:\")","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"                + ui.showMessage(taskList.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":27}},{"path":"src/main/java/energy/command/OnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.result.Result;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import energy.util.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":" * A class that represents the command when the user wants to get all tasks occurring","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":" * on a given date.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"public class OnDateCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"     * Creates an OnDateCommand, which relies on user inputs to function.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     * @param input A string containing the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    public OnDateCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"     * Displays all tasks due on a specific date.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     * @param taskList   The current list of tasks from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * @param ui      An object that handles all UI related functionality. (e.g. printing)","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     * @param storage An object that handles all save/load related functionality.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * @return A Result object containing task and alias data, as well as an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    public Result execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        TaskList onDateTaskList \u003d taskList.getOnDateTasks(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showMessage(\"Here are the tasks occurring on this date:\")","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"                + ui.showMessage(onDateTaskList.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        return new Result(taskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":38}},{"path":"src/main/java/energy/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.controller;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    private Circle displayPicture;","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"                    new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"    public static DialogBox getEnergyDialog(String text, Image img, boolean hasException) {","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"        // Error messages should be coloured red and bolded","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"        if (hasException) {","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"            db.dialog.setTextFill(Color.RED);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"            db.dialog.setFont(Font.font(Font.getDefault().getName(), FontWeight.BOLD, 12));","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"danielsimre":72}},{"path":"src/main/java/energy/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.controller;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import energy.Energy;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"public class MainWindow extends Stage {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    private AnchorPane anchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    private Energy energy;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/TakeNRG.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    private final Image energyImage \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/GivePLZ.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    public void setEnergy(Energy energy) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        this.energy \u003d energy;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"                DialogBox.getEnergyDialog(energy.getInitMessage(), energyImage, energy.hasException())","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Energy\u0027s reply and then appends them to","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        String response \u003d energy.getResponse(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"        // If a terminating command has been executed (e.g. ByeCommand)","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        if (energy.isTerminated()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"                DialogBox.getEnergyDialog(response, energyImage, energy.hasException())","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"danielsimre":69}},{"path":"src/main/java/energy/result/AliasHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.result;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.util.List;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.util.EnergyException;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":" * A class that contains the base functionality for handling aliases,","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":" * including adding, deleting and listing them.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"public class AliasHandler {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    private static final int ADDALIAS_COMMAND_LENGTH \u003d 3;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    private static final int DELETEALIAS_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    // Stores aliases in the form of: alias(key):command(value)","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    private final HashMap\u003cString, String\u003e aliasHashMap;","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     * Creates an alias handler with no aliases.","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    public AliasHandler() {","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"        this.aliasHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * Creates an alias handler with aliases.","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     * @param aliasHashMap A hashmap that matches aliases to corresponding commands.","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public AliasHandler(HashMap\u003cString, String\u003e aliasHashMap) {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        this.aliasHashMap \u003d aliasHashMap;","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"     * Returns the command corresponding to the given alias.","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"     * If the alias given does not correspond to any command, the input alias itself","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"     * will be returned.","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"     * @param input A string representing the command for which the aliases are being checked.","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     * @return The command string that the alias corresponds to, or the input string","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * if there is no such association.","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    public String convertAlias(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"        boolean isAlias \u003d aliasHashMap.containsKey(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"        if (!isAlias) {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"            return input;","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        return aliasHashMap.get(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"     * Adds an alias which corresponds to a given command.","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"     * This will work if the user chooses to add an alias to an alias.","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"     * E.g. exit is added as an alias for bye. Then quit can be added as an alias for exit,","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"     * while having the same functionality of bye.","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"     * Aliases are not case sensitive. (e.g. quit is treated the same as QUIT)","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"     * @return A pair that contains an AliasHandler instance with the new alias,","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"     * and a string that represents an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input contains |, or is in an invalid format.","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"    public Pair\u003cAliasHandler, String\u003e addAlias(Ui ui, String input) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"        HashMap\u003cString, String\u003e newAliasHashMap \u003d new HashMap\u003c\u003e(this.aliasHashMap);","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"        String[] aliasCommandArray \u003d verifyAddAliasCommandInput(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"        String alias \u003d aliasCommandArray[0];","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"        String command \u003d aliasCommandArray[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"        newAliasHashMap.put(alias, command);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"        AliasHandler newAliasHandler \u003d new AliasHandler(newAliasHashMap);","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showAddAliasMessage(alias, command);","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"        return new Pair\u003c\u003e(newAliasHandler, message);","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"     * Verifies that the input for the add alias command is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"     * @return A string array, with index 0 corresponding to an alias, and index 1","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"     * corresponding to a command.","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input contains |, or is in an invalid format.","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"    private String[] verifyAddAliasCommandInput(String input) throws EnergyException {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Input contains |, which is an invalid/reserved character.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"        if (splitInputs.length !\u003d ADDALIAS_COMMAND_LENGTH) {","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Input should be of the format: addalias [command] [alias]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"        String alias \u003d splitInputs[2].toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"        if (isCommandKeyword(alias)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"This alias is already reserved for an actual command.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"        if (aliasHashMap.containsKey(alias)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"            String errorMessage \u003d String.format(\"Alias %s already corresponds to command %s.\",","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"                    alias, aliasHashMap.get(alias));","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(errorMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"        String command \u003d convertAlias(splitInputs[1]);","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"        // If the command given is invalid, this throws a EnergyException","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"        Parser.parseCommandFromInput(command);","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"        return new String[]{alias, command};","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"     * Checks if an alias conflicts with an actual command word.","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"     * @param alias An input string representing an alias.","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"     * @return True if the alias clashes with an actual command, false otherwise.","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"    private boolean isCommandKeyword(String alias) {","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"        switch (alias) {","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"        case \"addalias\":","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"        case \"list\":","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"        case \"listalias\":","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"        case \"done\":","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"        case \"event\":","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"        case \"deletealias\":","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"        case \"ondate\":","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"        case \"due\":","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"        case \"find\":","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"            return true;","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"        default:","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"            return false;","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"     * Deletes an alias which corresponds to a given command.","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"     * Aliases are not case sensitive. (e.g. quit is treated the same as QUIT)","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"     * @return A pair that contains an AliasHandler instance with the new alias,","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"     * and a string that represents an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input contains |, or is in an invalid format.","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"    public Pair\u003cAliasHandler, String\u003e deleteAlias(Ui ui, String input) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"        HashMap\u003cString, String\u003e newAliasHashMap \u003d new HashMap\u003c\u003e(this.aliasHashMap);","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"        if (splitInputs.length !\u003d DELETEALIAS_COMMAND_LENGTH) {","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Input should be of the format: deletealias [alias]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"        String alias \u003d splitInputs[1].toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"        if (!aliasHashMap.containsKey(alias)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"            String errorMessage \u003d String.format(\"Alias %s does not correspond to any command.\",","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"                    alias);","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(errorMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"danielsimre"},"content":"        String command \u003d newAliasHashMap.remove(alias);","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"danielsimre"},"content":"        AliasHandler newAliasHandler \u003d new AliasHandler(newAliasHashMap);","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showDeleteAliasMessage(alias, command);","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"danielsimre"},"content":"        return new Pair\u003c\u003e(newAliasHandler, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":166,"author":{"gitId":"danielsimre"},"content":"     * Converts the alias data into its corresponding config file data format.","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":168,"author":{"gitId":"danielsimre"},"content":"     * @return A string to represent the data of all aliases for the config file.","lastModifiedDate":"2021-09-10"},{"lineNumber":169,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"danielsimre"},"content":"    public String toConfigData() {","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"danielsimre"},"content":"        String[] aliases \u003d aliasHashMap.keySet().toArray(new String[0]);","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"danielsimre"},"content":"        StringBuilder dataString \u003d new StringBuilder();","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"danielsimre"},"content":"        for (String alias : aliases) {","lastModifiedDate":"2021-09-10"},{"lineNumber":174,"author":{"gitId":"danielsimre"},"content":"            String command \u003d aliasHashMap.get(alias).toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"danielsimre"},"content":"            dataString.append(alias)","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"danielsimre"},"content":"                    .append(\"|\")","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"danielsimre"},"content":"                    .append(command)","lastModifiedDate":"2021-09-10"},{"lineNumber":178,"author":{"gitId":"danielsimre"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":180,"author":{"gitId":"danielsimre"},"content":"        return dataString.toString().trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":181,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":182,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":183,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":184,"author":{"gitId":"danielsimre"},"content":"     * Converts the AliasHandler data into a string format.","lastModifiedDate":"2021-09-10"},{"lineNumber":185,"author":{"gitId":"danielsimre"},"content":"     * The aliases are listed in the following format:","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"danielsimre"},"content":"     * commandKeyword1:","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"danielsimre"},"content":"     * 1. alias1","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"danielsimre"},"content":"     * 2. alias2","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"danielsimre"},"content":"     * commandKeyword2:","lastModifiedDate":"2021-09-10"},{"lineNumber":190,"author":{"gitId":"danielsimre"},"content":"     * 1. alias1","lastModifiedDate":"2021-09-10"},{"lineNumber":191,"author":{"gitId":"danielsimre"},"content":"     * 2. alias2","lastModifiedDate":"2021-09-10"},{"lineNumber":192,"author":{"gitId":"danielsimre"},"content":"     * ...and so on and so forth.","lastModifiedDate":"2021-09-10"},{"lineNumber":193,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":194,"author":{"gitId":"danielsimre"},"content":"     * @return A string representation of the AliasHandler instance.","lastModifiedDate":"2021-09-10"},{"lineNumber":195,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":196,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":197,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":198,"author":{"gitId":"danielsimre"},"content":"        String[] aliases \u003d aliasHashMap.keySet().toArray(new String[0]);","lastModifiedDate":"2021-09-10"},{"lineNumber":199,"author":{"gitId":"danielsimre"},"content":"        if (aliases.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-10"},{"lineNumber":200,"author":{"gitId":"danielsimre"},"content":"            return \"No aliases found.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":201,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":202,"author":{"gitId":"danielsimre"},"content":"        HashMap\u003cString, List\u003cString\u003e\u003e commandHashMap \u003d convertHashMap(aliases);","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"danielsimre"},"content":"        StringBuilder dataString \u003d new StringBuilder();","lastModifiedDate":"2021-09-10"},{"lineNumber":204,"author":{"gitId":"danielsimre"},"content":"        // Using the commandHashMap, print out all aliases, grouped by whatever","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"danielsimre"},"content":"        // command they correspond to","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"danielsimre"},"content":"        String[] commands \u003d commandHashMap.keySet().toArray(new String[0]);","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"danielsimre"},"content":"        for (String command : commands) {","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"danielsimre"},"content":"            dataString.append(command)","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"danielsimre"},"content":"                    .append(\":\\n\");","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"danielsimre"},"content":"            List\u003cString\u003e aliasList \u003d commandHashMap.get(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"danielsimre"},"content":"            for (int i \u003d 0; i \u003c aliasList.size(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"danielsimre"},"content":"                String aliasString \u003d String.format(\"\\t%d. %s\\n\", i + 1, aliasList.get(i));","lastModifiedDate":"2021-09-18"},{"lineNumber":213,"author":{"gitId":"danielsimre"},"content":"                dataString.append(aliasString);","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"danielsimre"},"content":"        return dataString.toString().trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":218,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"danielsimre"},"content":"     * Converts the AliasHandler hashmap (key: alias, value: command)","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"danielsimre"},"content":"     * into a hashmap in which the key is the command, and the value is a list","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"danielsimre"},"content":"     * of corresponding aliases.","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":224,"author":{"gitId":"danielsimre"},"content":"     * @param aliases An array of aliases.","lastModifiedDate":"2021-09-18"},{"lineNumber":225,"author":{"gitId":"danielsimre"},"content":"     * @return A hashmap that links commands to aliases.","lastModifiedDate":"2021-09-18"},{"lineNumber":226,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":227,"author":{"gitId":"danielsimre"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e convertHashMap(String[] aliases) {","lastModifiedDate":"2021-09-18"},{"lineNumber":228,"author":{"gitId":"danielsimre"},"content":"        // Group up all aliases by the command they correspond to","lastModifiedDate":"2021-09-10"},{"lineNumber":229,"author":{"gitId":"danielsimre"},"content":"        HashMap\u003cString, List\u003cString\u003e\u003e commandHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":230,"author":{"gitId":"danielsimre"},"content":"        for (String alias : aliases) {","lastModifiedDate":"2021-09-10"},{"lineNumber":231,"author":{"gitId":"danielsimre"},"content":"            String command \u003d aliasHashMap.get(alias).toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":232,"author":{"gitId":"danielsimre"},"content":"            // If this alias is the first one that corresponds to this command,","lastModifiedDate":"2021-09-10"},{"lineNumber":233,"author":{"gitId":"danielsimre"},"content":"            // initialize the arraylist","lastModifiedDate":"2021-09-10"},{"lineNumber":234,"author":{"gitId":"danielsimre"},"content":"            List\u003cString\u003e aliasList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":235,"author":{"gitId":"danielsimre"},"content":"            // Else, get the existing list of aliases for this command","lastModifiedDate":"2021-09-10"},{"lineNumber":236,"author":{"gitId":"danielsimre"},"content":"            if (commandHashMap.containsKey(command)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":237,"author":{"gitId":"danielsimre"},"content":"                aliasList \u003d commandHashMap.get(command);","lastModifiedDate":"2021-09-10"},{"lineNumber":238,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":239,"author":{"gitId":"danielsimre"},"content":"            aliasList.add(alias);","lastModifiedDate":"2021-09-10"},{"lineNumber":240,"author":{"gitId":"danielsimre"},"content":"            commandHashMap.put(command, aliasList);","lastModifiedDate":"2021-09-10"},{"lineNumber":241,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":242,"author":{"gitId":"danielsimre"},"content":"        return commandHashMap;","lastModifiedDate":"2021-09-18"},{"lineNumber":243,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":244,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"danielsimre":244}},{"path":"src/main/java/energy/result/Result.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.result;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":" * A class that represents the result of executing a command.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class Result {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    private final AliasHandler aliasHandler;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    private final String message;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"     * Creates a Result object that contains task and alias data, as well as","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"     * an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     * @param taskList An object containing task data.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * @param message  A string representing an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    public Result(TaskList taskList, String message) {","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"        this.aliasHandler \u003d Parser.getAliasHandler();","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * Creates a Result object that contains task and alias data, as well as","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     * an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     * @param taskList     An object containing task data.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     * @param aliasHandler An object containing alias data.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * @param message      A string representing an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    public Result(TaskList taskList, AliasHandler aliasHandler, String message) {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        this.aliasHandler \u003d aliasHandler;","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"     * Gets the alias data from the Result object.","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"     * @return An AliasHandler object containing alias data.","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"    public AliasHandler getAliasHandler() {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"        return aliasHandler;","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"     * Gets the output message from the Result object.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"     * @return A string representing an output message from executing a command.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        return message;","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"     * Gets the task data from the Result object.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"     * @return A TaskList object containing task data.","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"        return taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"danielsimre":66}},{"path":"src/main/java/energy/result/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.result;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import energy.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import energy.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import energy.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import energy.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"import energy.util.EnergyException;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import energy.util.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":" * A class that contains the base functionality for a task list,","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":" * including adding, deleting, listing, and marking tasks as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    private static final int DEADLINE_EXTRA_LENGTH \u003d 3;","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    private static final int EVENT_EXTRA_LENGTH \u003d 4;","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    private static final int DELETE_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    private static final int DONE_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    private static final int DUE_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    private static final int FIND_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    private static final int ONDATE_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"     * Creates a task list with no tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"     * Creates a task list with a given list of tasks and a message.","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"     * Applies a function to every task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"     * @param consumer A function that is to be applied to each task in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"    public void forEach(Consumer\u003c? super Task\u003e consumer) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        tasks.forEach(consumer);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"     * Adds a task to the task list with a task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"     * Task is either a todo, deadline or event task depending on the input.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"     * @param ui     Object that handles printing/formatting of messages.","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"     * @param inputs A variable amount of strings representing the user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"     * @return A pair containing a TaskList instance containing the new task,","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"     * and a string representing an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input contains |, or is in an invalid format.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"    public Pair\u003cTaskList, String\u003e addTask(Ui ui, String... inputs) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"        for (String input : inputs) {","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"            if (input.contains(\"|\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"                throw new EnergyException(\"Input contains |, which is an invalid/reserved character.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"        Task newTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"        String aliasString \u003d inputs[0].toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"        String commandString \u003d Parser.getAliasHandler().convertAlias(aliasString);","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"        // If the code enters this function, the command must be one of the words below","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"        assert (commandString.equals(\"todo\")","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"                || commandString.equals(\"deadline\")","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"                || commandString.equals(\"event\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"        switch (commandString) {","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"            newTask \u003d createTodo(inputs);","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"            newTask \u003d createDeadline(inputs);","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"        case \"event\":","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"            newTask \u003d createEvent(inputs);","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Invalid add command found.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"        // Common functionality: add task to list, print task and list size","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"        newTasks.add(newTask);","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"        TaskList newTaskList \u003d new TaskList(newTasks);","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showAddTaskMessage(newTasks.size(), newTask);","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"        return new Pair\u003c\u003e(newTaskList, message);","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"     * Creates a todo task and returns it.","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"     * @param inputs A variable amount of strings representing the user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"     * @return A new todo task with a task name.","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"    private Todo createTodo(String... inputs) {","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"        String taskName \u003d Parser.parseTaskNameFromInput(inputs, 1, inputs.length);","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"        return new Todo(taskName);","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"     * Creates a deadline task and returns it.","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"     * @param inputs A variable amount of strings representing the user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"     * @return A new deadline task with a task name, date and time.","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If the input is in an invalid format.","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"    private Deadline createDeadline(String... inputs) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"        // Placeholder variable","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"        int byIndex \u003d -1;","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"        // Locate the /by keyword in the inputs","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"            if (inputs[i].equals(\"/by\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"                byIndex \u003d i;","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"        boolean hasByKeyword \u003d (byIndex !\u003d -1);","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"        /* Inputs should contain 2 more input strings, representing date and time.","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"           byIndex is used as the \u0027pivot\u0027 as task name consists of a variable/non-fixed","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"           number of input strings. */","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"        boolean hasValidLength \u003d (inputs.length \u003d\u003d byIndex + DEADLINE_EXTRA_LENGTH);","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"        if (!hasValidLength || !hasByKeyword) {","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Command must be in the format: deadline [taskName] /by \"","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"                    + \"[date(YYYY-MM-DD)] [time(HH:MM)].\");","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"        String taskName \u003d Parser.parseTaskNameFromInput(inputs, 1, byIndex);","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"        LocalDate date \u003d Parser.parseDateFromInput(inputs[byIndex + 1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"        LocalTime time \u003d Parser.parseTimeFromInput(inputs[byIndex + 2]);","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"        return new Deadline(taskName, date, time);","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"     * Creates an event task and returns it.","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"     * @param inputs A variable amount of strings representing the user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"     * @return A new event task with a task name, date, start time and end time.","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If the input is in an invalid format.","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"danielsimre"},"content":"    private Event createEvent(String... inputs) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"danielsimre"},"content":"        // Placeholder variable","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"danielsimre"},"content":"        int atIndex \u003d -1;","lastModifiedDate":"2021-09-03"},{"lineNumber":162,"author":{"gitId":"danielsimre"},"content":"        // Locate the /at keyword in the inputs","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"danielsimre"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"danielsimre"},"content":"            if (inputs[i].equals(\"/at\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":165,"author":{"gitId":"danielsimre"},"content":"                atIndex \u003d i;","lastModifiedDate":"2021-09-03"},{"lineNumber":166,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":167,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":168,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":169,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"danielsimre"},"content":"        boolean hasAtKeyword \u003d (atIndex !\u003d -1);","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"danielsimre"},"content":"        /* Inputs should contain 3 more input strings, representing date, start time","lastModifiedDate":"2021-09-07"},{"lineNumber":172,"author":{"gitId":"danielsimre"},"content":"           and end time. atIndex is used as the \u0027pivot\u0027 as task name consists of a","lastModifiedDate":"2021-09-07"},{"lineNumber":173,"author":{"gitId":"danielsimre"},"content":"           variable/non-fixed number of input strings. */","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"danielsimre"},"content":"        boolean hasValidLength \u003d (inputs.length \u003d\u003d atIndex + EVENT_EXTRA_LENGTH);","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"danielsimre"},"content":"        if (!hasValidLength || !hasAtKeyword) {","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Command must be in the format: event [taskName] /at \"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"danielsimre"},"content":"                    + \"[date(YYYY-MM-DD)] [start time(HH:MM)] [end time(HH:MM)].\");","lastModifiedDate":"2021-09-03"},{"lineNumber":179,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"danielsimre"},"content":"        String taskName \u003d Parser.parseTaskNameFromInput(inputs, 1, atIndex);","lastModifiedDate":"2021-09-07"},{"lineNumber":181,"author":{"gitId":"danielsimre"},"content":"        LocalDate date \u003d Parser.parseDateFromInput(inputs[atIndex + 1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"danielsimre"},"content":"        LocalTime startTime \u003d Parser.parseTimeFromInput(inputs[atIndex + 2]);","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"danielsimre"},"content":"        LocalTime endTime \u003d Parser.parseTimeFromInput(inputs[atIndex + 3]);","lastModifiedDate":"2021-09-07"},{"lineNumber":184,"author":{"gitId":"danielsimre"},"content":"        return new Event(taskName, date, startTime, endTime);","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"danielsimre"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"danielsimre"},"content":"     * The index of the deleted task depends on the input.","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"danielsimre"},"content":"     * @param ui    Object that handles printing/formatting of messages.","lastModifiedDate":"2021-09-10"},{"lineNumber":192,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":193,"author":{"gitId":"danielsimre"},"content":"     * @return A pair containing a TaskList instance with the selected task removed,","lastModifiedDate":"2021-09-16"},{"lineNumber":194,"author":{"gitId":"danielsimre"},"content":"     * and a string representing an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":195,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format, or specified index is out of bounds.","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"danielsimre"},"content":"    public Pair\u003cTaskList, String\u003e deleteTask(Ui ui, String input) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"danielsimre"},"content":"        int taskIndex \u003d verifyDeleteCommandInput(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"danielsimre"},"content":"        Task removedTask \u003d newTasks.remove(taskIndex);","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"danielsimre"},"content":"        TaskList newTaskList \u003d new TaskList(newTasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showDeleteTaskMessage(newTasks.size(), removedTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"danielsimre"},"content":"        return new Pair\u003c\u003e(newTaskList, message);","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"danielsimre"},"content":"     * Verifies that the input for the delete command is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"danielsimre"},"content":"     * @return An integer representing the task index to be deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format, or specified index is out of bounds.","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":213,"author":{"gitId":"danielsimre"},"content":"    private int verifyDeleteCommandInput(String input) throws EnergyException {","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":215,"author":{"gitId":"danielsimre"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"You have no tasks to delete.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"danielsimre"},"content":"        if (splitInputs.length !\u003d DELETE_COMMAND_LENGTH) {","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Input should be of the format: delete [taskNumber].\");","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"danielsimre"},"content":"        String taskNumberString \u003d splitInputs[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":224,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":225,"author":{"gitId":"danielsimre"},"content":"        boolean isNumber \u003d taskNumberString.matches(\"\\\\d+\");","lastModifiedDate":"2021-09-07"},{"lineNumber":226,"author":{"gitId":"danielsimre"},"content":"        if (!isNumber) {","lastModifiedDate":"2021-09-07"},{"lineNumber":227,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Please type in a valid task number to delete.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":230,"author":{"gitId":"danielsimre"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":231,"author":{"gitId":"danielsimre"},"content":"        boolean isWithinBounds \u003d (taskIndex \u003c tasks.size() \u0026\u0026 taskIndex \u003e\u003d 0);","lastModifiedDate":"2021-09-07"},{"lineNumber":232,"author":{"gitId":"danielsimre"},"content":"        if (!isWithinBounds) {","lastModifiedDate":"2021-09-07"},{"lineNumber":233,"author":{"gitId":"danielsimre"},"content":"            String outOfBoundsErrorString \u003d","lastModifiedDate":"2021-09-07"},{"lineNumber":234,"author":{"gitId":"danielsimre"},"content":"                    String.format(\"Please type in a valid task number. (From %d to %d inclusive)\",","lastModifiedDate":"2021-09-07"},{"lineNumber":235,"author":{"gitId":"danielsimre"},"content":"                            1, tasks.size());","lastModifiedDate":"2021-09-07"},{"lineNumber":236,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(outOfBoundsErrorString);","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":238,"author":{"gitId":"danielsimre"},"content":"        return taskIndex;","lastModifiedDate":"2021-09-18"},{"lineNumber":239,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":240,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":241,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"danielsimre"},"content":"     * Marks a task as done on in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"danielsimre"},"content":"     * The index of the marked task depends on the input.","lastModifiedDate":"2021-09-18"},{"lineNumber":244,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"danielsimre"},"content":"     * @param ui    Object that handles user interface functionality. (e.g. printing)","lastModifiedDate":"2021-08-26"},{"lineNumber":246,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":247,"author":{"gitId":"danielsimre"},"content":"     * @return A pair containing a TaskList instance with the selected task marked as done,","lastModifiedDate":"2021-09-16"},{"lineNumber":248,"author":{"gitId":"danielsimre"},"content":"     * and a string representing an output message.","lastModifiedDate":"2021-09-16"},{"lineNumber":249,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format, or specified index is out of bounds.","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":251,"author":{"gitId":"danielsimre"},"content":"    public Pair\u003cTaskList, String\u003e markTask(Ui ui, String input) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":253,"author":{"gitId":"danielsimre"},"content":"        int taskIndex \u003d verifyDoneCommandInput(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":254,"author":{"gitId":"danielsimre"},"content":"        Task doneTask \u003d newTasks.get(taskIndex).markAsDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":255,"author":{"gitId":"danielsimre"},"content":"        newTasks.set(taskIndex, doneTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":256,"author":{"gitId":"danielsimre"},"content":"        TaskList newTaskList \u003d new TaskList(newTasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":257,"author":{"gitId":"danielsimre"},"content":"        String message \u003d ui.showDoneTaskMessage(doneTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":258,"author":{"gitId":"danielsimre"},"content":"        return new Pair\u003c\u003e(newTaskList, message);","lastModifiedDate":"2021-09-18"},{"lineNumber":259,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":260,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":261,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":262,"author":{"gitId":"danielsimre"},"content":"     * Verifies that the input for the done command is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":263,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":264,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":265,"author":{"gitId":"danielsimre"},"content":"     * @return An integer representing the task index to be marked as done.","lastModifiedDate":"2021-09-18"},{"lineNumber":266,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format, or specified index is out of bounds.","lastModifiedDate":"2021-09-18"},{"lineNumber":267,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":268,"author":{"gitId":"danielsimre"},"content":"    private int verifyDoneCommandInput(String input) throws EnergyException {","lastModifiedDate":"2021-09-18"},{"lineNumber":269,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":270,"author":{"gitId":"danielsimre"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":271,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"You have no tasks to mark as done.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":272,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":273,"author":{"gitId":"danielsimre"},"content":"        if (splitInputs.length !\u003d DONE_COMMAND_LENGTH) {","lastModifiedDate":"2021-09-18"},{"lineNumber":274,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Input should be of the format: done [taskNumber]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":275,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":276,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":277,"author":{"gitId":"danielsimre"},"content":"        String taskNumberString \u003d splitInputs[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":278,"author":{"gitId":"danielsimre"},"content":"        boolean isNumber \u003d taskNumberString.matches(\"\\\\d+\");","lastModifiedDate":"2021-09-07"},{"lineNumber":279,"author":{"gitId":"danielsimre"},"content":"        if (!isNumber) {","lastModifiedDate":"2021-09-07"},{"lineNumber":280,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Please type in a valid task number to mark as done.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":281,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":283,"author":{"gitId":"danielsimre"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":284,"author":{"gitId":"danielsimre"},"content":"        boolean isWithinBounds \u003d (taskIndex \u003c tasks.size() \u0026\u0026 taskIndex \u003e\u003d 0);","lastModifiedDate":"2021-09-07"},{"lineNumber":285,"author":{"gitId":"danielsimre"},"content":"        if (!isWithinBounds) {","lastModifiedDate":"2021-09-07"},{"lineNumber":286,"author":{"gitId":"danielsimre"},"content":"            String outOfBoundsErrorString \u003d","lastModifiedDate":"2021-09-07"},{"lineNumber":287,"author":{"gitId":"danielsimre"},"content":"                    String.format(\"Please type in a valid task number. (From %d to %d inclusive)\",","lastModifiedDate":"2021-09-07"},{"lineNumber":288,"author":{"gitId":"danielsimre"},"content":"                            1, tasks.size());","lastModifiedDate":"2021-09-07"},{"lineNumber":289,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(outOfBoundsErrorString);","lastModifiedDate":"2021-09-17"},{"lineNumber":290,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":291,"author":{"gitId":"danielsimre"},"content":"        return taskIndex;","lastModifiedDate":"2021-09-18"},{"lineNumber":292,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":293,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":294,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":295,"author":{"gitId":"danielsimre"},"content":"     * Gets all tasks containing a certain keyphrase, depending on the user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":296,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":297,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":298,"author":{"gitId":"danielsimre"},"content":"     * @return A new TaskList instance containing all tasks that contain the input phrase.","lastModifiedDate":"2021-08-26"},{"lineNumber":299,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format.","lastModifiedDate":"2021-09-17"},{"lineNumber":300,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":301,"author":{"gitId":"danielsimre"},"content":"    public TaskList findTasks(String input) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":302,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":303,"author":{"gitId":"danielsimre"},"content":"        if (splitInputs.length \u003c FIND_COMMAND_LENGTH) {","lastModifiedDate":"2021-09-18"},{"lineNumber":304,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Input should be of the format: find [keyphrase]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":305,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":306,"author":{"gitId":"danielsimre"},"content":"        int keyphraseIndex \u003d splitInputs[0].length();","lastModifiedDate":"2021-09-10"},{"lineNumber":307,"author":{"gitId":"danielsimre"},"content":"        String keyphrase \u003d input.substring(keyphraseIndex);","lastModifiedDate":"2021-09-10"},{"lineNumber":308,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e foundTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-26"},{"lineNumber":309,"author":{"gitId":"danielsimre"},"content":"                .filter(task -\u003e task.containsPhrase(keyphrase))","lastModifiedDate":"2021-08-26"},{"lineNumber":310,"author":{"gitId":"danielsimre"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-26"},{"lineNumber":311,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(foundTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":312,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":313,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":314,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":315,"author":{"gitId":"danielsimre"},"content":"     * Gets all tasks due in x hours/days/months from now, depending on the user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":316,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":317,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":318,"author":{"gitId":"danielsimre"},"content":"     * @return A new TaskList instance containing all tasks due within the inputted period.","lastModifiedDate":"2021-08-26"},{"lineNumber":319,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format.","lastModifiedDate":"2021-09-17"},{"lineNumber":320,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":321,"author":{"gitId":"danielsimre"},"content":"    public TaskList getDueTasks(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":322,"author":{"gitId":"danielsimre"},"content":"        String dueRange \u003d verifyDueCommandInput(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":323,"author":{"gitId":"danielsimre"},"content":"        // Gets the number of hours/days/months from the input range","lastModifiedDate":"2021-09-17"},{"lineNumber":324,"author":{"gitId":"danielsimre"},"content":"        String offset \u003d dueRange.substring(0, dueRange.length() - 1);","lastModifiedDate":"2021-09-17"},{"lineNumber":325,"author":{"gitId":"danielsimre"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-26"},{"lineNumber":326,"author":{"gitId":"danielsimre"},"content":"        switch (input.charAt(input.length() - 1)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":327,"author":{"gitId":"danielsimre"},"content":"        case (\u0027h\u0027):","lastModifiedDate":"2021-08-26"},{"lineNumber":328,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusHours(Integer.parseInt(offset));","lastModifiedDate":"2021-08-26"},{"lineNumber":329,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":330,"author":{"gitId":"danielsimre"},"content":"        case (\u0027d\u0027):","lastModifiedDate":"2021-08-26"},{"lineNumber":331,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusDays(Integer.parseInt(offset));","lastModifiedDate":"2021-08-26"},{"lineNumber":332,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":333,"author":{"gitId":"danielsimre"},"content":"        case (\u0027m\u0027):","lastModifiedDate":"2021-08-26"},{"lineNumber":334,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusMonths(Integer.parseInt(offset));","lastModifiedDate":"2021-08-26"},{"lineNumber":335,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":336,"author":{"gitId":"danielsimre"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":337,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Command must be of the form: due [integer][h/d/m] \"","lastModifiedDate":"2021-09-17"},{"lineNumber":338,"author":{"gitId":"danielsimre"},"content":"                    + \"(h \u003d hours, d \u003d days, m \u003d months)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":339,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":340,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":341,"author":{"gitId":"danielsimre"},"content":"        // Copy dateTime to an effectively final variable for use in lambda","lastModifiedDate":"2021-08-26"},{"lineNumber":342,"author":{"gitId":"danielsimre"},"content":"        LocalDateTime finalDateTime \u003d dateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":343,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e beforeDateTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-26"},{"lineNumber":344,"author":{"gitId":"danielsimre"},"content":"                .filter(task -\u003e task.isBeforeDate(finalDateTime))","lastModifiedDate":"2021-08-26"},{"lineNumber":345,"author":{"gitId":"danielsimre"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-26"},{"lineNumber":346,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(beforeDateTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":347,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":348,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":349,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":350,"author":{"gitId":"danielsimre"},"content":"     * Verifies that the input for the due command is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":351,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":352,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":353,"author":{"gitId":"danielsimre"},"content":"     * @return A string that represents the input due range.","lastModifiedDate":"2021-09-18"},{"lineNumber":354,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format.","lastModifiedDate":"2021-09-18"},{"lineNumber":355,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":356,"author":{"gitId":"danielsimre"},"content":"    private String verifyDueCommandInput(String input) throws EnergyException {","lastModifiedDate":"2021-09-18"},{"lineNumber":357,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-18"},{"lineNumber":358,"author":{"gitId":"danielsimre"},"content":"        if (splitInputs.length !\u003d DUE_COMMAND_LENGTH) {","lastModifiedDate":"2021-09-18"},{"lineNumber":359,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Command must be of the form: due [integer][h/d/m] \"","lastModifiedDate":"2021-09-18"},{"lineNumber":360,"author":{"gitId":"danielsimre"},"content":"                    + \"(h \u003d hours, d \u003d days, m \u003d months)\");","lastModifiedDate":"2021-09-18"},{"lineNumber":361,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":362,"author":{"gitId":"danielsimre"},"content":"        String dueRange \u003d splitInputs[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":363,"author":{"gitId":"danielsimre"},"content":"        boolean isValidInput \u003d dueRange.matches(\"[0-9]+[hdm]\");","lastModifiedDate":"2021-09-18"},{"lineNumber":364,"author":{"gitId":"danielsimre"},"content":"        if (!isValidInput) {","lastModifiedDate":"2021-09-18"},{"lineNumber":365,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Command must be of the form: due [integer][h/d/m] \"","lastModifiedDate":"2021-09-18"},{"lineNumber":366,"author":{"gitId":"danielsimre"},"content":"                    + \"(h \u003d hours, d \u003d days, m \u003d months)\");","lastModifiedDate":"2021-09-18"},{"lineNumber":367,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":368,"author":{"gitId":"danielsimre"},"content":"        return dueRange;","lastModifiedDate":"2021-09-18"},{"lineNumber":369,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":370,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":371,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":372,"author":{"gitId":"danielsimre"},"content":"     * Gets all tasks occurring on a given date, depending on the user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":373,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":374,"author":{"gitId":"danielsimre"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":375,"author":{"gitId":"danielsimre"},"content":"     * @return A new TaskList instance containing all tasks occurring on the input date.","lastModifiedDate":"2021-08-26"},{"lineNumber":376,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If input is in an invalid format, or an invalid date is given.","lastModifiedDate":"2021-09-17"},{"lineNumber":377,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":378,"author":{"gitId":"danielsimre"},"content":"    public TaskList getOnDateTasks(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":379,"author":{"gitId":"danielsimre"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":380,"author":{"gitId":"danielsimre"},"content":"        if (splitInputs.length !\u003d ONDATE_COMMAND_LENGTH) {","lastModifiedDate":"2021-09-18"},{"lineNumber":381,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":382,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":383,"author":{"gitId":"danielsimre"},"content":"        String dateString \u003d splitInputs[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":384,"author":{"gitId":"danielsimre"},"content":"        LocalDate date \u003d Parser.parseDateFromInput(dateString);","lastModifiedDate":"2021-08-26"},{"lineNumber":385,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e onDateTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-26"},{"lineNumber":386,"author":{"gitId":"danielsimre"},"content":"                .filter(task -\u003e task.hasSameDate(date))","lastModifiedDate":"2021-08-26"},{"lineNumber":387,"author":{"gitId":"danielsimre"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-26"},{"lineNumber":388,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(onDateTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":389,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":390,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":391,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":392,"author":{"gitId":"danielsimre"},"content":"     * Converts the TaskList data into a string format.","lastModifiedDate":"2021-08-26"},{"lineNumber":393,"author":{"gitId":"danielsimre"},"content":"     * The tasks are listed in a numerical order. (1, 2, 3...)","lastModifiedDate":"2021-08-26"},{"lineNumber":394,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":395,"author":{"gitId":"danielsimre"},"content":"     * @return A string representation of the TaskList instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":396,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":397,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":398,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":399,"author":{"gitId":"danielsimre"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":400,"author":{"gitId":"danielsimre"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":401,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":402,"author":{"gitId":"danielsimre"},"content":"        StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":403,"author":{"gitId":"danielsimre"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":404,"author":{"gitId":"danielsimre"},"content":"            listString.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-09-03"},{"lineNumber":405,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":406,"author":{"gitId":"danielsimre"},"content":"        return listString.toString().trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":407,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":408,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":408}},{"path":"src/main/java/energy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":" * A class that represents a task that is to be done by a certain date and time.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     * Creates a deadline task with a task name, date and time.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * @param taskName Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     * @param date     Date for the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     * @param time     Time for the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public Deadline(String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * Creates a deadline task with a task name, date, time, and whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     * @param taskName Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     * @param isDone   Boolean that represents whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * @param date     Date for the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     * @param time     Time for the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public Deadline(String taskName, boolean isDone,","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"                    LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"     * Checks if the current task has the same date as the input date.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     * @param date A LocalDate object that contains date information.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * @return True if the input date and the task\u0027s dates are equal, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"        return this.date.equals(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"     * Checks if the current task occurs before the input date and time.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"     * @param dateTime A LocalDateTime object that contains date and time information.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"     * @return True if the task occurs before the input date, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"        // Will also return true if the date times are equal","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"        return !date.atTime(time).isAfter(dateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"     * Converts the deadline task data into its corresponding save file data format.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"     * @return A string to represent the data of the deadline task in the save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"        return \"D|\" + super.toSaveData() + \"|\" + date + \"|\" + time;","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"     * Marks the current task as done. Returns a new instance of the task to maintain immutability.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"     * @return A task with the same task name, date and time but is marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"        return new Deadline(taskName, true, date, time);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"     * Returns a string representation of the current deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"     * @return A string that contains the information of the deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"        String formattedTime \u003d time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \", \" + formattedTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":97}},{"path":"src/main/java/energy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.util.EnergyException;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":" * A class that represents a task that occurs on a certain date, from a start to end time.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     * Creates an event task with a task name, date, start time and end time.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     * @param taskName  Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"     * @param date      Date for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"     * @param startTime Start time for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"     * @param endTime   End time for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If start time is later or equal to the end time.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    public Event(String taskName, LocalDate date,","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"                 LocalTime startTime, LocalTime endTime) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        // If start time is greater than or equal to end time, throw exception","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        if (startTime.compareTo(endTime) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Start time of event cannot be later or equal to end time.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"     * Creates an event task with a task name, date, start time, end time,","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"     * and whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"     * @param taskName  Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"     * @param isDone    Boolean that represents whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"     * @param date      Date for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     * @param startTime Start time for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * @param endTime   End time for the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If start time is later or equal to the end time.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    public Event(String taskName, boolean isDone, LocalDate date,","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"                 LocalTime startTime, LocalTime endTime) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"        // If start time is greater than or equal to end time, throw exception","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        if (startTime.compareTo(endTime) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Start time of event cannot be later or equal to end time.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"     * Checks if the current task has the same date as the input date.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"     * @param date A LocalDate object that contains date information.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"     * @return True if the input date and the task\u0027s dates are equal, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"        return this.date.equals(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"     * Checks if the current task occurs before the input date and time.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"     * @param dateTime A LocalDateTime object that contains date and time information.","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"     * @return True if the task occurs before the input date, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"        // Will also return true if the date times are equal","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"        return !date.atTime(startTime).isAfter(dateTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"     * Converts the event task data into its corresponding save file data format.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"     * @return A string to represent the data of the event task in the save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"        return \"E|\" + super.toSaveData() + \"|\" + date","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"                + \"|\" + startTime + \"|\" + endTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"     * Marks the current task as done. Returns a new instance of the task to maintain immutability.","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"     * @return A task with the same task name, date and times but is marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"        return new Event(taskName, true, date, startTime, endTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"     * Returns a string representation of the current event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"     * @return A string that contains the information of the event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"        String formattedStartTime \u003d startTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"        String formattedEndTime \u003d endTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \", \"","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"                + formattedStartTime + \" - \" + formattedEndTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":119}},{"path":"src/main/java/energy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":" * A class that contains the base functionality for a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    protected final String taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"     * Creates a task with a task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"     * @param taskName Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"     * Creates a task with a task name and whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     * @param taskName Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     * @param isDone   Boolean that represents whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     * Checks if the current task contains a given key phrase within its name.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"     * @param phrase A string that is to be check against the task name.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"     * @return True if the task name contains this phrase, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    public boolean containsPhrase(String phrase) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        String capsInsensitiveTaskName \u003d taskName.toLowerCase().trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        return capsInsensitiveTaskName.contains(phrase.toLowerCase().trim());","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     * Checks if the current task has the same date as the input date.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * Proper functionality is present in the Deadline and Event classes.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"     * @param date A LocalDate object that contains date information.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"     * @return False, since this class does not contain a date attribute.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"     * Checks if the current task occurs before the input date and time.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"     * Proper functionality is present in the Deadline and Event classes.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"     * @param dateTime A LocalDateTime object that contains date and time information.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"     * @return False, since this class does not contain date/time attributes.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"     * Marks the current task as done. Returns a new instance of the task to maintain immutability.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"     * @return A task with the same task name, but is marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"        return new Task(taskName, true);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"     * Converts the task data into its corresponding save file data format.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"     * @return A string to represent the data of the task in the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"        return isDone + \"|\" + taskName;","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"     * Returns a string representation of the current task.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"     * @return A string that contains the information of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"        String statusString \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"        return String.format(\"[%s] %s\", statusString, taskName);","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":95}},{"path":"src/main/java/energy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":" * A class that represents a task that is to be done, without a fixed date.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"     * Creates a todo task with a task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"     * @param taskName Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * Creates a todo task with a task name and whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"     * @param taskName Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"     * @param isDone   Boolean that represents whether or not the task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     * Marks the current todo task as done. Returns a new instance of the task to maintain immutability.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     * @return A task with the same task name but is marked as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        return new Todo(taskName, true);","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"     * Converts the todo task data into its corresponding save file data format.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"     * @return A string to represent the data of the todo task in the save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        return \"T|\" + super.toSaveData();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     * Returns a string representation of the current todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"     * @return A string that contains the information of the todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":56}},{"path":"src/main/java/energy/util/EnergyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.util;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":" * A class that represents exceptions related to the running of Energy.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"public class EnergyException extends RuntimeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"     * Creates a new EnergyException with a custom message.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"     * @param errorMessage A string representing an error message.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"    public EnergyException(String errorMessage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":15}},{"path":"src/main/java/energy/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.util;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import energy.command.AddAliasCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import energy.command.AddTaskCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import energy.command.ByeCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import energy.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import energy.command.DeleteAliasCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import energy.command.DeleteTaskCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import energy.command.DoneCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import energy.command.DueCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import energy.command.FindCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import energy.command.ListAliasCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"import energy.command.ListCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"import energy.command.OnDateCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import energy.result.AliasHandler;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":" * A class that handles all parsing related functionality, parsing dates, times,","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":" * and commands from user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    private static AliasHandler aliasHandler \u003d new AliasHandler();","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * Assigns an AliasHandler object that contains a list of aliases to Parser.","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"     * @param aliasHandler An AliasHandler object containing a list of aliases.","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    public static void setAliasHandler(AliasHandler aliasHandler) {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        Parser.aliasHandler \u003d aliasHandler;","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"     * Gets an AliasHandler object assigned to Parser that contains a list of aliases.","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"     * @return An AliasHandler object containing a list of aliases.","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    public static AliasHandler getAliasHandler() {","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        return aliasHandler;","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * Converts a string representing a date into a LocalDate object.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"     * @param dateString Date string that is to be converted to a LocalDate.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"     * @return LocalDate converted from the input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If an invalid format or invalid date is given.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"    public static LocalDate parseDateFromInput(String dateString) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"     * Converts a string representing a time into a LocalTime object.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"     * @param timeString Time string that is to be converted to a LocalTime.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"     * @return LocalTime converted from the input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If an invalid format or invalid time is given.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"    public static LocalTime parseTimeFromInput(String timeString) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"            return LocalTime.parse(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"Time must be of the form HH:MM. (HH from 00-23, MM from 00-59)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"     * Parses the user\u0027s input to determine what command is being called.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"     * Command are not case sensitive. (e.g. bye is treated the same as BYE)","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"     * @param input Input that contains the user\u0027s command.","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"     * @return Command object that can be used to execute the related function.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If an invalid command is given.","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"    public static Command parseCommandFromInput(String input) throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"        String inputString \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"        String commandString \u003d aliasHandler.convertAlias(inputString);","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"        // Note: any changes made to this switch-case should also be made","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"        // to the switch-case in AliasHandler method isCommandKeyword","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"        switch (commandString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"        case \"addalias\":","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"            return new AddAliasCommand(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"        case \"list\":","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"        case \"listalias\":","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"            return new ListAliasCommand();","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"        case \"done\":","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"        case \"event\":","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"            return new AddTaskCommand(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"            return new DeleteTaskCommand(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"        case \"deletealias\":","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"            return new DeleteAliasCommand(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"        case \"ondate\":","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"            return new OnDateCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"        case \"due\":","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"            return new DueCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"        case \"find\":","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"            return new FindCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(\"You have entered an invalid command.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"     * Splits a string into a string array depending on a regular expression.","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"     * @param input        Input that contains the user\u0027s command.","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"     * @param startIndex   Location to start splitting from.","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"     * @param regex        Regular expression that is used to split the string into pieces.","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"     * @param errorMessage Error message to be displayed if the input is invalid.","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"     * @return Command object that can be used to execute the related function.","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException If startIndex \u003e length of input, or input does not contain the regex.","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"    public static String[] splitWith(String input, int startIndex, String regex, String errorMessage)","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"            throws EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"        if (startIndex \u003e\u003d input.length() || !input.contains(regex)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"            throw new EnergyException(errorMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"        return input.substring(startIndex).split(regex);","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"     * Combines a task name that has been split back into its original form.","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"     * @param inputs     Input that contains the user\u0027s command.","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"     * @param startIndex The index at which the task name input starts.","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"     * @param endIndex The index after the last word of the task name.","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"     * @return A String containing the task name.","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"    public static String parseTaskNameFromInput(String[] inputs, int startIndex, int endIndex) {","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"            taskName.append(inputs[i])","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"                    .append(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"        return taskName.toString().trim();","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":153}},{"path":"src/main/java/energy/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.util;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import energy.result.AliasHandler;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"import energy.result.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"import energy.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import energy.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"import energy.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"import energy.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":" * A class that handles all file related functionality, such as loading from","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":" * and saving to a save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    private final Path saveFilePath;","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    private final Path configFilePath;","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"     * Creates an instance of the Storage class.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"     * @param saveFilePath File path for the save file.","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    public Storage(Path saveFilePath, Path configFilePath) {","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        this.saveFilePath \u003d saveFilePath;","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        this.configFilePath \u003d configFilePath;","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"     * Loads tasks from the specified file path.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"     * @return The TaskList object containing a list of tasks loaded from the save file.","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"     * @throws FileNotFoundException If the file does not exist.","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException         If the file contains invalid task data.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    public TaskList loadTasksFromFile() throws FileNotFoundException, EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"        File saveFile \u003d saveFilePath.toFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"        Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"            String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"            String[] taskData \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"            String taskType \u003d taskData[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"            String taskName \u003d taskData[2];","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"            boolean isDone \u003d Boolean.parseBoolean(taskData[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"            case (\"T\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Todo(taskName, isDone));","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"            case (\"D\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"                LocalDate date \u003d Parser.parseDateFromInput(taskData[3]);","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"                LocalTime time \u003d Parser.parseTimeFromInput(taskData[4]);","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Deadline(taskName, isDone, date, time));","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"            case (\"E\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"                date \u003d Parser.parseDateFromInput(taskData[3]);","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"                LocalTime startTime \u003d Parser.parseTimeFromInput(taskData[4]);","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"                LocalTime endTime \u003d Parser.parseTimeFromInput(taskData[5]);","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Event(taskName, isDone, date, startTime, endTime));","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"                throw new EnergyException(\"Save file contains invalid task data (Invalid task type).\");","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"     * Saves tasks to the file path given at instantiation.","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If the saving process fails.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"    public void saveTasksToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"        // Create directories if they do not exist, so that the file can be created without error","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"        Files.createDirectories(saveFilePath.getParent());","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"        FileWriter fw \u003d new FileWriter(saveFilePath.toAbsolutePath().toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"        // Convert all tasks in the task list into save data format","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"        StringBuilder saveData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"        taskList.forEach((task) -\u003e saveData.append(task.toSaveData())","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"                .append(System.lineSeparator())); // Each task will be on its own line","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"        fw.write(saveData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"        fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"     * Loads aliases from the specified file path.","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"     * @return The AliasHandler object containing a list aliases loaded from the config file.","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"     * @throws FileNotFoundException If the file does not exist.","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"     * @throws EnergyException         If the file contains invalid alias data.","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"    public AliasHandler loadAliasesFromFile() throws FileNotFoundException, EnergyException {","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"        File configFile \u003d configFilePath.toFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"        Scanner scanner \u003d new Scanner(configFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"        HashMap\u003cString, String\u003e aliasHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"            String aliasLine \u003d scanner.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"            String[] aliasData \u003d aliasLine.split(\"\\\\|\");","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"            String alias \u003d aliasData[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"            String command \u003d aliasData[1].toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"            aliasHashMap.put(alias, command);","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"        return new AliasHandler(aliasHashMap);","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"     * Saves aliases to the file path given at instantiation.","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"     * @param aliasHandler An object containing the aliases to be saved.","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"     * @throws IOException If the saving process fails.","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"    public void saveAliasesToFile(AliasHandler aliasHandler) throws IOException {","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"        // Create directories if they do not exist, so that the file can be created without error","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"        Files.createDirectories(configFilePath.getParent());","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"        FileWriter fw \u003d new FileWriter(configFilePath.toAbsolutePath().toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"        // Convert all aliases into save data format","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"        String aliasData \u003d aliasHandler.toConfigData();","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"        fw.write(aliasData);","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"        fw.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":139}},{"path":"src/main/java/energy/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy.util;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import energy.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":" * A class that handles the formatting and printing of messages in response to user inputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    private static final String FORMAT \u003d \"%s\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"     * Creates an instance of the Ui class.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"     * Displays the greeting message.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    public String showIntroduction() {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"        return String.format(FORMAT, \"Hello there, I\u0027m Energy!\")","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"What can I do for you today?\");","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"     * Displays a formatted message.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"     * @param message String that is to be formatted and printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted string.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    public String showMessage(String message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"        return String.format(FORMAT, message);","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"     * Displays a formatted message which remarks that a task has been added.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"     * @param taskListSize The size of the TaskList object containing the new task.","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"     * @param newTask The new task that has been added.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted string.","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    public String showAddTaskMessage(int taskListSize, Task newTask) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        String numOfTasksString \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"                taskListSize, taskListSize \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"        return showMessage(\"Got it. The following task has been added: \")","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"                + showMessage(newTask.toString())","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"                + showMessage(numOfTasksString);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"     * Displays a formatted message which remarks that a task has been deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"     * @param taskListSize The size of the TaskList object containing the new task.","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"     * @param removedTask The task that has been deleted.","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted string.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"    public String showDeleteTaskMessage(int taskListSize, Task removedTask) {","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"        String numOfTasksString \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"                taskListSize, taskListSize \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"        return showMessage(\"Got it. The following task has been removed:\")","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"                + showMessage(removedTask.toString())","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"                + showMessage(numOfTasksString);","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"     * Displays a formatted message which remarks that a task has been marked as done.","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"     * @param doneTask The task that has been marked as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted string.","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"    public String showDoneTaskMessage(Task doneTask) {","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"        return showMessage(\"Good work! This task is now marked as done:\")","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"                + showMessage(doneTask.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"     * Displays a formatted message which remarks that an alias has been added.","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"     * @param alias The alias being added.","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"     * @param command The command that corresponds to the alias being added.","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted string.","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"    public String showAddAliasMessage(String alias, String command) {","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"        String outputString \u003d String.format(\"Got it. Alias %s now corresponds to command %s.\",","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"                alias, command);","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"        return showMessage(outputString);","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"     * Displays a formatted message which remarks that an alias has been deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"     * @param alias The alias being deleted.","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"     * @param command The command that corresponds to the alias being deleted.","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted string.","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"    public String showDeleteAliasMessage(String alias, String command) {","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"        String outputString \u003d String.format(\"Got it. Alias %s no longer corresponds to command %s.\",","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"                alias, command);","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"        return showMessage(outputString);","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"     * Returns a formatted error string.","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"     * @param errorMessage Error string that is to be formatted and printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted error string.","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"        return String.format(\"Uh-oh! %s\\n\", errorMessage);","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"     * Returns a formatted error string which remarks that the save file does not exist.","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted error string.","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"    public String showSaveFileNotFoundError() {","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"        return String.format(FORMAT, \"This appears to be your first time using Energy.\")","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"A save file will be created to save your tasks.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"     * Returns a formatted error string which remarks that the config file does not exist.","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted error string.","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"    public String showConfigFileNotFoundError() {","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"        return String.format(FORMAT, \"A config file will be created to save your settings.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"     * Returns a formatted error string which remarks that the save file contains incorrectly","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"     * formatted data.","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted error string.","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"    public String showSaveFileLoadingError(String errorMessage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"        return showError(errorMessage)","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"This appears to be an error with your save file.\")","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"Either edit data/tasks.txt to rectify the error, or delete it.\")","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"For now, you\u0027ll start with an empty task list.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"     * Returns a formatted error string which remarks that the config file contains incorrectly","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"     * formatted data.","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"     * @return A formatted error string.","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"    public String showConfigLoadingError(String errorMessage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"        return showError(errorMessage)","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"This appears to be an error with your config file.\")","lastModifiedDate":"2021-09-10"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"Either edit data/config.txt to rectify the error, or delete it.\")","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"                + String.format(FORMAT, \"For now, you\u0027ll start without any aliases for your commands.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":156}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"368.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"      \u003cAnchorPane maxWidth\u003d\"241.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"              \u003cAnchorPane layoutX\u003d\"-1.0\" layoutY\u003d\"2.0\" style\u003d\"-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 7px; -fx-background-radius: 7px;\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"                  \u003cLabel fx:id\u003d\"dialog\" layoutX\u003d\"1.0\" layoutY\u003d\"2.0\" maxWidth\u003d\"250.0\" style\u003d\"-fx-wrap-text: true;\" text\u003d\"Label\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"              \u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"WHITE\" radius\u003d\"50.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"danielsimre":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Energy\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"energy.controller.MainWindow\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"            \u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"                    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"10.0\" layoutY\u003d\"562.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"304.0\" style\u003d\"-fx-border-color: black; -fx-background-radius: 2px; -fx-border-radius: 2px;\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"                    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"325.0\" layoutY\u003d\"562.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"64.0\" style\u003d\"-fx-background-color: #e5d0f7; -fx-border-color: black; -fx-background-radius: 2px; -fx-border-radius: 2px;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"                    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"                        \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"                            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #b463ff;\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"                        \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"                    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"danielsimre":27}},{"path":"src/test/java/energy/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package energy;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import energy.command.AddTaskCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import energy.command.ByeCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import energy.command.DeleteTaskCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import energy.command.DoneCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import energy.command.DueCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"import energy.command.ListCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"import energy.command.OnDateCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import energy.util.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    public void parseDateFromInput_incorrectFormat_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"            Parser.parseDateFromInput(\"2021-021-10\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    public void parseDateFromInput_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"            Parser.parseDateFromInput(\"2021-26-10\");","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    public void parseDateFromInput_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"            String timeString \u003d \"2021-02-16\";","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"            assertEquals(LocalDate.parse(timeString), Parser.parseDateFromInput(timeString));","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"    public void parseTimeFromInput_incorrectFormat_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"            Parser.parseTimeFromInput(\"0:11\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Time must be of the form HH:MM. (HH from 00-23, MM from 00-59)\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"    public void parseTimeFromInput_invalidTime_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"            Parser.parseTimeFromInput(\"25:11\");","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Time must be of the form HH:MM. (HH from 00-23, MM from 00-59)\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"    public void parseTimeFromInput_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"            String timeString \u003d \"11:11\";","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"            assertEquals(LocalTime.parse(timeString), Parser.parseTimeFromInput(timeString));","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"            Parser.parseCommandFromInput(\"blah blah blah\");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"You have entered an invalid command.\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_byeCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_listCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"list\") instanceof ListCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_doneCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"done\") instanceof DoneCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_todoCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"todo\") instanceof AddTaskCommand);","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_deadlineCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"deadline\") instanceof AddTaskCommand);","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_eventCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"event\") instanceof AddTaskCommand);","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_deleteCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"delete\") instanceof DeleteTaskCommand);","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_onDateCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"ondate\") instanceof OnDateCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_dueCommand_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"due\") instanceof DueCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":172}}]
