[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"public enum Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"    TODO, DEADLINE, EVENT,","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"    DONE, LIST, DELETE, BYE,","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"    ONDATE, DUE","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    public Deadline(String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    public Deadline(String taskName, boolean isDone,","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"                    LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        return this.date.equals(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        // Will also return true if the date times are equal","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        return !this.date.atTime(this.time).isAfter(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        return \"D|\" + super.toSaveData() + \"|\" + this.date + \"|\" + this.time;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \", \" + formattedTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    private static final String FORMAT \u003d \"\\t%s\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    private static final String LINE \u003d \"______________________________________________________\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    private static final Path SAVEFILE_DIR \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"            Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    private static final Path SAVEFILE_PATH \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"            Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        String logo \u003d \"\\t ____        _        \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"                + \"\\t|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"                + \"\\t| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"                + \"\\t| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        System.out.print(logo);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"            tasks \u003d loadTasksFromFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"Welcome back!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"            // If file is not found, greet user with first time welcome message","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"Hello there, I\u0027m Duke!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"            // Other error found, exit","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(\"\\tUh-oh! %s\\n\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"This appears to be an error with your save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"Either edit data/tasks.txt to rectify the error, or delete it.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"            return;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"What can I do for you today?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"                String input \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"                // Convert string command to enum value","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"                Command command \u003d Command.valueOf(input.split(\" \")[0].toUpperCase());","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"                switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"                case BYE:","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"                    // Exit chat bot","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"                    System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"                    System.out.printf(FORMAT, \"Goodbye. Have a nice day!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"                    System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"                    return; // To terminate function","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"                case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"                    runListCommand(tasks);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"                case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"                    runDoneCommand(input, tasks);","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"                case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"                case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"                    runAddTaskCommand(input, command, tasks);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"                case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"                    runDeleteCommand(input, tasks);","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"                case ONDATE:","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"                    runOnDateCommand(input, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"                case DUE:","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"                    runDueCommand(input, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"                default:","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"                    throw new DukeException(\"You have entered an invalid command.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(\"\\tUh-oh! %s\\n\", \"The data failed to save to the save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"                // When invalid command is given, it is unable to be parsed into the enum","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(\"\\tUh-oh! %s\\n\", \"You have entered an invalid command.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(\"\\tUh-oh! %s\\n\", e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"    // Helper function to separate a string into pieces (e.g. input into taskName and dateTime)","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"    private static String[] splitWith(String input, int startIndex, String regex, String errorMessage)","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"        if (startIndex \u003e\u003d input.length() || !input.contains(regex)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"        return input.substring(startIndex).split(regex);","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"    // Helper function to parse a date from an input","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"    private static LocalDate parseDateFromInput(String dateString) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"    // Helper function to parse a time from and input","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"    private static LocalTime parseTimeFromInput(String timeString) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"            return LocalTime.parse(timeString);","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Time must be of the form HH:MM. (HH from 00-23, MM from 00-59)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"    // Abstraction to make main function neater","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"    private static void runDoneCommand(String input, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a task number to mark as done.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"        String taskNumberString \u003d input.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"        if (taskNumberString.matches(\"\\\\d+\")","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 (Integer.parseInt(taskNumberString) - 1 \u003c tasks.size()","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 Integer.parseInt(taskNumberString) - 1 \u003e\u003d 0)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"            Task doneTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"            doneTask.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"Good work! This task is now marked as done:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(\"\\t\\t%s\\n\", doneTask.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"danielsimre"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"danielsimre"},"content":"            // Invalid input (not a number or invalid number)","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a valid task number to mark as done.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"danielsimre"},"content":"    // Abstraction to make main function neater","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"danielsimre"},"content":"    private static void runListCommand(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"danielsimre"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"You do not have any tasks currently.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"Here is your task list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"danielsimre"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(\"\\t%d.%s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"danielsimre"},"content":"    // Abstraction to make main function neater","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"danielsimre"},"content":"    private static void runAddTaskCommand(String input, Command command, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"danielsimre"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Input contains |, which is an invalid character.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"danielsimre"},"content":"        Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"danielsimre"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"danielsimre"},"content":"        case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"danielsimre"},"content":"            // Add Todo task","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"danielsimre"},"content":"            if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"danielsimre"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"danielsimre"},"content":"            task \u003d new Todo(input.substring(5));","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"danielsimre"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"danielsimre"},"content":"            // Add Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"danielsimre"},"content":"            String errorMessage \u003d \"Command must be in the format: [taskName] /by \"","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"danielsimre"},"content":"                    + \"[date(YYYY-MM-DD)] [time(HH:MM)].\";","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"danielsimre"},"content":"            String[] splitInput \u003d splitWith(input, 9, \" /by \", errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"danielsimre"},"content":"            String taskName \u003d splitInput[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"danielsimre"},"content":"            errorMessage \u003d \"Date and time must be in the format: YYYY-MM-DD HH:MM.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"danielsimre"},"content":"            String[] dateTime \u003d splitWith(splitInput[1], 0, \" \", errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"danielsimre"},"content":"            String date \u003d dateTime[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"danielsimre"},"content":"            String time \u003d dateTime[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"danielsimre"},"content":"            task \u003d new Deadline(taskName, parseDateFromInput(date), parseTimeFromInput(time));","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"danielsimre"},"content":"        default: // default is guaranteed to be event task due to use of enum + outer control flow","lastModifiedDate":"2021-08-18"},{"lineNumber":205,"author":{"gitId":"danielsimre"},"content":"            // Add Event task","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"danielsimre"},"content":"            errorMessage \u003d \"Command must be in the format: [taskName] /at \"","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"danielsimre"},"content":"                    + \"[date(YYYY-MM-DD)] [start time(HH:MM)] [end time(HH:MM)].\";","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"danielsimre"},"content":"            splitInput \u003d splitWith(input, 6, \" /at \", errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"danielsimre"},"content":"            taskName \u003d splitInput[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"danielsimre"},"content":"            errorMessage \u003d \"Date and times must be in the format: YYYY-MM-DD HH:MM HH:MM.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d splitWith(splitInput[1], 0, \" \", errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"danielsimre"},"content":"            // If user only input in one time","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"danielsimre"},"content":"            if (dateTime.length \u003c 3) {","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"danielsimre"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"danielsimre"},"content":"            date \u003d dateTime[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"danielsimre"},"content":"            String startTime \u003d dateTime[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"danielsimre"},"content":"            String endTime \u003d dateTime[2];","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"danielsimre"},"content":"            task \u003d new Event(taskName, parseDateFromInput(date),","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"danielsimre"},"content":"                    parseTimeFromInput(startTime), parseTimeFromInput(endTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":223,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":224,"author":{"gitId":"danielsimre"},"content":"        // Common functionality: add task to list, print task and list size, save tasks to file","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"danielsimre"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":226,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":227,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"Got it. The following task has been added: \");","lastModifiedDate":"2021-08-18"},{"lineNumber":228,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(\"\\t\\t%s\\n\", task.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(\"\\tNow you have %d task%s in the list.\\n\",","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"danielsimre"},"content":"                tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":232,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"danielsimre"},"content":"    // Abstraction to make main function neater","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"danielsimre"},"content":"    private static void runDeleteCommand(String input, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a task number to delete.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"danielsimre"},"content":"        String taskNumberString \u003d input.substring(7);","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"danielsimre"},"content":"        if (taskNumberString.matches(\"\\\\d+\")","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 (Integer.parseInt(taskNumberString) - 1 \u003c tasks.size()","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 Integer.parseInt(taskNumberString) - 1 \u003e\u003d 0)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":244,"author":{"gitId":"danielsimre"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":245,"author":{"gitId":"danielsimre"},"content":"            Task removedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"Got it. The following task has been removed:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":247,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(\"\\t\\t%s\\n\", removedTask.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":248,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(\"\\tNow you have %d task%s in the list.\\n\",","lastModifiedDate":"2021-08-18"},{"lineNumber":249,"author":{"gitId":"danielsimre"},"content":"                    tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2021-08-18"},{"lineNumber":250,"author":{"gitId":"danielsimre"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":251,"author":{"gitId":"danielsimre"},"content":"            // Invalid input (not a number or invalid number)","lastModifiedDate":"2021-08-18"},{"lineNumber":252,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a valid task number to delete.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":253,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":254,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":255,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":256,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":257,"author":{"gitId":"danielsimre"},"content":"    // Saves tasks to the file ./data/tasks.txt. Called when list is modified.","lastModifiedDate":"2021-08-25"},{"lineNumber":258,"author":{"gitId":"danielsimre"},"content":"    private static void saveTasksToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":259,"author":{"gitId":"danielsimre"},"content":"        Files.createDirectories(SAVEFILE_DIR); // Create data directory if it does not exist","lastModifiedDate":"2021-08-25"},{"lineNumber":260,"author":{"gitId":"danielsimre"},"content":"        FileWriter fw \u003d new FileWriter(SAVEFILE_PATH.toAbsolutePath().toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":261,"author":{"gitId":"danielsimre"},"content":"        StringBuilder saveData \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":262,"author":{"gitId":"danielsimre"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":263,"author":{"gitId":"danielsimre"},"content":"            saveData.append(task.toSaveData()).append(System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":264,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":265,"author":{"gitId":"danielsimre"},"content":"        fw.write(saveData.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":266,"author":{"gitId":"danielsimre"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":267,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":268,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":269,"author":{"gitId":"danielsimre"},"content":"    // Loads tasks from the save file ./data/tasks.txt. Called when Duke starts.","lastModifiedDate":"2021-08-25"},{"lineNumber":270,"author":{"gitId":"danielsimre"},"content":"    private static List\u003cTask\u003e loadTasksFromFile() throws FileNotFoundException, DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":271,"author":{"gitId":"danielsimre"},"content":"        File saveFile \u003d SAVEFILE_PATH.toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":272,"author":{"gitId":"danielsimre"},"content":"        Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":273,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":274,"author":{"gitId":"danielsimre"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":275,"author":{"gitId":"danielsimre"},"content":"            String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":276,"author":{"gitId":"danielsimre"},"content":"            String[] taskData \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":277,"author":{"gitId":"danielsimre"},"content":"            switch (taskData[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":278,"author":{"gitId":"danielsimre"},"content":"            case (\"T\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":279,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Todo(taskData[2], Boolean.parseBoolean(taskData[1])));","lastModifiedDate":"2021-08-25"},{"lineNumber":280,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":281,"author":{"gitId":"danielsimre"},"content":"            case (\"D\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":282,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Deadline(taskData[2], Boolean.parseBoolean(taskData[1]),","lastModifiedDate":"2021-08-25"},{"lineNumber":283,"author":{"gitId":"danielsimre"},"content":"                        parseDateFromInput(taskData[3]), parseTimeFromInput(taskData[4])));","lastModifiedDate":"2021-08-25"},{"lineNumber":284,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":285,"author":{"gitId":"danielsimre"},"content":"            case (\"E\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":286,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Event(taskData[2], Boolean.parseBoolean(taskData[1]),","lastModifiedDate":"2021-08-25"},{"lineNumber":287,"author":{"gitId":"danielsimre"},"content":"                        parseDateFromInput(taskData[3]), parseTimeFromInput(taskData[4]),","lastModifiedDate":"2021-08-25"},{"lineNumber":288,"author":{"gitId":"danielsimre"},"content":"                        parseTimeFromInput(taskData[5])));","lastModifiedDate":"2021-08-25"},{"lineNumber":289,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":290,"author":{"gitId":"danielsimre"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":291,"author":{"gitId":"danielsimre"},"content":"                throw new DukeException(\"Save file contains invalid task data (Invalid task type)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":292,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":293,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":294,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":295,"author":{"gitId":"danielsimre"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":296,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":297,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":298,"author":{"gitId":"danielsimre"},"content":"    // Abstraction to make main function neater, lists all tasks on the inputted date","lastModifiedDate":"2021-08-25"},{"lineNumber":299,"author":{"gitId":"danielsimre"},"content":"    private static void runOnDateCommand(String input, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":300,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2021-08-25"},{"lineNumber":301,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":302,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":303,"author":{"gitId":"danielsimre"},"content":"        String dateString \u003d input.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":304,"author":{"gitId":"danielsimre"},"content":"        LocalDate date \u003d parseDateFromInput(dateString);","lastModifiedDate":"2021-08-25"},{"lineNumber":305,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e onDateTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":306,"author":{"gitId":"danielsimre"},"content":"                .filter(task -\u003e task.hasSameDate(date))","lastModifiedDate":"2021-08-25"},{"lineNumber":307,"author":{"gitId":"danielsimre"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":308,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":309,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":310,"author":{"gitId":"danielsimre"},"content":"        if (onDateTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":311,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"You do not have any tasks occurring before this date.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":312,"author":{"gitId":"danielsimre"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":313,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"Here are the tasks occurring on this date:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":314,"author":{"gitId":"danielsimre"},"content":"            for (int i \u003d 0; i \u003c onDateTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":315,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(\"\\t%d.%s\\n\", i + 1, onDateTasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":316,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":317,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":318,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":319,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":320,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":321,"author":{"gitId":"danielsimre"},"content":"    // Abstraction to make main function neater","lastModifiedDate":"2021-08-25"},{"lineNumber":322,"author":{"gitId":"danielsimre"},"content":"    // Lists all tasks that are due X hours/days from now (from timezone of device)","lastModifiedDate":"2021-08-25"},{"lineNumber":323,"author":{"gitId":"danielsimre"},"content":"    private static void runDueCommand(String input, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":324,"author":{"gitId":"danielsimre"},"content":"        // Check if input is valid and input number is an integer","lastModifiedDate":"2021-08-25"},{"lineNumber":325,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 4 || !input.substring(4, input.length() - 1).matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":326,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Command must be of the form: due [integer][h/d/m] \"","lastModifiedDate":"2021-08-25"},{"lineNumber":327,"author":{"gitId":"danielsimre"},"content":"                    + \"(h \u003d hours, d \u003d days, m \u003d months)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":328,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":329,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":330,"author":{"gitId":"danielsimre"},"content":"        String offset \u003d input.substring(4, input.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":331,"author":{"gitId":"danielsimre"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-25"},{"lineNumber":332,"author":{"gitId":"danielsimre"},"content":"        switch (input.charAt(input.length() - 1)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":333,"author":{"gitId":"danielsimre"},"content":"        case (\u0027h\u0027):","lastModifiedDate":"2021-08-25"},{"lineNumber":334,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusHours(Integer.parseInt(offset));","lastModifiedDate":"2021-08-25"},{"lineNumber":335,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":336,"author":{"gitId":"danielsimre"},"content":"        case (\u0027d\u0027):","lastModifiedDate":"2021-08-25"},{"lineNumber":337,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusDays(Integer.parseInt(offset));","lastModifiedDate":"2021-08-25"},{"lineNumber":338,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":339,"author":{"gitId":"danielsimre"},"content":"        case (\u0027m\u0027):","lastModifiedDate":"2021-08-25"},{"lineNumber":340,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusMonths(Integer.parseInt(offset));","lastModifiedDate":"2021-08-25"},{"lineNumber":341,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":342,"author":{"gitId":"danielsimre"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":343,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Command must be of the form: due [integer][h/d/m] \"","lastModifiedDate":"2021-08-25"},{"lineNumber":344,"author":{"gitId":"danielsimre"},"content":"                    + \"(h \u003d hours, d \u003d days, m \u003d months)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":345,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":346,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":347,"author":{"gitId":"danielsimre"},"content":"        // Copy dateTime to an effectively final variable for use in lambda","lastModifiedDate":"2021-08-25"},{"lineNumber":348,"author":{"gitId":"danielsimre"},"content":"        LocalDateTime finalDateTime \u003d dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":349,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e beforeDateTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":350,"author":{"gitId":"danielsimre"},"content":"                .filter(task -\u003e task.isBeforeDate(finalDateTime))","lastModifiedDate":"2021-08-25"},{"lineNumber":351,"author":{"gitId":"danielsimre"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":352,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":353,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":354,"author":{"gitId":"danielsimre"},"content":"        if (beforeDateTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":355,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"You do not have any tasks occurring within this time period.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":356,"author":{"gitId":"danielsimre"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":357,"author":{"gitId":"danielsimre"},"content":"            System.out.printf(FORMAT, \"Here are the tasks occurring within this time period:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":358,"author":{"gitId":"danielsimre"},"content":"            for (int i \u003d 0; i \u003c beforeDateTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":359,"author":{"gitId":"danielsimre"},"content":"                System.out.printf(\"\\t%d.%s\\n\", i + 1, beforeDateTasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":360,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":361,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":362,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"danielsimre":360,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    public Event(String taskName, LocalDate date,","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"                 LocalTime startTime, LocalTime endTime) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"        // If start time is greater than or equal to end time, throw exception","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        if (startTime.compareTo(endTime) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Start time of event cannot be later or equal to end time.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    public Event(String taskName, boolean isDone, LocalDate date,","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"                 LocalTime startTime, LocalTime endTime) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"        // If start time is greater than or equal to end time, throw exception","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"        if (startTime.compareTo(endTime) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Start time of event cannot be later or equal to end time.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        return this.date.equals(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"        // Will also return true if the date times are equal","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        return !this.date.atTime(this.startTime).isAfter(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"        return \"E|\" + super.toSaveData() + \"|\" + this.date","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"                + \"|\" + this.startTime + \"|\" + this.endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        String formattedStartTime \u003d this.startTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"        String formattedEndTime \u003d this.endTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \", \"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"                + formattedStartTime + \" - \" + formattedEndTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":60}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        return this.isDone + \"|\" + this.taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        String statusString \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        return String.format(\"[%s] %s\", statusString, this.taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":39}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        return \"T|\" + super.toSaveData();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"todo   ","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"todo Buy bread","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"todo Buy|bread","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"deadline   ","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due/byFri 5pm","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due /by Fri 5pm","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"event Project Meeting/atMon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"event Project Meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":22}}]
