[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public Duke(Path filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"            ui.showFileNotFoundError();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        ui.showIntroduction();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        boolean isTerminated \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        while (!isTerminated) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"                Command command \u003d Parser.parseCommandFromInput(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"                tasks \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"                isTerminated \u003d command.isTerminated();","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"                ui.showError(\"The data failed to save to the save file with error:\"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"                        + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"                // When invalid command is given, it is unable to be parsed into the enum","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"                ui.showError(\"You have entered an invalid command.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"            } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"        Path filePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"danielsimre":62,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        TaskList newTasks \u003d tasks.addTask(input, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        storage.saveTasksToFile(newTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        return newTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":21}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"        ui.showMessage(\"Goodbye. Have a nice day!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":19}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    protected final String input;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    // For commands that do not need to further read input (e.g. list, bye)","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    public Command() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        this.input \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    public Command(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public abstract TaskList execute(TaskList tasks, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":27}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        TaskList newTasks \u003d tasks.deleteTask(input, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        storage.saveTasksToFile(newTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        return newTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":21}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    public DoneCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        TaskList newTasks \u003d tasks.markTask(input, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        storage.saveTasksToFile(newTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        return newTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":21}},{"path":"src/main/java/duke/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    public DueCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        ui.showMessage(\"Here are the tasks occurring within this time period:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"        ui.showIndentedMessage(tasks.getDueTasks(input).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":19}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"        ui.showMessage(\"Here is your task list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        ui.showIndentedMessage(tasks.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":15}},{"path":"src/main/java/duke/command/OnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class OnDateCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    public OnDateCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        ui.showMessage(\"Here are the tasks occurring on this date:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"        ui.showIndentedMessage(tasks.getOnDateTasks(input).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":19}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"    public Deadline(String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    public Deadline(String taskName, boolean isDone,","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"                    LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"        return new Deadline(this.taskName, true, this.date, this.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"        return this.date.equals(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        // Will also return true if the date times are equal","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        return !this.date.atTime(this.time).isAfter(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        return \"D|\" + super.toSaveData() + \"|\" + this.date + \"|\" + this.time;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"        String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \", \" + formattedTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    public Event(String taskName, LocalDate date,","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"                 LocalTime startTime, LocalTime endTime) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"        // If start time is greater than or equal to end time, throw exception","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        if (startTime.compareTo(endTime) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Start time of event cannot be later or equal to end time.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    public Event(String taskName, boolean isDone, LocalDate date,","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"                 LocalTime startTime, LocalTime endTime) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        // If start time is greater than or equal to end time, throw exception","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        if (startTime.compareTo(endTime) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Start time of event cannot be later or equal to end time.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        return new Event(this.taskName, true, this.date, this.startTime, this.endTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"        return this.date.equals(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"        // Will also return true if the date times are equal","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"        return !this.date.atTime(this.startTime).isAfter(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        return \"E|\" + super.toSaveData() + \"|\" + this.date","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"                + \"|\" + this.startTime + \"|\" + this.endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"        String formattedStartTime \u003d this.startTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"        String formattedEndTime \u003d this.endTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \", \"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"                + formattedStartTime + \" - \" + formattedEndTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"    protected final String taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"        return new Task(this.taskName, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        return this.isDone + \"|\" + this.taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    public boolean hasSameDate(LocalDate date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    public boolean isBeforeDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        String statusString \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        return String.format(\"[%s] %s\", statusString, this.taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":41}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    public void forEach(Consumer\u003c? super Task\u003e consumer) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        tasks.forEach(consumer);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    public TaskList addTask(String input, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Input contains |, which is an invalid character.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        Task task;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        String commandString \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        switch (commandString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        case \"TODO\":","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"            // Add Todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"            if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"            task \u003d new Todo(input.substring(5));","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"            // Add Deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"            String errorMessage \u003d \"Command must be in the format: [taskName] /by \"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"                    + \"[date(YYYY-MM-DD)] [time(HH:MM)].\";","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"            String[] splitInput \u003d Parser.splitWith(input, 9, \" /by \", errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"            String taskName \u003d splitInput[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"            errorMessage \u003d \"Date and time must be in the format: YYYY-MM-DD HH:MM.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"            String[] dateTime \u003d Parser.splitWith(splitInput[1], 0, \" \", errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"            String date \u003d dateTime[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"            String time \u003d dateTime[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"            task \u003d new Deadline(taskName, Parser.parseDateFromInput(date), Parser.parseTimeFromInput(time));","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        default: // default is guaranteed to be event task due to use of enum + outer control flow","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"            // Add Event task","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"            errorMessage \u003d \"Command must be in the format: [taskName] /at \"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"                    + \"[date(YYYY-MM-DD)] [start time(HH:MM)] [end time(HH:MM)].\";","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"            splitInput \u003d Parser.splitWith(input, 6, \" /at \", errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"            taskName \u003d splitInput[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"            errorMessage \u003d \"Date and times must be in the format: YYYY-MM-DD HH:MM HH:MM.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d Parser.splitWith(splitInput[1], 0, \" \", errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"            // If user only input in one time","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"            if (dateTime.length \u003c 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"            date \u003d dateTime[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"            String startTime \u003d dateTime[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"            String endTime \u003d dateTime[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"            task \u003d new Event(taskName, Parser.parseDateFromInput(date),","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"                    Parser.parseTimeFromInput(startTime), Parser.parseTimeFromInput(endTime));","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"        // Common functionality: add task to list, print task and list size, save tasks to file","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"        newTasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"        ui.showMessage(\"Got it. The following task has been added: \");","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"        ui.showIndentedMessage(task.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"        ui.showMessage(String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"                newTasks.size(), newTasks.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(newTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"    public TaskList deleteTask(String input, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a task number to delete.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"        String taskNumberString \u003d input.substring(7);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"        if (taskNumberString.matches(\"\\\\d+\")","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 (Integer.parseInt(taskNumberString) - 1 \u003c tasks.size()","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 Integer.parseInt(taskNumberString) - 1 \u003e\u003d 0)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"            Task removedTask \u003d newTasks.remove(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"            ui.showMessage(\"Got it. The following task has been removed:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"            ui.showIndentedMessage(removedTask.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"            ui.showMessage(String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"                    newTasks.size(), newTasks.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"            // Invalid input (not a number or invalid number)","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a valid task number to delete.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(newTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"    public TaskList markTask(String input, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a task number to mark as done.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"        String taskNumberString \u003d input.substring(5);","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"        if (taskNumberString.matches(\"\\\\d+\")","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 (Integer.parseInt(taskNumberString) - 1 \u003c tasks.size()","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"                \u0026\u0026 Integer.parseInt(taskNumberString) - 1 \u003e\u003d 0)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"            Task doneTask \u003d newTasks.get(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"            ui.showMessage(\"Good work! This task is now marked as done:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"            ui.showIndentedMessage(doneTask.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"            newTasks.set(taskIndex, doneTask.markAsDone());","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"            // Invalid input (not a number or invalid number)","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Please type in a valid task number to mark as done.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(newTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"    public TaskList getDueTasks(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"        // Check if input is valid and input number is an integer","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 4 || !input.substring(4, input.length() - 1).matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Command must be of the form: due [integer][h/d/m] \"","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"                    + \"(h \u003d hours, d \u003d days, m \u003d months)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"        String offset \u003d input.substring(4, input.length() - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"        switch (input.charAt(input.length() - 1)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"        case (\u0027h\u0027):","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusHours(Integer.parseInt(offset));","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"        case (\u0027d\u0027):","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusDays(Integer.parseInt(offset));","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"        case (\u0027m\u0027):","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"            dateTime \u003d dateTime.plusMonths(Integer.parseInt(offset));","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Command must be of the form: due [integer][h/d/m] \"","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"                    + \"(h \u003d hours, d \u003d days, m \u003d months)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"        // Copy dateTime to an effectively final variable for use in lambda","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"        LocalDateTime finalDateTime \u003d dateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e beforeDateTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"danielsimre"},"content":"                .filter(task -\u003e task.isBeforeDate(finalDateTime))","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"danielsimre"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(beforeDateTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"danielsimre"},"content":"    public TaskList getOnDateTasks(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"danielsimre"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"danielsimre"},"content":"        String dateString \u003d input.substring(7);","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"danielsimre"},"content":"        LocalDate date \u003d Parser.parseDateFromInput(dateString);","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e onDateTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"danielsimre"},"content":"                .filter(task -\u003e task.hasSameDate(date))","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"danielsimre"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"danielsimre"},"content":"        return new TaskList(onDateTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"danielsimre"},"content":"    // Returns list in numbered format (1., 2., 3., etc.)","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"danielsimre"},"content":"    // Example string format is: \\t[1.task name]\\n","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"danielsimre"},"content":"    //                           \\t\\t[2.task name]\\n","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"danielsimre"},"content":"    //                           \\t\\t[3.task name]","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"danielsimre"},"content":"    public String toString() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"danielsimre"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"danielsimre"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"danielsimre"},"content":"        StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"danielsimre"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"danielsimre"},"content":"            if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"danielsimre"},"content":"                listString.append(String.format(\"\\t\\t%d.%s\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"danielsimre"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"danielsimre"},"content":"                listString.append(String.format(\"\\t\\t%d.%s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"danielsimre"},"content":"        return listString.toString().trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":194}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"        return \"T|\" + super.toSaveData();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":22}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":7}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import duke.command.DueCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"import duke.command.OnDateCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    // Helper function to parse a date from an input","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"    public static LocalDate parseDateFromInput(String dateString) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    // Helper function to parse a time from and input","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    public static LocalTime parseTimeFromInput(String timeString) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"            return LocalTime.parse(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"Time must be of the form HH:MM. (HH from 00-23, MM from 00-59)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    public static Command parseCommandFromInput(String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"        String commandString \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        switch (commandString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        case \"BYE\":","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"        case \"LIST\":","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        case \"DONE\":","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"        case \"TODO\":","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"        case \"EVENT\":","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"            return new AddCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"        case \"DELETE\":","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"        case \"ONDATE\":","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"            return new OnDateCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"        case \"DUE\":","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"            return new DueCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(\"You have entered an invalid command.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    // Helper function to separate a string into pieces (e.g. input into taskName and dateTime)","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"    public static String[] splitWith(String input, int startIndex, String regex, String errorMessage)","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"        if (startIndex \u003e\u003d input.length() || !input.contains(regex)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"        return input.substring(startIndex).split(regex);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":68}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"    private final Path filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    // Loads tasks from the given file path. Called when duke.Duke starts.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    public List\u003cTask\u003e loadTasksFromFile() throws FileNotFoundException, DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"        File saveFile \u003d this.filePath.toFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"        Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"            String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"            String[] taskData \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"            switch (taskData[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"            case (\"T\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Todo(taskData[2], Boolean.parseBoolean(taskData[1])));","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"            case (\"D\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Deadline(taskData[2], Boolean.parseBoolean(taskData[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"                        Parser.parseDateFromInput(taskData[3]), Parser.parseTimeFromInput(taskData[4])));","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"            case (\"E\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"                tasks.add(new Event(taskData[2], Boolean.parseBoolean(taskData[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"                        Parser.parseDateFromInput(taskData[3]), Parser.parseTimeFromInput(taskData[4]),","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"                        Parser.parseTimeFromInput(taskData[5])));","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"                throw new DukeException(\"Save file contains invalid task data (Invalid task type)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"    // Saves tasks to the given file path. Called when list is modified.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"        Files.createDirectories(this.filePath.getParent()); // Create directories if they do not exist","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath.toAbsolutePath().toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"        StringBuilder saveData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"        tasks.forEach((task) -\u003e saveData.append(task.toSaveData()).append(System.lineSeparator()));","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"        fw.write(saveData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"        fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":68}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"    private final static String FORMAT \u003d \"\\t%s\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"    private final static String INDENTED_FORMAT \u003d \"\\t\\t%s\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"    private final static String LINE \u003d \"______________________________________________________\";","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"    private final static String LOGO \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"            \"\\t ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"            + \"\\t|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"            + \"\\t| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"            + \"\\t| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"            + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"    public void showIntroduction() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"        System.out.print(LOGO);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"Hello there, I\u0027m Duke!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"What can I do for you today?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, message);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"    public void showIndentedMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(INDENTED_FORMAT, message);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(\"\\tUh-oh! %s\\n\", errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"    public void showFileNotFoundError() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"This appears to be your first time using Duke.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"A save file will be created to save your tasks when you first add a task.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"    public void showLoadingError(String errorMessage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"        this.showError(errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"This appears to be an error with your save file.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"Either edit data/tasks.txt to rectify the error, or delete it.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        System.out.printf(FORMAT, \"For now, you\u0027ll start with an empty task list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":62}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"import duke.command.DueCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"import duke.command.OnDateCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"    public void parseDateFromInput_incorrectFormat_exceptionThrown(){","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"            Parser.parseDateFromInput(\"2021-021-10\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"    public void parseDateFromInput_invalidDate_exceptionThrown(){","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"danielsimre"},"content":"            Parser.parseDateFromInput(\"2021-26-10\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"danielsimre"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Date must be of the form YYYY-MM-DD, and must be a real/valid date.\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"danielsimre"},"content":"    public void parseDateFromInput_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"danielsimre"},"content":"            String timeString \u003d \"2021-02-16\";","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"danielsimre"},"content":"            assertEquals(LocalDate.parse(timeString), Parser.parseDateFromInput(timeString));","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"danielsimre"},"content":"    public void parseTimeFromInput_incorrectFormat_exceptionThrown(){","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"danielsimre"},"content":"            Parser.parseTimeFromInput(\"0:11\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Time must be of the form HH:MM. (HH from 00-23, MM from 00-59)\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"danielsimre"},"content":"    public void parseTimeFromInput_invalidTime_exceptionThrown(){","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"danielsimre"},"content":"            Parser.parseTimeFromInput(\"25:11\");","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"Time must be of the form HH:MM. (HH from 00-23, MM from 00-59)\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"danielsimre"},"content":"    public void parseTimeFromInput_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"danielsimre"},"content":"            String timeString \u003d \"11:11\";","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"danielsimre"},"content":"            assertEquals(LocalTime.parse(timeString), Parser.parseTimeFromInput(timeString));","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_invalidCommand_exceptionThrown(){","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"danielsimre"},"content":"            Parser.parseCommandFromInput(\"blah blah blah\");","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"danielsimre"},"content":"            assertEquals(\"You have entered an invalid command.\", e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_byeCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_listCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"list\") instanceof ListCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_doneCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"done\") instanceof DoneCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_todoCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"todo\") instanceof AddCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_deadlineCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"deadline\") instanceof AddCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_eventCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"event\") instanceof AddCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_deleteCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"delete\") instanceof DeleteCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_onDateCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"ondate\") instanceof OnDateCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"danielsimre"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"danielsimre"},"content":"    public void parseCommandFromInput_dueCommand_success(){","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"danielsimre"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"danielsimre"},"content":"            assertTrue(Parser.parseCommandFromInput(\"due\") instanceof DueCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"danielsimre"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"danielsimre"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"danielsimre"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"danielsimre"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"danielsimre"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":173}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"todo   ","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"todo Buy bread","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"todo Buy|bread","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"deadline   ","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due/by","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due /by","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due /by 2021-08-2 11:00","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due /by 2021-08-26 11:0","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due /by 2021-13-26 11:00","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due /by 2021-08-26 26:00","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"deadline Presentation Slides Due /by 2021-08-26 11:00","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"event Project Meeting/atMon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"event Project Meeting /at 2021-08-26 20:00","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"event Project Meeting /at 2021-08-26 20:00 18:00","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"event Project Meeting /at 2021-08-26 18:00 20:00 ","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"danielsimre"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"danielsimre"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"danielsimre"},"content":"ondate","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"danielsimre"},"content":"ondate 2021-08-26","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"danielsimre"},"content":"due","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"danielsimre"},"content":"due 1y","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"danielsimre"},"content":"due 10d","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"danielsimre"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"danielsimre"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"danielsimre"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"danielsimre"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"danielsimre"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"danielsimre":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"if exist .\\data\\tasks.txt del .\\data\\tasks.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"danielsimre"},"content":"java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"danielsimre":4,"-":19}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\AddCommand.java","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\ByeCommand.java","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\Command.java","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\DeleteCommand.java","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\DoneCommand.java","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\DueCommand.java","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\ListCommand.java","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\command\\OnDateCommand.java","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\task\\Deadline.java","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\task\\Event.java","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\task\\Task.java","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\task\\TaskList.java","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\task\\Todo.java","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\util\\DukeException.java","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\util\\Parser.java","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\util\\Storage.java","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"danielsimre"},"content":"..\\src\\main\\java\\duke\\util\\Ui.java","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"danielsimre"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"danielsimre":19}}]
