[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":" * The main program of the chatbot Duke. Consists of Tasklist, Ui and Storage instances.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a Duke chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    public Duke() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"        this.storage \u003d new Storage(this.ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"        this.tasks \u003d new TaskList(this.storage.load(), this.ui);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"     * Starts Duke with the loaded tasks list.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    public void run() {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"        this.ui.greetUser();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        boolean shouldContinue \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        while (shouldContinue) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"                Command command \u003d this.ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"                shouldContinue \u003d Parser.parse(command, this.tasks, this.storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"            } catch (IllegalArgumentException e) { // caused by user entering a command that is invalid","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"                this.ui.clearInput();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"                this.ui.showError(new InvalidCommandException());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"                this.ui.showError(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"        this.ui.showFarewell();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xiangjunn":44,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":" * Deals with making sense of the user command and executing it.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     * Execute user command and returns a boolean that represents the continuation of the program.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     * Does not check for validity of user command.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     * @param command Command inputted by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * @param tl List of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     * @param storage Storage that store tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * @return A boolean to determine if the program should continue.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     * @throws DukeException If the command execution is unsuccessful.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    public static boolean parse(Command command, TaskList tl, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        boolean shouldContinue \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"        CommandKeyword keyword \u003d command.getKeyword();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        String restOfCommand \u003d command.getRestOfCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"            ArrayList\u003cTask\u003e tasksAfterAdd \u003d tl.addTask(restOfCommand, keyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"            if (tasksAfterAdd !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"                storage.save(tasksAfterAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"        case LIST:","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"            if (restOfCommand.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"                tl.display();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"        case DONE:","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"            int indexToMark \u003d Parser.stringToInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"            ArrayList\u003cTask\u003e tasksAfterDone \u003d tl.markTask(indexToMark);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"            if (tasksAfterDone !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"                storage.save(tasksAfterDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        case DELETE:","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"            int indexToDelete \u003d Parser.stringToInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"            ArrayList\u003cTask\u003e tasksAfterDelete \u003d tl.deleteTask(indexToDelete);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"            if (tasksAfterDelete !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"                storage.save(tasksAfterDelete);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"        case BYE:","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"            if (restOfCommand.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"                shouldContinue \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"        case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"            tl.find(restOfCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"            /* will never be executed because the error would have been caught in run() method","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"               if the user input a command that is invalid */","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"        return shouldContinue;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"     * Convert a type String of an integer to type int.","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"     * Returns the integer that is converted.","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"     * @param description The string that is to be converted.","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"     * @return The converted integer.","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"     * @throws InvalidCommandException If description does not represent a type String of an integer.","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"xiangjunn"},"content":"    public static int stringToInt(String description) throws InvalidCommandException {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xiangjunn"},"content":"        if (description.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xiangjunn"},"content":"            return Integer.parseInt(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"xiangjunn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":93}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":" * Deals with laoding tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    private File file;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a storage to store tasks. It takes in an Ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * @param ui An instance to deal with interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"            String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"            Path path \u003d Paths.get(dir, \"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"            // create the data folder if it does not exist","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"                path \u003d Files.createDirectory(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"            File file \u003d path.resolve(\"duke.txt\").toFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"            this.file \u003d file;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"            // this exception should not occur because the input(path) is fixed","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"     * Load tasks from the file and add each line to an arraylist.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"     * @return An arraylist of strings, each representing a task information.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"            ArrayList\u003cString\u003e tasksInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"                tasksInfo.add(sc.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"            return tasksInfo;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"     * Save tasks in the file according to the arraylist of tasks given.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"     * @param tasks An arraylist of tasks to be saved.","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"                String taskInfo \u003d tasks.get(i).stringToStore();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"                fw.write(taskInfo);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"            fw.flush();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"            System.out.println(\"Failed to update storage.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":84}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     * Constructs an Ui instance. Instantiate a scanner object to take in user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    private void printMessage(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        String formatDisplay \u003d String.format(\"\\t%s\", message.replaceAll(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"        System.out.println(formatDisplay);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"     * A welcome message to display to user when Duke starts.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    public void greetUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Saitama\";","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"        String detailsMessage \u003d \"I do 100 sit-ups, 100 push-ups, 100 squats and a 10 kilometer run every day! No cap\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(greetMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(detailsMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"     * An error message to display to user according to the exception.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"     * @param e An exception thrown due to various reasons such as incorrect user command.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"     * A farewell message to display to user before ending the program.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"    public void showFarewell() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"        this.sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(\"Hope to see you again!! ^_^\");","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"     * A message that will display to user if there is an error loading tasks from the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(\"There is an error while loading tasks.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"     * Read user command and create a command object to represent it.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"     * @return A command object that consists of keyword and rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"     * @throws IllegalArgumentException If the command keyword is invalid.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"    public Command readCommand() throws IllegalArgumentException {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"        String commandName \u003d sc.next();","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"        CommandKeyword keyword \u003d CommandKeyword.valueOf(commandName.toUpperCase());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"        String restOfCommand \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"        return new Command(keyword, restOfCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"     * Clear any remaining user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"    public void clearInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"        sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"     * A message to display to user after user successfully added a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"     * @param task Task that is added.","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"xiangjunn"},"content":"     * @param totalTasks Total number of tasks in the list after the task is added.","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"xiangjunn"},"content":"    public void showAddTask(Task task, int totalTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(String.format(\"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"xiangjunn"},"content":"                + \"\\n\\t%s\"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"xiangjunn"},"content":"                + \"\\nNow you have %d tasks in the list.\", task, totalTasks));","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"     * Display to user the list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"xiangjunn"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"xiangjunn"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"xiangjunn"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"xiangjunn"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"xiangjunn"},"content":"            this.printMessage(\"No task is found!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"xiangjunn"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"xiangjunn"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"xiangjunn"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"xiangjunn"},"content":"                this.printMessage(String.format(\"%d.%s\", num, task));","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"xiangjunn"},"content":"     * A message to display to user after user try to mark a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"xiangjunn"},"content":"     * Message displayed depends on the successfulness of the mark operation.","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"xiangjunn"},"content":"     * @param task The task to mark.","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"xiangjunn"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"xiangjunn"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"xiangjunn"},"content":"            this.printMessage(String.format(\"Nice! I\u0027ve marked this task as done: \\n\\t%s\", task));","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"xiangjunn"},"content":"            this.printMessage(\"There is no such task to mark!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"xiangjunn"},"content":"     * A message to display to user after user try to delete a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"xiangjunn"},"content":"     * Message displayed depends on the successfulness of the delete operation.","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"xiangjunn"},"content":"     * @param task The task to delete.","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"xiangjunn"},"content":"     * @param totalTasks The total number of tasks remaining.","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"xiangjunn"},"content":"    public void showDeletedTask(Task task, int totalTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"xiangjunn"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"xiangjunn"},"content":"            this.printMessage(String.format(\"Noted. I\u0027ve removed this task: \\n\\t%s\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"xiangjunn"},"content":"                    + \"Now you have %d tasks in the list.\", task, totalTasks));","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"xiangjunn"},"content":"            this.printMessage(\"There is no such task to delete!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"xiangjunn"},"content":"     * A message to display to user if user did not include keywored when using the command find.","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"xiangjunn"},"content":"    public void showNoKeyword() {","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(\"There is no keyword to search for!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"xiangjunn"},"content":"     * A message to display the filtered tasks to user based on the search.","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"xiangjunn"},"content":"     * @param tasks The arraylist of filtered tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"xiangjunn"},"content":"    public void showFilteredTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"xiangjunn"},"content":"        this.printMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"xiangjunn"},"content":"        this.showTasks(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":158}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Blueprint for a user command. Consists of a keyword and the rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"    private CommandKeyword keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"    private String restOfCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a user command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"     * @param keyword The user command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"     * @param restOfCommand The rest of the command, if any.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    public Command(CommandKeyword keyword, String restOfCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"        this.restOfCommand \u003d restOfCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * Returns the command keyword of a command.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * @return The command keyword of a command.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    public CommandKeyword getKeyword() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        return this.keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"     * Returns the rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     * @return The rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"    public String getRestOfCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        return this.restOfCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":38}},{"path":"src/main/java/duke/command/CommandKeyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Contains all the valid user commands.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public enum CommandKeyword {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"    LIST, DONE, DELETE, BYE, TODO, DEADLINE, EVENT, FIND;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiangjunn":8}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Exceptions related to Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"     * Returns a message to inform user about the exception.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     * @return A message to inform user about the exception.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        return \"☹ OOPS!!! An error has occurred\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xiangjunn":17}},{"path":"src/main/java/duke/exception/IncompleteTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Exception due to user inputting a command to add task but the task description is incomplete.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class IncompleteTaskDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a IncompleteTaskDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     * @param taskName Name of the type of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    public IncompleteTaskDescriptionException(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     * Returns a message to inform user about the task that is incomplete.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * @return A message to inform user about the task that is incomplete.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"☹ OOPS!!! The description of a %s is either empty or in wrong format.\", this.taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xiangjunn":28}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Exception due to user inputting an invalid command.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"     * Returns a message to inform user about the command that is invalid.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     * @return A message to inform user about the command that is invalid.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xiangjunn":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":" * Deadline is a specific type of task that contains the description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    private static final char TASK_LETTER \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     * @param date The deadline date.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     * @param time The deadline time.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a deadline task. It is used to instantiate a deadline that is already marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the ask.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     * @param date The deadline date.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     * @param time The deadline time.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the deadline is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    public Deadline(String description, LocalDate date, LocalTime time, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     * Returns string representation of a deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%c]%s (by: %s %s)\", Deadline.TASK_LETTER,","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"                super.toString(), this.date.format(Deadline.DATE_TIME_FORMATTER), this.time);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"     * Convert the deadline to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"    public String stringToStore() {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"        return Deadline.TASK_LETTER + \" | \" + this.getStatusIcon() + \" | \" + this.description + \" | \"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"                + this.date.format(Deadline.DATE_TIME_FORMATTER) + \" | \" + this.time + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":64}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":" * Event is a specific type of task that contains the description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"    private static final char TASK_LETTER \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    private String timeRange;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     * @param timeRange The start and end time of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    public Event(String description, LocalDate date, String timeRange) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a event task. It is used to instantiate an event that is already marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"     * @param timeRange The start and end time of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the event is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"    public Event(String description, LocalDate date, String timeRange, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     * Returns string representation of an event.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%c]%s (at: %s %s)\", Event.TASK_LETTER,","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"                super.toString(), this.date.format(Event.DATE_TIME_FORMATTER), this.timeRange);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"     * Convert the event to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"    public String stringToStore() {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"        return Event.TASK_LETTER + \" | \" + this.getStatusIcon() + \" | \" + this.description + \" | \"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"                + this.date.format(Event.DATE_TIME_FORMATTER) + \" | \" + this.timeRange + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":" * Task is an abstract class that provides attributes and methods that are common to all types of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a task. Should not be used to instantiate Task object because Task is an abstract class.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a task. It is used for task that is already marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"     * Returns the status icon of the task as a string.","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"     * @return Status icon.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     * To mark a task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"     * Convert the task info loaded from storage to its corresponding task object.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"     * @param taskInfo The information of the task loaded from storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"     * @return The corresponding task.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"    public static Task convertToTask(String taskInfo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"        String[] arr \u003d taskInfo.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"        char letter \u003d arr[0].charAt(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"        boolean isDone \u003d arr[1].equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"        switch (letter) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"            return new Todo(arr[2], isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(arr[3], Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"            LocalTime deadlineTime \u003d LocalTime.parse(arr[4]);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"            return new Deadline(arr[2], deadlineDate, deadlineTime, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"            LocalDate eventDate \u003d LocalDate.parse(arr[3], Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"            String timeRange \u003d arr[4];","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"            return new Event(arr[2], eventDate, timeRange, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"xiangjunn"},"content":"     * Convert the task to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"    public abstract String stringToStore();","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":95}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.IncompleteTaskDescriptionException;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":" * Contains the task list. It has operations to change the tasks in the list.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"     * @param tasksInfo Arraylist of tasks loaded from storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"     * @param ui An Ui instance to deal with interactions with the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    public TaskList(ArrayList\u003cString\u003e tasksInfo, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        List\u003cTask\u003e list \u003d tasksInfo.stream().map(Task::convertToTask).collect(Collectors.toList());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"     * Display the list of tasks to the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    public void display() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"        ui.showTasks(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     * Mark the task at the given index.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     * @param index The index of the arraylist that contains the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     * @return The updated task list after the task is marked.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    public ArrayList\u003cTask\u003e markTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showMarkedTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            return this.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showMarkedTask(null);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"     * Add the task to the task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"     * @param keyword The command keyword to identify the type of task to be added.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"     * @return The updated task list after the task is added.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"     * @throws DukeException If the task fails to be added to the list.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"    public ArrayList\u003cTask\u003e addTask(String description, CommandKeyword keyword) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"            if (!description.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"                throw new IncompleteTaskDescriptionException(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"            if (description.matches(\"[^ ].* /by *[^ ].* [^ ].*\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"                int separator \u003d description.indexOf(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"                String taskDetail \u003d description.substring(0, separator).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"                String[] by \u003d description.substring(separator + 3).trim().split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"                    LocalDate date \u003d LocalDate.parse(by[0].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"                    LocalTime time \u003d LocalTime.parse(by[1].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xiangjunn"},"content":"                    task \u003d new Deadline(taskDetail, date, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xiangjunn"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xiangjunn"},"content":"                    throw new IncompleteTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"xiangjunn"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"xiangjunn"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"xiangjunn"},"content":"                throw new IncompleteTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"            if (description.matches(\"[^ ].* /at *[^ ].* [^ ].*\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"xiangjunn"},"content":"                int separator \u003d description.indexOf(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"xiangjunn"},"content":"                String taskDetail \u003d description.substring(0, separator).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"xiangjunn"},"content":"                String at \u003d description.substring(separator + 3).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"xiangjunn"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"xiangjunn"},"content":"                    int index \u003d at.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"xiangjunn"},"content":"                    LocalDate date \u003d LocalDate.parse(at.substring(0, index));","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"xiangjunn"},"content":"                    String timeRange \u003d at.substring(index + 1).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"xiangjunn"},"content":"                    task \u003d new Event(taskDetail, date, timeRange);","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"xiangjunn"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"xiangjunn"},"content":"                    throw new IncompleteTaskDescriptionException(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"xiangjunn"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"xiangjunn"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"xiangjunn"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"xiangjunn"},"content":"                throw new IncompleteTaskDescriptionException(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"xiangjunn"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"xiangjunn"},"content":"            // checked for command validity in duke.Parser class, so this should not execute at all","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"xiangjunn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"xiangjunn"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"xiangjunn"},"content":"        this.ui.showAddTask(task, this.tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"xiangjunn"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"xiangjunn"},"content":"     * Delete the task at the given index.","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"xiangjunn"},"content":"     * @param index The index of the arraylist that contains the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"xiangjunn"},"content":"     * @return The updated task list after the task is deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"xiangjunn"},"content":"    public ArrayList\u003cTask\u003e deleteTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"xiangjunn"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"xiangjunn"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showDeletedTask(task, this.tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"xiangjunn"},"content":"            return this.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"xiangjunn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showDeletedTask(null, -1);","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"xiangjunn"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"xiangjunn"},"content":"     * Find tasks by searching for a keyword.","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"xiangjunn"},"content":"     * @param keyword The keyword to match to.","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"xiangjunn"},"content":"    public void find(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"xiangjunn"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showNoKeyword();","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"xiangjunn"},"content":"            List\u003cTask\u003e filteredList \u003d this.tasks.stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"xiangjunn"},"content":"                    .filter(task -\u003e task.toString().contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showFilteredTasks(new ArrayList\u003cTask\u003e(filteredList));","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":151}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Todo is a specific type of task that contains the description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"    private static final char TASK_LETTER \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a todo task. It is used to instantiate a todo that is already marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether todo is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"     * Returns string representation of todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%c]%s\", Todo.TASK_LETTER, super.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"     * Convert todo to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"    public String stringToStore() {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"        return Todo.TASK_LETTER + \" | \" + this.getStatusIcon() + \" | \" + this.description + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":47}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"class CommandTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    private Command command;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"    private CommandKeyword keyword;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"        this.keyword \u003d CommandKeyword.DONE;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        this.command \u003d new Command(keyword, \"3\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    void getKeyword() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(this.keyword, this.command.getKeyword());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    void getRestOfCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"3\", this.command.getRestOfCommand());","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":26}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"class TodoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    private Todo todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"        this.todo \u003d new Todo(\"test description\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"[T][ ] test description\", this.todo.toString(),","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"                \"should return correct toString\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    void stringToStore() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"T |   | test description\\n\", this.todo.stringToStore(),","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"                \"should return correct string to store\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    void statusIconNotMarkedTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\" \", this.todo.getStatusIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"    void statusIconMarkedTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"        this.todo.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"X\", this.todo.getStatusIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"    void convertToTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"        Task task \u003d Task.convertToTask(\"T |   | test description\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(this.todo.toString(), task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":44}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"T | X | borrow book","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"D | X | return book | Oct 10 2021 | 14:55","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xiangjunn":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"event project meeting /at 2021-12-12 2-4pm","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"deadline return book /by 2021-10-10 14:55","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"find project","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"xiangjunn":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiangjunn":2,"-":19}}]
