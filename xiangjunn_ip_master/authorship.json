[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiangjunn":15,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"Duke is a **desktop app for managing tasks, optimized for use","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"via a Command Line Interface** (CLI) while still having the benefits","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"of a Graphical User Interface (GUI). You can keep track of all the","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"tasks you have using this app!","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"## Quick start","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"2. Download the latest duke.jar from [here](https://github.com/xiangjunn/ip/releases).","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"3. Copy the file to the folder you want to use as the home folder","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"for your Duke app.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"4. Double-click the file to start the app. The GUI similar to the below ","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"should appear in a few seconds.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"![screenshot of the app](Ui.png \"screenshot of the app\")","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"   ","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"5.Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"- `todo CS2103T iP` : Add a task called \"CS2103T iP\".","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"- `list` : Lists all tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"- `delete 3` : Deletes the 3rd task shown in the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"- `done 1` : Mark the 1st task shown in the task list as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"### Feature-Add","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"Add a new task to the list. There are three types of task,","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"namely ToDo, Deadline and Event. The commands to add each","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"of the task are `todo`, `deadline` and `event` respectively.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"### Feature-List","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"List all the tasks the user currently have.","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"### Feature-Done","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"Mark a task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"### Feature-Delete","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"Delete a task from the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"### Feature-Find","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"Find a task by searching for a keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"### Feature-Bye","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"Exits the app.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"### Feature-Friendlier syntax","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"Provide shorter aliases for keywords.","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"Refer to the Usage below for details of each command.","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"**Notes about the command format:**","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"the user. e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"parameter which can be used as `todo CS2103T quiz`.","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"- Extraneous parameters for commands that do not take in","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"  parameters (such as `list` and `bye`) will be","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"  ignored. e.g. if the command specifies `list 123`, it will","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"  be interpreted as `list`.","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"  ","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"### `todo` - Add a ToDo task","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"Add a ToDo task to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"format : `todo DESCRIPTION`","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"`todo wash clothes`","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"        [T][] wash clothes","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"xiangjunn"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"xiangjunn"},"content":"### `deadline` - Add a Deadline task","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"xiangjunn"},"content":"Add a Deadline task to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"xiangjunn"},"content":"format : `deadline DESCRIPTION /by DATE TIME`","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"xiangjunn"},"content":"**Note:**","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"xiangjunn"},"content":"- DATE is in `yyyy-MM-dd` format. e.g. 2021-11-11","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"xiangjunn"},"content":"- TIME is in `hh:mm` format. e.g. 23:11","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"xiangjunn"},"content":"`deadline iP submission /by 2021-09-16 23:59`","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"xiangjunn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"xiangjunn"},"content":"        [D][] iP submission (by: Sep 16 2021","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"xiangjunn"},"content":"23:59)        ","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"xiangjunn"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"xiangjunn"},"content":"### `event` - Add an Event task","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"xiangjunn"},"content":"Add an Event task to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"xiangjunn"},"content":"format : `event DESCRIPTION /at DATE DETAILS`","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"xiangjunn"},"content":"**Note:**","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"xiangjunn"},"content":"- DATE is in `yyyy-MM-dd` format. e.g. 2021-12-12","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"xiangjunn"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"xiangjunn"},"content":"`event Apple event /at 2021-09-15 Marina Bay Sands from 2pm to 5pm`","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"xiangjunn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":138,"author":{"gitId":"xiangjunn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"xiangjunn"},"content":"        [E][] Apple event (at: Sep 15 2021","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"xiangjunn"},"content":"Marina Bay Sands from 2pm to 5pm)        ","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"xiangjunn"},"content":"    Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"xiangjunn"},"content":"### `list` - List all the current tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"xiangjunn"},"content":"List all the current tasks to the user in the order they were added.","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"xiangjunn"},"content":"format : `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"xiangjunn"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"xiangjunn"},"content":"`todo workout` to add a ToDo task","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"xiangjunn"},"content":"`list` show the latest tasks to the user","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"xiangjunn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"xiangjunn"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"xiangjunn"},"content":"    1.[T][X] CS2103T iP","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"xiangjunn"},"content":"    2.[D][] CS2100 Assignment (by Sep 15 2021","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"xiangjunn"},"content":"13:00)","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"xiangjunn"},"content":"    3.[D][] iP submission (by: Sep 16 2021 23:59)","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"xiangjunn"},"content":"    4.[E][] Apple event (at: Sep 15 2021 Marina","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"xiangjunn"},"content":"Bay Sands from 2pm to 5pm)","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"xiangjunn"},"content":"    5.[T][] workout ","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"xiangjunn"},"content":"### `done` - Marks a task as done","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"xiangjunn"},"content":"Marks a task from the task list as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"xiangjunn"},"content":"format : `done INDEX`","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"xiangjunn"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"xiangjunn"},"content":"`done 2` Mark the 2nd task shown in the task list as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"xiangjunn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"xiangjunn"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"xiangjunn"},"content":"        [D][X] CS2100 Assignment (by: Sep 15","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"xiangjunn"},"content":"2021 13:00)","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"xiangjunn"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"xiangjunn"},"content":"Deletes a task from the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"xiangjunn"},"content":"format : `delete INDEX`","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"xiangjunn"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"xiangjunn"},"content":"`delete 5` Delete the 5th task shown in the task list. ","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"xiangjunn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"xiangjunn"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"xiangjunn"},"content":"        [T][] workout","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"xiangjunn"},"content":"    Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"xiangjunn"},"content":"### `find` - Find a task","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"xiangjunn"},"content":"Find a task by searching for a keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"xiangjunn"},"content":"format : `find KEYWORD`","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"xiangjunn"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"xiangjunn"},"content":"`find Sep 15` Show a list of tasks matching the keyword \"Sep 15\"","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"xiangjunn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":213,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"xiangjunn"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"xiangjunn"},"content":"    1.[D][] CS2100 Assignment (by Sep 15 2021","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"xiangjunn"},"content":"13:00)","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"xiangjunn"},"content":"    2.[E][] Apple event (at: Sep 15 2021 Marina","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"xiangjunn"},"content":"Bay Sands from 2pm to 5pm)","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"xiangjunn"},"content":"### `bye` - Exit the app","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"xiangjunn"},"content":"Show a display message when user enters the command and exit the app after some delay.","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"xiangjunn"},"content":"format : `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"xiangjunn"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"xiangjunn"},"content":"`bye` Exit the app after a goodbye message","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"xiangjunn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"xiangjunn"},"content":"Hope to see you again!! ^_^","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"xiangjunn"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"xiangjunn"},"content":"### `Friendlier syntax` - Shorter aliases","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"xiangjunn"},"content":"Provide shorter aliases for keywords.","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"xiangjunn"},"content":"Shorter aliases for respective keywords:","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"xiangjunn"},"content":"- `todo` : `t`","lastModifiedDate":"2021-09-15"},{"lineNumber":245,"author":{"gitId":"xiangjunn"},"content":"- `deadline` : `d`","lastModifiedDate":"2021-09-15"},{"lineNumber":246,"author":{"gitId":"xiangjunn"},"content":"- `event` : `e`","lastModifiedDate":"2021-09-15"},{"lineNumber":247,"author":{"gitId":"xiangjunn"},"content":"- `delete` : `del`","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"xiangjunn"},"content":"- `find` : `f`","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"xiangjunn"},"content":"- `list` : `l`","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"xiangjunn"},"content":"## Saving the data","lastModifiedDate":"2021-09-15"},{"lineNumber":252,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"xiangjunn"},"content":"Tasks data are saved in the hard disk automatically after any command","lastModifiedDate":"2021-09-15"},{"lineNumber":254,"author":{"gitId":"xiangjunn"},"content":"that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-15"},{"lineNumber":255,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"xiangjunn"},"content":"## Command summary","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"xiangjunn"},"content":"|Action|Format|","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"xiangjunn"},"content":"|------|------|","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"xiangjunn"},"content":"|todo|`todo DESCRIPTION`\u003cbr\u003e`t DESCRIPTION`|","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"xiangjunn"},"content":"|deadline|`deadline DESCRIPTION /by DATE TIME`\u003cbr\u003e`d DESCRIPTION /by DATE TIME`|","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"xiangjunn"},"content":"|event|`event DESCRIPTION /at DATE DETAILS`\u003cbr\u003e`e DESCRIPTION /at DATE DETAILS`|","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"xiangjunn"},"content":"|list|`list`\u003cbr\u003e`l`|","lastModifiedDate":"2021-09-15"},{"lineNumber":263,"author":{"gitId":"xiangjunn"},"content":"|done|`done INDEX`|","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"xiangjunn"},"content":"|delete|`delete INDEX`\u003cbr\u003e`del INDEX`|","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"xiangjunn"},"content":"|find|`find KEYWORD`\u003cbr\u003e`f KEYWORD`|","lastModifiedDate":"2021-09-15"},{"lineNumber":266,"author":{"gitId":"xiangjunn"},"content":"|bye|`bye`|","lastModifiedDate":"2021-09-15"},{"lineNumber":267,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"xiangjunn":238,"-":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":" * The main program of the chatbot Duke. Consists of Tasklist, Ui and Storage instances.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"public class Duke {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a Duke chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    public Duke(VBox dialogContainer) {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        this.ui \u003d new Ui(dialogContainer);","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        ui.greetUser();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"            HashMap\u003cString, CommandKeyword\u003e listOfCommands \u003d this.storage.loadCommands();","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"            this.ui.setListOfCommands(listOfCommands);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasks(), this.ui);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"     * Gets the response of Duke based on the user input.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     * @return A boolean to represent the continuation of the application.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    public boolean getResponse(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"        boolean shouldExit \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"        ui.showInput(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"            Command command \u003d this.ui.readCommand(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"            shouldExit \u003d Parser.parse(command, this.tasks, this.storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"            if (shouldExit) {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"                ui.showFarewell();","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showError(e);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"        return shouldExit;","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xiangjunn":57,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import duke.gui.Main;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"xiangjunn":13}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":" * Blueprint for a user command. Consists of a keyword and the rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"public class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    private CommandKeyword keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"    private String restOfCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a user command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"     * @param keyword The user command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"     * @param restOfCommand The rest of the command, if any.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    public Command(CommandKeyword keyword, String restOfCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"        this.restOfCommand \u003d restOfCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * Returns the command keyword of a command.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"     * @return The command keyword of a command.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    public CommandKeyword getKeyword() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"        return this.keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     * Returns the rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"     * @return The rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    public String getRestOfCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        return this.restOfCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     * Indicates whether some other object is \"equal to\" this Command instance.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     * @param o The reference object with which to compare.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     * @return True if the obj is an instance of None; false otherwise.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"            return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        Command command \u003d (Command) o;","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"        return keyword \u003d\u003d command.keyword \u0026\u0026 Objects.equals(restOfCommand, command.restOfCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":57}},{"path":"src/main/java/duke/command/CommandKeyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Contains all the valid user commands.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public enum CommandKeyword {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"    LIST, DONE, DELETE, BYE, TODO, DEADLINE, EVENT, FIND;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiangjunn":8}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Exceptions related to Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"     * Returns a message to inform user about the exception.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     * @return A message to inform user about the exception.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        return \"OOPS!!! An error has occurred\";","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xiangjunn":17}},{"path":"src/main/java/duke/exception/IncompleteTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Exception due to user inputting a command to add task but the task description is incomplete.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class IncompleteTaskDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a IncompleteTaskDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     * @param taskName Name of the type of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    public IncompleteTaskDescriptionException(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     * Returns a message to inform user about the task that is incomplete.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * @return A message to inform user about the task that is incomplete.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"OOPS!!! The description of a %s is either empty or in wrong format.\", this.taskName);","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xiangjunn":28}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":" * Exception due to user inputting an invalid command.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"     * Returns a message to inform user about the command that is invalid.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"     * @return A message to inform user about the command that is invalid.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xiangjunn":17}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.gui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    private Label name;","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"    public void setUserId() {","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"        this.dialog.setId(\"userDialog\");","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"        this.name.setText(name);","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"        if (name.equals(\"Me\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"            this.name.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"    public void setBackgroundColor(String colorHex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"        this.dialog.setStyle(\"-fx-background-color: #\" + colorHex);","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"xiangjunn":78}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.gui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    private Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/saitama.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"            stage.setTitle(\"Saitama\");","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(stage);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"            stage.show();","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"xiangjunn":37}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.gui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    private Stage stage;","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    public void setDuke(Stage stage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"        this.duke \u003d new Duke(dialogContainer);","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"        boolean shouldExit \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"        if (shouldExit) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"            delay.setOnFinished(event -\u003e this.stage.close());","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            delay.play();","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"xiangjunn":56}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":" * Deals with making sense of the user command and executing it.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"     * Executes user command and returns a boolean that represents the continuation of the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"     * Does not check for validity of user command.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     * @param command Command inputted by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     * @param tl List of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     * @param storage Storage that store tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * @return A boolean to determine if the program should continue.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     * @throws DukeException If the command execution is unsuccessful.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    public static boolean parse(Command command, TaskList tl, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"        boolean shouldExit \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        CommandKeyword keyword \u003d command.getKeyword();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        String restOfCommand \u003d command.getRestOfCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"            tl.addTask(restOfCommand, keyword, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"        case LIST:","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"            tl.display();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        case DONE:","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"            int indexToMark \u003d Parser.stringToInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"            tl.markTask(indexToMark, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"        case DELETE:","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"            int indexToDelete \u003d Parser.stringToInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"            tl.deleteTask(indexToDelete, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"        case BYE:","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"            shouldExit \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"            tl.find(restOfCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            /* will never be executed because the error would have been caught in readCommand() method in Ui class","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"               if the user input a command that is invalid */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"            assert false : \"Error not caught in readCommand() method in Ui class\";","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"        return shouldExit;","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"     * Converts a type String of an integer to type int.","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"     * Returns the integer that is converted.","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"     * @param description The string that is to be converted.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"     * @return The converted integer.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"     * @throws InvalidCommandException If description does not represent a type String of an integer.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"    public static int stringToInt(String description) throws InvalidCommandException {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"        if (description.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"            return Integer.parseInt(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":75}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.io.File;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    private File tasksFile;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    private File commandsFile;","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a storage to store tasks. It takes in an Ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    public Storage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"            String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"            Path path \u003d Paths.get(dir, \"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"            // create the data folder if it does not exist","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"                path \u003d Files.createDirectory(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"            File tasksFile \u003d path.resolve(\"duke.txt\").toFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"            File commandsFile \u003d path.resolve(\"commands.txt\").toFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"            this.tasksFile \u003d tasksFile;","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"            this.commandsFile \u003d commandsFile;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"            if (!this.tasksFile.exists()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"                this.tasksFile.createNewFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"            if (!this.commandsFile.exists()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"                this.commandsFile.createNewFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"                this.createDefaultCommands(this.commandsFile);","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"            assert this.tasksFile !\u003d null \u0026\u0026 this.commandsFile !\u003d null : \"File not created\";","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            // this exception should not occur because the input(path) is fixed","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"            assert false : e.getMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"     * Loads tasks from the file and add each line to an arraylist.","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"     * @return An arraylist of strings, each representing a task information.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"    public ArrayList\u003cString\u003e loadTasks() throws IOException {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"            Scanner sc \u003d new Scanner(this.tasksFile);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"            ArrayList\u003cString\u003e tasksInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"                tasksInfo.add(sc.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"            return tasksInfo;","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"            throw e;","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"     * Saves tasks in the file according to the arraylist of tasks given.","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"     * @param tasks An arraylist of tasks to be saved.","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"                FileWriter fw \u003d new FileWriter(this.tasksFile);","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xiangjunn"},"content":"                    String taskInfo \u003d tasks.get(i).stringToStore();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xiangjunn"},"content":"                    fw.write(taskInfo);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xiangjunn"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"                fw.flush();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"xiangjunn"},"content":"                fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"xiangjunn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"xiangjunn"},"content":"                System.out.println(\"Failed to update storage.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"            // there is no task to save","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"xiangjunn"},"content":"     * Creates a file with a hashmap with default commands.","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"xiangjunn"},"content":"     * @param file The file to store the hashmap of commands.","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"xiangjunn"},"content":"    public void createDefaultCommands(File file) {","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"xiangjunn"},"content":"        HashMap\u003cString, CommandKeyword\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"TODO\", CommandKeyword.TODO);","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"T\", CommandKeyword.TODO);","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"DEADLINE\", CommandKeyword.DEADLINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"D\", CommandKeyword.DEADLINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"EVENT\", CommandKeyword.EVENT);","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"E\", CommandKeyword.EVENT);","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"DELETE\", CommandKeyword.DELETE);","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"DEL\", CommandKeyword.DELETE);","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"DONE\", CommandKeyword.DONE);","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"BYE\", CommandKeyword.BYE);","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"FIND\", CommandKeyword.FIND);","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"F\", CommandKeyword.FIND);","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"LIST\", CommandKeyword.LIST);","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"xiangjunn"},"content":"        map.put(\"L\", CommandKeyword.LIST);","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"xiangjunn"},"content":"            FileOutputStream fos \u003d new FileOutputStream(file);","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"xiangjunn"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"xiangjunn"},"content":"            oos.writeObject(map);","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"xiangjunn"},"content":"            oos.flush();","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"xiangjunn"},"content":"            oos.close();","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"xiangjunn"},"content":"            fos.close();","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"xiangjunn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"xiangjunn"},"content":"            //","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"xiangjunn"},"content":"     * Loads the commands from the file and return the hashmap.","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"xiangjunn"},"content":"     * @return The hashmap containing keys of the commands user can input.","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"xiangjunn"},"content":"    public HashMap\u003cString, CommandKeyword\u003e loadCommands() {","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"xiangjunn"},"content":"            FileInputStream fis \u003d new FileInputStream(this.commandsFile);","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"xiangjunn"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"xiangjunn"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"xiangjunn"},"content":"            // It is safe to typecast because what is added to the file is a hashmap.","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"xiangjunn"},"content":"            HashMap\u003cString, CommandKeyword\u003e mapInFile \u003d (HashMap\u003cString, CommandKeyword\u003e) ois.readObject();","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"xiangjunn"},"content":"            ois.close();","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"xiangjunn"},"content":"            fis.close();","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"xiangjunn"},"content":"            return mapInFile;","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"xiangjunn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"xiangjunn"},"content":"            return null;","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":153}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.IncompleteTaskDescriptionException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":" * Deadline is a specific type of task that contains the description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    private static final char TASK_LETTER \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     * @param date The deadline date.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * @param time The deadline time.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the deadline is done.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    public Deadline(String description, LocalDate date, LocalTime time, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"     * Returns string representation of a deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing the deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        String formattedDate \u003d this.date.format(Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%c]%s (by: %s %s)\", Deadline.TASK_LETTER,","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"                super.toString(), formattedDate, this.time);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     * Converts the deadline to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"    public String stringToStore() {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"        String formattedDate \u003d this.date.format(Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"%c | %s | %s | %s | %s\\n\", Deadline.TASK_LETTER,","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"                this.getStatusIcon(), this.description, formattedDate, this.time);","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"     * Creates a new deadline object.","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the deadline is done.","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"     * @return The deadline object created.","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"     * @throws IncompleteTaskDescriptionException If the description is empty or in incorrect format.","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"    public static Deadline create(String description, boolean isDone) throws IncompleteTaskDescriptionException {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"        if (description.matches(\"[^ ].* /by *[^ ].* [^ ].*\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"            String deadlineSeparator \u003d \"/by\";","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"            int separatorIndex \u003d description.indexOf(deadlineSeparator);","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"            String taskDetail \u003d description.substring(0, separatorIndex).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"            int len \u003d deadlineSeparator.length();","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"            String[] by \u003d description.substring(separatorIndex + len).trim().split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"                LocalDate date \u003d LocalDate.parse(by[0].trim());","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"                LocalTime time \u003d LocalTime.parse(by[1].trim());","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"                return new Deadline(taskDetail, date, time, isDone);","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"                throw new IncompleteTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"            throw new IncompleteTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":81}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.IncompleteTaskDescriptionException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":" * Event is a specific type of task that contains the description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    private static final char TASK_LETTER \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    private String timeRange;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * @param timeRange The start and end time of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the event is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    public Event(String description, LocalDate date, String timeRange, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"     * Returns string representation of an event.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing the event.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        String formattedDate \u003d this.date.format(Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%c]%s (at: %s %s)\", Event.TASK_LETTER,","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"                super.toString(), formattedDate, this.timeRange);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     * Converts the event to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"    public String stringToStore() {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"        String formattedDate \u003d this.date.format(Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"%c | %s | %s | %s | %s\\n\",","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"                Event.TASK_LETTER, this.getStatusIcon(), this.description, formattedDate, this.timeRange);","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"     * Creates a new event object.","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the event is done.","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"     * @return The event object created.","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"     * @throws IncompleteTaskDescriptionException If the description is empty or in incorrect format.","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"    public static Event create(String description, boolean isDone) throws IncompleteTaskDescriptionException {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"        if (description.matches(\"[^ ].* /at *[^ ].* [^ ].*\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"            String eventSeparator \u003d \"/at\";","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"            int separatorIndex \u003d description.indexOf(eventSeparator);","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"            String taskDetail \u003d description.substring(0, separatorIndex).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"            int len \u003d eventSeparator.length();","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"            String at \u003d description.substring(separatorIndex + len).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"                int index \u003d at.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"                LocalDate date \u003d LocalDate.parse(at.substring(0, index));","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"                String timeRange \u003d at.substring(index + 1).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"                return new Event(taskDetail, date, timeRange, isDone);","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"                throw new IncompleteTaskDescriptionException(\"event\");","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"            throw new IncompleteTaskDescriptionException(\"event\");","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":82}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":" * Task is an abstract class that provides attributes and methods that are common to all types of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a task. Should not be used to instantiate Task object because Task is an abstract class.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"     * Returns the status icon of the task as a string.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"     * @return Status icon.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"     * Converts the task info loaded from storage to its corresponding task object.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"     * @param taskInfo The information of the task loaded from storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"     * @return The corresponding task.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"    public static Task convertToTask(String taskInfo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"        String[] arr \u003d taskInfo.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"        char letter \u003d arr[0].charAt(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"        boolean isDone \u003d arr[1].equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"        switch (letter) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"            return new Todo(arr[2], isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(arr[3], Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"            LocalTime deadlineTime \u003d LocalTime.parse(arr[4]);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"            return new Deadline(arr[2], deadlineDate, deadlineTime, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"            LocalDate eventDate \u003d LocalDate.parse(arr[3], Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"            String timeRange \u003d arr[4];","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"            return new Event(arr[2], eventDate, timeRange, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"     * Converts the task to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"    public abstract String stringToStore();","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":85}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":" * Contains the task list. It has operations to change the tasks in the list.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a taskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     * @param tasksInfo Arraylist of tasks loaded from storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * @param ui An Ui instance to deal with interactions with the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    public TaskList(ArrayList\u003cString\u003e tasksInfo, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        List\u003cTask\u003e list \u003d tasksInfo.stream().map(Task::convertToTask).collect(Collectors.toList());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"    public void display() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        ui.showTasks(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"     * Marks the task at the given index.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     * @param index The index of the arraylist that contains the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     * @param storage The storage to update the task marked.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    public void markTask(int index, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showMarkedTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"            storage.saveTasks(this.tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"            assert index \u003e\u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showMarkedTask(null);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"     * Adds the task to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"     * @param keyword The command keyword to identify the type of task to be added.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"     * @param storage The storage to save the task added.","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"     * @throws DukeException If the task fails to be added to the list.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"    public void addTask(String description, CommandKeyword keyword, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"        Task task;","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"            task \u003d Todo.create(description, false);","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"            task \u003d Deadline.create(description, false);","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"            task \u003d Event.create(description, false);","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"            // checked for command validity in duke.parser.Parser class, so this should not execute at all","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"        assert task !\u003d null : \"Task not added successfully but error is not caught\";","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"        this.ui.showAddTask(task, this.tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"        storage.saveTasks(this.tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"xiangjunn"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"     * @param index The index of the arraylist that contains the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"xiangjunn"},"content":"     * @param storage The storage to update the task marked.","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"xiangjunn"},"content":"    public void deleteTask(int index, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showDeletedTask(task, this.tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"xiangjunn"},"content":"            storage.saveTasks(this.tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"xiangjunn"},"content":"            assert index \u003e\u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"xiangjunn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showDeletedTask(null, -1);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"xiangjunn"},"content":"     * Finds tasks by searching for a keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"xiangjunn"},"content":"     * @param keyword The keyword to match to.","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"xiangjunn"},"content":"    public void find(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"xiangjunn"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showNoKeyword();","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"xiangjunn"},"content":"            List\u003cTask\u003e filteredList \u003d this.tasks.stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"xiangjunn"},"content":"                    .filter(task -\u003e task.toString().contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"xiangjunn"},"content":"            this.ui.showFilteredTasks(new ArrayList\u003c\u003e(filteredList));","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":118}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.IncompleteTaskDescriptionException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":" * Todo is a specific type of task that contains the description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    private static final char TASK_LETTER \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"     * Constructs a todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether todo is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"     * Returns string representation of todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representing todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"[%c]%s\", Todo.TASK_LETTER, super.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"     * Converts todo to a string that can be saved to a file and converted back to itself.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"     * @return The string to be stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    public String stringToStore() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"        return String.format(\"%c | %s | %s\\n\", Todo.TASK_LETTER, this.getStatusIcon(), this.description);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     * Creates a new todo object.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"     * @param isDone Whether the todo is done.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"     * @return The todo object created.","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"     * @throws IncompleteTaskDescriptionException If the description is empty or in incorrect format.","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"    public static Todo create(String description, boolean isDone) throws IncompleteTaskDescriptionException {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"        if (!description.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"            throw new IncompleteTaskDescriptionException(\"todo\");","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xiangjunn":56}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import duke.gui.DialogBox;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mrbean.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/saitama.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    private HashMap\u003cString, CommandKeyword\u003e listOfCommands;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    public Ui(VBox dialogContainer) {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    private void formatMessage(String message, boolean isErrorMessage) {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        String formattedMessage \u003d String.format(\"%s\", message.replaceAll(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        DialogBox dialogBox \u003d DialogBox.getDukeDialog(formattedMessage, dukeImage);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"        dialogBox.setName(\"Saitama\");","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"        if (isErrorMessage) {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"            dialogBox.setBackgroundColor(\"ff9999\");","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"     * Shows the input as a dialog in the GUI.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"     * @param input The input to be shown.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    public void showInput(String input) {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"        DialogBox dialogBox \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"        dialogBox.setUserId();","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"        dialogBox.setName(\"Me\");","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"     * Displays a welcome message to user when Duke starts.","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    public void greetUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xiangjunn"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Saitama\\nI do 100 sit-ups, 100 push-ups,\"","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"                + \" 100 squats \\nand a 10 kilometer run every day! No cap\";","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"        this.formatMessage(greetMessage, false);","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"     * Displays an error message to user according to the exception.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"     * @param e An exception thrown due to various reasons such as incorrect user command.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"        this.formatMessage(e.getMessage(), true);","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"     * Displays a farewell message to user before ending the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"xiangjunn"},"content":"    public void showFarewell() {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xiangjunn"},"content":"        this.formatMessage(\"Hope to see you again!! ^_^\", false);","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"     * Displays a message to user if there is an error loading tasks from the file.","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"xiangjunn"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xiangjunn"},"content":"        this.formatMessage(\"There is an error while loading tasks or commands.\", true);","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"xiangjunn"},"content":"     * Reads user command and create a command object to represent it.","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"xiangjunn"},"content":"     * @return A command object that consists of keyword and rest of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"xiangjunn"},"content":"     * @throws IllegalArgumentException If the command keyword is invalid.","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"xiangjunn"},"content":"    public Command readCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"xiangjunn"},"content":"        String[] stringArr \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"xiangjunn"},"content":"        String commandName \u003d stringArr[0].toUpperCase();","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"xiangjunn"},"content":"        CommandKeyword keyword \u003d this.listOfCommands.get(commandName);","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"        if (keyword \u003d\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"xiangjunn"},"content":"        String restOfCommand \u003d stringArr.length \u003e 1 ? stringArr[1] : \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"xiangjunn"},"content":"        return new Command(keyword, restOfCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"xiangjunn"},"content":"     * Diplays a message to user after user successfully added a task.","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"xiangjunn"},"content":"     * @param task Task that is added.","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"xiangjunn"},"content":"     * @param totalTasks Total number of tasks in the list after the task is added.","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"xiangjunn"},"content":"    public void showAddTask(Task task, int totalTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"xiangjunn"},"content":"        this.formatMessage(String.format(\"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"xiangjunn"},"content":"                + \"\\n\\t%s\"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"xiangjunn"},"content":"                + \"\\nNow you have %d tasks in the list.\", task, totalTasks), false);","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"xiangjunn"},"content":"     * Displays to user the list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"xiangjunn"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"xiangjunn"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"xiangjunn"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"xiangjunn"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"xiangjunn"},"content":"            this.formatMessage(\"No task is found!\", true);","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"xiangjunn"},"content":"            boolean isMoreThanOne \u003d len \u003e 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"xiangjunn"},"content":"            String isOrAre \u003d isMoreThanOne ? \"are\" : \"is\";","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"xiangjunn"},"content":"            String taskName \u003d isMoreThanOne ? \"tasks\" : \"task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"xiangjunn"},"content":"            String message \u003d String.format(\"Here %s the matching %s in your list:\\n\", isOrAre, taskName);","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"xiangjunn"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"xiangjunn"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"xiangjunn"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"xiangjunn"},"content":"                message +\u003d String.format(\"%d.%s\\n\", num, task);","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"xiangjunn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"xiangjunn"},"content":"            this.formatMessage(message, false);","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"xiangjunn"},"content":"     * Displays a message to user after user try to mark a task.","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"xiangjunn"},"content":"     * Message displayed depends on the successfulness of the mark operation.","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"xiangjunn"},"content":"     * @param task The task to mark.","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"xiangjunn"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"xiangjunn"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"xiangjunn"},"content":"            this.formatMessage(String.format(\"Nice! I\u0027ve marked this task as done: \\n\\t%s\", task), false);","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"xiangjunn"},"content":"            this.formatMessage(\"There is no such task to mark!\", true);","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"xiangjunn"},"content":"     * Displays a message to user after user try to delete a task.","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"xiangjunn"},"content":"     * Message displayed depends on the successfulness of the delete operation.","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"xiangjunn"},"content":"     * @param task The task to delete.","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"xiangjunn"},"content":"     * @param totalTasks The total number of tasks remaining.","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"xiangjunn"},"content":"    public void showDeletedTask(Task task, int totalTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"xiangjunn"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"xiangjunn"},"content":"            this.formatMessage(String.format(\"Noted. I\u0027ve removed this task: \\n\\t%s\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"xiangjunn"},"content":"                    + \"Now you have %d tasks in the list.\", task, totalTasks), false);","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"xiangjunn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"xiangjunn"},"content":"            this.formatMessage(\"There is no such task to delete!\", true);","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":167,"author":{"gitId":"xiangjunn"},"content":"     * Displays a message to user if user did not include keywored when using the command find.","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"xiangjunn"},"content":"    public void showNoKeyword() {","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"xiangjunn"},"content":"        this.formatMessage(\"There is no keyword to search for!\", true);","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":174,"author":{"gitId":"xiangjunn"},"content":"     * Displays the filtered tasks as a message to user based on the search.","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"xiangjunn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"xiangjunn"},"content":"     * @param tasks The arraylist of filtered tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":177,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"xiangjunn"},"content":"    public void showFilteredTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"xiangjunn"},"content":"        this.showTasks(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"xiangjunn"},"content":"    public void setListOfCommands(HashMap\u003cString, CommandKeyword\u003e listOfCommands) {","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"xiangjunn"},"content":"        this.listOfCommands \u003d listOfCommands;","lastModifiedDate":"2021-09-07"},{"lineNumber":184,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":185}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"        \u003cHBox fx:id\u003d\"chatBackground\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"label\" maxWidth\u003d\"Infinity\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"55.0\" fitWidth\u003d\"55.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"            \u003cDropShadow\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"                  \u003cColor red\u003d\"1.0\" green\u003d\"1.0\" blue\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"               \u003c/color\u003e\u003c/DropShadow\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"         \u003c/effect\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        \u003cURL value\u003d\"@styles.css\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"xiangjunn":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter command here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"384.0\" minHeight\u003d\"555.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"        \u003cURL value\u003d\"@styles.css\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"xiangjunn":23}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"class CommandTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    private Command command;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"    private CommandKeyword keyword;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"        this.keyword \u003d CommandKeyword.DONE;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"        this.command \u003d new Command(keyword, \"3\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    void getKeyword() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(this.keyword, this.command.getKeyword());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    void getRestOfCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"3\", this.command.getRestOfCommand());","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":26}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"class TodoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"    private Todo todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"    void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"        this.todo \u003d new Todo(\"test description\", false);","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"    void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"[T][ ] test description\", this.todo.toString(),","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"                \"should return correct toString\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    void stringToStore() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"T |   | test description\\n\", this.todo.stringToStore(),","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"                \"should return correct string to store\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    void statusIconNotMarkedTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\" \", this.todo.getStatusIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"    void statusIconMarkedTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"        this.todo.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(\"X\", this.todo.getStatusIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"    void convertToTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"        Task task \u003d Task.convertToTask(\"T |   | test description\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"        assertEquals(this.todo.toString(), task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xiangjunn":44}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"package duke.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"import duke.command.CommandKeyword;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"public class UiTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"    void setUp() {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"        this.ui \u003d new Ui(new VBox());","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"        HashMap\u003cString, CommandKeyword\u003e listOfCommands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"        listOfCommands.put(\"LIST\", CommandKeyword.LIST);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"        this.ui.setListOfCommands(listOfCommands);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    void testInvalidReadCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"            this.ui.readCommand(\"Invalid command\");","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        });","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"    void testValidReadCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"            Command command \u003d this.ui.readCommand(\"list\");","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"            assertEquals(new Command(CommandKeyword.LIST, \"\"), command);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"            assertTrue(false);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"xiangjunn":44}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"T | X | borrow book","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"D | X | return book | Oct 10 2021 | 14:55","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xiangjunn":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"event project meeting /at 2021-12-12 2-4pm","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"deadline return book /by 2021-10-10 14:55","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"find project","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"xiangjunn":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiangjunn":2,"-":19}},{"path":"data/commands.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"xiangjunn":0}}]
