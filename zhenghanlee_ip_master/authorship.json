[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"import duke.command.CommandManager;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":" * Main class for the bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"    private static final DukeList LIST \u003d new DukeList();","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    private static final CommandManager COMMAND_MANAGER \u003d new CommandManager();","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"        String greetings \u003d \"Hello from\\n\" + logo + \"\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"        new Response(greetings).print();","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"        // Duke commands work with a registry so that add-ons can be developed with","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"        // commands simply registered like so","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"        COMMAND_MANAGER.registerCommands(new ListCommand(), new DoneCommand(), new ToDoCommand(), new EventCommand(),","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"                new DeadlineCommand(), new DeleteCommand());","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"        echoInput(new BufferedReader(new InputStreamReader(System.in)));","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"    private static void echoInput(BufferedReader reader) {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"zhenghanlee"},"content":"            input \u003d reader.readLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"zhenghanlee"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"zhenghanlee"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"zhenghanlee"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"zhenghanlee"},"content":"            terminate();","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"zhenghanlee"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"zhenghanlee"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zhenghanlee"},"content":"                COMMAND_MANAGER.processAndExecuteInput(input);","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"zhenghanlee"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"zhenghanlee"},"content":"                ex.getResponse().print();","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"zhenghanlee"},"content":"            echoInput(reader);","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"zhenghanlee"},"content":"    private static void terminate() {","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"zhenghanlee"},"content":"        new Response(\"Bye. Hope to see you again soon!\").print();","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"zhenghanlee"},"content":"     * Return the static DukeList of the program.","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"zhenghanlee"},"content":"     * @return program\u0027s list","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"zhenghanlee"},"content":"    public static DukeList getList() {","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"zhenghanlee"},"content":"        return LIST;","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"zhenghanlee":66}},{"path":"src/main/java/duke/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"import duke.database.Database;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"import duke.database.SQLite;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":" * Encapsulation of a task list in Duke, able to provide relevant responses on","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":" * its manipulation.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"public class DukeList {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"    private final Database database;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"    public DukeList() {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"        this.database \u003d new SQLite();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"        this.database.load();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"     * Add a task to the list and return a response on the added task.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"     * @param task to be added to the list","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"     * @return response to the addition","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"    public Response addWithResponse(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"        this.database.addTask(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"        return new Response(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + currentSizeMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"     * Return a response containing an iteration of all current tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"     * @return response to be printed","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"zhenghanlee"},"content":"    public Response currentListResponse() {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"zhenghanlee"},"content":"        List\u003cTask\u003e list \u003d this.database.getTasksList();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"zhenghanlee"},"content":"        String message \u003d IntStream.range(0, list.size()).mapToObj(i -\u003e (i + 1) + \". \" + list.get(i))","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"zhenghanlee"},"content":"                .reduce((str1, str2) -\u003e str1 + \"\\n\" + str2).orElse(\"You have not added any tasks!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"zhenghanlee"},"content":"        return new Response(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zhenghanlee"},"content":"     * Marks the given task (by index) as completed, and returns a response on","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zhenghanlee"},"content":"     * whether the operation is successful.","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"zhenghanlee"},"content":"     * @param i index of task to be marked as completed","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"zhenghanlee"},"content":"     * @return response on whether it is succcessful","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"zhenghanlee"},"content":"    public Response markCompleted(int i) {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"zhenghanlee"},"content":"        Task task \u003d this.database.markCompleted(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"zhenghanlee"},"content":"        if (task \u003d\u003d null)","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"zhenghanlee"},"content":"            throw new InvalidArgumentException(\"Invalid index!\\n\" + currentSizeMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"zhenghanlee"},"content":"        return new Response(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"zhenghanlee"},"content":"     * Removes the task in the given index from the list, and returns a response on","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"zhenghanlee"},"content":"     * whether the operation is successful.","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"zhenghanlee"},"content":"     * @param i index of task to be removed","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"zhenghanlee"},"content":"     * @return response on whether it is succcessful","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"zhenghanlee"},"content":"    public Response deleteWithResponse(int i) {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"zhenghanlee"},"content":"        Task task \u003d this.database.removeTask(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"zhenghanlee"},"content":"        if (task \u003d\u003d null)","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"zhenghanlee"},"content":"            throw new InvalidArgumentException(\"Invalid index!\\n\" + currentSizeMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"zhenghanlee"},"content":"        return new Response(\"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\" + currentSizeMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"zhenghanlee"},"content":"    private String currentSizeMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"zhenghanlee"},"content":"        int size \u003d this.database.getTasksList().size();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"zhenghanlee"},"content":"        String unit \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"zhenghanlee"},"content":"        return \"You now have \" + size + \" \" + unit + \" in the list!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zhenghanlee":80}},{"path":"src/main/java/duke/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":" * Encapsulates a response of the bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"public class Response {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"    private static final String PARTITION \u003d \"––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––\";","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"    private final String message;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    public Response(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"     * Prints the response in the system\u0027s output.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"    public void print() {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"        System.out.println(ANSI_CYAN + PARTITION + \"\\n\" + message + \"\\n\" + PARTITION + ANSI_RESET);","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zhenghanlee":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":" * Represent all commands used in Duke bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"public interface Command {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"     * Execute the command with given arguments.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"     * @param args arguments of the command","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    void exec(String args);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"     * Gets the label of the command, which will be used in the command line to call","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"     * this command.","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"     * @return label of the command","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    String getLabel();","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zhenghanlee":23}},{"path":"src/main/java/duke/command/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":" * Manager of all Duke\u0027s commands. All commands has to registered/added to its","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":" * registry to take effect.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"public class CommandManager {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    private final Map\u003cString, Command\u003e registry;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"    public CommandManager() {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"        this.registry \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"     * Puts commands under its registry, mapped to its label.","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"     * @param command to be registered","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"    public void registerCommands(Command... commands) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"        for (Command command : commands)","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"            this.registry.put(command.getLabel(), command);","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"     * Process the given input (user\u0027s input) and search for its corresponding","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"     * command to be executed with the given argument.","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"     * @param input straight out from the command line","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"    public void processAndExecuteInput(String input) {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"        Command command \u003d registry.get(arr[0]);","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"zhenghanlee"},"content":"            command.exec(arr.length \u003c\u003d 1 ? null : arr[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zhenghanlee"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"zhenghanlee"},"content":"            this.defaultExec();","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"zhenghanlee"},"content":"     * The default behaviour with the input if there are no commands called.","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"zhenghanlee"},"content":"    private void defaultExec() {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zhenghanlee"},"content":"        throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zhenghanlee":52}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" * A command to add a deadline task into main DukeList.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    public void exec(String args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"        if (args \u003d\u003d null || args.isEmpty())","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"        Duke.getList().addWithResponse(new DeadlineTask(args)).print();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"        return \"deadline\";","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":" * Represents a command that removes a task from the main DukeList.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    public void exec(String args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"            i \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"            throw new InvalidArgumentException(\"Invalid Input! Please enter an integer...\");","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"        Duke.getList().deleteWithResponse(i).print();","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"        return \"delete\";","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":27}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":" * Represents a command for which marks a task in the main dukelist as","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" * completed.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    public void exec(String args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"            i \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"            throw new InvalidArgumentException(\"Invalid Input! Please enter an integer...\");","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"        Duke.getList().markCompleted(i).print();","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"        return \"done\";","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":28}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" * A command to add an event task into main DukeList.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    public void exec(String args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"        if (args \u003d\u003d null || args.isEmpty())","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"        Duke.getList().addWithResponse(new EventTask(args)).print();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"        return \"event\";","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":" * Encapsulate a command on a DukeList.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    public void exec(String args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"        Duke.getList().currentListResponse().print();","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"        return \"list\";","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zhenghanlee":20}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.command;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" * A command to add a todo task into main DukeList.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"public class ToDoCommand implements Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    public void exec(String args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"        if (args \u003d\u003d null || args.isEmpty())","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"        Duke.getList().addWithResponse(new ToDoTask(args)).print();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"        return \"todo\";","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":24}},{"path":"src/main/java/duke/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.database;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.Connection;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.PreparedStatement;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.ResultSet;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.SQLException;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.DatabaseAccessException;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.DatabaseIOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":" * Encapsulates a database access and necessary methods for Duke\u0027s list.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"public abstract class Database {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"    protected Connection connection;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"    /** Name of database table. */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"    protected static final String DATABASE_NAME \u003d \"tasks_data\";","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"    protected static final String TASK_TABLE_NAME \u003d \"tasks\";","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"     * Returns connection established by the database loader.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"     * @return SQL connection","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"    public abstract Connection getSQLConnection();","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"     * Executes create table statement.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zhenghanlee"},"content":"    public abstract void load();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zhenghanlee"},"content":"     * Initializes and tests SQL connection by attempting to execute select","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zhenghanlee"},"content":"     * statements from respective tables in the database.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zhenghanlee"},"content":"    protected void initialize() {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"zhenghanlee"},"content":"        connection \u003d this.getSQLConnection();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zhenghanlee"},"content":"            PreparedStatement ps \u003d connection.prepareStatement(\"SELECT * FROM \" + TASK_TABLE_NAME);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zhenghanlee"},"content":"            ResultSet rs \u003d ps.executeQuery();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zhenghanlee"},"content":"            close(ps, rs);","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to access SQLite database...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zhenghanlee"},"content":"     * Returns the list of custom shops (represented by its custom model data)","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zhenghanlee"},"content":"     * unlocked by the player.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"zhenghanlee"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zhenghanlee"},"content":"     * @param player player of interest","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"zhenghanlee"},"content":"     * @return list of shops unlocked by the player","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zhenghanlee"},"content":"    public abstract List\u003cTask\u003e getTasksList();","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zhenghanlee"},"content":"     * Updates the shop owned by player to database.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zhenghanlee"},"content":"     * @param playerID player\u0027s UUID","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zhenghanlee"},"content":"     * @param number   updated number of shops owned","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zhenghanlee"},"content":"    public abstract void addTask(Task task);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zhenghanlee"},"content":"     * Removes a task from the database.","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zhenghanlee"},"content":"     * @param index index of the task, {@code 1} for the first task, {@code 2} for","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"zhenghanlee"},"content":"     *              the second task etc.","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zhenghanlee"},"content":"     * @return {@code null} if there are no tasks at the specified index","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"zhenghanlee"},"content":"    public abstract Task removeTask(int index);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"zhenghanlee"},"content":"     * Mark a task as completed in the database.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"zhenghanlee"},"content":"     * @param index index of the task, {@code 1} for the first task, {@code 2} for","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"zhenghanlee"},"content":"     *              the second task etc.","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"zhenghanlee"},"content":"     * @return task that is marked completed, {@code null} if there are no tasks at","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"zhenghanlee"},"content":"     *         the specified index","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"zhenghanlee"},"content":"    public abstract Task markCompleted(int index);","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"zhenghanlee"},"content":"     * Recreate a task based on provided information. Used when retrieving task from","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"zhenghanlee"},"content":"     * SQL database.","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"zhenghanlee"},"content":"     * @param type      type of task","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zhenghanlee"},"content":"     * @param name      name of task","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"zhenghanlee"},"content":"     * @param completed {@code true} if the task has been completed","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"zhenghanlee"},"content":"     * @param date      date of the task, nullable","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"zhenghanlee"},"content":"     * @return","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"zhenghanlee"},"content":"    protected Task createTask(TaskType type, String name, boolean completed, String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"zhenghanlee"},"content":"        LocalDate localDate \u003d Optional.ofNullable(date).filter(str -\u003e !str.equals(\"null\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"zhenghanlee"},"content":"                .map(str -\u003e LocalDate.parse(str)).orElse(null);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"zhenghanlee"},"content":"        switch (type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"zhenghanlee"},"content":"        case TODO:","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"zhenghanlee"},"content":"            return new ToDoTask(name, completed);","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"zhenghanlee"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"zhenghanlee"},"content":"            return new DeadlineTask(name, completed, localDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"zhenghanlee"},"content":"        case EVENT:","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"zhenghanlee"},"content":"            return new EventTask(name, completed, localDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"zhenghanlee"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"zhenghanlee"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"zhenghanlee"},"content":"     * Releases both the {@link PreparedStatement} and {@link ResultSet} of the","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"zhenghanlee"},"content":"     * database.","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"zhenghanlee"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"zhenghanlee"},"content":"     * @param ps PreparedStatement of the database","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"zhenghanlee"},"content":"     * @param rs ResultSet of the database","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"zhenghanlee"},"content":"    protected void close(PreparedStatement ps, ResultSet rs) {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"zhenghanlee"},"content":"            if (ps !\u003d null)","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"zhenghanlee"},"content":"                ps.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"zhenghanlee"},"content":"            if (rs !\u003d null)","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"zhenghanlee"},"content":"                rs.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"zhenghanlee"},"content":"            if (this.connection !\u003d null)","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"zhenghanlee"},"content":"                connection.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to close SQLite connection...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"zhenghanlee"},"content":"     * Close {@link PreparedStatement} and {@link Connection} to the database.","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"zhenghanlee"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"zhenghanlee"},"content":"     * @param ps   PreparedStatement of the database","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"zhenghanlee"},"content":"     * @param conn Connection to the database","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"zhenghanlee"},"content":"    protected void close(PreparedStatement ps) {","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"zhenghanlee"},"content":"            if (ps !\u003d null)","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"zhenghanlee"},"content":"                ps.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"zhenghanlee"},"content":"            if (this.connection !\u003d null)","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"zhenghanlee"},"content":"                connection.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to close SQLite connection...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":154,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":155,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"zhenghanlee"},"content":"     * Get directory for which the database will be saved into.","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"zhenghanlee"},"content":"     * @return database directory","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"zhenghanlee"},"content":"    private File getDataFolder() {","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"zhenghanlee"},"content":"        File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"zhenghanlee"},"content":"        dataFolder.mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"zhenghanlee"},"content":"        return dataFolder;","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"zhenghanlee"},"content":"    protected File createOrOpenDataFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"zhenghanlee"},"content":"        File dataFolder \u003d new File(this.getDataFolder(), DATABASE_NAME + \".db\");","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"zhenghanlee"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"zhenghanlee"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"zhenghanlee"},"content":"                dataFolder.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"zhenghanlee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"zhenghanlee"},"content":"                throw new DatabaseIOException(\"Unable to create data file!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"zhenghanlee"},"content":"        return dataFolder;","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zhenghanlee":177}},{"path":"src/main/java/duke/database/SQLite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.database;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.Connection;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.DriverManager;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.PreparedStatement;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.ResultSet;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.SQLException;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"import java.sql.Statement;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"import duke.exception.DatabaseAccessException;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":" * SQLite implementation of accessing the task database.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"public class SQLite extends Database {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    private static final String SQLITE_CREATE_TASK_TABLE_STATEMENT \u003d \"CREATE TABLE IF NOT EXISTS \" + TASK_TABLE_NAME","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"            + \" (`type` STRING NOT NULL, `name` TEXT NOT NULL, `completed` INTEGER NOT NULL, `date` TEXT);\";","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"    public Connection getSQLConnection() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"        File dataFile \u003d this.createOrOpenDataFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"            if (connection !\u003d null \u0026\u0026 !connection.isClosed()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"                return connection;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"            Class.forName(\"org.sqlite.JDBC\");","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"            connection \u003d DriverManager.getConnection(\"jdbc:sqlite:\" + dataFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"            return connection;","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"SQLite exception on initialize\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"        } catch (ClassNotFoundException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"You need the SQLite JBDC library. Google it. Put it in /lib folder.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zhenghanlee"},"content":"    public void load() {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zhenghanlee"},"content":"        this.connection \u003d getSQLConnection();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zhenghanlee"},"content":"            Statement s \u003d this.connection.createStatement();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"zhenghanlee"},"content":"            s.executeUpdate(SQLITE_CREATE_TASK_TABLE_STATEMENT);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zhenghanlee"},"content":"            s.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to access SQLite database...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zhenghanlee"},"content":"        initialize();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zhenghanlee"},"content":"    public List\u003cTask\u003e getTasksList() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zhenghanlee"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zhenghanlee"},"content":"            this.connection \u003d getSQLConnection();","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zhenghanlee"},"content":"            PreparedStatement ps \u003d connection.prepareStatement(\"SELECT * FROM \" + TASK_TABLE_NAME + \";\");","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"zhenghanlee"},"content":"            ResultSet rs \u003d ps.executeQuery();","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zhenghanlee"},"content":"            while (rs.next()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"zhenghanlee"},"content":"                TaskType type \u003d TaskType.valueOf(rs.getString(\"type\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zhenghanlee"},"content":"                String name \u003d rs.getString(\"name\");","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zhenghanlee"},"content":"                boolean completed \u003d rs.getBoolean(\"completed\");","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zhenghanlee"},"content":"                String date \u003d rs.getString(\"date\");","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zhenghanlee"},"content":"                list.add(this.createTask(type, name, completed, date));","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zhenghanlee"},"content":"            close(ps);","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to access SQLite database...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zhenghanlee"},"content":"        return list;","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zhenghanlee"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zhenghanlee"},"content":"        TaskType type \u003d task.getType();","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"zhenghanlee"},"content":"        String name \u003d task.getName();","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zhenghanlee"},"content":"        int completed \u003d task.isCompleted() ? 1 : 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"zhenghanlee"},"content":"        String date \u003d task.getDate() \u003d\u003d null ? null : task.getDate().toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"zhenghanlee"},"content":"            connection \u003d getSQLConnection();","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"zhenghanlee"},"content":"            PreparedStatement ps \u003d connection","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"zhenghanlee"},"content":"                    .prepareStatement(\"INSERT INTO \" + TASK_TABLE_NAME + \" (type, name, completed, date) VALUES(\u0027\"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"zhenghanlee"},"content":"                            + type + \"\u0027, \u0027\" + name + \"\u0027, \" + completed + \", \u0027\" + date + \"\u0027)\");","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"zhenghanlee"},"content":"            ps.executeUpdate();","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"zhenghanlee"},"content":"            close(ps);","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to access SQLite database...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"zhenghanlee"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"zhenghanlee"},"content":"        Task result \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"zhenghanlee"},"content":"            this.connection \u003d getSQLConnection();","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zhenghanlee"},"content":"            PreparedStatement ps \u003d connection","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"zhenghanlee"},"content":"                    .prepareStatement(\"SELECT rowid, * FROM \" + TASK_TABLE_NAME + \" ORDER BY rowid;\");","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"zhenghanlee"},"content":"            ResultSet rs \u003d ps.executeQuery();","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"zhenghanlee"},"content":"            int row \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"zhenghanlee"},"content":"            while (rs.next() \u0026\u0026 row \u003c index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"zhenghanlee"},"content":"                if (++row \u003d\u003d index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"zhenghanlee"},"content":"                    TaskType type \u003d TaskType.valueOf(rs.getString(\"type\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"zhenghanlee"},"content":"                    String name \u003d rs.getString(\"name\");","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"zhenghanlee"},"content":"                    boolean completed \u003d rs.getBoolean(\"completed\");","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"zhenghanlee"},"content":"                    String date \u003d rs.getString(\"date\");","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"zhenghanlee"},"content":"                    result \u003d this.createTask(type, name, completed, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"zhenghanlee"},"content":"                    int rowid \u003d rs.getInt(\"rowid\");","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"zhenghanlee"},"content":"                    ps \u003d connection","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"zhenghanlee"},"content":"                            .prepareStatement(\"DELETE FROM \" + TASK_TABLE_NAME + \" WHERE rowid \u003d \" + rowid + \";\");","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"zhenghanlee"},"content":"                    ps.executeUpdate();","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"zhenghanlee"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"zhenghanlee"},"content":"            close(ps, rs);","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to access SQLite database...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"zhenghanlee"},"content":"        return result;","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"zhenghanlee"},"content":"    public Task markCompleted(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"zhenghanlee"},"content":"        Task result \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"zhenghanlee"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"zhenghanlee"},"content":"            this.connection \u003d getSQLConnection();","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"zhenghanlee"},"content":"            PreparedStatement ps \u003d connection.prepareStatement(\"SELECT rowid, * FROM \" + TASK_TABLE_NAME + \";\");","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"zhenghanlee"},"content":"            ResultSet rs \u003d ps.executeQuery();","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"zhenghanlee"},"content":"            int row \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"zhenghanlee"},"content":"            while (rs.next() \u0026\u0026 row \u003c index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"zhenghanlee"},"content":"                if (++row \u003d\u003d index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"zhenghanlee"},"content":"                    TaskType type \u003d TaskType.valueOf(rs.getString(\"type\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"zhenghanlee"},"content":"                    String name \u003d rs.getString(\"name\");","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"zhenghanlee"},"content":"                    String date \u003d rs.getString(\"date\");","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"zhenghanlee"},"content":"                    result \u003d this.createTask(type, name, true, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"zhenghanlee"},"content":"                    int rowid \u003d rs.getInt(\"rowid\");","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"zhenghanlee"},"content":"                    ps \u003d connection.prepareStatement(","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"zhenghanlee"},"content":"                            \"UPDATE \" + TASK_TABLE_NAME + \" SET completed \u003d \" + 1 + \" WHERE rowid \u003d \" + rowid + \";\");","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"zhenghanlee"},"content":"                    ps.executeUpdate();","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"zhenghanlee"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"zhenghanlee"},"content":"            close(ps, rs);","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"zhenghanlee"},"content":"        } catch (SQLException ex) {","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"zhenghanlee"},"content":"            throw new DatabaseAccessException(\"Unable to access SQLite database...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"zhenghanlee"},"content":"        return result;","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zhenghanlee":153}},{"path":"src/main/java/duke/exception/DatabaseAccessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":" * Encapsulates exceptions thrown when accessing databases.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"public class DatabaseAccessException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"    public DatabaseAccessException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zhenghanlee":12}},{"path":"src/main/java/duke/exception/DatabaseIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":" * Thrown when there is an exception in file handling, creating or directory","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":" * access.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"public class DatabaseIOException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"    public DatabaseIOException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zhenghanlee":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import duke.Response;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":" * Encapsulates all exceptions that can occur in Duke bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"    private Response response;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"        this.response \u003d new Response(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"     * Get the response to be printed.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"     * @return response","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"    public Response getResponse() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"        return this.response;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":24}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":" * Thrown when the argument for a command is absent/invalid.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":12}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":" * Thrown when a command is not registered under the commands registry or does","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":" * not exists.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":13}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":" * A task with specified deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    public DeadlineTask(String task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"        super(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"        String[] arr \u003d task.split(\" /by \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"        if (arr.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"                this.date \u003d LocalDate.parse(arr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"        this.name \u003d arr[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"    public DeadlineTask(String name, boolean completed) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"        super(name, completed);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"        this.date \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"    public DeadlineTask(String name, boolean completed, LocalDate date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"        super(name, completed);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getDateString() + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":38}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":" * A task specifying an event with a date and time.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    public EventTask(String task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"        super(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"        String[] arr \u003d task.split(\" /at \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"        if (arr.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"                this.date \u003d LocalDate.parse(arr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"        this.name \u003d arr[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"    public EventTask(String name, boolean completed) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"        super(name, completed);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"        this.date \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"    public EventTask(String name, boolean completed, LocalDate date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"        super(name, completed);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getDateString() + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":" * Encapsulates a task in DukeList.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"    protected String name;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"        this(name, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"    public Task(String name, boolean completed) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenghanlee"},"content":"     * Mark the task as completed.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenghanlee"},"content":"    public void markCompleted() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenghanlee"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenghanlee"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenghanlee"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenghanlee"},"content":"        return this.completed;","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zhenghanlee"},"content":"     * Returns the name of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zhenghanlee"},"content":"     * @return name of the task","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zhenghanlee"},"content":"    public String getName() {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zhenghanlee"},"content":"        return this.name;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zhenghanlee"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zhenghanlee"},"content":"     * Return date of the task. It could a deadline/date for the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zhenghanlee"},"content":"     * ","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zhenghanlee"},"content":"     * @return date of task","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zhenghanlee"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zhenghanlee"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"zhenghanlee"},"content":"        return this.date;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"zhenghanlee"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"zhenghanlee"},"content":"        if (obj instanceof Task)","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"zhenghanlee"},"content":"            return ((Task) obj).name.equals(this.name);","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"zhenghanlee"},"content":"        return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"zhenghanlee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"zhenghanlee"},"content":"        return \"[\" + (this.completed ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"zhenghanlee"},"content":"    public TaskType getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zhenghanlee"},"content":"        return TaskType.byTask(this.getClass());","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zhenghanlee"},"content":"    protected String getDateString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"zhenghanlee"},"content":"        return this.date \u003d\u003d null ? \"\" : this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":75}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"    TODO(ToDoTask.class), DEADLINE(DeadlineTask.class), EVENT(EventTask.class);","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"    private Class\u003c? extends Task\u003e type;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"    private TaskType(Class\u003c? extends Task\u003e type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"    static TaskType byTask(Class\u003c? extends Task\u003e taskClass) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"        return Stream.of(values()).filter(taskType -\u003e taskType.type.equals(taskClass)).findFirst().orElse(null);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zhenghanlee":17}},{"path":"src/main/java/duke/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"package duke.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":" * A ToDo task.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"    public ToDoTask(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"    public ToDoTask(String name, boolean completed) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"        super(name, completed);","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenghanlee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenghanlee"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenghanlee"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenghanlee"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenghanlee"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenghanlee"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenghanlee"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenghanlee"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenghanlee"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenghanlee"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenghanlee"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenghanlee"},"content":"delete 5","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenghanlee"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenghanlee"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenghanlee"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenghanlee"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"delete -1","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zhenghanlee"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zhenghanlee"},"content":"delete 2","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zhenghanlee"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zhenghanlee"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenghanlee":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zhenghanlee"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhenghanlee"},"content":"java -classpath .:../bin/sqlite-jdbc-3.36.0.1.jar:../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"zhenghanlee":2}}]
