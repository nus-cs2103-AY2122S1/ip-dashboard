[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"public class Duke {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    private final String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"    public Duke(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"        Storage storage \u003d new Storage(\"list.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"        this.parser \u003d new Parser(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    void initialize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"        greet();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"        listen();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"        ui.printDivider();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"Hey there! I\u0027m %s%n\", name);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"How can I help you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"        ui.printDivider();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"    void listen() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"        String input;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"        boolean isListening;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"            input \u003d ui.readFromUser();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"            isListening \u003d parser.parseInput(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"        } while (isListening);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"        new Duke(\"HAL9000\").initialize();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":47}},{"path":"src/main/java/duke/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public DeadlineException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"    public DeadlineException(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"        super(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":10}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public DukeException(String str) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"Error: Whoops... \" + str);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":7}},{"path":"src/main/java/duke/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public EventException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"    public EventException(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"        super(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":10}},{"path":"src/main/java/duke/exception/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class ToDoException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDoException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.DeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.EventException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.ToDoException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns true if the program should still keep going on (e.g., when input is not equal to \"bye\")","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"     * @return true if input is not equal to \"bye\".","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    public boolean parseInput(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"        ui.printDivider();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"                ui.print(\"Goodbye human. See you soon!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"                return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"                printItems();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.contains(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"                markAsDone(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.contains(\"delete\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"                deleteItem(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.contains(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"                findItem(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"                addItem(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"        ui.printDivider();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"        return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"     * Parses add command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"    private void addItem(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"        Task newItem \u003d null;","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"        if (input.contains(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"            String[] parsedInput \u003d input.split(\" \", 2); // Splits input into array of [todo, ...]","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"kevinmingtarja"},"content":"                throw new ToDoException();","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"kevinmingtarja"},"content":"            newItem \u003d new ToDo(parsedInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"kevinmingtarja"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"kevinmingtarja"},"content":"            String[] parsedInput \u003d input.split(\" \", 2); // Splits input into array of [deadline, ...]","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"kevinmingtarja"},"content":"                throw new DeadlineException();","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"kevinmingtarja"},"content":"            String[] description \u003d parsedInput[1].split(\"/\");","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(description)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"kevinmingtarja"},"content":"                throw new DeadlineException(\"The deadline cannot be empty. Please provide a deadline for this task.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"kevinmingtarja"},"content":"            String name \u003d description[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"kevinmingtarja"},"content":"            String deadline \u003d description[1].split(\" \")[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"kevinmingtarja"},"content":"            newItem \u003d new Deadline(name, LocalDate.parse(deadline));","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"kevinmingtarja"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"kevinmingtarja"},"content":"            String[] parsedInput \u003d input.split(\" \", 2); // Splits input into array of [event, ...]","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"kevinmingtarja"},"content":"                throw new EventException();","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"kevinmingtarja"},"content":"            String[] description \u003d parsedInput[1].split(\"/\");","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(description)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"kevinmingtarja"},"content":"                throw new EventException(\"The time of event cannot be empty. Please provide a time for this task.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"kevinmingtarja"},"content":"            String name \u003d description[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"kevinmingtarja"},"content":"            String time \u003d description[1].split(\" \", 2)[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"kevinmingtarja"},"content":"            newItem \u003d new Event(name, time);","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"kevinmingtarja"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"kevinmingtarja"},"content":"            throw new DukeException(\"I\u0027m sorry, but I do not quite understand what that means :(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"kevinmingtarja"},"content":"        taskList.add(newItem);","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"kevinmingtarja"},"content":"     * Parses done command from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"kevinmingtarja"},"content":"    private void markAsDone(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"kevinmingtarja"},"content":"        int index \u003d getIndexFromInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"kevinmingtarja"},"content":"        taskList.markTaskAsDone(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"kevinmingtarja"},"content":"     * Parses delete command from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"kevinmingtarja"},"content":"    private void deleteItem(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"kevinmingtarja"},"content":"        int index \u003d getIndexFromInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"kevinmingtarja"},"content":"        taskList.delete(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"kevinmingtarja"},"content":"    private void findItem(String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"kevinmingtarja"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"kevinmingtarja"},"content":"        if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"kevinmingtarja"},"content":"            throw new DukeException(\"I\u0027m sorry, but I do not quite understand what that means :(\");","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"kevinmingtarja"},"content":"        String keyword \u003d parsedInput[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"kevinmingtarja"},"content":"        taskList.find(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"kevinmingtarja"},"content":"     * Retrieves the number from user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"kevinmingtarja"},"content":"    private int getIndexFromInput(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"kevinmingtarja"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"kevinmingtarja"},"content":"        if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"kevinmingtarja"},"content":"            throw new DukeException(\"I do not know which task you are referring to. Please provide a number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"kevinmingtarja"},"content":"        return Integer.parseInt(parsedInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"kevinmingtarja"},"content":"    private boolean isIncomplete(String[] arr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"kevinmingtarja"},"content":"        return arr.length \u003c\u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"kevinmingtarja"},"content":"    private void printItems() {","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"kevinmingtarja"},"content":"        taskList.printItems();","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"kevinmingtarja":159}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    public static final String directory \u003d \"./data\";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns the list of tasks from the saved text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"     * @return List of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"        String path \u003d directory + \"/\" + fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"            return loadedTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"            FileReader fr \u003d new FileReader(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"                String type \u003d Character.toString(line.charAt(line.indexOf(\"[\") + 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"                boolean isDone \u003d Character.toString(line.charAt(line.indexOf(\"[\", 2) + 1)).equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"                String name \u003d line.substring(line.indexOf(\"]\", line.indexOf(\"]\") + 1) + 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"                    loadedTasks.add(new ToDo(name, isDone));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"                    name \u003d name.split(\"\\\\(\")[0].stripTrailing();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"                    String parsedInput \u003d line.split(\"deadline:\")[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"                    String deadline \u003d parsedInput.substring(1, parsedInput.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"                    loadedTasks.add(new Deadline(name, isDone, LocalDate.parse(deadline, Deadline.formatter)));","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"                    name \u003d name.split(\"\\\\(\")[0].stripTrailing();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"                    String parsedInput \u003d line.split(\"at:\")[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"                    String at \u003d parsedInput.substring(1, parsedInput.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"                    loadedTasks.add(new Event(name, isDone, at));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"kevinmingtarja"},"content":"            br.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"kevinmingtarja"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"kevinmingtarja"},"content":"        return loadedTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns true if file does not exist and false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kevinmingtarja"},"content":"     * @param fileName File name where task data is stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kevinmingtarja"},"content":"     * @return true if file does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws IOException if an I/O error occurred.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"kevinmingtarja"},"content":"    public boolean createFileIfNotExists(String fileName) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"kevinmingtarja"},"content":"        File fileDirectory \u003d new File(directory);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"kevinmingtarja"},"content":"        if (!fileDirectory.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"kevinmingtarja"},"content":"            fileDirectory.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"kevinmingtarja"},"content":"        File file \u003d new File(directory + \"/\" + fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"kevinmingtarja"},"content":"            return file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"kevinmingtarja"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"kevinmingtarja":95}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"    protected final LocalDate deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    public static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    public Deadline(String name, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"        return new Deadline(super.getName(), true, deadline);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[D]%s (deadline: %s)\", super.toString(),","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"                deadline.format(formatter));","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    protected final String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    public Event(String name, boolean isDone, String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    public Event markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"        return new Event(super.getName(), true, time);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), time);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    private final String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    public static final String DONE_STATUS_INDICATOR \u003d \"X\";","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    public String getName() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"        return name;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns DONE_STATUS_INDICATOR if task is done, and \" \" otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"     * @return DONE_STATUS_INDICATOR if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"        return isDone ? DONE_STATUS_INDICATOR : \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns a Task that is marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"     * @return a Task that is marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"    public abstract Task markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), name);","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":41}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDo markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"        return new ToDo(super.getName(), true);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":21}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"        this.storage \u003d new Storage(\"list.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"        this();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"    List\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"        return this.list;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"    Task getTask(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"        return list.get(index - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"     * Marks a task as done using their index (1-based).","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"     * @param index Index of item that wants to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"        Task doneTask \u003d getTask(index).markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"        list.set(index - 1, doneTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"    %s%n\", doneTask.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"        saveData();","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"     * @param item The task that is to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"    public void add(Task item) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"        addWithoutPrinting(item);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"Noted! I\u0027ve added the following task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"    %s%n\", item.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"kevinmingtarja"},"content":"        printSize();","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"kevinmingtarja"},"content":"    void addWithoutPrinting(Task item) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"kevinmingtarja"},"content":"        list.add(item);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"kevinmingtarja"},"content":"        saveData();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kevinmingtarja"},"content":"     * Deletes a task using their index (1-based).","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kevinmingtarja"},"content":"     * @param index Index of item that wants to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kevinmingtarja"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kevinmingtarja"},"content":"        Task removedItem \u003d list.remove(index - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"Got it. I\u0027ve removed the following task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"    %s%n\", removedItem.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"kevinmingtarja"},"content":"        printSize();","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"kevinmingtarja"},"content":"        saveData();","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"kevinmingtarja"},"content":"     * Finds a task whose name matches a given keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"kevinmingtarja"},"content":"     * @param keyword Keyword of task that wants to be found.","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"kevinmingtarja"},"content":"    public void find(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cTask\u003e filteredList \u003d list.stream().filter(task -\u003e task.getName().contains(keyword))","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"kevinmingtarja"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"kevinmingtarja"},"content":"        if (filteredList.size() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"kevinmingtarja"},"content":"            ui.print(\"Here are the matching tasks that I found:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"kevinmingtarja"},"content":"            printItems(filteredList);","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"kevinmingtarja"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"kevinmingtarja"},"content":"            ui.print(\"No tasks found.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"kevinmingtarja"},"content":"    void printSize() {","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"Total tasks: %d%n\", list.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"kevinmingtarja"},"content":"    public void printItems() {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"kevinmingtarja"},"content":"        printItems(this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"kevinmingtarja"},"content":"    public void printItems(List\u003cTask\u003e list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"kevinmingtarja"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"kevinmingtarja"},"content":"            ui.print(\"%d. %s%n\", (i + 1), list.get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"kevinmingtarja"},"content":"    List\u003cString\u003e listItems() {","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cString\u003e items \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"kevinmingtarja"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"kevinmingtarja"},"content":"            items.add(String.format(\"%s\", task));","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"kevinmingtarja"},"content":"        return items;","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"kevinmingtarja"},"content":"    void saveData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"kevinmingtarja"},"content":"        String fileName \u003d \"list.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"kevinmingtarja"},"content":"            storage.createFileIfNotExists(fileName);","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"kevinmingtarja"},"content":"            Path path \u003d Paths.get(Storage.directory + \"/\" + fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"kevinmingtarja"},"content":"            Files.write(path, listItems(), StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"kevinmingtarja"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":145}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    private final Scanner in;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    private static final String DIVIDER \u003d \"--------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"     * Reads input from user.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"     * @return User input.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    public String readFromUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"        return in.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints output.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"     * @param output Output that is to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    public void print(String output) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints formatted output.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"     * @param output Output that is to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"    public void print(String output, Object... args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"        System.out.printf(output, args);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints divider line.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"    public void printDivider() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"        print(DIVIDER);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"kevinmingtarja":47}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":12}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    private static final String NON_EXISTENT_FILE_NAME \u003d \"ThisFileDoesNotExist.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    public void load_nonExistentFile_returnsEmptyList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"        Storage storage \u003d new Storage(NON_EXISTENT_FILE_NAME);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(loadedTasks.size(), 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":22}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    public void getStatusIcon_doneToDo_returnsX() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"        ToDo doneToDo \u003d new ToDo(\"\").markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(doneToDo.getStatusIcon(), ToDo.DONE_STATUS_INDICATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":14}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"public class UiTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    @AfterEach","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    public void reset() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    public void print_validFormat_correctString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"%d, %s, %.2f\", 1, \"two\", 3.14212322);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(\"1, two, 3.14\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"    public void print_invalidFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"        assertThrows(Exception.class, () -\u003e ui.print(\"%d\",  \"two\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"deadline return book /by 2021-12-01","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"blablabla","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"deadline borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"event borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"find book","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"find zzz","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":24}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"# delete data from past testings","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    rm -r ./data","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"find ../src/main/java/*/*.java  \u003e sources.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kevinmingtarja":10,"-":36}}]
