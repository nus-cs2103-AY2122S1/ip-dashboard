[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kevinmingtarja":16,"-":45}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"[T][X] read book (tags: #urgent #impt)","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"[D][X] return book (tags: #very urgent) (deadline: Dec 1 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"[T][ ] join sports club (tags: #sport)","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"[T][ ] borrow book ","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"[D][ ] finish homework  (deadline: Sep 14 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"[T][ ] eat ","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"[T][X] sleep ","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"[T][ ] drink water (tags: #mandatory)","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"[T][ ] study ","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"[T][ ] eat ","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"kevinmingtarja":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    private final String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"    public Duke(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"        Storage storage \u003d new Storage(\"list.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"        this.parser \u003d new Parser(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"    public Duke() {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"        this(\"Duke\");","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"//    void initialize() {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"//        greet();","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"//        listen();","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"//    }","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"//","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"    public String greet() {","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d String.format(\"Hey there! I\u0027m %s%n\", name);","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d (\"How can I help you?\");","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"//    void listen() {","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"//        String input;","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"//        boolean isListening;","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"kevinmingtarja"},"content":"//","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"kevinmingtarja"},"content":"//        do {","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"kevinmingtarja"},"content":"//            input \u003d ui.readFromUser();","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"kevinmingtarja"},"content":"//            isListening \u003d parser.parseInput(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"kevinmingtarja"},"content":"//        } while (isListening);","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"kevinmingtarja"},"content":"//    }","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kevinmingtarja"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"kevinmingtarja"},"content":"//        new Duke(\"HAL9000\").initialize();","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"kevinmingtarja"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"kevinmingtarja"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"kevinmingtarja"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"kevinmingtarja"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"kevinmingtarja"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"kevinmingtarja"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"kevinmingtarja"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"kevinmingtarja"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"kevinmingtarja"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"kevinmingtarja"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"kevinmingtarja"},"content":"        stage.show();","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"kevinmingtarja"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"kevinmingtarja"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"kevinmingtarja"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"kevinmingtarja"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"kevinmingtarja"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"kevinmingtarja"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"kevinmingtarja"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"kevinmingtarja"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"kevinmingtarja"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"kevinmingtarja"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"kevinmingtarja"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"kevinmingtarja"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"kevinmingtarja"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"kevinmingtarja"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"kevinmingtarja"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"kevinmingtarja"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"kevinmingtarja"},"content":"//        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"kevinmingtarja"},"content":"//            handleUserInput();","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"kevinmingtarja"},"content":"//        });","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"kevinmingtarja"},"content":"//","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"kevinmingtarja"},"content":"//        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"kevinmingtarja"},"content":"//            handleUserInput();","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"kevinmingtarja"},"content":"//        });","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"kevinmingtarja"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"kevinmingtarja"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"kevinmingtarja"},"content":"     * Iteration 1:","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"kevinmingtarja"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"kevinmingtarja"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"kevinmingtarja"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"kevinmingtarja"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"kevinmingtarja"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"kevinmingtarja"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"kevinmingtarja"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"kevinmingtarja"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"kevinmingtarja"},"content":"//    private void handleUserInput() {","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"kevinmingtarja"},"content":"//        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"kevinmingtarja"},"content":"//        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"kevinmingtarja"},"content":"//        ImageView userImage \u003d new ImageView(user);","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"kevinmingtarja"},"content":"//        ImageView dukeImage \u003d new ImageView(duke);","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"kevinmingtarja"},"content":"//        final Circle userClip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"kevinmingtarja"},"content":"//        final Circle dukeClip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2021-09-04"},{"lineNumber":162,"author":{"gitId":"kevinmingtarja"},"content":"//        userImage.setClip(userClip);","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"kevinmingtarja"},"content":"//        dukeImage.setClip(dukeClip);","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"kevinmingtarja"},"content":"//","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"kevinmingtarja"},"content":"//        final DialogBox userDialog \u003d DialogBox.getUserDialog(userText, userImage);","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"kevinmingtarja"},"content":"//        final DialogBox dukeDialog \u003d DialogBox.getDukeDialog(dukeText, dukeImage);","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"kevinmingtarja"},"content":"//        VBox.setMargin(userDialog, new Insets(16, 8, 0, 48));","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"kevinmingtarja"},"content":"//        VBox.setMargin(dukeDialog, new Insets(16, 48, 0, 8));","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"kevinmingtarja"},"content":"//","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"kevinmingtarja"},"content":"//        dialogContainer.getChildren().addAll(userDialog ,dukeDialog);","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"kevinmingtarja"},"content":"//        userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"kevinmingtarja"},"content":"//    }","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"kevinmingtarja"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"kevinmingtarja"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"kevinmingtarja"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"kevinmingtarja"},"content":"        return parser.parseInput(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":181}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"public class Launcher {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kevinmingtarja":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"            stage.show();","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kevinmingtarja":32}},{"path":"src/main/java/duke/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public DeadlineException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"    public DeadlineException(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"        super(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":10}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public DukeException(String str) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"Error: Whoops... \" + str);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":7}},{"path":"src/main/java/duke/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public EventException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"    public EventException(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"        super(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":10}},{"path":"src/main/java/duke/exception/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"public class ToDoException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDoException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"        super(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.DeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.EventException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import duke.exception.ToDoException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns true if the program should still keep going on (e.g., when input is not equal to \"bye\")","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"     * @return true if input is not equal to \"bye\".","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    public String parseInput(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"                response +\u003d \"Goodbye human. See you soon!\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"                response +\u003d taskList.printItems();","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"                response +\u003d markAsDone(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"                response +\u003d deleteItem(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"                response +\u003d findItem(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"            } else if (input.startsWith(\"tag\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"                response +\u003d tagItem(input);","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"                response +\u003d addItem(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"        assert !response.equals(\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"     * Parses add command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"    private String addItem(String input) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"        Task newItem \u003d null;","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"kevinmingtarja"},"content":"            String[] parsedInput \u003d input.split(\" \", 2); // Splits input into array of [todo, ...]","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"kevinmingtarja"},"content":"                throw new ToDoException();","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"kevinmingtarja"},"content":"            newItem \u003d new ToDo(parsedInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"kevinmingtarja"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"kevinmingtarja"},"content":"            String[] parsedInput \u003d input.split(\" \", 2); // Splits input into array of [deadline, ...]","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"kevinmingtarja"},"content":"                throw new DeadlineException();","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"kevinmingtarja"},"content":"            String[] description \u003d parsedInput[1].split(\"/\");","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(description)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"kevinmingtarja"},"content":"                throw new DeadlineException(\"The deadline cannot be empty. Please provide a deadline for this task.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"kevinmingtarja"},"content":"            String name \u003d description[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"kevinmingtarja"},"content":"            String deadline \u003d description[1].split(\" \")[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"kevinmingtarja"},"content":"            newItem \u003d new Deadline(name, LocalDate.parse(deadline));","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"kevinmingtarja"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"kevinmingtarja"},"content":"            String[] parsedInput \u003d input.split(\" \", 2); // Splits input into array of [event, ...]","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"kevinmingtarja"},"content":"                throw new EventException();","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"kevinmingtarja"},"content":"            String[] description \u003d parsedInput[1].split(\"/\");","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"kevinmingtarja"},"content":"            if (isIncomplete(description)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"kevinmingtarja"},"content":"                throw new EventException(\"The time of event cannot be empty. Please provide a time for this task.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"kevinmingtarja"},"content":"            String name \u003d description[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"kevinmingtarja"},"content":"            String time \u003d description[1].split(\" \", 2)[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"kevinmingtarja"},"content":"            newItem \u003d new Event(name, time);","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"kevinmingtarja"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"kevinmingtarja"},"content":"            throw new DukeException(\"I\u0027m sorry, but I do not quite understand what that means :(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"kevinmingtarja"},"content":"        assert newItem !\u003d null;","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"kevinmingtarja"},"content":"        return taskList.add(newItem);","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"kevinmingtarja"},"content":"     * Parses done command from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"kevinmingtarja"},"content":"    private String markAsDone(String input) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"kevinmingtarja"},"content":"        int index \u003d getIndexFromInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"kevinmingtarja"},"content":"        return taskList.markTaskAsDone(index);","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"kevinmingtarja"},"content":"     * Parses delete command from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"kevinmingtarja"},"content":"    private String deleteItem(String input) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"kevinmingtarja"},"content":"        int index \u003d getIndexFromInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"kevinmingtarja"},"content":"        return taskList.delete(index);","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"kevinmingtarja"},"content":"    private String findItem(String input) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"kevinmingtarja"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"kevinmingtarja"},"content":"        if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"kevinmingtarja"},"content":"            throw new DukeException(\"I\u0027m sorry, but I do not quite understand what that means :(\");","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"kevinmingtarja"},"content":"        String keyword \u003d parsedInput[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"kevinmingtarja"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"kevinmingtarja"},"content":"        return taskList.find(keyword);","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"kevinmingtarja"},"content":"    private String tagItem(String input) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"kevinmingtarja"},"content":"        int index \u003d getIndexFromInput(input);","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"kevinmingtarja"},"content":"        String tag \u003d getTagFromInput(input);","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"kevinmingtarja"},"content":"        return taskList.tag(index, tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"kevinmingtarja"},"content":"     * Retrieves the number from user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"kevinmingtarja"},"content":"     * @param input full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws DukeException if the user input is of an invalid format.","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"kevinmingtarja"},"content":"    private int getIndexFromInput(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"kevinmingtarja"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"kevinmingtarja"},"content":"        if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"kevinmingtarja"},"content":"            throw new DukeException(\"I do not know which task you are referring to. Please provide a number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"kevinmingtarja"},"content":"        return Integer.parseInt(parsedInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"kevinmingtarja"},"content":"    private String getTagFromInput(String input) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"kevinmingtarja"},"content":"        String[] parsedInput \u003d input.split(\"#\");","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"kevinmingtarja"},"content":"        if (isIncomplete(parsedInput)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"kevinmingtarja"},"content":"            throw new DukeException(\"Invalid format. Please prefix your tag with #\");","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"kevinmingtarja"},"content":"        return parsedInput[1];","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"kevinmingtarja"},"content":"    private boolean isIncomplete(String[] arr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"kevinmingtarja"},"content":"        return arr.length \u003c\u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"kevinmingtarja":174}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    public static final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns the list of tasks from the saved text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"     * @return List of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"        String path \u003d DIRECTORY + \"/\" + fileName;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"            return loadedTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"            FileReader fr \u003d new FileReader(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"                String type \u003d parseType(line);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"                boolean isDone \u003d parseStatus(line);","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"                String name \u003d parseName(line);","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"                List\u003cString\u003e tagsList \u003d parseTags(line);","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"                Task task;","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"                    task \u003d new ToDo(name, isDone, tagsList);","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"                    task \u003d parseDeadline(line, name, isDone, tagsList);","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"                    task \u003d parseEvent(line, name, isDone, tagsList);","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"                loadedTasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"            br.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"kevinmingtarja"},"content":"        return loadedTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"kevinmingtarja"},"content":"    Task parseDeadline(String line, String name, boolean isDone, List\u003cString\u003e tagsList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"kevinmingtarja"},"content":"        name \u003d name.split(\"\\\\(\")[0].stripTrailing();","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"kevinmingtarja"},"content":"        String parsedInput \u003d line.split(\"deadline:\")[1];","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"kevinmingtarja"},"content":"        String deadline \u003d parsedInput.substring(1, parsedInput.length() - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"kevinmingtarja"},"content":"        return new Deadline(name, isDone, tagsList,","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"kevinmingtarja"},"content":"                LocalDate.parse(deadline, Deadline.DATE_TIME_FORMATTER));","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"kevinmingtarja"},"content":"    Task parseEvent(String line, String name, boolean isDone, List\u003cString\u003e tagsList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"kevinmingtarja"},"content":"        name \u003d name.split(\"\\\\(\")[0].stripTrailing();","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"kevinmingtarja"},"content":"        String parsedInput \u003d line.split(\"at:\")[1];","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"kevinmingtarja"},"content":"        String at \u003d parsedInput.substring(1, parsedInput.length() - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"kevinmingtarja"},"content":"        return new Event(name, isDone, tagsList, at);","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"kevinmingtarja"},"content":"    String parseType(String line) {","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"kevinmingtarja"},"content":"        return Character.toString(line.charAt(line.indexOf(\"[\") + 1));","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"kevinmingtarja"},"content":"    boolean parseStatus(String line) {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"kevinmingtarja"},"content":"        return Character.toString(line.charAt(line.indexOf(\"[\", 2) + 1)).equals(\"X\");","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"kevinmingtarja"},"content":"    String parseName(String line) {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"kevinmingtarja"},"content":"        int endOfNameIdx \u003d line.contains(\"(\") ? line.indexOf(\"(\") : line.length();","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"kevinmingtarja"},"content":"        return line.substring(line.indexOf(\"]\",","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"kevinmingtarja"},"content":"                line.indexOf(\"]\") + 1) + 2, endOfNameIdx).stripTrailing();","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"kevinmingtarja"},"content":"    List\u003cString\u003e parseTags(String line) {","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"kevinmingtarja"},"content":"        String tags \u003d line.contains(\"tags\") ? line.substring(line.indexOf(\"tags:\"), line.indexOf(\")\")) : \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"kevinmingtarja"},"content":"        String[] splitTags \u003d tags.split(\"#\");","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"kevinmingtarja"},"content":"        return Arrays.stream(Arrays.copyOfRange(splitTags, 1, splitTags.length))","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"kevinmingtarja"},"content":"                .map(String::stripTrailing).collect(Collectors.toList());","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns true if file does not exist and false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"kevinmingtarja"},"content":"     * @param fileName File name where task data is stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"kevinmingtarja"},"content":"     * @return true if file does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"kevinmingtarja"},"content":"     * @throws IOException if an I/O error occurred.","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"kevinmingtarja"},"content":"    public boolean createFileIfNotExists(String fileName) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"kevinmingtarja"},"content":"        File fileDirectory \u003d new File(DIRECTORY);","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"kevinmingtarja"},"content":"        if (!fileDirectory.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"kevinmingtarja"},"content":"            fileDirectory.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"kevinmingtarja"},"content":"        File file \u003d new File(DIRECTORY + \"/\" + fileName);","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"kevinmingtarja"},"content":"            return file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"kevinmingtarja"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"kevinmingtarja":130}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    protected final LocalDate deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    public Deadline(String name, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    public Deadline(String name, boolean isDone, List\u003cString\u003e tags, LocalDate deadline) {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone, tags);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"        return new Deadline(super.getName(), true, deadline);","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[D]%s (deadline: %s)\", super.toString(),","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"                deadline.format(DATE_TIME_FORMATTER));","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    protected final String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    public Event(String name, boolean isDone, String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    public Event(String name, boolean isDone, List\u003cString\u003e tags, String time) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone, tags);","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    public Event markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"        return new Event(super.getName(), true, time);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), time);","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    public static final String DONE_STATUS_INDICATOR \u003d \"X\";","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    private final String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    private final List\u003cString\u003e tags;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"        this.tags \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"        this.tags \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    public Task(String name, boolean isDone, List\u003cString\u003e tags) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"    public String getName() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"        return name;","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns DONE_STATUS_INDICATOR if task is done, and \" \" otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"     * @return DONE_STATUS_INDICATOR if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"        return isDone ? DONE_STATUS_INDICATOR : \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"        tags.add(tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"    String printTags() {","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"(tags: %s)\",","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"                tags.stream().map(tag -\u003e \"#\" + tag).collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"     * Returns a Task that is marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"     * @return a Task that is marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"    public abstract Task markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"        String tags \u003d this.tags.size() \u003d\u003d 0 ? \"\" : String.format(\"%s\", printTags());","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[%s] %s %s\", getStatusIcon(), name, tags);","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":64}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDo(String name, boolean isDone, List\u003cString\u003e tags) {","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"        super(name, isDone, tags);","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    public ToDo markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"        return new ToDo(super.getName(), true);","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":27}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"        this.storage \u003d new Storage(\"list.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"        this();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    List\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"        return this.list;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"    Task getTask(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"        return list.get(index - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"     * Marks a task as done using their index (1-based).","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"     * @param index Index of item that wants to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"    public String markTaskAsDone(int index) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"        Task doneTask \u003d getTask(index).markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"        list.set(index - 1, doneTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d String.format(\"    %s%n\", doneTask.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"        saveData();","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"     * @param item The task that is to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"    public String add(Task item) {","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"        addWithoutPrinting(item);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d (\"Noted! I\u0027ve added the following task:\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d String.format(\"    %s%n\", item.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d printSize();","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"kevinmingtarja"},"content":"        assert !response.equals(\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"kevinmingtarja"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"kevinmingtarja"},"content":"    void addWithoutPrinting(Task item) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"kevinmingtarja"},"content":"        list.add(item);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"kevinmingtarja"},"content":"        saveData();","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"kevinmingtarja"},"content":"     * Deletes a task using their index (1-based).","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"kevinmingtarja"},"content":"     * @param index Index of item that wants to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kevinmingtarja"},"content":"    public String delete(int index) {","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"kevinmingtarja"},"content":"        Task removedItem \u003d list.remove(index - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d (\"Got it. I\u0027ve removed the following task:\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d String.format(\"    %s%n\", removedItem.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d printSize();","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"kevinmingtarja"},"content":"        saveData();","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"kevinmingtarja"},"content":"        assert !response.equals(\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"kevinmingtarja"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"kevinmingtarja"},"content":"     * Finds a task whose name matches a given keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"kevinmingtarja"},"content":"     * @param keyword Keyword of task that wants to be found.","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"kevinmingtarja"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cTask\u003e filteredList \u003d list.stream().filter(task -\u003e task.getName().contains(keyword))","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"kevinmingtarja"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"kevinmingtarja"},"content":"        if (filteredList.size() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"kevinmingtarja"},"content":"            response +\u003d (\"Here are the matching tasks that I found:\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"kevinmingtarja"},"content":"            response +\u003d printItems(filteredList);","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"kevinmingtarja"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"kevinmingtarja"},"content":"            response +\u003d (\"No tasks found.\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"kevinmingtarja"},"content":"        assert !response.equals(\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"kevinmingtarja"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"kevinmingtarja"},"content":"    public String tag(int index, String tag) {","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"kevinmingtarja"},"content":"        Task taggedItem \u003d list.get(index - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"kevinmingtarja"},"content":"        taggedItem.addTag(tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d (\"Got it. I\u0027ve tagging the following task:\\n\");","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"kevinmingtarja"},"content":"        response +\u003d String.format(\"    %s%n\", taggedItem);","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"kevinmingtarja"},"content":"        saveData();","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"kevinmingtarja"},"content":"        assert !response.equals(\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"kevinmingtarja"},"content":"        return response;","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"kevinmingtarja"},"content":"    String printSize() {","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"kevinmingtarja"},"content":"        return String.format(\"Total tasks: %d%n\", list.size());","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"kevinmingtarja"},"content":"    public String printItems() {","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"kevinmingtarja"},"content":"        return response + printItems(this.list);","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"kevinmingtarja"},"content":"    public String printItems(List\u003cTask\u003e list) {","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"kevinmingtarja"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"kevinmingtarja"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"kevinmingtarja"},"content":"            response.append(String.format(\"%d. %s%n\", (i + 1), list.get(i)));","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"kevinmingtarja"},"content":"        return response.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"kevinmingtarja"},"content":"    List\u003cString\u003e listItems() {","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cString\u003e items \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"kevinmingtarja"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"kevinmingtarja"},"content":"            items.add(String.format(\"%s\", task));","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"kevinmingtarja"},"content":"        return items;","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"kevinmingtarja"},"content":"    void saveData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"kevinmingtarja"},"content":"        String fileName \u003d \"list.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"kevinmingtarja"},"content":"            storage.createFileIfNotExists(fileName);","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"kevinmingtarja"},"content":"            Path path \u003d Paths.get(Storage.DIRECTORY + \"/\" + fileName);","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"kevinmingtarja"},"content":"            Files.write(path, listItems(), StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"kevinmingtarja"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":178}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"        dialog.setPadding(new Insets(8));","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"        // Prevents long text from being cut off","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"        HBox.setHgrow(dialog, Priority.ALWAYS);","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"    private void flip() {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"kevinmingtarja"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"kevinmingtarja"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"kevinmingtarja"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"kevinmingtarja"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"kevinmingtarja"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"kevinmingtarja"},"content":"        db.flip();","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"kevinmingtarja"},"content":"        return db;","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kevinmingtarja":66}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.greet(), dukeImage));","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"kevinmingtarja"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"kevinmingtarja"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"kevinmingtarja"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"kevinmingtarja"},"content":"        );","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"kevinmingtarja"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kevinmingtarja":53}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"    public static final String DIVIDER \u003d \"--------------------------------------------------------------------------\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"    private final Scanner in;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"     * Reads input from user.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"     * @return User input.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    public String readFromUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"        return in.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints output.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"     * @param output Output that is to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    public void print(String output) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints formatted output.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"     * @param output Output that is to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"    public void print(String output, Object... args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"        System.out.printf(output, args);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevinmingtarja"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kevinmingtarja"},"content":"     * Prints divider line.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kevinmingtarja"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kevinmingtarja"},"content":"    public void printDivider() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"kevinmingtarja"},"content":"        print(DIVIDER);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"kevinmingtarja":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kevinmingtarja":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"\u003cAnchorPane  maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kevinmingtarja":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":12}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    private static final String NON_EXISTENT_FILE_NAME \u003d \"ThisFileDoesNotExist.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"    public void load_nonExistentFile_returnsEmptyList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"        Storage storage \u003d new Storage(NON_EXISTENT_FILE_NAME);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(loadedTasks.size(), 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":22}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"    public void getStatusIcon_doneToDo_returnsX() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"        ToDo doneToDo \u003d new ToDo(\"\").markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(doneToDo.getStatusIcon(), ToDo.DONE_STATUS_INDICATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":14}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"public class UiTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"    @AfterEach","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"    public void reset() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kevinmingtarja"},"content":"    public void print_validFormat_correctString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kevinmingtarja"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kevinmingtarja"},"content":"        ui.print(\"%d, %s, %.2f\", 1, \"two\", 3.14212322);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"        assertEquals(\"1, two, 3.14\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kevinmingtarja"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kevinmingtarja"},"content":"    public void print_invalidFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kevinmingtarja"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kevinmingtarja"},"content":"        assertThrows(Exception.class, () -\u003e ui.print(\"%d\", \"two\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kevinmingtarja"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kevinmingtarja"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kevinmingtarja":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"deadline return book /by 2021-12-01","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"kevinmingtarja"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kevinmingtarja"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kevinmingtarja"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kevinmingtarja"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kevinmingtarja"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kevinmingtarja"},"content":"blablabla","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kevinmingtarja"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kevinmingtarja"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kevinmingtarja"},"content":"deadline borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"event borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kevinmingtarja"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"find book","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"find zzz","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kevinmingtarja":24}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kevinmingtarja"},"content":"# delete data from past testings","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevinmingtarja"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevinmingtarja"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kevinmingtarja"},"content":"    rm -r ./data","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevinmingtarja"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"kevinmingtarja"},"content":"find ../src/main/java/*/*.java  \u003e sources.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kevinmingtarja"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kevinmingtarja"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kevinmingtarja"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kevinmingtarja":10,"-":36}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinmingtarja"},"content":"../src/main/java/duke/Duke.java","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"kevinmingtarja"},"content":"../src/main/java/duke/Launcher.java","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"kevinmingtarja"},"content":"../src/main/java/duke/Main.java","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"kevinmingtarja":3}}]
