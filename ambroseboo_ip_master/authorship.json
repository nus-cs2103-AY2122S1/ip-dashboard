[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ambroseboo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ambroseboo":15,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"# User Guide for Duke","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"Duke is a desktop app designed to help you keep track of tasks through","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"a Graphical user Interface (GUI).","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"## Features and Usage","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"Upon starting Duke, you will see this:  ","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"![Ui picture](Ui.png)  ","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"Simply click into the command box at the bottom and type any of the commands listed below!  ","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"### Add tasks as a Todo, Event, or Deadline : \u003cmark\u003etodo\u003c/mark\u003e or \u003cmark\u003eevent\u003c/mark\u003e or \u003cmark\u003edeadline\u003c/mark\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"  * Todo is formatted as __todo task__. Eg: todo run","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"  * Event is formatted as __event task /at YYYY-MM-DD HH:MM__. Eg:event meeting /at 2021-07-09 13:00","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"  * Deadline is formatted as __deadline task /by YYYY-MM-DD HH:MM__. Eg:deadline assignment /by 2021-07-09 13:00","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"### Delete tasks: \u003cmark\u003edelete\u003c/mark\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"  * Delete is formatted as __delete task number__. Eg: delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"### Mark tasks as done: \u003cmark\u003edone\u003c/mark\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"  * All tasks are marked as  not done when created","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"  * Mark as done is formatted as __done task number__. Eg: done 1","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"###Snooze/reschedule tasks: \u003cmark\u003esnooze\u003c/mark\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"  * Events and Deadlines can be rescheduled to a different date and time.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"  * Snooze/reschedule is formatted as __snooze task number YYYY-MM-DD HH:MM__. Eg: snooze 2 2021-07-09 13:00","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"### All tasks are saved to your local disk ","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"  * Tasks will be exactly as you saved it when you open up Duke again!","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"### Quit Duke: \u003cmark\u003ebye\u003c/mark\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"  * To quit Duke, simply type __bye__ and Duke will exit.","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ambroseboo":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    /** Storage object to interact with the data file */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"    /** List of all Tasks */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"    /** Ui object to print output to user */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"     * Constructor with no parameters for Launcher class.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    public Duke() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"        storage \u003d new Storage(\"/data\", \"/data.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"            //ui.showLoadingError();","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"            //tasks \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"     * Feeds user input to the parser and returns String of Duke\u0027s response.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"     * @param input Input from user.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"     * @return Duke\u0027s generated response to user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"        Parser parser \u003d new Parser(ui, tasks, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"        return parser.parse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ambroseboo":41,"-":1}},{"path":"src/main/java/duke/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"public enum Type {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"    TODO,","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"    DEADLINE,","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"    EVENT","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ambroseboo":7}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"ambroseboo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ambroseboo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ambroseboo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"ambroseboo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"ambroseboo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"ambroseboo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"ambroseboo"},"content":"        DialogBox dialog \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ambroseboo"},"content":"        ScrollPane scroll \u003d new ScrollPane(dialog);","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ambroseboo"},"content":"        return dialog;","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"ambroseboo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"ambroseboo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"ambroseboo"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"ambroseboo"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ambroseboo":64}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ambroseboo":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027Courier\u0027\");","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ambroseboo":34}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/kazuha.jpg\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Paimon_bot.png\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"     * Initialise the ChatBox.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"        // Add welcome message on start.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\",","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"                dukeImage));","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ambroseboo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ambroseboo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"ambroseboo"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"ambroseboo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ambroseboo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"ambroseboo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"ambroseboo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"ambroseboo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"ambroseboo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"ambroseboo"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"ambroseboo"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"ambroseboo"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"ambroseboo"},"content":"            Platform.exit();","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ambroseboo":63}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"import duke.Type;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"import task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"import task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"import task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    /** Ui object to print output to user */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    /** List of all Tasks */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"    /** Storage object to interact with the data file */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"     * Constructor for Parser object.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"     * @param ui Ui object to print output to user.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"     * @param tasks List of all Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"     * @param storage Storage object to interact with the data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"    public Parser(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"     * Make sense of String input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"     * @return True if user input is to exit the program, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"    public String parse(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ambroseboo"},"content":"            return ui.goodbyeMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"ambroseboo"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"            return ui.listMessage(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ambroseboo"},"content":"        } else if (isDoneCall(userInput)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"ambroseboo"},"content":"            return parseDoneCall(userInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"ambroseboo"},"content":"        } else if (isRemoveCall(userInput)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ambroseboo"},"content":"            return parseRemoveCall(userInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"ambroseboo"},"content":"        } else if (isFindCall(userInput)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ambroseboo"},"content":"            return parseFindCall(userInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"ambroseboo"},"content":"        } else if (isSnoozeCall(userInput)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"ambroseboo"},"content":"            return parseSnoozeCall(userInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"ambroseboo"},"content":"        } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"ambroseboo"},"content":"            return parseTodoCall(userInput, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"ambroseboo"},"content":"        } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"ambroseboo"},"content":"            return parseDeadlineCall(userInput, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"ambroseboo"},"content":"        } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"ambroseboo"},"content":"            return parseEventCall(userInput, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"ambroseboo"},"content":"            return \"Oops! I don\u0027t understand what you mean!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ambroseboo"},"content":"     * Check whether user input is a valid done call for a task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ambroseboo"},"content":"     * @param str String input from user.","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"ambroseboo"},"content":"     * @return True if input is a valid done call, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ambroseboo"},"content":"    private boolean isDoneCall (String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"ambroseboo"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"ambroseboo"},"content":"        if (str.length() \u003c 6) {","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"ambroseboo"},"content":"            int d \u003d Integer.parseInt(str.substring(5));","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"ambroseboo"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"ambroseboo"},"content":"        if (!str.startsWith(\"done \")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"ambroseboo"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ambroseboo"},"content":"     * Check whether user input is a valid remove call for a task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ambroseboo"},"content":"     * @param str String input from user.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ambroseboo"},"content":"     * @return True if input is a valid remove call, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ambroseboo"},"content":"    private boolean isRemoveCall (String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"ambroseboo"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"ambroseboo"},"content":"        if (str.length() \u003c 8) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"ambroseboo"},"content":"            int d \u003d Integer.parseInt(str.substring(7));","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"ambroseboo"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"ambroseboo"},"content":"        if (!str.startsWith(\"remove \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"ambroseboo"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ambroseboo"},"content":"     * Handles user input when user calls to add a Todo task.","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"ambroseboo"},"content":"     * @param userInput String format of user input","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"ambroseboo"},"content":"     * @param tasks TaskList object used to store tasks","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"ambroseboo"},"content":"     * @return Duke response to the user","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ambroseboo"},"content":"    private String parseTodoCall(String userInput, TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"ambroseboo"},"content":"        if (isTodoDescEmpty(userInput)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"ambroseboo"},"content":"            return \" OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"ambroseboo"},"content":"        tasks.addTask(new Todo(userInput.substring(5)));","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"ambroseboo"},"content":"        storage.newTaskToData(userInput.substring(5), Type.TODO, \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"ambroseboo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + tasks.getTask(tasks.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"ambroseboo"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"ambroseboo"},"content":"     * Handles user input when user calls to add a Deadline task.","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"ambroseboo"},"content":"     * @param userInput String format of user input","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"ambroseboo"},"content":"     * @param tasks TaskList object used to store tasks","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"ambroseboo"},"content":"     * @return Duke response to the user","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"ambroseboo"},"content":"    private String parseDeadlineCall(String userInput, TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"ambroseboo"},"content":"        if (isDeadlineDescEmpty(userInput)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"ambroseboo"},"content":"            return \" OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"ambroseboo"},"content":"        int slashIndex;","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"ambroseboo"},"content":"        if (isByPresent(userInput)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"ambroseboo"},"content":"            slashIndex \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"ambroseboo"},"content":"            return \" Please set a deadline by adding /by\";","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"ambroseboo"},"content":"            tasks.addTask(new Deadline(userInput.substring(9, slashIndex - 1),","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"ambroseboo"},"content":"                    LocalDate.parse(userInput.substring(slashIndex + 4, slashIndex + 14)),","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"ambroseboo"},"content":"                    LocalTime.parse(userInput.substring(slashIndex + 15))));","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"ambroseboo"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"ambroseboo"},"content":"            return \" Date and Time must be specified by YYYY-MM-DD HH:MM\";","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"ambroseboo"},"content":"        storage.newTaskToData(userInput.substring(9, slashIndex - 1), Type.DEADLINE,","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"ambroseboo"},"content":"                userInput.substring(slashIndex + 4));","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"ambroseboo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + tasks.getTask(tasks.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"ambroseboo"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"ambroseboo"},"content":"     * Handles user input when user calls to add an Event task.","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"ambroseboo"},"content":"     * @param userInput String format of user input","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"ambroseboo"},"content":"     * @param tasks TaskList object used to store tasks","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"ambroseboo"},"content":"     * @return Duke response to the user","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"ambroseboo"},"content":"    private String parseEventCall(String userInput, TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"ambroseboo"},"content":"        if (isEventDescEmpty(userInput)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"ambroseboo"},"content":"            return \" OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"ambroseboo"},"content":"        int slashIndex;","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"ambroseboo"},"content":"        if (isAtPresent(userInput)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"ambroseboo"},"content":"            slashIndex \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"ambroseboo"},"content":"            return \" Please set a specified timing by adding /at\";","lastModifiedDate":"2021-09-06"},{"lineNumber":172,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"ambroseboo"},"content":"            tasks.addTask(new Event(userInput.substring(6, slashIndex - 1),","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"ambroseboo"},"content":"                    LocalDate.parse(userInput.substring(slashIndex + 4, slashIndex + 14)),","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"ambroseboo"},"content":"                    LocalTime.parse(userInput.substring(slashIndex + 15))));","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"ambroseboo"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"ambroseboo"},"content":"            return \" Date and Time must be specified by YYYY-MM-DD HH:MM\";","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"ambroseboo"},"content":"        storage.newTaskToData(userInput.substring(6, slashIndex - 1), Type.EVENT,","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"ambroseboo"},"content":"                userInput.substring(slashIndex + 4));","lastModifiedDate":"2021-09-06"},{"lineNumber":183,"author":{"gitId":"ambroseboo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + tasks.getTask(tasks.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"ambroseboo"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"ambroseboo"},"content":"     * Check whether user input is a valid find call to find Tasks with a certain keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"ambroseboo"},"content":"     * @param str User input.","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"ambroseboo"},"content":"     * @return True if valid find call, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"ambroseboo"},"content":"    private boolean isFindCall(String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"ambroseboo"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"ambroseboo"},"content":"        if (str.length() \u003c 5) {","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"ambroseboo"},"content":"        if (!str.startsWith(\"find \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"ambroseboo"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":205,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":206,"author":{"gitId":"ambroseboo"},"content":"     * Checks if description portion of user input is empty.","lastModifiedDate":"2021-09-06"},{"lineNumber":207,"author":{"gitId":"ambroseboo"},"content":"     * @param todo User input from which is a Todo.","lastModifiedDate":"2021-09-06"},{"lineNumber":208,"author":{"gitId":"ambroseboo"},"content":"     * @return True if description is empty, false if not empty.","lastModifiedDate":"2021-09-06"},{"lineNumber":209,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"ambroseboo"},"content":"    private boolean isTodoDescEmpty(String todo) {","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"ambroseboo"},"content":"        return todo.substring(4).trim().isEmpty();","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":213,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":214,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"ambroseboo"},"content":"     * Checks if description portion of user input is empty.","lastModifiedDate":"2021-09-06"},{"lineNumber":216,"author":{"gitId":"ambroseboo"},"content":"     * @param deadline User input from which is a Deadline.","lastModifiedDate":"2021-09-06"},{"lineNumber":217,"author":{"gitId":"ambroseboo"},"content":"     * @return True if description is empty, false if not empty.","lastModifiedDate":"2021-09-06"},{"lineNumber":218,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":219,"author":{"gitId":"ambroseboo"},"content":"    private boolean isDeadlineDescEmpty(String deadline) {","lastModifiedDate":"2021-09-06"},{"lineNumber":220,"author":{"gitId":"ambroseboo"},"content":"        return deadline.substring(8).trim().isEmpty();","lastModifiedDate":"2021-09-06"},{"lineNumber":221,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":222,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":223,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":224,"author":{"gitId":"ambroseboo"},"content":"     * Checks if description portion of user input is empty.","lastModifiedDate":"2021-09-06"},{"lineNumber":225,"author":{"gitId":"ambroseboo"},"content":"     * @param event User input from which is an Event.","lastModifiedDate":"2021-09-06"},{"lineNumber":226,"author":{"gitId":"ambroseboo"},"content":"     * @return True if description is empty, false if not empty.","lastModifiedDate":"2021-09-06"},{"lineNumber":227,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":228,"author":{"gitId":"ambroseboo"},"content":"    private boolean isEventDescEmpty(String event) {","lastModifiedDate":"2021-09-06"},{"lineNumber":229,"author":{"gitId":"ambroseboo"},"content":"        return event.substring(5).trim().isEmpty();","lastModifiedDate":"2021-09-06"},{"lineNumber":230,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":231,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":232,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":233,"author":{"gitId":"ambroseboo"},"content":"     * Checks if user input includes /by String to specify date and time.","lastModifiedDate":"2021-09-06"},{"lineNumber":234,"author":{"gitId":"ambroseboo"},"content":"     * @param deadline User input","lastModifiedDate":"2021-09-06"},{"lineNumber":235,"author":{"gitId":"ambroseboo"},"content":"     * @return True if /by String is present, false otherwise","lastModifiedDate":"2021-09-06"},{"lineNumber":236,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":237,"author":{"gitId":"ambroseboo"},"content":"    private boolean isByPresent(String deadline) {","lastModifiedDate":"2021-09-06"},{"lineNumber":238,"author":{"gitId":"ambroseboo"},"content":"        if (deadline.indexOf(\"/by\") \u003d\u003d -1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":239,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":240,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":241,"author":{"gitId":"ambroseboo"},"content":"            return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":242,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":243,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":244,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":245,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":246,"author":{"gitId":"ambroseboo"},"content":"     * Checks if user input includes /by String to specify date and time.","lastModifiedDate":"2021-09-06"},{"lineNumber":247,"author":{"gitId":"ambroseboo"},"content":"     * @param event User input","lastModifiedDate":"2021-09-06"},{"lineNumber":248,"author":{"gitId":"ambroseboo"},"content":"     * @return True if /at String is present, false otherwise","lastModifiedDate":"2021-09-06"},{"lineNumber":249,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":250,"author":{"gitId":"ambroseboo"},"content":"    private boolean isAtPresent(String event) {","lastModifiedDate":"2021-09-06"},{"lineNumber":251,"author":{"gitId":"ambroseboo"},"content":"        if (event.indexOf(\"/at\") \u003d\u003d -1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":252,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":253,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":254,"author":{"gitId":"ambroseboo"},"content":"            return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":255,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":256,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":257,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":258,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":259,"author":{"gitId":"ambroseboo"},"content":"     * Handles actions to be done when the user inputs a done call.","lastModifiedDate":"2021-09-06"},{"lineNumber":260,"author":{"gitId":"ambroseboo"},"content":"     * @param str User input in String format","lastModifiedDate":"2021-09-06"},{"lineNumber":261,"author":{"gitId":"ambroseboo"},"content":"     * @return String that Duke will reply the user","lastModifiedDate":"2021-09-06"},{"lineNumber":262,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":263,"author":{"gitId":"ambroseboo"},"content":"    private String parseDoneCall(String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":264,"author":{"gitId":"ambroseboo"},"content":"        int index \u003d Integer.parseInt(str.substring(5));","lastModifiedDate":"2021-09-06"},{"lineNumber":265,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":266,"author":{"gitId":"ambroseboo"},"content":"        if (tasks.size() \u003e\u003d index) {","lastModifiedDate":"2021-09-06"},{"lineNumber":267,"author":{"gitId":"ambroseboo"},"content":"            tasks.getTask(index - 1).markAsDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":268,"author":{"gitId":"ambroseboo"},"content":"            storage.markAsDoneData(index - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":269,"author":{"gitId":"ambroseboo"},"content":"            return ui.doneMessage(tasks.getTask(index - 1));","lastModifiedDate":"2021-09-06"},{"lineNumber":270,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":271,"author":{"gitId":"ambroseboo"},"content":"            return ui.noSuchTaskMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":272,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":273,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":274,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":275,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":276,"author":{"gitId":"ambroseboo"},"content":"     * Handles actions to be done when the user inputs a remove call.","lastModifiedDate":"2021-09-06"},{"lineNumber":277,"author":{"gitId":"ambroseboo"},"content":"     * @param str User input in String format","lastModifiedDate":"2021-09-06"},{"lineNumber":278,"author":{"gitId":"ambroseboo"},"content":"     * @return String that Duke will reply the user","lastModifiedDate":"2021-09-06"},{"lineNumber":279,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":280,"author":{"gitId":"ambroseboo"},"content":"    private String parseRemoveCall(String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":281,"author":{"gitId":"ambroseboo"},"content":"        int index \u003d Integer.parseInt(str.substring(7));","lastModifiedDate":"2021-09-06"},{"lineNumber":282,"author":{"gitId":"ambroseboo"},"content":"        if (tasks.size() \u003e\u003d index) {","lastModifiedDate":"2021-09-06"},{"lineNumber":283,"author":{"gitId":"ambroseboo"},"content":"            String result \u003d ui.removeMessage(tasks.getTask(index - 1), tasks.size() - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":284,"author":{"gitId":"ambroseboo"},"content":"            storage.removeData(index - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":285,"author":{"gitId":"ambroseboo"},"content":"            tasks.removeTask(index - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":286,"author":{"gitId":"ambroseboo"},"content":"            return result;","lastModifiedDate":"2021-09-06"},{"lineNumber":287,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":288,"author":{"gitId":"ambroseboo"},"content":"            return ui.noSuchTaskMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":289,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":290,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":291,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":292,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":293,"author":{"gitId":"ambroseboo"},"content":"     * Handles actions to be done when the user inputs a find call.","lastModifiedDate":"2021-09-06"},{"lineNumber":294,"author":{"gitId":"ambroseboo"},"content":"     * @param str User input in String format","lastModifiedDate":"2021-09-06"},{"lineNumber":295,"author":{"gitId":"ambroseboo"},"content":"     * @return String that Duke will reply the user","lastModifiedDate":"2021-09-06"},{"lineNumber":296,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":297,"author":{"gitId":"ambroseboo"},"content":"    private String parseFindCall(String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":298,"author":{"gitId":"ambroseboo"},"content":"        String keyword \u003d str.substring(5);","lastModifiedDate":"2021-09-06"},{"lineNumber":299,"author":{"gitId":"ambroseboo"},"content":"        TaskList matchingTasks \u003d tasks.find(keyword);","lastModifiedDate":"2021-09-06"},{"lineNumber":300,"author":{"gitId":"ambroseboo"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":301,"author":{"gitId":"ambroseboo"},"content":"            return \"There are no tasks that include your keyword.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":302,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":303,"author":{"gitId":"ambroseboo"},"content":"            assert matchingTasks.size() \u003e 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":304,"author":{"gitId":"ambroseboo"},"content":"            String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":305,"author":{"gitId":"ambroseboo"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":306,"author":{"gitId":"ambroseboo"},"content":"                result +\u003d ((i + 1) + \".\" + matchingTasks.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":307,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":308,"author":{"gitId":"ambroseboo"},"content":"            return result;","lastModifiedDate":"2021-09-06"},{"lineNumber":309,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":310,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":311,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":312,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":313,"author":{"gitId":"ambroseboo"},"content":"     * Check if user input is a command to snooze a task.","lastModifiedDate":"2021-09-06"},{"lineNumber":314,"author":{"gitId":"ambroseboo"},"content":"     * @param str User input","lastModifiedDate":"2021-09-06"},{"lineNumber":315,"author":{"gitId":"ambroseboo"},"content":"     * @return True if user input did request for a snooze call, false otherwise","lastModifiedDate":"2021-09-06"},{"lineNumber":316,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":317,"author":{"gitId":"ambroseboo"},"content":"    private boolean isSnoozeCall(String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":318,"author":{"gitId":"ambroseboo"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":319,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":320,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":321,"author":{"gitId":"ambroseboo"},"content":"        if (str.length() \u003c 6) {","lastModifiedDate":"2021-09-06"},{"lineNumber":322,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":323,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":324,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":325,"author":{"gitId":"ambroseboo"},"content":"            // Split userInput by spaces, split should be [\u0027snooze\u0027, index, date, time]","lastModifiedDate":"2021-09-06"},{"lineNumber":326,"author":{"gitId":"ambroseboo"},"content":"            String[] split \u003d str.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":327,"author":{"gitId":"ambroseboo"},"content":"            int d \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":328,"author":{"gitId":"ambroseboo"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":329,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":330,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":331,"author":{"gitId":"ambroseboo"},"content":"        if (!str.startsWith(\"snooze \")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":332,"author":{"gitId":"ambroseboo"},"content":"            return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":333,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":334,"author":{"gitId":"ambroseboo"},"content":"        return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":335,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":336,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":337,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":338,"author":{"gitId":"ambroseboo"},"content":"     * Handles user input when a snooze command is requested.","lastModifiedDate":"2021-09-06"},{"lineNumber":339,"author":{"gitId":"ambroseboo"},"content":"     * @param str User input","lastModifiedDate":"2021-09-06"},{"lineNumber":340,"author":{"gitId":"ambroseboo"},"content":"     * @return Duke response to snooze call","lastModifiedDate":"2021-09-06"},{"lineNumber":341,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":342,"author":{"gitId":"ambroseboo"},"content":"    private String parseSnoozeCall(String str) {","lastModifiedDate":"2021-09-06"},{"lineNumber":343,"author":{"gitId":"ambroseboo"},"content":"        // Split userInput by spaces, split should be [\u0027snooze\u0027, index, date, time]","lastModifiedDate":"2021-09-06"},{"lineNumber":344,"author":{"gitId":"ambroseboo"},"content":"        String[] split \u003d str.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":345,"author":{"gitId":"ambroseboo"},"content":"        int index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":346,"author":{"gitId":"ambroseboo"},"content":"        if (split.length !\u003d 4) {","lastModifiedDate":"2021-09-06"},{"lineNumber":347,"author":{"gitId":"ambroseboo"},"content":"            return \"Snooze command must be in the format \u0027snooze task-number YYYY-MM-DD HH:MM\u0027\";","lastModifiedDate":"2021-09-06"},{"lineNumber":348,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":349,"author":{"gitId":"ambroseboo"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":350,"author":{"gitId":"ambroseboo"},"content":"            return \"Sorry, there are only \" + tasks.size() + \" tasks currently.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":351,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":352,"author":{"gitId":"ambroseboo"},"content":"        if (tasks.getTask(index - 1) instanceof Todo) {","lastModifiedDate":"2021-09-06"},{"lineNumber":353,"author":{"gitId":"ambroseboo"},"content":"            return \"Sorry, you cannot snooze a Todo Task.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":354,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":355,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":356,"author":{"gitId":"ambroseboo"},"content":"            Task toBeModified \u003d tasks.getTask(index - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":357,"author":{"gitId":"ambroseboo"},"content":"            if (toBeModified instanceof Event) {","lastModifiedDate":"2021-09-06"},{"lineNumber":358,"author":{"gitId":"ambroseboo"},"content":"                // Need to cast to Event in order to utilise modifyDateTime method","lastModifiedDate":"2021-09-06"},{"lineNumber":359,"author":{"gitId":"ambroseboo"},"content":"                Event eventToBeModified \u003d (Event) toBeModified;","lastModifiedDate":"2021-09-06"},{"lineNumber":360,"author":{"gitId":"ambroseboo"},"content":"                eventToBeModified.modifyDateTime(LocalDate.parse(split[2]),","lastModifiedDate":"2021-09-06"},{"lineNumber":361,"author":{"gitId":"ambroseboo"},"content":"                        LocalTime.parse(split[3]));","lastModifiedDate":"2021-09-06"},{"lineNumber":362,"author":{"gitId":"ambroseboo"},"content":"                // Date and time is concatenated into one string","lastModifiedDate":"2021-09-06"},{"lineNumber":363,"author":{"gitId":"ambroseboo"},"content":"                String datetime \u003d split[2] + \" \" + split[3];","lastModifiedDate":"2021-09-06"},{"lineNumber":364,"author":{"gitId":"ambroseboo"},"content":"                storage.modifyDateTimeData(datetime, index - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":365,"author":{"gitId":"ambroseboo"},"content":"                return \"Successfully snoozed Task \" + index + \" to \" + datetime;","lastModifiedDate":"2021-09-06"},{"lineNumber":366,"author":{"gitId":"ambroseboo"},"content":"            } else if (toBeModified instanceof Deadline) {","lastModifiedDate":"2021-09-06"},{"lineNumber":367,"author":{"gitId":"ambroseboo"},"content":"                // Need to cast to Deadline in order to utilise modifyDateTime method","lastModifiedDate":"2021-09-06"},{"lineNumber":368,"author":{"gitId":"ambroseboo"},"content":"                Deadline deadlineToBeModified \u003d (Deadline) toBeModified;","lastModifiedDate":"2021-09-06"},{"lineNumber":369,"author":{"gitId":"ambroseboo"},"content":"                deadlineToBeModified.modifyDateTime(LocalDate.parse(split[2]),","lastModifiedDate":"2021-09-06"},{"lineNumber":370,"author":{"gitId":"ambroseboo"},"content":"                        LocalTime.parse(split[3]));","lastModifiedDate":"2021-09-06"},{"lineNumber":371,"author":{"gitId":"ambroseboo"},"content":"                // Date and time is concatenated into one string","lastModifiedDate":"2021-09-06"},{"lineNumber":372,"author":{"gitId":"ambroseboo"},"content":"                String datetime \u003d split[2] + \" \" + split[3];","lastModifiedDate":"2021-09-06"},{"lineNumber":373,"author":{"gitId":"ambroseboo"},"content":"                storage.modifyDateTimeData(datetime, index - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":374,"author":{"gitId":"ambroseboo"},"content":"                return \"Successfully snoozed Task \" + index + \" to \" + datetime;","lastModifiedDate":"2021-09-06"},{"lineNumber":375,"author":{"gitId":"ambroseboo"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":376,"author":{"gitId":"ambroseboo"},"content":"                // A Todo object should never reach this point, since it has already been checked","lastModifiedDate":"2021-09-06"},{"lineNumber":377,"author":{"gitId":"ambroseboo"},"content":"                assert false;","lastModifiedDate":"2021-09-06"},{"lineNumber":378,"author":{"gitId":"ambroseboo"},"content":"                return \"Oops! There is an issue with your Task List, you cannot snooze this task right now.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":379,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":380,"author":{"gitId":"ambroseboo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":381,"author":{"gitId":"ambroseboo"},"content":"            return \" Date and Time must be specified by YYYY-MM-DD HH:MM\";","lastModifiedDate":"2021-09-06"},{"lineNumber":382,"author":{"gitId":"ambroseboo"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":383,"author":{"gitId":"ambroseboo"},"content":"            return \"Oops! There is an issue with your Task List, you cannot snooze this task right now.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":384,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":385,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":386,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ambroseboo":386}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"import duke.Type;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"import task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"import task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"import task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    /** Absolute file path to the folder containing the data file */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    private String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    /** Name of data file */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"    private String fileName;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"     * @param filePath Relative file path to the folder containing the data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"     * @param fileName Name of data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"    public Storage(String filePath, String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"        String currentDir \u003d new File(\"\").getAbsolutePath();","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"        this.filePath \u003d currentDir.concat(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"     * Returns ArrayList of Tasks loaded in from a data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"     * @return ArrayList of Tasks listed in data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"     * @throws IOException If reading file or file directory has issues.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"        File dataFilePath \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"        Scanner dataScanner \u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"        // check if data directory exists","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ambroseboo"},"content":"        if (dataFilePath.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ambroseboo"},"content":"            File dataFile \u003d new File(filePath.concat(fileName));","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"            // if data file already exists, load the file\u0027s data into tasks, else create a new data file","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"ambroseboo"},"content":"            if (dataFile.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ambroseboo"},"content":"                dataScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"ambroseboo"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ambroseboo"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ambroseboo"},"content":"            dataFilePath.mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ambroseboo"},"content":"            File dataFile \u003d new File(filePath.concat(fileName));","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ambroseboo"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"ambroseboo"},"content":"        // If there is no data file loaded in","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"ambroseboo"},"content":"        if (dataScanner \u003d\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"ambroseboo"},"content":"            return tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"ambroseboo"},"content":"        while (dataScanner.hasNextLine()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"ambroseboo"},"content":"            // taskInfoArr is an array of information for the task, including its type, done-ness, date/time","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"ambroseboo"},"content":"            String[] taskInfoArr \u003d dataScanner.nextLine().split(\",\");","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"ambroseboo"},"content":"            if (taskInfoArr[0].equals(\"T\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"ambroseboo"},"content":"                tasks.add(new Todo(taskInfoArr[2]));","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"ambroseboo"},"content":"            } else if (taskInfoArr[0].equals(\"D\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"ambroseboo"},"content":"                tasks.add(new Deadline(taskInfoArr[2],","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"ambroseboo"},"content":"                        LocalDate.parse(getDateFromString(taskInfoArr[3])),","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"ambroseboo"},"content":"                        LocalTime.parse(getTimeFromString(taskInfoArr[3]))));","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"ambroseboo"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"ambroseboo"},"content":"                tasks.add(new Event(taskInfoArr[2],","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"ambroseboo"},"content":"                        LocalDate.parse(getDateFromString(taskInfoArr[3])),","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"ambroseboo"},"content":"                        LocalTime.parse(getTimeFromString(taskInfoArr[3]))));","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"ambroseboo"},"content":"            // if task is done, mark as done","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"ambroseboo"},"content":"            if (taskInfoArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"ambroseboo"},"content":"                tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"ambroseboo"},"content":"        return tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ambroseboo"},"content":"     * Removes a Task from the data file based on the index of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ambroseboo"},"content":"     * @param taskIndex Index of Task to be removed.","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"ambroseboo"},"content":"    public void removeData(int taskIndex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"ambroseboo"},"content":"        File fileToBeModified \u003d new File(filePath.concat(fileName));","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ambroseboo"},"content":"        String newContent \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"ambroseboo"},"content":"            Scanner scanner \u003d new Scanner(fileToBeModified);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"ambroseboo"},"content":"            int current \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"ambroseboo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"ambroseboo"},"content":"                String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"ambroseboo"},"content":"                if (current !\u003d taskIndex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"ambroseboo"},"content":"                    newContent \u003d newContent + nextLine + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"ambroseboo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"ambroseboo"},"content":"                current++;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"ambroseboo"},"content":"            FileWriter writer \u003d new FileWriter(fileToBeModified);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"ambroseboo"},"content":"            writer.write(newContent);","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"ambroseboo"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"ambroseboo"},"content":"                //Closing the resources","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"ambroseboo"},"content":"                scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"ambroseboo"},"content":"                writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"ambroseboo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"ambroseboo"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"ambroseboo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"ambroseboo"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"ambroseboo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ambroseboo"},"content":"     * Mark a Task as done in the data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ambroseboo"},"content":"     * @param taskIndex Index of Task to be marked as done.","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"ambroseboo"},"content":"    public void markAsDoneData(int taskIndex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"ambroseboo"},"content":"        File fileToBeModified \u003d new File(filePath.concat(fileName));","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"ambroseboo"},"content":"        String newContent \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"ambroseboo"},"content":"            Scanner scanner \u003d new Scanner(fileToBeModified);","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"ambroseboo"},"content":"            int current \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"ambroseboo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"ambroseboo"},"content":"                String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"ambroseboo"},"content":"                if (current \u003d\u003d taskIndex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"ambroseboo"},"content":"                    String[] strArr \u003d nextLine.split(\",\");","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"ambroseboo"},"content":"                    newContent \u003d newContent + markTaskStringAsDone(strArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"ambroseboo"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"ambroseboo"},"content":"                    newContent \u003d newContent + nextLine + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"ambroseboo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"ambroseboo"},"content":"                current++;","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"ambroseboo"},"content":"            FileWriter writer \u003d new FileWriter(fileToBeModified);","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"ambroseboo"},"content":"            writer.write(newContent);","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"ambroseboo"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"ambroseboo"},"content":"                //Closing the resources","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"ambroseboo"},"content":"                scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"ambroseboo"},"content":"                writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"ambroseboo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"ambroseboo"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"ambroseboo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"ambroseboo"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"ambroseboo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"ambroseboo"},"content":"     * Gets date from the String representation of a task\u0027s datetime in the data file.","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"ambroseboo"},"content":"     * @param init String representation of a task\u0027s datetime","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"ambroseboo"},"content":"     * @return String representation of a task\u0027s date only","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"ambroseboo"},"content":"    private String getDateFromString(String init) {","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"ambroseboo"},"content":"        return init.substring(0, 10);","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"ambroseboo"},"content":"     * Gets time from the String representation of task\u0027s datetime in the data file.","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"ambroseboo"},"content":"     * @param init String representation of a task\u0027s datetime","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"ambroseboo"},"content":"     * @return String representation of a task\u0027s time only","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"ambroseboo"},"content":"    private String getTimeFromString(String init) {","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"ambroseboo"},"content":"        return init.substring(11);","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":172,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"ambroseboo"},"content":"     * Add new Task to save into the data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"ambroseboo"},"content":"     * @param taskName Name of task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"ambroseboo"},"content":"     * @param type Type of Task (Event, Deadline, or Todo).","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"ambroseboo"},"content":"     * @param datetime Date and time of Task (if applicable).","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"ambroseboo"},"content":"    public void newTaskToData(String taskName, Type type, String datetime) {","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"ambroseboo"},"content":"            FileWriter dataWriter \u003d new FileWriter(filePath.concat(fileName), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"ambroseboo"},"content":"            if (type \u003d\u003d Type.TODO) {","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"ambroseboo"},"content":"                dataWriter.write(\"T,0,\" + taskName + \", \\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"ambroseboo"},"content":"                dataWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"ambroseboo"},"content":"            } else if (type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"ambroseboo"},"content":"                dataWriter.write(\"D,0,\" + taskName + \",\" + datetime + \"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"ambroseboo"},"content":"                dataWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"ambroseboo"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"ambroseboo"},"content":"                // Type at this point should be EVENT","lastModifiedDate":"2021-09-03"},{"lineNumber":190,"author":{"gitId":"ambroseboo"},"content":"                assert type \u003d\u003d Type.EVENT;","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"ambroseboo"},"content":"                dataWriter.write(\"E,0,\" + taskName + \",\" + datetime + \"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":192,"author":{"gitId":"ambroseboo"},"content":"                dataWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"ambroseboo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"ambroseboo"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"ambroseboo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":200,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":201,"author":{"gitId":"ambroseboo"},"content":"     * Takes an array of Strings which represents a task and marks it as done","lastModifiedDate":"2021-09-06"},{"lineNumber":202,"author":{"gitId":"ambroseboo"},"content":"     * @param taskStr Array of Strings which represents a task","lastModifiedDate":"2021-09-06"},{"lineNumber":203,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":204,"author":{"gitId":"ambroseboo"},"content":"    private String markTaskStringAsDone(String[] taskStr) {","lastModifiedDate":"2021-09-06"},{"lineNumber":205,"author":{"gitId":"ambroseboo"},"content":"        return taskStr[0] + \",1,\" + taskStr[2] + \",\" + taskStr[3] + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":206,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":207,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":208,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":209,"author":{"gitId":"ambroseboo"},"content":"     * Change the datetime of the task specified by taskIndex in the data file.","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"ambroseboo"},"content":"     * @param datetime Date and time to change to","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"ambroseboo"},"content":"    public void modifyDateTimeData(String datetime, int taskIndex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":213,"author":{"gitId":"ambroseboo"},"content":"        File fileToBeModified \u003d new File(filePath.concat(fileName));","lastModifiedDate":"2021-09-06"},{"lineNumber":214,"author":{"gitId":"ambroseboo"},"content":"        String newContent \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"ambroseboo"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":216,"author":{"gitId":"ambroseboo"},"content":"            Scanner scanner \u003d new Scanner(fileToBeModified);","lastModifiedDate":"2021-09-06"},{"lineNumber":217,"author":{"gitId":"ambroseboo"},"content":"            int current \u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":218,"author":{"gitId":"ambroseboo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":219,"author":{"gitId":"ambroseboo"},"content":"                String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":220,"author":{"gitId":"ambroseboo"},"content":"                if (current !\u003d taskIndex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":221,"author":{"gitId":"ambroseboo"},"content":"                    newContent \u003d newContent + nextLine + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":222,"author":{"gitId":"ambroseboo"},"content":"                } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":223,"author":{"gitId":"ambroseboo"},"content":"                    newContent \u003d newContent + modifyTaskStringDateTime(nextLine, datetime);","lastModifiedDate":"2021-09-06"},{"lineNumber":224,"author":{"gitId":"ambroseboo"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":225,"author":{"gitId":"ambroseboo"},"content":"                current++;","lastModifiedDate":"2021-09-06"},{"lineNumber":226,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":227,"author":{"gitId":"ambroseboo"},"content":"            FileWriter writer \u003d new FileWriter(fileToBeModified);","lastModifiedDate":"2021-09-06"},{"lineNumber":228,"author":{"gitId":"ambroseboo"},"content":"            writer.write(newContent);","lastModifiedDate":"2021-09-06"},{"lineNumber":229,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":230,"author":{"gitId":"ambroseboo"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":231,"author":{"gitId":"ambroseboo"},"content":"                //Closing the resources","lastModifiedDate":"2021-09-06"},{"lineNumber":232,"author":{"gitId":"ambroseboo"},"content":"                scanner.close();","lastModifiedDate":"2021-09-06"},{"lineNumber":233,"author":{"gitId":"ambroseboo"},"content":"                writer.close();","lastModifiedDate":"2021-09-06"},{"lineNumber":234,"author":{"gitId":"ambroseboo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":235,"author":{"gitId":"ambroseboo"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":236,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":237,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":238,"author":{"gitId":"ambroseboo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":239,"author":{"gitId":"ambroseboo"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":240,"author":{"gitId":"ambroseboo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":241,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":242,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":243,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":244,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":245,"author":{"gitId":"ambroseboo"},"content":"     * Change the date and time of the String representation of a Task in the data file.","lastModifiedDate":"2021-09-06"},{"lineNumber":246,"author":{"gitId":"ambroseboo"},"content":"     * @param nextLine String representation of Task","lastModifiedDate":"2021-09-06"},{"lineNumber":247,"author":{"gitId":"ambroseboo"},"content":"     * @param datetime Date and time to change to","lastModifiedDate":"2021-09-06"},{"lineNumber":248,"author":{"gitId":"ambroseboo"},"content":"     * @return String representation of Task with datetime modified","lastModifiedDate":"2021-09-06"},{"lineNumber":249,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":250,"author":{"gitId":"ambroseboo"},"content":"    private String modifyTaskStringDateTime(String nextLine, String datetime) {","lastModifiedDate":"2021-09-06"},{"lineNumber":251,"author":{"gitId":"ambroseboo"},"content":"        String[] strArr \u003d nextLine.split(\",\");","lastModifiedDate":"2021-09-06"},{"lineNumber":252,"author":{"gitId":"ambroseboo"},"content":"        return strArr[0] + \",\" + strArr[1] + \",\" + strArr[2] + \",\" + datetime + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":253,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":254,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ambroseboo":254}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"    /** Date of the Deadline */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"    /** Time of the Deadline. */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"     * @param description Text description of Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"     * Override toString method to show representation of Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"     * @return String representing the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"     * Changes the date and time of the current Deadline.","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"     * @param date Date to be changed to","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"     * @param time Time to be changed to","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"    public void modifyDateTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ambroseboo":43}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"    /** Date of the Event */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"    /** Time of the Event. */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"     * @param description Text description of Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    public Event(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"     * Override toString method to show representation of Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"     * @return String representing the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"     * Changes the date and time of the current Event.","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"     * @param date Date to be changed to","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"     * @param time Time to be changed to","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"    public void modifyDateTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ambroseboo":43}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"    /** Text description of Task */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"    /** Boolean value whether Task is done */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"     * @param description Text description of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"     * Returns whether the current Task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"     * @return True if Task is done, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"     * Mark current Task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"     * Override toString method to show representation of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"     * @return String representing the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"     * Get text description of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ambroseboo"},"content":"     * @return Text description of Task","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ambroseboo"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ambroseboo":50}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"    /** ArrayList of Tasks currently */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"     * @param tasks ArrayList of Tasks to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"     * Get a task by its index.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"     * @param index Task index to be retrieved.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"     * @return Task of index.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"     * Returns number of Tasks currently.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"     * @return Number of Tasks currently.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"     * Add a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ambroseboo"},"content":"     * Remove a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ambroseboo"},"content":"     * @param index Index of Task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ambroseboo"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ambroseboo"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ambroseboo"},"content":"     * Find Tasks that contain a certain keyword String.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ambroseboo"},"content":"     * @param keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ambroseboo"},"content":"     * @return TaskList of Tasks that contain keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ambroseboo"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"ambroseboo"},"content":"        TaskList returnTasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ambroseboo"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ambroseboo"},"content":"            if (this.getTask(i).getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ambroseboo"},"content":"                returnTasks.addTask(this.getTask(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ambroseboo"},"content":"        return returnTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ambroseboo":68}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"     * @param description Text description of Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"     * Override toString method to show text representation of Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"     * @return String representing the Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ambroseboo":21}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"package ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"     * Returns a farewell message to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    public static String goodbyeMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"     * Returns the list of tasks to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"    public static String listMessage(TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"            return \"There are currently no tasks.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"            String result \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"                result +\u003d (i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"            return result;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"     * Returns an indication that a Task is marked as done to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"    public static String doneMessage(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + \"  \" + task.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"     * Returns a error message that there is no such task to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"    public static String noSuchTaskMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"        return \"There is no such task.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ambroseboo"},"content":"     * Returns an indication that a Task is removed to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ambroseboo"},"content":"    public static String removeMessage(Task task, int num) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ambroseboo"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\" + \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ambroseboo"},"content":"                + \"Now you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ambroseboo"},"content":"     * Returns a loading error message to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ambroseboo"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"ambroseboo"},"content":"        return \"There was an error loading the data file.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ambroseboo":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"               \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ambroseboo":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"484.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ambroseboo":19}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"import task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"public class EventTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"     * Test for toString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"        Task testEvent \u003d new Event(\"birthday\", LocalDate.parse(\"2021-06-29\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] birthday (at: Jun 29 2021 12:00 PM)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ambroseboo":21}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ambroseboo"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ambroseboo"},"content":"import task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"ambroseboo"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ambroseboo"},"content":"import task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"ambroseboo"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ambroseboo"},"content":"     * Test whether addTask method successfully adds a task to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ambroseboo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"ambroseboo"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"ambroseboo"},"content":"        Task task1 \u003d new Todo(\"run\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"ambroseboo"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"ambroseboo"},"content":"        tasks.addTask(task1);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"ambroseboo"},"content":"        assertEquals(\"[T][ ] run\", tasks.getTask(0).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"ambroseboo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ambroseboo"},"content":"     * Test whether removeTask method successfully removes a task to the TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ambroseboo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ambroseboo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"ambroseboo"},"content":"    public void removeTaskTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"ambroseboo"},"content":"        Task task1 \u003d new Todo(\"run\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ambroseboo"},"content":"        Task task2 \u003d new Deadline(\"sleep\", LocalDate.parse(\"2021-06-29\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"ambroseboo"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"ambroseboo"},"content":"        tasks.addTask(task1);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"ambroseboo"},"content":"        tasks.addTask(task2);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"ambroseboo"},"content":"        tasks.removeTask(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"ambroseboo"},"content":"        assertEquals(\"[D][ ] sleep (by: Jun 29 2021 12:00 PM)\", tasks.getTask(0).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"ambroseboo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"ambroseboo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"ambroseboo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"ambroseboo":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ambroseboo"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ambroseboo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ambroseboo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ambroseboo"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"ambroseboo"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ambroseboo"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ambroseboo"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ambroseboo":7}}]
