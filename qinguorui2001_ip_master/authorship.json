[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qinguorui2001":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"javafx {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"    version \u003d \"11\"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qinguorui2001":22,"-":45}},{"path":"data/tasksa.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"E | 1 | aa ~ Dec 11 1212 4.30 pm","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"E | 0 | aa ~ Dec 11 1212","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"D | 0 | aa ~ Nov 11 1111","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"E | 0 | aaa ~ Sep 7 2021","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"D | 0 | aa ~ Sep 17 2021 6.00 pm","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"qinguorui2001":5}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"include \u0027resources\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"qinguorui2001":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":" * Represents the robot which has corresponding reaction to the user inputs.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up duke instance dealing with file path.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"     * @param filePath The important","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"     * Runs the program of duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"     * @param input The user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"     * @throws IOException The exception related to store and read tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        String output;","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"            assert c !\u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"            output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"            return output;","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"    public static String showComings() {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"            TaskList taskListMonth \u003d tasks.tasksWithinMonthOrDay(2);","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"            assert taskListMonth !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"            TaskList taskListDay \u003d tasks.tasksWithinMonthOrDay(1);","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"            assert taskListDay !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"            return ui.showComings(taskListMonth, taskListDay);","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"    public static String showList() {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        return tasks.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"qinguorui2001":67,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"qinguorui2001":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import javafx.stage.StageStyle;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"            duke \u003d new Duke(\"data/tasksa.txt\");","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"            //newest","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"            //newer","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"           //old","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"           // duke \u003d new Duke(\"data/tasksa.txt\");","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"            //fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"            stage.initStyle(StageStyle.TRANSPARENT);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"qinguorui2001":42}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":" * Represents the class to specify how to add command.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    private String response;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    private Operation type;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     * Adds the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"     * @param response The content of user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"     * @param type The type of adding command.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    public AddCommand(String response, Operation type) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        this.response \u003d response;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the task just be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"     * @param ui The user interaction instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"     * @param storage The instance to store data.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"        case TODO:","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"            task \u003d new Todo(response.substring(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"            String[] deadlineParts \u003d response.substring(9).split(\" /by \");","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"            String deadlineContent \u003d deadlineParts[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"            String deadlineTime \u003d deadlineParts[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"            task \u003d new Deadline(deadlineContent, deadlineTime);","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"        case EVENT:","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"            String[] eventParts \u003d response.substring(6).split(\" /at \");","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"            String eventContent \u003d eventParts[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"            String eventTime \u003d eventParts[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"            task \u003d new Event(eventContent, eventTime);","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        tasks.addElement(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"        String taskString \u003d task.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        storage.store(taskString);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"        return ui.showAdding(taskString, tasks.getSize());","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":70}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"     * Executes the given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks tasks The list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"     * @param ui The user interaction instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"     * @param storage The instance to store data.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"     * @return The executed command string.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     * @throws DukeException The exception related to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.OutOfRangeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    private String response;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    public DeleteCommand(String response) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"        this.response \u003d response;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the task just be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"     * @param ui The user interaction instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     * @param storage The instance to store data.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws OutOfRangeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        //check with the special response \"delete X\", where X is index of deleted item.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        int taskNumber \u003d Integer.parseInt(response.substring(7));","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        assert taskNumber \u003e 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        Task shouldDelete \u003d tasks.removeElement(taskNumber - 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        assert shouldDelete !\u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        storage.replace(taskNumber - 1, null);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"        return ui.showDelete(shouldDelete, tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":38}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"     * Shows exit message.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"     * @param ui The user interaction instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"     * @param storage The instance to store data.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"        return ui.showBye();","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the task in list.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"     * @param ui The user interaction instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"     * @param storage The instance to store data.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"        return tasks.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    private String response;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    public MarkCommand(String response) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"        this.response \u003d response;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the task just be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"     * @param ui The user interaction instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     * @param storage The instance to store data.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        int taskNumber \u003d Integer.parseInt(response.substring(5));","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        assert taskNumber \u003e 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        Task shouldMark \u003d tasks.markElement(taskNumber - 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        String stringForm \u003d shouldMark.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        storage.replace(taskNumber - 1, tasks);","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        return ui.showDone(stringForm);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":37}},{"path":"src/main/java/duke/command/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents specific operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public enum Operation {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    DONE ,","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    DELETE,","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    DATE,","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    FIND;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"qinguorui2001":16}},{"path":"src/main/java/duke/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"//","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"//","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":" * Represents what the search command does.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    private Operation type;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    private String response;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up the search command.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"     * @param response The user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     * @param type The type of search command.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    public SearchCommand(String response, Operation type) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"        this.response \u003d response;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the task match the search date.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"     * @param ui The user interaction instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"     * @param storage The instance to store data.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        TaskList resultList \u003d new TaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        case DATE:","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"            String preTime \u003d response.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"            String actualTime \u003d Task.formatOutputDateAndTime(preTime);         ","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"            resultList \u003d tasks.tasksWithDateSame(actualTime);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"        case FIND:","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"            String content \u003d response.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"            resultList \u003d tasks.tasksWithContent(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"        return resultList.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":58}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents the exceptions which can occur during the operation of duke.Duke robot.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":12}},{"path":"src/main/java/duke/exception/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents the specific duke exception that is related to empty user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"     * Constructs an empty input exception instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"     * @param message The thing considered to be empty.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    public EmptyInputException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"        super(\"OOPS!!! The description of a \" + message + \" cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":17}},{"path":"src/main/java/duke/exception/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"public class LoadingException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"    public LoadingException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"        super(\"There is no file of given name initially, but it is created.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":7}},{"path":"src/main/java/duke/exception/NotRecognizeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents the specific exception that is related to the non-recognition.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class NotRecognizeException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public NotRecognizeException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":12}},{"path":"src/main/java/duke/exception/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents the specific exception that has the index out of range.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class OutOfRangeException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public OutOfRangeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        super(\"The index for \" + message + \" is out of range, no task of that index is there.\" +","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"                \" Please choose another one.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.Operation;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import duke.command.SearchCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.EmptyInputException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.NotRecognizeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"     * Returns boolean value which checks whether","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     * input string is digit or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"     * @param input String input.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"     * @return Content of input is digit or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkIsDigit(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        boolean isDigit \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        if (input.charAt(0) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"            i \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"        for (; i \u003c input.length(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"            char curr \u003d input.charAt(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"            if (!(curr \u003e\u003d \u00270\u0027 \u0026\u0026 curr \u003c\u003d \u00279\u0027)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"                isDigit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        return isDigit;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"     * Transfers the user input to correct command.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"     * @param response The user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"     * @return The corresponding command.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"     * @throws DukeException The exception related to duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"    public static Command parse(String response) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"        int len \u003d response.length();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"        switch (response) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"            Operation op \u003d checkResponse(response, len);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"            switch (op) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"                return new AddCommand(response, Operation.DEADLINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"            case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"                return new AddCommand(response, Operation.EVENT);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"            case TODO:","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"                return new AddCommand(response, Operation.TODO);","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"            case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"                return new MarkCommand(response);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"            case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"                return new DeleteCommand(response);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"            case DATE:","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"                return new SearchCommand(response, Operation.DATE);","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"            case FIND:","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"                return new SearchCommand(response, Operation.FIND);","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"                return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the correct enum operation according to response,","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"     * or it returns null to show exception occurred.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"     * @param response The user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"     * @param len The length of user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"     * @return Type of operation for the next judgement.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"     * @throws DukeException The exception related to duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"    public static Operation checkResponse(String response, int len) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"        boolean isEmpty \u003d response.equals(\"delete\") || response.equals(\"todo\") || response.equals(\"deadline\")","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"                || response.equals(\"event\") || response.equals(\"done\") || response.equals(\"date\")","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"                || response.equals(\"find\");","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"        Predicate\u003cString\u003e isDateFormat \u003d input -\u003e Task.isDateInputFormat(input) !\u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"        if (response.startsWith(\"find \") \u0026\u0026 len \u003e 5) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"            return Operation.FIND;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"        } else if (response.startsWith(\"date \")","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 isDateFormat.test(response.substring(5))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"            return Operation.DATE;","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"        } else if (response.startsWith(\"done \")","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 checkIsDigit(response.substring(5))) {","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"            return Operation.DONE;","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"        } else if (response.startsWith(\"todo \") \u0026\u0026 len \u003e 5) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"            return Operation.TODO;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"        } else if (response.startsWith(\"deadline \")","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 response.substring(9).contains(\" /by \") \u0026\u0026 isDateFormat.test(response.split(\" /by \")[1])) {","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"qinguorui2001"},"content":"            return Operation.DEADLINE;","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"qinguorui2001"},"content":"        } else if (response.startsWith(\"event \")","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 response.substring(6).contains(\" /at \") \u0026\u0026 isDateFormat.test(response.split(\" /at \")[1])) {","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"            return Operation.EVENT;","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"        } else if (response.startsWith(\"delete \")","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 checkIsDigit(response.substring(7))) {","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"            return Operation.DELETE;","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"        } else if (isEmpty) {","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"            throw new EmptyInputException(response);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"            throw new NotRecognizeException();//This means there\u0027s no match of operations.","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":118}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.LoadingException;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":" * Represents the class to store the data.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    /** The recommended working directory path. */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    private static String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    /** The content in the data file. */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    private String content \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    /** Relative file path. */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    /** The actual file name. */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    private String file;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up the store for data.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"     * @param filePath Where to store data.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"        this.file \u003d filePath.substring(4);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the task list stored in data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"     * @return The task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"     * @throws LoadingException The exception related to loading.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"    public ArrayList\u003cTask\u003e load() throws LoadingException, IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"        String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(dir, \"data\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"            new File(dir + \"/data\").mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"        File f \u003d new File(path + file);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        Scanner s;","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"            f.createNewFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"            throw new LoadingException();","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"            int lens \u003d task.length();","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"            String oneLine \u003d task + System.lineSeparator();","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"            sb.append(oneLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"            addRelatedTasks(task, taskList, lens);// Judge data input to add tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"        content \u003d sb.toString();//Update the content.","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"        return taskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"    public void addRelatedTasks(String task, ArrayList\u003cTask\u003e taskList, int lens) {","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"        char type \u003d task.charAt(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"        char done \u003d task.charAt(4);","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"            taskList.add(addTodo(task, lens, done));","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"            taskList.add(addEventOrDeadline(task, lens, type, done));","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"    public Task addEventOrDeadline(String task, int lens, int type, char done) {","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d task.substring(8, lens).split(\" ~ \");","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"        String content \u003d parts[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"        String time \u003d parts[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"        Task deadlineOrEvent;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"        if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"            deadlineOrEvent \u003d new Deadline(content, time);","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"            deadlineOrEvent \u003d new Event(content, time);","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"        if (done \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"            deadlineOrEvent.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"        return deadlineOrEvent;","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"qinguorui2001"},"content":"    public Task addTodo(String task, int lens, char done) {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"        Task todo \u003d new Task(\"\");","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"        if (done \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"            todo \u003d new Todo(task.substring(8, lens));","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"            todo.markAsDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"            todo \u003d new Todo(task.substring(8, lens));","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"        return todo;","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"     * Writes the text to data file, which overwrites initial storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"     * @param filePath The path to data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"     * @param textToAdd The overwritten text.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"     * @throws IOException When write to file fails.","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"qinguorui2001"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"     * Stores the task to data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The string format of task representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"    public void store(String task) throws IOException{","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"        String dataFile \u003d dir + \"/data\" + file;","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"        String data \u003d transformToData(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"        appendToFile(dataFile, data + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"        content \u003d content + data + System.lineSeparator();","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"     * Transforms the task representation to storage form in data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The task string representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"     * @return The string format stored in the data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"    public static String transformToData(String task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d task.length();","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"        char type \u003d task.charAt(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"        char done \u003d task.charAt(4);","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"        String split \u003d \"by: \";","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"        String prefix \u003d \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"        String dataForm;","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"qinguorui2001"},"content":"        if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"qinguorui2001"},"content":"            split \u003d \"at: \";","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"qinguorui2001"},"content":"        if (done \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"qinguorui2001"},"content":"            prefix \u003d \"1\";","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"qinguorui2001"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"qinguorui2001"},"content":"            dataForm \u003d \"T | \" + prefix + \" | \" + task.substring(7, lens);","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"qinguorui2001"},"content":"            String[] parts \u003d task.substring(7, lens).split(split);","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"qinguorui2001"},"content":"            String content \u003d parts[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"qinguorui2001"},"content":"            int lensContent \u003d content.length();","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"qinguorui2001"},"content":"            content \u003d content.substring(0, lensContent - 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"qinguorui2001"},"content":"            String time \u003d parts[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"qinguorui2001"},"content":"            int lensBy \u003d time.length();","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"qinguorui2001"},"content":"            time \u003d time.substring(0, lensBy - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"qinguorui2001"},"content":"            dataForm \u003d type + \" | \" + prefix + \" | \" + content + \" ~ \" + time;","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"qinguorui2001"},"content":"        return dataForm;","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"qinguorui2001"},"content":"     * Appends the text to existing data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"qinguorui2001"},"content":"     * @param filePath The path to data file.","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"qinguorui2001"},"content":"     * @param textToAppend The text tend to add.","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"qinguorui2001"},"content":"     * @throws IOException When the append operation fails.","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"qinguorui2001"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"qinguorui2001"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"qinguorui2001"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"qinguorui2001"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"qinguorui2001"},"content":"     * Replaces the unmarked task as marked, or just removes the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"qinguorui2001"},"content":"     * @param place The index of task in task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"qinguorui2001"},"content":"    public void replace(int place, TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"qinguorui2001"},"content":"        String dataFile \u003d dir + \"/data\" + file;","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d content.split(System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d parts.length;","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"qinguorui2001"},"content":"        String newData \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"qinguorui2001"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"qinguorui2001"},"content":"            newData \u003d transformToData(tasks.elementToString(place));","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"qinguorui2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"qinguorui2001"},"content":"        for (int i \u003d 0; i \u003c lens; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"qinguorui2001"},"content":"            String temp \u003d parts[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"qinguorui2001"},"content":"            if (i \u003d\u003d place \u0026\u0026 tasks \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"qinguorui2001"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"qinguorui2001"},"content":"            } else if (i \u003d\u003d place) {","lastModifiedDate":"2021-09-05"},{"lineNumber":209,"author":{"gitId":"qinguorui2001"},"content":"                temp \u003d newData;","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"qinguorui2001"},"content":"            temp \u003d temp + System.lineSeparator();","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"qinguorui2001"},"content":"            sb.append(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"qinguorui2001"},"content":"        content \u003d sb.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"qinguorui2001"},"content":"        try{","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"qinguorui2001"},"content":"            writeToFile(dataFile, content);","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(\"Delete failed.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":221}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents the task which has deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    /** Stores the deadline. */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    protected String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"     * Creates a deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"     * @param description The content of this task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"     * @param by The deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"        super(description, formatOutputDateAndTime(by));","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"        this.by \u003d formatOutputDateAndTime(by);","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"     * Returns whether the two times are equal.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"     * @param time The time\u0027s string representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"     * @return A boolean.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isTimeSame(String time) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"        return by.equals(time);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"qinguorui2001":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents the event that has time. .","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"     * The time to do the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up the event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"     * @param description The content of event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     * @param at The time when the task should be done.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"        super(description, formatOutputDateAndTime(at));","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        this.at \u003d formatOutputDateAndTime(at);","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"     * Returns whether the two times are equal.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"     * @param time The time\u0027s string representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"     * @return A boolean.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isTimeSame(String time) {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"        return at.equals(time);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"qinguorui2001":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":" * Represents the task user want to configure.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"     * The content of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     * Whether the task is finished or not.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    protected String atOrBy;","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"     * @param description The content of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    public Task(String description, String atOrBy) {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"        this.atOrBy \u003d atOrBy;","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"        return description;","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the correct string form of date.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"     * @param date The date form in yy-mm-dd.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"     * @return The specified string form of date.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"    public static String getDate(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\", Locale.ENGLISH));","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the date representation from the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"     * @param date The date made by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"     * @return The date transformed in standard form.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"    public static String transferToDateFormat(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d date.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"        if (lens \u003e 10) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"            date \u003d date.substring(0, lens - 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d date.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"        if (parts[0].length() \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"            parts[0] \u003d \"0\" + parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"        if (parts[1].length() \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"            parts[1] \u003d \"0\" + parts[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"        date \u003d parts[2] + \"-\" + parts[1] + \"-\" + parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"        return date;","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"     * Returns whether the year,month and day are valid.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"     * @param parts The user input of date in parts.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"     * @return A boolean.","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean isDateFirstPart(String[] parts) {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"        String day \u003d parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"qinguorui2001"},"content":"        String month \u003d parts[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"qinguorui2001"},"content":"        String year \u003d parts[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"        //Get the value of day and month.","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"        int dayValue \u003d Integer.parseInt(day);","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"        int monthValue \u003d Integer.parseInt(month);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"        //Check whether they are valid or not.","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"        boolean isValidDay \u003d dayValue \u003c\u003d 31 \u0026\u0026 dayValue \u003e\u003d 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"        boolean isValidMonth \u003d monthValue \u003c\u003d 12 \u0026\u0026 monthValue \u003e\u003d 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"        boolean isDigitForm \u003d Parser.checkIsDigit(day) \u0026\u0026 Parser.checkIsDigit(year) \u0026\u0026 Parser.checkIsDigit(month);","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"        return isDigitForm \u0026\u0026 isValidMonth \u0026\u0026 isValidDay;","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"     * Returns whether the input is date or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"     * @param input The user input of date.","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"     * @return True or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"    public static int isDateInputFormat(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d input.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"        if (lens \u003e 10) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"            return checkDateTime(input) ? 2 : 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"qinguorui2001"},"content":"           return checkOnlyDate(input, lens) ? 1 : 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkDateTime(String input) {","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"        if (!input.contains(\" \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"        String date \u003d parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"        String time \u003d parts[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"        boolean isLengthInValid \u003d date.length() \u003e 10 || time.length() !\u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"        boolean isContentInValid \u003d !Parser.checkIsDigit(time) || !date.contains(\"/\");","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"        if (isLengthInValid || isContentInValid) {","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"        String[] subParts \u003d date.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"        return isDateFirstPart(subParts);","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkOnlyDate(String input, int lens) {","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"        if (lens \u003c 8 || !input.contains(\"/\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"qinguorui2001"},"content":"        return isDateFirstPart(parts);","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the correct time representation in string.","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"qinguorui2001"},"content":"     * @param time The user input time.","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"qinguorui2001"},"content":"     * @return The specified time representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"qinguorui2001"},"content":"    public static String getTime(String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"qinguorui2001"},"content":"        int hr1 \u003d time.charAt(0) - \u00270\u0027;","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"qinguorui2001"},"content":"        int hr2 \u003d time.charAt(1) - \u00270\u0027;","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"qinguorui2001"},"content":"        int hrFull \u003d hr1 * 10 + hr2;","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"qinguorui2001"},"content":"        int hrFinal;","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"qinguorui2001"},"content":"        String day \u003d \" am\";","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"qinguorui2001"},"content":"        if (hrFull \u003e\u003d 12) {","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"qinguorui2001"},"content":"            hrFinal \u003d hrFull - 12;","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"qinguorui2001"},"content":"            day \u003d \" pm\";","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"qinguorui2001"},"content":"            hrFinal \u003d hrFull;","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"qinguorui2001"},"content":"        return ((Integer) hrFinal).toString() + \u0027.\u0027 + time.substring(2, 4) + day;","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the time string in correct form.","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"qinguorui2001"},"content":"     * @param preTime The time user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"qinguorui2001"},"content":"     * @return The specified form of time.","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"qinguorui2001"},"content":"    public static String formatOutputDateAndTime(String preTime) {","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d preTime.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"qinguorui2001"},"content":"        if (isDateInputFormat(preTime) \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":188,"author":{"gitId":"qinguorui2001"},"content":"            return getDate(transferToDateFormat(preTime));","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"qinguorui2001"},"content":"        } else if (isDateInputFormat(preTime) \u003d\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":190,"author":{"gitId":"qinguorui2001"},"content":"            return getDate(transferToDateFormat(preTime)) + \" \"","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"qinguorui2001"},"content":"                    + getTime(preTime.substring(lens - 4, lens));","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"qinguorui2001"},"content":"            return preTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isTimeSame(String time) {","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"qinguorui2001"},"content":"     * Returns whether the task have this content.","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"qinguorui2001"},"content":"     * @param content The content.","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"qinguorui2001"},"content":"     * @return The boolean.","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"qinguorui2001"},"content":"    public boolean contains(String content) {","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"qinguorui2001"},"content":"        return this.description.contains(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"qinguorui2001"},"content":"    public int isWithinMonthOrDay(String date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":212,"author":{"gitId":"qinguorui2001"},"content":"            String[] partsEventDate \u003d atOrBy.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":213,"author":{"gitId":"qinguorui2001"},"content":"            String monthEvent \u003d partsEventDate[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":214,"author":{"gitId":"qinguorui2001"},"content":"            String yearEvent \u003d partsEventDate[2];","lastModifiedDate":"2021-09-07"},{"lineNumber":215,"author":{"gitId":"qinguorui2001"},"content":"            String dayEvent \u003d partsEventDate[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":216,"author":{"gitId":"qinguorui2001"},"content":"            String[] partsDate \u003d date.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":217,"author":{"gitId":"qinguorui2001"},"content":"            String monthDate \u003d partsDate[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":218,"author":{"gitId":"qinguorui2001"},"content":"            String yearDate \u003d partsDate[2];","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"qinguorui2001"},"content":"            String dayDate \u003d partsDate[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":220,"author":{"gitId":"qinguorui2001"},"content":"            boolean isYearAfter \u003d Integer.parseInt(yearDate) \u003d\u003d Integer.parseInt(yearEvent);","lastModifiedDate":"2021-09-07"},{"lineNumber":221,"author":{"gitId":"qinguorui2001"},"content":"            boolean isMonthSame \u003d monthDate.equals(monthEvent);","lastModifiedDate":"2021-09-07"},{"lineNumber":222,"author":{"gitId":"qinguorui2001"},"content":"            boolean isDaySame \u003d dayDate.equals(dayEvent);","lastModifiedDate":"2021-09-07"},{"lineNumber":223,"author":{"gitId":"qinguorui2001"},"content":"            boolean isDayAfter \u003d Integer.parseInt(dayDate) \u003c\u003d Integer.parseInt(dayEvent);","lastModifiedDate":"2021-09-07"},{"lineNumber":224,"author":{"gitId":"qinguorui2001"},"content":"            boolean isWithinDay \u003d isMonthSame \u0026\u0026 isYearAfter \u0026\u0026 isDaySame;","lastModifiedDate":"2021-09-07"},{"lineNumber":225,"author":{"gitId":"qinguorui2001"},"content":"            boolean isWithinMonth \u003d isMonthSame \u0026\u0026 isYearAfter \u0026\u0026 isDayAfter;","lastModifiedDate":"2021-09-07"},{"lineNumber":226,"author":{"gitId":"qinguorui2001"},"content":"            return isWithinDay ? 1 : isWithinMonth ? 2 : 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":227,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":228,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":229,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"qinguorui2001":229}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.OutOfRangeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    /** The data structure used to store the tasks. */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    /** Number of tasks stored. */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    private int count;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up the list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"     * @param taskList The list for the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        count \u003d taskList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"        return count;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"     * Removes the task at index place and returns it.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"     * @param place The index of task in task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"     * @return The removed task.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"     * @throws OutOfRangeException The exception related to index out of bounds.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"    public Task removeElement(int place) throws OutOfRangeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"        Task shouldDelete;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"            shouldDelete \u003d taskList.get(place);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"            throw new OutOfRangeException(\"delete\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        taskList.remove(place);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        count--;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"        return shouldDelete;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"     * Adds the task to task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    public void addElement(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        count++;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"    public String elementToString(int place) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"        return taskList.get(place).toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the task list of specific date.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"     * @param time The user input time.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"     * @return The task list held at that time.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"    public TaskList tasksWithDateSame(String time) {","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"        TaskList currList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"        taskList.stream()","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"                .filter(currTask -\u003e !(currTask instanceof Todo))","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"                .filter(currTask -\u003e currTask.isTimeSame(time))","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"                .forEach(currList::addElement);","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"        return currList;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the marked element.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"     * @param place The index of task in task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"     * @return The task marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"     * @throws OutOfRangeException The exception related to out of bounds.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"    public Task markElement(int place) throws OutOfRangeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"        Task shouldMark;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"            shouldMark \u003d taskList.get(place);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"            throw new OutOfRangeException(\"done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"        shouldMark.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"        return shouldMark;","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the tasks match that content.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"     * @param content The user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"qinguorui2001"},"content":"    public TaskList tasksWithContent(String content) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"        TaskList currList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"        taskList.stream()","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"                .filter(currTask -\u003e currTask.contains(content))","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"                .forEach(currList::addElement);","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"        return currList;","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"    public TaskList tasksWithinMonthOrDay(int type) {","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"        TaskList currList \u003d new TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"        LocalDate dateNow \u003d LocalDate.now();","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"        String now \u003d dateNow.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\", Locale.ENGLISH));","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"        taskList.stream()","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"                .filter(currTask -\u003e !(currTask instanceof Todo))","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"                .filter(currTask -\u003e currTask.isWithinMonthOrDay(now) \u003d\u003d type)","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"                .forEach(currList::addElement);","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"        return currList;","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"qinguorui2001"},"content":"     * Shows all strings stored with indexing.","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"        String end \u003d \"\\n   \";","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"        String begin \u003d \"   Here are the tasks in your list:\\n   \";","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"        sb.append(begin);","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"            if (i \u003d\u003d count - 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"                end \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"            String out \u003d ((i + 1)) + \".\" + this.elementToString(i) + end;","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"            sb.append(out);","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"qinguorui2001":145}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * Represents the To-do tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up a todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"     * @param description The content of todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"qinguorui2001":22}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    private Text dialog;","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"        assert img !\u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"qinguorui2001":63}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke, what can I do for you?\";","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    private static Duke duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"        showWelcome();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"        showReminders();","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"    public static void setDuke(Duke d) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"                @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"                public void run() {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"                    System.exit(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"            }, 1500);","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"    private void showWelcome() {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(GREETING, dukeImage));","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"    private void showReminders() {","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Duke.showComings(), dukeImage));","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"qinguorui2001":84}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.LoadingException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    private String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     * Sets up the ui scanner.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        //User input.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the formatted string output.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The possible task string representations.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"     * @param count The number of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"     * @return The desirable output string related to task.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    public String getOutputFrame(String task, int count) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"        String title \u003d \"   Got it. I\u0027ve added this task:\\n   \";","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        String middle \u003d \"  \" + task + \"\\n   \";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"        String end \u003d \"Now you have \" + count + \" tasks in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        return title + middle + end;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the error message.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"     * @param message","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"    public String showError(String message) {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"        return \"   \" + message;","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the deleted task.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"     * @param shouldDelete The task should be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"    public String showDelete(Task shouldDelete, TaskList tasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"        String title \u003d \"   Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        String out \u003d \"     \" + shouldDelete.toString() + \"\\n   \";","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        String end \u003d \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"        return title + out + end;","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"     * Shows adding the task to the list.","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The task want to be shown.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"     * @param count The number of tasks in task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"    public String showAdding(String task, int count) {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"        return getOutputFrame(task, count);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"     * Shows error while loading.","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"        LoadingException e \u003d new LoadingException();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"        return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"     * Shows the task marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"     * @param stringForm The string form of that task.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"    public String showDone(String stringForm) {","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"        String title \u003d \"   Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"        String out \u003d \"     \" + stringForm;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"        return title + out;","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"    public String showBye() {","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"        return \"   \" + \"Bye, see you soon. ^-^\";","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"    public String showComings(TaskList taskListMonth, TaskList taskListDay) {","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"        String titleMonth \u003d \"   \u003c\u003cComing tasks within same month\u003e\u003e \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"        String listInMonth \u003d taskListMonth.toString() + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"        String titleDay \u003d \"   \u003c\u003cComing tasks within the same day\u003e\u003e \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"        String listInDay \u003d taskListDay.toString() + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"        return titleMonth + listInMonth + titleDay + listInDay;","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":104}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"        \u003cText fx:id\u003d\"dialog\" fill\u003d\"#65e0e4\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"                                           Text\" textAlignment\u003d\"RIGHT\" wrappingWidth\u003d\"193.5999664068222\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"                \u003cFont name\u003d\"Book Antiqua Bold Italic\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"qinguorui2001":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"\u003cAnchorPane xmlns:fx \u003d \"http://javafx.com/fxml/1\" maxHeight \u003d \"-Infinity\" maxWidth \u003d \"-Infinity\" minHeight \u003d \"-Infinity\" minWidth \u003d \"-Infinity\" prefHeight \u003d \"600.0\" prefWidth \u003d \"400.0\" style \u003d \"-fx-border-color: black; -fx-background-color: black;\" xmlns \u003d \"http://javafx.com/javafx/11\" fx:controller \u003d \"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"        \u003cTextField fx:id \u003d \"userInput\" layoutY \u003d \"558.0\" onAction \u003d \"#handleUserInput\" prefHeight \u003d \"40.0\" promptText \u003d \"Enter Command Here ...\" style \u003d \"-fx-background-color: #373e43;\" styleClass \u003d \"text-field\" stylesheets \u003d \"@style.css\" AnchorPane.bottomAnchor \u003d \"1.0\" AnchorPane.leftAnchor \u003d \"1.0\" AnchorPane.rightAnchor \u003d \"75.0\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"                \u003cFont name \u003d \"Consolas\" size \u003d \"12.0\"/\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"        \u003cButton fx:id \u003d \"sendButton\" layoutX \u003d \"324.0\" layoutY \u003d \"558.0\" mnemonicParsing \u003d \"false\" onAction \u003d \"#handleUserInput\" prefHeight \u003d \"40.0\" style \u003d \"-fx-background-color: #373e43;\" text \u003d \"Send\" textAlignment \u003d \"CENTER\" textFill \u003d \"#50ff00\" AnchorPane.bottomAnchor \u003d \"1.0\" AnchorPane.leftAnchor \u003d \"325.0\" AnchorPane.rightAnchor \u003d \"1.0\"/\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"        \u003cScrollPane fx:id \u003d \"scrollPane\" fitToHeight \u003d \"true\" fitToWidth \u003d \"true\" hbarPolicy \u003d \"NEVER\" hvalue \u003d \"1.0\" prefHeight \u003d \"560.0\" stylesheets \u003d \"@style.css\" vvalue \u003d \"1.0\" AnchorPane.leftAnchor \u003d \"0.0\" AnchorPane.rightAnchor \u003d \"0.0\" AnchorPane.topAnchor \u003d \"0.0\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"                \u003cVBox fx:id \u003d \"dialogContainer\" prefHeight \u003d \"500.0\" prefWidth \u003d \"300.0\" style \u003d \"-fx-background-color: #373e43;\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"                    \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"                        \u003cInsets/\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"                    \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"qinguorui2001":28}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public void isExitTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        AddCommand c \u003d new AddCommand(\"todo ddd\", Operation.TODO);","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(c.isExit());","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"        c \u003d new AddCommand(\"deadline xx /by tomorrow\", Operation.DEADLINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(c.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":15}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import duke.exception.NotRecognizeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    public void checkDigit_negativeWholeDigit_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"        String[] negatives \u003d {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"                \"-1\",","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"                \"-1534\",","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"                \"-11\"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"        };","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"        for (String negative : negatives) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"            boolean flag \u003d Parser.checkIsDigit(negative);","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"            assertTrue(flag);","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    public void checkResponse_invalidResponse_exceptionThrown() {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        String[] commands \u003d {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"                \"blah\",","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"                \"ls\", \"lst\", \"lista\",","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"                \"don\", \"dona\", \"donef\",","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"                \"tod\", \"todi\", \"todo.\",","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"                \"dead\", \"deedline1\", \"dead line\",","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"                \"eve\", \"evant\", \"event3\",","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"                \"del\", \"deleta\", \"deleteh\",","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"                \"fin\", \"fine\", \"finda\",","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        };","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        for (String command : commands) {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"            NotRecognizeException exception \u003d assertThrows(NotRecognizeException.class,","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"                    () -\u003e Parser.parse(command));","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"                    exception.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":47}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public void transformToData_normalTasks_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        String[] tasks \u003d {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"                \"[D][X] deadlineDone (by: today)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"                \"[T][ ] todo\",","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"                \"[E][ ] event (at: 16.40)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"                \"[E][X] eventDone (at: now)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"        };","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"        String[] formats \u003d {","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"                \"D | 1 | deadlineDone ~ today\",","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"                \"T | 0 | todo\",","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"                \"E | 0 | event ~ 16.40\",","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"                \"E | 1 | eventDone ~ now\",","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        };","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        for (String task : tasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"            String result \u003d Storage.transformToData(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"            assertEquals(formats[count++], result);","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"qinguorui2001":31}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        Deadline deadline \u003d new Deadline(\"test deadline\", \"tomorrow\");","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"        String expected \u003d \"[D][ ] test deadline (by: tomorrow)\";","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    public void markAsDone_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"        Deadline deadline \u003d new Deadline(\"test deadline\", \"yesterday\");","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"        deadline.markAsDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"        String expected \u003d \"[D][X] test deadline (by: yesterday)\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"qinguorui2001":24}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    public void tasksWithinMonthOrDay_Month_success() {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"        Deadline deadline \u003d new Deadline(\"test deadline\", \"7/9/2021\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"        Event event \u003d new Event(\"test event\", \"17/9/2021\");","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"        ArrayList\u003cTask\u003e tasksForDay \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"        tasksForDay.add(deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"        TaskList dayList \u003d new TaskList(tasksForDay);","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"        String expectedDay \u003d dayList.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"        ArrayList\u003cTask\u003e tasksForMonth \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"        tasksForMonth.add(event);","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"        TaskList monthList \u003d new TaskList(tasksForMonth);","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"        String expectedMonth \u003d monthList.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"        testList.add(deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"        testList.add(event);","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        testList.add(new Event(\"not\", \"11/11/1111\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        testList.add(new Event(\"also not\", \"7/9/1177 1655\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        TaskList currListExpected \u003d new TaskList(testList);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        String actualDay \u003d currListExpected.tasksWithinMonthOrDay(1).toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        String actualMonth \u003d currListExpected.tasksWithinMonthOrDay(2).toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expectedDay, actualDay);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expectedMonth, actualMonth);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"qinguorui2001":33}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"public class TaskTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"        Task task1 \u003d new Event(\"test event\", \"7/9/2021\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"        Task task2 \u003d new Todo(\"test todo\");","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"        String expected \u003d \"Sep 7 2021\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expected, task1.atOrBy);","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"        assertNull(task2.atOrBy);","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    public void isWithinMonthOrDay_success() {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        Task task1 \u003d new Event(\"test event\", \"7/9/2021\");","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        Task task2 \u003d new Todo(\"test todo\");","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        int expected \u003d 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        LocalDate dateNow \u003d LocalDate.now();","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        String now \u003d dateNow.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\", Locale.ENGLISH));","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(\"Sep 7 2021\", now);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expected, task1.isWithinMonthOrDay(now));","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"        assertNull(task2.atOrBy);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"qinguorui2001":34}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"public class TodoTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"        Todo todo \u003d new Todo(\"test todo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"        String expected \u003d \"[T][ ] test todo\";","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    public void markAsDone_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"        Todo todo \u003d new Todo(\"test todo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"        String expected \u003d \"[T][X] test todo\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"qinguorui2001":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"todo return book","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"deadline borrow book /by not sure","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"event project meeting /at afternoon","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"todofadf","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"deadline fdf/by today","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"event event","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"event event /aterror","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":" todo dsfa","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qinguorui2001":1,"-":20}}]
