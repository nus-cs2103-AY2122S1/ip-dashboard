[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents the task which has deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"    /** Stores the deadline. */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    protected String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"        this.by \u003d dateAndTime(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    public String getActualTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"        return by;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"qinguorui2001":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":" * Represents the robot which has corresponding reaction to the user inputs.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    /** The content in the data file. */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    private static String content \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    /** The recommended working directory path. */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    private static String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    /** The data structure used to store the tasks. */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    private static final ArrayList\u003cTask\u003e TASK_LIST \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    /** Number of tasks stored. */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    private static int count;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    /** User inputs. */","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    private static String response;","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    /** The length of user input. */","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    private static int len;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"            getData();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(\"The whole thing crashed without a reason.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        //Start Prompt.","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"        System.out.println(getPattern(\"Hello! I\u0027m Duke\\n   What can I do for you?\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        //User input.","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"        //Continue the loop until user says bye.","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"        while (isContinue) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"            response \u003d sc.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"            len \u003d response.length();","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"            isContinue \u003d echo();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"    public static void getData() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"        String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        // inserts correct file path separator on *nix and Windows","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"        // works on *nix","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"        // works on Windows","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(dir,\"data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"            new File(dir + \"/data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"        File f \u003d new File(path + \"/duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"                String curr \u003d s.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"                int lens \u003d curr.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"                // No content","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"                if (lens \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"                    return;","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"                String oneLine \u003d curr + System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"                sb.append(oneLine);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"                // Judge data input to add tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"                char type \u003d curr.charAt(0);","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"                char done \u003d curr.charAt(4);","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"                if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"                    Todo todo \u003d new Todo(curr.substring(8, lens));","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"                    if (done \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"                        todo.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"                    TASK_LIST.add(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"                    String[] parts \u003d curr.substring(8, lens).split(\" ~ \");","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"                    String content \u003d parts[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"                    String by \u003d parts[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"                    Task deadlineOrEvent;","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"                    if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"                        deadlineOrEvent \u003d new Deadline(content, by);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"                        deadlineOrEvent \u003d new Event(content, by);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"                    if (done \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"                        deadlineOrEvent.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"qinguorui2001"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"qinguorui2001"},"content":"                    TASK_LIST.add(deadlineOrEvent);","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"                count++;","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"            content \u003d sb.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"            boolean isCreated \u003d f.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"            if (isCreated) {","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"                System.out.println(\"New data file is created.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"     * Writes the text to data file, which overwrites initial storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"     * @param filePath The path to data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"     * @param textToAdd The overwritten text.","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"     * @throws IOException When write to file fails.","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"qinguorui2001"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"qinguorui2001"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"     * Stores the task to data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The string format of task representation.","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"    public static void store(String task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"        String dataFile \u003d dir + \"/data/duke.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"            String data \u003d transformToData(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"            appendToFile(dataFile, data + System.lineSeparator());","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"            content \u003d content + data + System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"     * Appends the text to existing data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"     * @param filePath The path to data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"     * @param textToAppend The text tend to add.","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"     * @throws IOException When the append operation fails.","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"qinguorui2001"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"qinguorui2001"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"qinguorui2001"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"qinguorui2001"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"qinguorui2001"},"content":"     * Deletes the task at certain place.","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"qinguorui2001"},"content":"     * @param place The index when the task is stored in task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"qinguorui2001"},"content":"    public static void delete(int place) {","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"qinguorui2001"},"content":"            String dataFile \u003d dir + \"/data/duke.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"qinguorui2001"},"content":"            String[] parts \u003d content.split(System.lineSeparator());","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"qinguorui2001"},"content":"            int lens \u003d parts.length;","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"qinguorui2001"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"qinguorui2001"},"content":"            for (int i \u003d 0; i \u003c lens; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"qinguorui2001"},"content":"                if (i \u003d\u003d place) {","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"qinguorui2001"},"content":"                    continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"qinguorui2001"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"qinguorui2001"},"content":"                String temp \u003d parts[i] + System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"qinguorui2001"},"content":"                sb.append(temp);","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"qinguorui2001"},"content":"            content \u003d sb.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"qinguorui2001"},"content":"            writeToFile(dataFile, content);","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(\"Delete failed.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":185,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":186,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":187,"author":{"gitId":"qinguorui2001"},"content":"     * Returns formatted string output.","lastModifiedDate":"2021-08-14"},{"lineNumber":188,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":189,"author":{"gitId":"qinguorui2001"},"content":"     * @param r The input string.","lastModifiedDate":"2021-08-14"},{"lineNumber":190,"author":{"gitId":"qinguorui2001"},"content":"     * @return Formatted string.","lastModifiedDate":"2021-08-14"},{"lineNumber":191,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":192,"author":{"gitId":"qinguorui2001"},"content":"    public static String getPattern(String r) {","lastModifiedDate":"2021-08-14"},{"lineNumber":193,"author":{"gitId":"qinguorui2001"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"qinguorui2001"},"content":"        StringBuilder curr \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"qinguorui2001"},"content":"        String empty \u003d \"   \";","lastModifiedDate":"2021-08-14"},{"lineNumber":196,"author":{"gitId":"qinguorui2001"},"content":"        curr.append(\"*\".repeat(80));","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"qinguorui2001"},"content":"        String out \u003d empty + curr + \"\\n\" + empty + r + \"\\n\" + empty + curr + \"\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":198,"author":{"gitId":"qinguorui2001"},"content":"        result.append(out);","lastModifiedDate":"2021-08-14"},{"lineNumber":199,"author":{"gitId":"qinguorui2001"},"content":"        return result.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":200,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":201,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":202,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":203,"author":{"gitId":"qinguorui2001"},"content":"     * Returns all strings stored with indexing.","lastModifiedDate":"2021-08-14"},{"lineNumber":204,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":205,"author":{"gitId":"qinguorui2001"},"content":"     * @return All user\u0027s stored strings.","lastModifiedDate":"2021-08-14"},{"lineNumber":206,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":207,"author":{"gitId":"qinguorui2001"},"content":"    public static String toListStrings() {","lastModifiedDate":"2021-08-14"},{"lineNumber":208,"author":{"gitId":"qinguorui2001"},"content":"        StringBuilder curr \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":209,"author":{"gitId":"qinguorui2001"},"content":"        String end \u003d \"\\n   \";","lastModifiedDate":"2021-08-14"},{"lineNumber":210,"author":{"gitId":"qinguorui2001"},"content":"        String begin \u003d \"Here are the tasks in your list:\\n   \";","lastModifiedDate":"2021-08-14"},{"lineNumber":211,"author":{"gitId":"qinguorui2001"},"content":"        curr.append(begin);","lastModifiedDate":"2021-08-14"},{"lineNumber":212,"author":{"gitId":"qinguorui2001"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":213,"author":{"gitId":"qinguorui2001"},"content":"            if (i \u003d\u003d count - 1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":214,"author":{"gitId":"qinguorui2001"},"content":"                end \u003d \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":215,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":216,"author":{"gitId":"qinguorui2001"},"content":"            String out \u003d ((Integer) (i + 1)).toString() + \".\" + TASK_LIST.get(i).toString() + end;","lastModifiedDate":"2021-08-21"},{"lineNumber":217,"author":{"gitId":"qinguorui2001"},"content":"            curr.append(out);","lastModifiedDate":"2021-08-14"},{"lineNumber":218,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":219,"author":{"gitId":"qinguorui2001"},"content":"        return curr.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":220,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":221,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":222,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":223,"author":{"gitId":"qinguorui2001"},"content":"     * Returns boolean value which checks whether","lastModifiedDate":"2021-08-14"},{"lineNumber":224,"author":{"gitId":"qinguorui2001"},"content":"     * input string is digit or not.","lastModifiedDate":"2021-08-14"},{"lineNumber":225,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":226,"author":{"gitId":"qinguorui2001"},"content":"     * @param input String input.","lastModifiedDate":"2021-08-14"},{"lineNumber":227,"author":{"gitId":"qinguorui2001"},"content":"     * @return Content of input is digit or not.","lastModifiedDate":"2021-08-14"},{"lineNumber":228,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":229,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean chekDigit(String input) {","lastModifiedDate":"2021-08-14"},{"lineNumber":230,"author":{"gitId":"qinguorui2001"},"content":"        boolean isDigit \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":231,"author":{"gitId":"qinguorui2001"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":232,"author":{"gitId":"qinguorui2001"},"content":"        if (input.charAt(0) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2021-08-16"},{"lineNumber":233,"author":{"gitId":"qinguorui2001"},"content":"            i \u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":234,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":235,"author":{"gitId":"qinguorui2001"},"content":"        for (; i \u003c input.length(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":236,"author":{"gitId":"qinguorui2001"},"content":"            char curr \u003d input.charAt(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":237,"author":{"gitId":"qinguorui2001"},"content":"            if (!(curr \u003e\u003d \u00270\u0027 \u0026\u0026 curr \u003c\u003d \u00279\u0027)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":238,"author":{"gitId":"qinguorui2001"},"content":"                isDigit \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":239,"author":{"gitId":"qinguorui2001"},"content":"                break;","lastModifiedDate":"2021-08-14"},{"lineNumber":240,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":241,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":242,"author":{"gitId":"qinguorui2001"},"content":"        return isDigit;","lastModifiedDate":"2021-08-23"},{"lineNumber":243,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":244,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":245,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":246,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the formatted string output.","lastModifiedDate":"2021-08-15"},{"lineNumber":247,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":248,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The possible task string representations.","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"qinguorui2001"},"content":"     * @return The desirable output string related to task.","lastModifiedDate":"2021-08-15"},{"lineNumber":250,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":251,"author":{"gitId":"qinguorui2001"},"content":"    public static String getOutputFrame(String task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":252,"author":{"gitId":"qinguorui2001"},"content":"        String title \u003d \"Got it. I\u0027ve added this task:\\n   \";","lastModifiedDate":"2021-08-15"},{"lineNumber":253,"author":{"gitId":"qinguorui2001"},"content":"        String middle \u003d \"  \" + task + \"\\n   \";","lastModifiedDate":"2021-08-15"},{"lineNumber":254,"author":{"gitId":"qinguorui2001"},"content":"        String end \u003d \"Now you have \" + count + \" tasks in the list.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":255,"author":{"gitId":"qinguorui2001"},"content":"        return title + middle + end;","lastModifiedDate":"2021-08-15"},{"lineNumber":256,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":257,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"qinguorui2001"},"content":"     * Returns a boolean checking whether the user input is","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"qinguorui2001"},"content":"     * related to to-do operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":261,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":262,"author":{"gitId":"qinguorui2001"},"content":"     * @return Whether the input is related to to-do or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":264,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkTodo() {","lastModifiedDate":"2021-08-19"},{"lineNumber":265,"author":{"gitId":"qinguorui2001"},"content":"        //check with the special response \"to-do X\", where X is what to do.","lastModifiedDate":"2021-08-19"},{"lineNumber":266,"author":{"gitId":"qinguorui2001"},"content":"        Todo todo \u003d new Todo(response.substring(5, len));","lastModifiedDate":"2021-08-19"},{"lineNumber":267,"author":{"gitId":"qinguorui2001"},"content":"        TASK_LIST.add(todo);","lastModifiedDate":"2021-08-21"},{"lineNumber":268,"author":{"gitId":"qinguorui2001"},"content":"        String todoString \u003d todo.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"qinguorui2001"},"content":"        store(todoString);","lastModifiedDate":"2021-08-22"},{"lineNumber":270,"author":{"gitId":"qinguorui2001"},"content":"        count++;","lastModifiedDate":"2021-08-19"},{"lineNumber":271,"author":{"gitId":"qinguorui2001"},"content":"        System.out.println(getPattern(getOutputFrame(todoString)));","lastModifiedDate":"2021-08-22"},{"lineNumber":272,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":273,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":274,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":275,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":276,"author":{"gitId":"qinguorui2001"},"content":"     * Returns a boolean checking whether the user input is","lastModifiedDate":"2021-08-19"},{"lineNumber":277,"author":{"gitId":"qinguorui2001"},"content":"     * related to deadline operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":278,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":279,"author":{"gitId":"qinguorui2001"},"content":"     * @return Whether the input is related to deadline or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":280,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":281,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkDeadline(){","lastModifiedDate":"2021-08-19"},{"lineNumber":282,"author":{"gitId":"qinguorui2001"},"content":"        //check with the special response \"deadline X\", where X is what to do and by what time.","lastModifiedDate":"2021-08-19"},{"lineNumber":283,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d response.substring(9, len).split(\" /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":284,"author":{"gitId":"qinguorui2001"},"content":"        String content \u003d parts[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":285,"author":{"gitId":"qinguorui2001"},"content":"        String time \u003d parts[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":286,"author":{"gitId":"qinguorui2001"},"content":"        Deadline deadline \u003d new Deadline(content, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":287,"author":{"gitId":"qinguorui2001"},"content":"        TASK_LIST.add(deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":288,"author":{"gitId":"qinguorui2001"},"content":"        String deadlineString \u003d deadline.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":289,"author":{"gitId":"qinguorui2001"},"content":"        store(deadlineString);","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"qinguorui2001"},"content":"        count++;","lastModifiedDate":"2021-08-19"},{"lineNumber":291,"author":{"gitId":"qinguorui2001"},"content":"        System.out.println(getPattern(getOutputFrame(deadlineString)));","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":293,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":294,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":295,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":296,"author":{"gitId":"qinguorui2001"},"content":"     * Returns a boolean checking whether the user input is","lastModifiedDate":"2021-08-19"},{"lineNumber":297,"author":{"gitId":"qinguorui2001"},"content":"     * related to event operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":298,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":299,"author":{"gitId":"qinguorui2001"},"content":"     * @return Whether the input is related to event or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":300,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":301,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkEvent(){","lastModifiedDate":"2021-08-19"},{"lineNumber":302,"author":{"gitId":"qinguorui2001"},"content":"        //check with the special response \"event X\", where X includes what to do and time to do.","lastModifiedDate":"2021-08-19"},{"lineNumber":303,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d response.substring(6, len).split(\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":304,"author":{"gitId":"qinguorui2001"},"content":"        String content \u003d parts[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":305,"author":{"gitId":"qinguorui2001"},"content":"        String time \u003d parts[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":306,"author":{"gitId":"qinguorui2001"},"content":"        Event event \u003d new Event(content, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":307,"author":{"gitId":"qinguorui2001"},"content":"        TASK_LIST.add(event);","lastModifiedDate":"2021-08-21"},{"lineNumber":308,"author":{"gitId":"qinguorui2001"},"content":"        String eventString \u003d event.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":309,"author":{"gitId":"qinguorui2001"},"content":"        store(eventString);","lastModifiedDate":"2021-08-22"},{"lineNumber":310,"author":{"gitId":"qinguorui2001"},"content":"        count++;","lastModifiedDate":"2021-08-19"},{"lineNumber":311,"author":{"gitId":"qinguorui2001"},"content":"        System.out.println(getPattern(getOutputFrame(eventString)));","lastModifiedDate":"2021-08-22"},{"lineNumber":312,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":313,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":314,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":315,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":316,"author":{"gitId":"qinguorui2001"},"content":"     * Returns a boolean checking whether the user input is","lastModifiedDate":"2021-08-19"},{"lineNumber":317,"author":{"gitId":"qinguorui2001"},"content":"     * related to delete operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":318,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":319,"author":{"gitId":"qinguorui2001"},"content":"     * @return Whether the input is related to delete or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":320,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":321,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkDelete(){","lastModifiedDate":"2021-08-19"},{"lineNumber":322,"author":{"gitId":"qinguorui2001"},"content":"        //check with the special response \"delete X\", where X is index of deleted item.","lastModifiedDate":"2021-08-19"},{"lineNumber":323,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":324,"author":{"gitId":"qinguorui2001"},"content":"            int curr \u003d Integer.parseInt(response.substring(7, len));","lastModifiedDate":"2021-08-19"},{"lineNumber":325,"author":{"gitId":"qinguorui2001"},"content":"            Task shouldDelete;","lastModifiedDate":"2021-08-19"},{"lineNumber":326,"author":{"gitId":"qinguorui2001"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":327,"author":{"gitId":"qinguorui2001"},"content":"                shouldDelete \u003d TASK_LIST.get(curr - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":328,"author":{"gitId":"qinguorui2001"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":329,"author":{"gitId":"qinguorui2001"},"content":"                throw new OutOfRangeException(\"delete\");","lastModifiedDate":"2021-08-21"},{"lineNumber":330,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":331,"author":{"gitId":"qinguorui2001"},"content":"            TASK_LIST.remove(curr - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":332,"author":{"gitId":"qinguorui2001"},"content":"            delete(curr - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":333,"author":{"gitId":"qinguorui2001"},"content":"            count--;","lastModifiedDate":"2021-08-19"},{"lineNumber":334,"author":{"gitId":"qinguorui2001"},"content":"            String title \u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":335,"author":{"gitId":"qinguorui2001"},"content":"            String out \u003d \"     \" + shouldDelete.toString() + \"\\n   \";","lastModifiedDate":"2021-08-19"},{"lineNumber":336,"author":{"gitId":"qinguorui2001"},"content":"            String end \u003d \"Now you have \" + count + \" tasks in the list.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":337,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(title + out + end));","lastModifiedDate":"2021-08-19"},{"lineNumber":338,"author":{"gitId":"qinguorui2001"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":339,"author":{"gitId":"qinguorui2001"},"content":"        } catch (OutOfRangeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":340,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(e.getMessage()));","lastModifiedDate":"2021-08-19"},{"lineNumber":341,"author":{"gitId":"qinguorui2001"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":342,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":343,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":344,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":345,"author":{"gitId":"qinguorui2001"},"content":"    public static String transformToTask(String data) {","lastModifiedDate":"2021-08-22"},{"lineNumber":346,"author":{"gitId":"qinguorui2001"},"content":"        return \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":347,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":348,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":349,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":350,"author":{"gitId":"qinguorui2001"},"content":"     * Transforms the task representation to storage form in data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":351,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":352,"author":{"gitId":"qinguorui2001"},"content":"     * @param task The task string representation.","lastModifiedDate":"2021-08-22"},{"lineNumber":353,"author":{"gitId":"qinguorui2001"},"content":"     * @return The string format stored in the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":354,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":355,"author":{"gitId":"qinguorui2001"},"content":"    public static String transformToData(String task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":356,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d task.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":357,"author":{"gitId":"qinguorui2001"},"content":"        char type \u003d task.charAt(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":358,"author":{"gitId":"qinguorui2001"},"content":"        char done \u003d task.charAt(4);","lastModifiedDate":"2021-08-22"},{"lineNumber":359,"author":{"gitId":"qinguorui2001"},"content":"        String split \u003d \"by: \";","lastModifiedDate":"2021-08-22"},{"lineNumber":360,"author":{"gitId":"qinguorui2001"},"content":"        String prefix \u003d \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":361,"author":{"gitId":"qinguorui2001"},"content":"        String dataForm \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":362,"author":{"gitId":"qinguorui2001"},"content":"        if (done \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":363,"author":{"gitId":"qinguorui2001"},"content":"            prefix \u003d \"1\";","lastModifiedDate":"2021-08-22"},{"lineNumber":364,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":365,"author":{"gitId":"qinguorui2001"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":366,"author":{"gitId":"qinguorui2001"},"content":"            dataForm \u003d \"T | \" + prefix + \" | \" + task.substring(8, lens);","lastModifiedDate":"2021-08-22"},{"lineNumber":367,"author":{"gitId":"qinguorui2001"},"content":"        } else  {","lastModifiedDate":"2021-08-22"},{"lineNumber":368,"author":{"gitId":"qinguorui2001"},"content":"            if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":369,"author":{"gitId":"qinguorui2001"},"content":"                split \u003d \"at: \";","lastModifiedDate":"2021-08-22"},{"lineNumber":370,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":371,"author":{"gitId":"qinguorui2001"},"content":"            String[] parts \u003d task.substring(8, lens).split(split);","lastModifiedDate":"2021-08-22"},{"lineNumber":372,"author":{"gitId":"qinguorui2001"},"content":"            String content \u003d parts[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":373,"author":{"gitId":"qinguorui2001"},"content":"            int lensContent \u003d content.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":374,"author":{"gitId":"qinguorui2001"},"content":"            content \u003d content.substring(0, lensContent - 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":375,"author":{"gitId":"qinguorui2001"},"content":"            String time \u003d parts[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":376,"author":{"gitId":"qinguorui2001"},"content":"            int lensBy \u003d time.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":377,"author":{"gitId":"qinguorui2001"},"content":"            time \u003d time.substring(0, lensBy - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":378,"author":{"gitId":"qinguorui2001"},"content":"            dataForm \u003d type + \" | \" + prefix + \" | \" + content + \" ~ \" + time;","lastModifiedDate":"2021-08-22"},{"lineNumber":379,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":380,"author":{"gitId":"qinguorui2001"},"content":"        return dataForm;","lastModifiedDate":"2021-08-22"},{"lineNumber":381,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":382,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":383,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":384,"author":{"gitId":"qinguorui2001"},"content":"     * Replaces the task at certain place in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":385,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":386,"author":{"gitId":"qinguorui2001"},"content":"     * @param place The index where the task is stored in task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":387,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":388,"author":{"gitId":"qinguorui2001"},"content":"    public static void replace(int place) {","lastModifiedDate":"2021-08-22"},{"lineNumber":389,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":390,"author":{"gitId":"qinguorui2001"},"content":"            String dataFile \u003d dir + \"/data/duke.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":391,"author":{"gitId":"qinguorui2001"},"content":"            String[] parts \u003d content.split(System.lineSeparator());","lastModifiedDate":"2021-08-22"},{"lineNumber":392,"author":{"gitId":"qinguorui2001"},"content":"            int lensParts \u003d parts.length;","lastModifiedDate":"2021-08-22"},{"lineNumber":393,"author":{"gitId":"qinguorui2001"},"content":"            String newData \u003d transformToData(TASK_LIST.get(place).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":394,"author":{"gitId":"qinguorui2001"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":395,"author":{"gitId":"qinguorui2001"},"content":"            for (int i \u003d 0; i \u003c lensParts; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":396,"author":{"gitId":"qinguorui2001"},"content":"                String temp \u003dparts[i];","lastModifiedDate":"2021-08-22"},{"lineNumber":397,"author":{"gitId":"qinguorui2001"},"content":"                if (i \u003d\u003d place) {","lastModifiedDate":"2021-08-22"},{"lineNumber":398,"author":{"gitId":"qinguorui2001"},"content":"                    temp \u003d newData;","lastModifiedDate":"2021-08-22"},{"lineNumber":399,"author":{"gitId":"qinguorui2001"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":400,"author":{"gitId":"qinguorui2001"},"content":"                temp \u003d temp + System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":401,"author":{"gitId":"qinguorui2001"},"content":"                sb.append(temp);","lastModifiedDate":"2021-08-22"},{"lineNumber":402,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":403,"author":{"gitId":"qinguorui2001"},"content":"            content \u003d sb.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":404,"author":{"gitId":"qinguorui2001"},"content":"            writeToFile(dataFile, content);","lastModifiedDate":"2021-08-22"},{"lineNumber":405,"author":{"gitId":"qinguorui2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":406,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(\"Fail to replace.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":407,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":408,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":409,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":410,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":411,"author":{"gitId":"qinguorui2001"},"content":"     * Returns a boolean checking whether user input is","lastModifiedDate":"2021-08-19"},{"lineNumber":412,"author":{"gitId":"qinguorui2001"},"content":"     * related to mark done of tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":413,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":414,"author":{"gitId":"qinguorui2001"},"content":"     * @return Is done operation or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":415,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":416,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":417,"author":{"gitId":"qinguorui2001"},"content":"        //check with the special response \"done X\", where X is a number.","lastModifiedDate":"2021-08-19"},{"lineNumber":418,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":419,"author":{"gitId":"qinguorui2001"},"content":"            int curr \u003d Integer.parseInt(response.substring(5, len));","lastModifiedDate":"2021-08-19"},{"lineNumber":420,"author":{"gitId":"qinguorui2001"},"content":"            Task shouldMark;","lastModifiedDate":"2021-08-19"},{"lineNumber":421,"author":{"gitId":"qinguorui2001"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":422,"author":{"gitId":"qinguorui2001"},"content":"                shouldMark \u003d TASK_LIST.get(curr - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":423,"author":{"gitId":"qinguorui2001"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":424,"author":{"gitId":"qinguorui2001"},"content":"                throw new OutOfRangeException(\"done\");","lastModifiedDate":"2021-08-21"},{"lineNumber":425,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":426,"author":{"gitId":"qinguorui2001"},"content":"            shouldMark.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":427,"author":{"gitId":"qinguorui2001"},"content":"            String stringForm \u003d shouldMark.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":428,"author":{"gitId":"qinguorui2001"},"content":"            replace(curr - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":429,"author":{"gitId":"qinguorui2001"},"content":"            String title \u003d \"Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":430,"author":{"gitId":"qinguorui2001"},"content":"            String out \u003d \"     \" + stringForm;","lastModifiedDate":"2021-08-22"},{"lineNumber":431,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(title + out));","lastModifiedDate":"2021-08-19"},{"lineNumber":432,"author":{"gitId":"qinguorui2001"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":433,"author":{"gitId":"qinguorui2001"},"content":"        } catch (OutOfRangeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":434,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(e.getMessage()));","lastModifiedDate":"2021-08-19"},{"lineNumber":435,"author":{"gitId":"qinguorui2001"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":436,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":437,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":438,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":439,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":440,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the correct enum operation according to response,","lastModifiedDate":"2021-08-19"},{"lineNumber":441,"author":{"gitId":"qinguorui2001"},"content":"     * or it returns null to show exception occurred.","lastModifiedDate":"2021-08-19"},{"lineNumber":442,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":443,"author":{"gitId":"qinguorui2001"},"content":"     * @return Type of operation for the next judgement.","lastModifiedDate":"2021-08-19"},{"lineNumber":444,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":445,"author":{"gitId":"qinguorui2001"},"content":"    public static Operation checkResponse() {","lastModifiedDate":"2021-08-19"},{"lineNumber":446,"author":{"gitId":"qinguorui2001"},"content":"        Operation op;","lastModifiedDate":"2021-08-19"},{"lineNumber":447,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":448,"author":{"gitId":"qinguorui2001"},"content":"            if (response.startsWith(\"date \")","lastModifiedDate":"2021-08-23"},{"lineNumber":449,"author":{"gitId":"qinguorui2001"},"content":"                    \u0026\u0026 Task.isDate(response.substring(5, len))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":450,"author":{"gitId":"qinguorui2001"},"content":"                op \u003d Operation.DATE;","lastModifiedDate":"2021-08-23"},{"lineNumber":451,"author":{"gitId":"qinguorui2001"},"content":"            } else if (response.startsWith(\"done \")","lastModifiedDate":"2021-08-23"},{"lineNumber":452,"author":{"gitId":"qinguorui2001"},"content":"                    \u0026\u0026 chekDigit(response.substring(5, len))) {","lastModifiedDate":"2021-08-19"},{"lineNumber":453,"author":{"gitId":"qinguorui2001"},"content":"                op \u003d Operation.DONE;","lastModifiedDate":"2021-08-19"},{"lineNumber":454,"author":{"gitId":"qinguorui2001"},"content":"            } else if (response.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":455,"author":{"gitId":"qinguorui2001"},"content":"                op \u003d Operation.TODO;","lastModifiedDate":"2021-08-19"},{"lineNumber":456,"author":{"gitId":"qinguorui2001"},"content":"            } else if (response.startsWith(\"deadline \")","lastModifiedDate":"2021-08-19"},{"lineNumber":457,"author":{"gitId":"qinguorui2001"},"content":"                    \u0026\u0026 response.substring(9, len).contains(\" /by \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":458,"author":{"gitId":"qinguorui2001"},"content":"                op \u003d Operation.DEADLINE;","lastModifiedDate":"2021-08-19"},{"lineNumber":459,"author":{"gitId":"qinguorui2001"},"content":"            } else if (response.startsWith(\"event \")","lastModifiedDate":"2021-08-19"},{"lineNumber":460,"author":{"gitId":"qinguorui2001"},"content":"                    \u0026\u0026 response.substring(6, len).contains(\" /at \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":461,"author":{"gitId":"qinguorui2001"},"content":"                op \u003d Operation.EVENT;","lastModifiedDate":"2021-08-19"},{"lineNumber":462,"author":{"gitId":"qinguorui2001"},"content":"            } else if (response.startsWith(\"delete \")","lastModifiedDate":"2021-08-19"},{"lineNumber":463,"author":{"gitId":"qinguorui2001"},"content":"                    \u0026\u0026 chekDigit(response.substring(7, len))) {","lastModifiedDate":"2021-08-19"},{"lineNumber":464,"author":{"gitId":"qinguorui2001"},"content":"                op \u003d Operation.DELETE;","lastModifiedDate":"2021-08-19"},{"lineNumber":465,"author":{"gitId":"qinguorui2001"},"content":"            } else if (response.equals(\"delete\") || response.equals(\"todo\") || response.equals(\"deadline\")","lastModifiedDate":"2021-08-19"},{"lineNumber":466,"author":{"gitId":"qinguorui2001"},"content":"                    || response.equals(\"event\") || response.equals(\"done\") || response.equals(\"date\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":467,"author":{"gitId":"qinguorui2001"},"content":"                String curr \u003d response;","lastModifiedDate":"2021-08-19"},{"lineNumber":468,"author":{"gitId":"qinguorui2001"},"content":"                throw new EmptyInputException(curr);","lastModifiedDate":"2021-08-19"},{"lineNumber":469,"author":{"gitId":"qinguorui2001"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":470,"author":{"gitId":"qinguorui2001"},"content":"                //This means there\u0027s no match of operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":471,"author":{"gitId":"qinguorui2001"},"content":"                throw new NotRecognizeException();","lastModifiedDate":"2021-08-19"},{"lineNumber":472,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":473,"author":{"gitId":"qinguorui2001"},"content":"        }catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":474,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(e.getMessage()));","lastModifiedDate":"2021-08-19"},{"lineNumber":475,"author":{"gitId":"qinguorui2001"},"content":"            return null;","lastModifiedDate":"2021-08-19"},{"lineNumber":476,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":477,"author":{"gitId":"qinguorui2001"},"content":"        return op;","lastModifiedDate":"2021-08-19"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":479,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":480,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean checkDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":481,"author":{"gitId":"qinguorui2001"},"content":"        String preTime \u003d response.substring(5, len);","lastModifiedDate":"2021-08-23"},{"lineNumber":482,"author":{"gitId":"qinguorui2001"},"content":"        String actualTime \u003d Task.dateAndTime(preTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":483,"author":{"gitId":"qinguorui2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":484,"author":{"gitId":"qinguorui2001"},"content":"        String end \u003d \"\\n   \";","lastModifiedDate":"2021-08-23"},{"lineNumber":485,"author":{"gitId":"qinguorui2001"},"content":"        String begin \u003d \"Here are the tasks in your list:\\n   \";","lastModifiedDate":"2021-08-23"},{"lineNumber":486,"author":{"gitId":"qinguorui2001"},"content":"        sb.append(begin);","lastModifiedDate":"2021-08-23"},{"lineNumber":487,"author":{"gitId":"qinguorui2001"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":488,"author":{"gitId":"qinguorui2001"},"content":"            Task curr \u003d TASK_LIST.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":489,"author":{"gitId":"qinguorui2001"},"content":"            if (i \u003d\u003d count - 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":490,"author":{"gitId":"qinguorui2001"},"content":"                end \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":491,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":492,"author":{"gitId":"qinguorui2001"},"content":"            if (!(curr instanceof Todo) \u0026\u0026 curr.getActualTime().equals(actualTime)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":493,"author":{"gitId":"qinguorui2001"},"content":"                String out \u003d (i + 1) + \".\" + curr + end;","lastModifiedDate":"2021-08-23"},{"lineNumber":494,"author":{"gitId":"qinguorui2001"},"content":"                sb.append(out);","lastModifiedDate":"2021-08-23"},{"lineNumber":495,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":496,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":497,"author":{"gitId":"qinguorui2001"},"content":"        System.out.println(getPattern(sb.toString()));","lastModifiedDate":"2021-08-23"},{"lineNumber":498,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":499,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":500,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":501,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":502,"author":{"gitId":"qinguorui2001"},"content":"     * Returns a boolean to react to a response, while","lastModifiedDate":"2021-08-19"},{"lineNumber":503,"author":{"gitId":"qinguorui2001"},"content":"     * printing the required information.","lastModifiedDate":"2021-08-19"},{"lineNumber":504,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":505,"author":{"gitId":"qinguorui2001"},"content":"     * @return Whether the user continues to input or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":506,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":507,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean echo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":508,"author":{"gitId":"qinguorui2001"},"content":"        switch (response) {","lastModifiedDate":"2021-08-19"},{"lineNumber":509,"author":{"gitId":"qinguorui2001"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-19"},{"lineNumber":510,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(\"Bye, see you soon. ^-^\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":511,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":512,"author":{"gitId":"qinguorui2001"},"content":"        case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":513,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(toListStrings()));","lastModifiedDate":"2021-08-19"},{"lineNumber":514,"author":{"gitId":"qinguorui2001"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":515,"author":{"gitId":"qinguorui2001"},"content":"        case \"content\":","lastModifiedDate":"2021-08-22"},{"lineNumber":516,"author":{"gitId":"qinguorui2001"},"content":"            System.out.println(getPattern(content));","lastModifiedDate":"2021-08-22"},{"lineNumber":517,"author":{"gitId":"qinguorui2001"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":518,"author":{"gitId":"qinguorui2001"},"content":"        default:","lastModifiedDate":"2021-08-19"},{"lineNumber":519,"author":{"gitId":"qinguorui2001"},"content":"            Operation op \u003d checkResponse();","lastModifiedDate":"2021-08-19"},{"lineNumber":520,"author":{"gitId":"qinguorui2001"},"content":"            if (op \u003d\u003d null) {","lastModifiedDate":"2021-08-19"},{"lineNumber":521,"author":{"gitId":"qinguorui2001"},"content":"                return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":522,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":523,"author":{"gitId":"qinguorui2001"},"content":"            switch (op) {","lastModifiedDate":"2021-08-19"},{"lineNumber":524,"author":{"gitId":"qinguorui2001"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":525,"author":{"gitId":"qinguorui2001"},"content":"                return checkDeadline();","lastModifiedDate":"2021-08-19"},{"lineNumber":526,"author":{"gitId":"qinguorui2001"},"content":"            case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":527,"author":{"gitId":"qinguorui2001"},"content":"                return checkTodo();","lastModifiedDate":"2021-08-19"},{"lineNumber":528,"author":{"gitId":"qinguorui2001"},"content":"            case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":529,"author":{"gitId":"qinguorui2001"},"content":"                return checkEvent();","lastModifiedDate":"2021-08-19"},{"lineNumber":530,"author":{"gitId":"qinguorui2001"},"content":"            case DONE:","lastModifiedDate":"2021-08-19"},{"lineNumber":531,"author":{"gitId":"qinguorui2001"},"content":"                return checkDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":532,"author":{"gitId":"qinguorui2001"},"content":"            case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":533,"author":{"gitId":"qinguorui2001"},"content":"                return checkDelete();","lastModifiedDate":"2021-08-19"},{"lineNumber":534,"author":{"gitId":"qinguorui2001"},"content":"            case DATE:","lastModifiedDate":"2021-08-23"},{"lineNumber":535,"author":{"gitId":"qinguorui2001"},"content":"                return checkDate();","lastModifiedDate":"2021-08-23"},{"lineNumber":536,"author":{"gitId":"qinguorui2001"},"content":"            default:","lastModifiedDate":"2021-08-19"},{"lineNumber":537,"author":{"gitId":"qinguorui2001"},"content":"                return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":538,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":539,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":541,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"qinguorui2001":529,"-":12}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents the exceptions which can occur during the operation of Duke robot.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":10}},{"path":"src/main/java/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents the specific duke exception that is related to empty user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public class EmptyInputException extends DukeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"    public EmptyInputException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"        super(\"OOPS!!! The description of a \" + message + \" cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents the event that has time. .","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"     * The time to do the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"        this.at \u003d dateAndTime(at);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    public String getActualTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"        return at;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"qinguorui2001":26}},{"path":"src/main/java/NotRecognizeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents the specific exception that is related to the non-recognition.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public class NotRecognizeException extends DukeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"    public NotRecognizeException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":10}},{"path":"src/main/java/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents specific operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public enum Operation {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"    TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"    DONE ,","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"    DELETE,","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"    DATE;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"qinguorui2001":13}},{"path":"src/main/java/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents the specific exception that has the index out of range.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public class OutOfRangeException extends DukeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"    public OutOfRangeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"        super(\"The index for \" + message + \" is out of range,please choose another one.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" * Represents the task user want to configure.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"     * The content of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"     * Whether the task is finished or not.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"     /*   public Task(String description, String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"        public Task(String description, String date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"            this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"        }*/","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"        return description;","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"    public static String getDate(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"        LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"    public static String transferToDateFormat(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d date.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        if (lens \u003e 10) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"            date \u003d date.substring(0, lens - 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"        String[] parts \u003d date.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        if (parts[0].length() \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"            parts[0] \u003d \"0\" + parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"        if (parts[1].length() \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"            parts[1] \u003d \"0\" + parts[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"        date \u003d parts[2] + \"-\" + parts[1] + \"-\" + parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"        return date;","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean isDateFirstPart(String[] parts) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"        String day \u003d parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"        String month \u003d parts[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"        String year \u003d parts[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"        int dayValue \u003d Integer.parseInt(day);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"        int monthValue \u003d Integer.parseInt(month);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"        boolean validDay \u003d dayValue \u003c\u003d 31 \u0026\u0026 dayValue \u003e\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"        boolean validMonth \u003d monthValue \u003c\u003d 12 \u0026\u0026 monthValue \u003e\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"        return Duke.chekDigit(day) \u0026\u0026 Duke.chekDigit(year) \u0026\u0026 Duke.chekDigit(month) \u0026\u0026 validDay","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 validMonth;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean isDate(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"        int lens \u003d input.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"        if (lens \u003e 10) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"            if (!input.contains(\" \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"                return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"                return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"            String date \u003d parts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"            String time \u003d parts[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"            if (date.length() \u003e 10 || time.length() !\u003d 4 || !Duke.chekDigit(time)","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"                    || !date.contains(\"/\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"qinguorui2001"},"content":"                return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"            String[] subParts \u003d date.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"            return isDateFirstPart(subParts);","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"            if (lens \u003c 8 || !input.contains(\"/\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"                return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"            String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"            return isDateFirstPart(parts);","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"    public static String getTime(String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"        int hr1 \u003d time.charAt(0) - \u00270\u0027;","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"        int hr2 \u003d time.charAt(1) - \u00270\u0027;","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"        int hrFull \u003d hr1 * 10 + hr2;","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"        int hrFinal;","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"        String day \u003d \" am\";","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"        if (hrFull \u003e\u003d 12) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"            hrFinal \u003d hrFull - 12;","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"            day \u003d \" pm\";","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"qinguorui2001"},"content":"            hrFinal \u003d hrFull;","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"        return ((Integer) hrFinal).toString() + \u0027.\u0027 + time.substring(2, 4) + day;","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"    public static String dateAndTime(String preTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"        if (isDate(preTime)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"            int lens \u003d preTime.length();","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"            String actualTime \u003d getDate(transferToDateFormat(preTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"            if (lens \u003e 10) {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"                actualTime +\u003d \" \" + getTime(preTime.substring(lens - 4, lens));","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"            return actualTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"            return preTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"    public String getActualTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"        return \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"qinguorui2001":149}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":" * Represents the To-do tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":" * @author QIN GUORUI","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"        public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"            super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"        public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"qinguorui2001":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"todo return book","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"deadline borrow book /by not sure","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"event project meeting /at afternoon","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"todofadf","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"deadline fdf/by today","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"event event","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"event event /aterror","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":" todo dsfa","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"qinguorui2001":14}}]
