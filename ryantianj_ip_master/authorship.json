[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryantianj":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"D | 1 | return book  | sunday","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"E | 0 | meeting tmr  | 2-4am sunday","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"T | 1 | flying","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"D | 0 | fly to space  | Aug 22 2021","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ryantianj":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"### duke.Feature-ABC","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"### duke.Feature-XYZ","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ryantianj":2,"-":27}},{"path":"src/main/java/duke/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" *  This class represents a Deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":" *  A Deadline: tasks that need to be done before a specific date/time.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"    private String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"     * This constructor handles the creation af a new Deadline Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type: Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"     * @param by Deadline due date.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"    public DeadLine(String description, Task.TYPE type, String by) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"        super(description, type);","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"            LocalDate d1 \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"            this.date \u003d d1;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"            this.by \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"     * This constructor handles the Deadline Task read from the hard drive.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type: Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"     * @param isDone Whether the task has been done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"     * @param by Deadline due date.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"    public DeadLine(Task.TYPE type, boolean isDone, String description, String by) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"        super(type, isDone, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"     * Returns the stored deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"     * @return returns the stored Deadline of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ryantianj"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ryantianj"},"content":"        return by;","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ryantianj"},"content":"     * Returns the String representation of a Deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ryantianj"},"content":"     * as displayed in the list/mark done.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ryantianj"},"content":"     * @return returns the String representation of a Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"ryantianj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"ryantianj"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" *  This class is the entry point into the program, Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" *  Duke is a chat bot that helps manage tasks that you have.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"    private Intro intro;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"    private Farewell farewell;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"        this.intro \u003d new Intro();","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"        this.farewell \u003d new Farewell();","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"     * Driver method for the entire program.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"     * Used to instantiate the chat bot to receive user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"    public void run() {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"        this.intro.printIntro();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"        // Starts reading user input","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"        String command \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"        while (!command.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"            // Processes user input","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"            if (!command.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"                Ui feature \u003d new Feature(command);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"        // Save commands on hard drive","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"        TaskList.saveList();","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"        farewell.printFarewell();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"       new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryantianj":45,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class represents the Exceptions thrown by Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *  Consult comments for error codes.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"    private String message;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"    // -1 default, 0: WhiteSpace, 1: Empty description, 2: Delete/ mark as done range errors","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"    private int type \u003d -1;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"        this.message \u003d errorMessage;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"     * This constructor is used for more general exceptions.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"     * Refer to error codes for more details.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"     * @param errorMessage Error Message to be Displayed.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"     * @param type type of the error, denoted by comment above.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"    public DukeException(String errorMessage, int type) {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"        this.message \u003d errorMessage;","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"     * Returns the String representation of a DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"     * Contains some general exceptions applied to across the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"     * Error codes can be found above.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"     * @return returns the String representation of a DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"        if (type \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"            return \"The \" + message + \" Command and Description must be separated by whitespace!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"        } else if (type \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"            return \"The description of \" + message + \" cannot be empty!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"        } else if (type \u003d\u003d 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"            return message + \" Invalid Number, only numbers greater than 0 are accepted\";","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"        return message;","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ryantianj":52}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" *  This class represents an Event.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":" *  An event: tasks that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"    private String at;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"     * This constructor handles the creation af a new Event Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type: Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"     * @param by Event timeline.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"    public Event(String description, Task.TYPE type, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"        super(description, type);","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"            LocalDate d1 \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"            this.date \u003d d1;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"            this.at \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"            this.at \u003d by;","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"     * This constructor handles the Event Task read from the hard drive.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type: Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"     * @param isDone Whether the task has been done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"     * @param at Event timeline.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"    public Event(TYPE type, boolean isDone, String description, String at) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"        super(type, isDone, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"     * Returns the stored Event timeline.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"     * @return returns the stored Event timeline of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ryantianj"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ryantianj"},"content":"        return at;","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ryantianj"},"content":"     * Returns the String representation of an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ryantianj"},"content":"     * as displayed in the list/mark done.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ryantianj"},"content":"     * @return returns the String representation of an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"ryantianj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"ryantianj"},"content":"        return super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":69}},{"path":"src/main/java/duke/Farewell.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class handles the farewell when the user exits the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *  May handle more features in the future such as saving to hard drive","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"public class Farewell {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"    private String farewell \u003d \"Bye. Thank You for using Duke!\";","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"    public Farewell() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"     * Returns farewell message when user exits program.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"     * @return farewell message.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"    public String printFarewell() {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"        System.out.println(farewell);","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"        return farewell;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":25}},{"path":"src/main/java/duke/Feature.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class acts as a subclass for FeatureMain","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *  for the possibility of new features being added.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"public class Feature extends Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"    public Feature (String command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"        super(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":15}},{"path":"src/main/java/duke/Intro.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class greets the user when the bot is first used.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":"public class Intro {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"    private String intro \u003d \"Hello! I\u0027m Duke!\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"            \"What can I do for you? Type something to get started!\";","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"    private final Logo logo \u003d new Logo();","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"    public Intro() {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"     * Handles the intro message and displaying of logo when user","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"     * launches the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"     * @return returns welcome message when user launches program.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"    public String printIntro() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\n\" + intro + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"        return \"Hello from\\n\" + logo + \"\\n\" + intro + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":27}},{"path":"src/main/java/duke/Logo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class represents the displayed logo throughout the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":"public class Logo {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"    private String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"    public Logo() {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"     * Displays the logo Duke for the bot.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"     * @return returns the bot logo.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"        return logo;","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":28}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class makes sense of the user inputs.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *  Supported Commands: Todo, Event, Deadline, Delete, Done, List.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"    private String currentCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"    private String query;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"    private COMMAND commandType;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"    protected enum COMMAND {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"        TODO, EVENT, DEADLINE, DELETE, DONE, LIST, FIND, OTHER","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"    public Parser(String command) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"        this.currentCommand \u003d command;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"        if (isList(command)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.LIST;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"        } else if (isDone(command)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.DONE;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"            taskNumber \u003d Integer.parseInt(command.substring(5));","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"        } else if (isToDo(command)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"        } else if (isDeadLine(command)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.DEADLINE;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"        } else if (isEvent(command)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"        } else if (isDelete(command)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.DELETE;","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"        } else if (isFind(command)){","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.FIND;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"            this.commandType \u003d COMMAND.OTHER;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"     * Returns the CommandType of the Command to the UI to handle","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"     * and execute the Command.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"     * @return returns CommandType.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"    public COMMAND getCommandType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"        return commandType;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"     * Returns the TaskNumber of the Command (if the command requires it)","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ryantianj"},"content":"     * Commands that require Task number: Delete, Done.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ryantianj"},"content":"     * @return returns Task number.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ryantianj"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ryantianj"},"content":"        return taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ryantianj"},"content":"    public String getQuery() {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ryantianj"},"content":"        return query;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ryantianj"},"content":"    // checks if command given is a list","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ryantianj"},"content":"    private boolean isList(String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ryantianj"},"content":"        return command.equals(\"list\");","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ryantianj"},"content":"     * Checks if it is a \u0027Done\u0027 command.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ryantianj"},"content":"     * @param command Takes in command line input to process.","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ryantianj"},"content":"     * @throws DukeException Either a syntax error or lack of number provided.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ryantianj"},"content":"     * @return returns true if it is said command.","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ryantianj"},"content":"    private boolean isDone(String command) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ryantianj"},"content":"        if (command.length() \u003e\u003d 4 \u0026\u0026 command.startsWith(\"done\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ryantianj"},"content":"            if (command.length() \u003d\u003d 4)  {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"The Done command must be followed by a number!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ryantianj"},"content":"                if (isNumeric(command.substring(5))) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ryantianj"},"content":"                    return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ryantianj"},"content":"                } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ryantianj"},"content":"                    throw new DukeException(\"The Done command requires a number, separated by whitespace!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ryantianj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ryantianj"},"content":"            return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"ryantianj"},"content":"     * Checks if it is a \u0027Todo\u0027 command.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ryantianj"},"content":"     * @param command Takes in command line input to process.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"ryantianj"},"content":"     * @throws DukeException Either a syntax error or lack of description.","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"ryantianj"},"content":"     * @return returns true if it is said command.","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ryantianj"},"content":"    private boolean isToDo(String command) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"ryantianj"},"content":"        if (command.length() \u003e\u003d 4 \u0026\u0026 command.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"ryantianj"},"content":"            if (command.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"ToDo\", 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"ryantianj"},"content":"            } else if (command.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"ToDo\", 0);","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"ryantianj"},"content":"                return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"ryantianj"},"content":"            return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ryantianj"},"content":"     * Checks if it is a \u0027Deadline\u0027 command.","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ryantianj"},"content":"     * @param command Takes in command line input to process.","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ryantianj"},"content":"     * @throws DukeException Either a syntax error or lack of description.","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ryantianj"},"content":"     * @return returns true if it is said command.","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ryantianj"},"content":"    private boolean isDeadLine(String command) throws DukeException{","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ryantianj"},"content":"        if (command.length() \u003e\u003d 8 \u0026\u0026 command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"ryantianj"},"content":"            if (command.length() \u003d\u003d 8) {","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"Deadline\", 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"ryantianj"},"content":"            } else if (command.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"Deadline\", 0);","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"ryantianj"},"content":"                return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"ryantianj"},"content":"            return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"ryantianj"},"content":"     * Checks if it is an \u0027Event\u0027 command.","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"ryantianj"},"content":"     * @param command Takes in command line input to process.","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"ryantianj"},"content":"     * @throws DukeException Either a syntax error or lack of description.","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"ryantianj"},"content":"     * @return returns true if it is said command.","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"ryantianj"},"content":"    private boolean isEvent(String command) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"ryantianj"},"content":"        if (command.length() \u003e\u003d 5 \u0026\u0026 command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"ryantianj"},"content":"            if (command.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"Event\", 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"ryantianj"},"content":"            } else if (command.charAt(5) !\u003d \u0027 \u0027){","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"Event\", 0);","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"ryantianj"},"content":"                return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"ryantianj"},"content":"            return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":154,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":155,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"ryantianj"},"content":"     * Checks if it is a \u0027Delete\u0027 command.","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"ryantianj"},"content":"     * @param command Takes in command line input to process.","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"ryantianj"},"content":"     * @throws DukeException Syntax errors, spacing.","lastModifiedDate":"2021-08-21"},{"lineNumber":161,"author":{"gitId":"ryantianj"},"content":"     * @return returns true if it is said command.","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"ryantianj"},"content":"    private boolean isDelete(String command) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"ryantianj"},"content":"        if (command.length() \u003e\u003d 6 \u0026\u0026 command.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"ryantianj"},"content":"            if (command.length() \u003d\u003d 6)  {","lastModifiedDate":"2021-08-21"},{"lineNumber":166,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"The Delete command must be followed by a number!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":167,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":168,"author":{"gitId":"ryantianj"},"content":"                if (command.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-21"},{"lineNumber":169,"author":{"gitId":"ryantianj"},"content":"                    throw new DukeException(\"The Delete command requires a number, separated by whitespace!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":170,"author":{"gitId":"ryantianj"},"content":"                } else if (isNumeric(command.substring(7))) {","lastModifiedDate":"2021-08-21"},{"lineNumber":171,"author":{"gitId":"ryantianj"},"content":"                    taskNumber \u003d Integer.parseInt(command.substring(7));","lastModifiedDate":"2021-08-21"},{"lineNumber":172,"author":{"gitId":"ryantianj"},"content":"                    return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":173,"author":{"gitId":"ryantianj"},"content":"                } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":174,"author":{"gitId":"ryantianj"},"content":"                    throw new DukeException(\"The Delete command requires a number, separated by whitespace!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":175,"author":{"gitId":"ryantianj"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":176,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":177,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":178,"author":{"gitId":"ryantianj"},"content":"            return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":179,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":180,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":181,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":182,"author":{"gitId":"ryantianj"},"content":"    private boolean isFind(String command) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"ryantianj"},"content":"        int commandLength \u003d command.length();","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"ryantianj"},"content":"        if (commandLength \u003e\u003d 4 \u0026\u0026 command.startsWith(\"find\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"ryantianj"},"content":"            if (commandLength \u003d\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"The Find command must be followed by a string!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"ryantianj"},"content":"            } else if (command.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"The Find command requires a string, separated by whitespace!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"ryantianj"},"content":"                query \u003d command.substring(5).trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"ryantianj"},"content":"                return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"ryantianj"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"ryantianj"},"content":"    // Checks if String is numeric","lastModifiedDate":"2021-08-21"},{"lineNumber":199,"author":{"gitId":"ryantianj"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2021-08-21"},{"lineNumber":200,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"ryantianj"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"ryantianj"},"content":"            return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":203,"author":{"gitId":"ryantianj"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"ryantianj"},"content":"            return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":205,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":206,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":207,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ryantianj":207}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":" *  This class handles searching for and handling","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":" *  the save file for the tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":" *  Creates the said file and directory if they do not exist.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"    private String path;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"                createTask(scanner.nextLine());","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"            createFileAndDirectory();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"        } finally {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"            this.path \u003d path;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"     * Creates save file and directory if they do not exist.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"    private void createFileAndDirectory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"        String directoryName \u003d \"data\";","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"        String fileName \u003d \"duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"        File directory \u003d new File(directoryName);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"        File file \u003d new File(directoryName + \"/\" + fileName);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"            FileWriter writeFile \u003d new FileWriter(file.getAbsoluteFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"            writeFile.write(\"\");","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"            writeFile.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"            System.out.println(\"Oops! Something went wrong: \" + ioException.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ryantianj"},"content":"     * Creates Tasks to be saved in FeatureMain.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ryantianj"},"content":"     * @param fileLine String from save file containing data","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ryantianj"},"content":"    private void createTask(String fileLine) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ryantianj"},"content":"        Task.TYPE type \u003d Task.TYPE.valueOf(fileLine.substring(0, 1));","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ryantianj"},"content":"        boolean isDone \u003d Integer.parseInt(fileLine.substring(4, 5)) \u003d\u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ryantianj"},"content":"        Task task;","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ryantianj"},"content":"        if (type \u003d\u003d Task.TYPE.T) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ryantianj"},"content":"            String description \u003d fileLine.substring(8);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ryantianj"},"content":"            task \u003d new ToDo(type, isDone, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ryantianj"},"content":"        } else if (type \u003d\u003d Task.TYPE.D) {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ryantianj"},"content":"            int deadTimeLineLocation \u003d fileLine.indexOf(\"|\", 7);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ryantianj"},"content":"            String description \u003d fileLine.substring(8, deadTimeLineLocation - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ryantianj"},"content":"            String by \u003d fileLine.substring(deadTimeLineLocation + 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ryantianj"},"content":"            task \u003d new DeadLine(type, isDone, description, by);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ryantianj"},"content":"        } else if (type \u003d\u003d Task.TYPE.E) {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ryantianj"},"content":"            int deadTimeLineLocation \u003d fileLine.indexOf(\"|\", 7);","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ryantianj"},"content":"            String description \u003d fileLine.substring(8, deadTimeLineLocation - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ryantianj"},"content":"            String at \u003d fileLine.substring(deadTimeLineLocation + 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ryantianj"},"content":"            task \u003d new Event(type, isDone, description, at);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ryantianj"},"content":"            task \u003d new Task(\"\", Task.TYPE.O);","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ryantianj"},"content":"        Ui.setList(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ryantianj"},"content":"     * Creates Task to be saved in hard drive.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ryantianj"},"content":"     * @param task Task to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ryantianj"},"content":"    public static void writeTask(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ryantianj"},"content":"        String type \u003d task.getType().toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ryantianj"},"content":"        String isDone \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"ryantianj"},"content":"        String toSave \u003d type + \" | \" + isDone + \" | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"ryantianj"},"content":"       if (task.getType() \u003d\u003d Task.TYPE.T) {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"ryantianj"},"content":"           String description \u003d task.getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"ryantianj"},"content":"           toSave +\u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ryantianj"},"content":"       } else if (task.getType() \u003d\u003d Task.TYPE.D) {","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"ryantianj"},"content":"           String description \u003d task.getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"ryantianj"},"content":"           String by \u003d task.getTime();","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ryantianj"},"content":"           toSave +\u003d description + \" | \" + by;","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ryantianj"},"content":"       } else if (task.getType() \u003d\u003d Task.TYPE.E) {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"ryantianj"},"content":"           String description \u003d task.getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"ryantianj"},"content":"           String at \u003d task.getTime();","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"ryantianj"},"content":"           toSave +\u003d description + \" | \" + at;","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"ryantianj"},"content":"       } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"ryantianj"},"content":"       }","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"ryantianj"},"content":"        String directoryName \u003d \"data\";","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"ryantianj"},"content":"        String fileName \u003d \"duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ryantianj"},"content":"        File file \u003d new File(directoryName + \"/\" + fileName);","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ryantianj"},"content":"            FileWriter writeFile \u003d new FileWriter(file.getAbsoluteFile(), true);","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ryantianj"},"content":"            writeFile.write(toSave + \"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ryantianj"},"content":"            writeFile.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ryantianj"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ryantianj"},"content":"            System.out.println(\"Oops! Something went wrong: \" + ioException.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ryantianj"},"content":"     * Deletes old save to write new data","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"ryantianj"},"content":"    public static void wipeOldSave() {","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"ryantianj"},"content":"        String directoryName \u003d \"data\";","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"ryantianj"},"content":"        String fileName \u003d \"duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"ryantianj"},"content":"        File file \u003d new File(directoryName + \"/\" + fileName);","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"ryantianj"},"content":"            FileWriter writeFile \u003d new FileWriter(file.getAbsoluteFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"ryantianj"},"content":"            writeFile.write(\"\");","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"ryantianj"},"content":"            writeFile.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"ryantianj"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"ryantianj"},"content":"            System.out.println(\"Oops! Something went wrong: \" + ioException.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ryantianj":137}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class represents the tasks in a list.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *  Also provides some operations on tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"    private String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"    private TYPE type;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"    // ToDos, DeadLines, Events, Others(Placeholder)","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"    protected enum TYPE {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"        T, D, E, O","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"     * This constructor receives new tasks from the command line.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type, refer to enum TYPE.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"    public Task(String description, TYPE type) {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"        if (type \u003d\u003d TYPE.T) {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"            this.type \u003d TYPE.T;","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"        } else if (type \u003d\u003d TYPE.D) {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"            if (description.contains(\"/by\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"                this.description \u003d description.substring(0, description.indexOf(\"/by\"));","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"            this.type \u003d TYPE.D;","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"        } else if (type \u003d\u003d TYPE.E) {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"            if (description.contains(\"/at\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"                this.description \u003d description.substring(0, description.indexOf(\"/at\"));","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"            this.type \u003d TYPE.E;","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"            this.type \u003d TYPE.O;","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"     * This constructor receives tasks from stored file (history).","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type, refer to enum TYPE.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"     * @param isDone Whether the task has been done.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"    public Task(TYPE type, boolean isDone, String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ryantianj"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ryantianj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ryantianj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"ryantianj"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"ryantianj"},"content":"     * @return returns true if it was successful.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"ryantianj"},"content":"    public boolean markAsDone() throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"ryantianj"},"content":"        if (!isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"ryantianj"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"ryantianj"},"content":"            return true;","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"ryantianj"},"content":"           throw new DukeException(\"Task has already been marked as done!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"ryantianj"},"content":"     * Returns Task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ryantianj"},"content":"     * @return String representation of description.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"ryantianj"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"ryantianj"},"content":"        return description;","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"ryantianj"},"content":"     * Returns if Task has been done.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"ryantianj"},"content":"     * @return True, Task has been done, false otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"ryantianj"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"ryantianj"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"ryantianj"},"content":"     * Returns Task Type.","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"ryantianj"},"content":"     * @return Returns Type of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"ryantianj"},"content":"    public TYPE getType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"ryantianj"},"content":"        return this.type;","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"ryantianj"},"content":"    // return task type","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"ryantianj"},"content":"    private String printType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"ryantianj"},"content":"        return \"[\" + type.toString() + \"]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"ryantianj"},"content":"    // return task status","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"ryantianj"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"ryantianj"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ryantianj"},"content":"     * Returns time if task is Deadline or Event.","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ryantianj"},"content":"     * @return String representation of time.","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ryantianj"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ryantianj"},"content":"        return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"ryantianj"},"content":"     * Returns String representation of a Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"ryantianj"},"content":"     * Does not include timeline/deadlines, which are handled","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"ryantianj"},"content":"     * in the respective subclasses.","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"ryantianj"},"content":"     * @return String representation of a Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"ryantianj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"ryantianj"},"content":"        return printType() + getStatusIcon() + getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":130}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" *  This class represents the list of all tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" *  It also houses some list operations.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"     * Adds a Task to the List.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"    */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"     * Searches for Tasks containing a search query.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"     * @return returns List of all Tasks that contain the Query.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"    public List\u003cTask\u003e search(String query) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"        List\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"                results.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"            System.out.println(\"No matches found!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"            System.out.println(\"Here\u0027s what I found!:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"            int counter \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"            for (Task result : results) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"                String printResult \u003d counter + \".\" + result;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"                System.out.println(printResult);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"            newLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"        return results;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ryantianj"},"content":"   /**","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ryantianj"},"content":"     * Prints past commands.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ryantianj"},"content":"     * @return returns a printout of all the past user commands.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ryantianj"},"content":"    public static String userCommands() {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ryantianj"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ryantianj"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ryantianj"},"content":"            System.out.println(\"List is empty!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ryantianj"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ryantianj"},"content":"            System.out.println(count + \". \"  + item);","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ryantianj"},"content":"            count++;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ryantianj"},"content":"        newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ryantianj"},"content":"        return taskList.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ryantianj"},"content":"     * Marks tasks as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ryantianj"},"content":"     * @throws DukeException Handles out of range errors.","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ryantianj"},"content":"     * @return returns a String message.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ryantianj"},"content":"    public String markDone(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ryantianj"},"content":"        if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ryantianj"},"content":"            throw new DukeException(\"Mark Done:\", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ryantianj"},"content":"            if (taskNumber \u003c\u003d taskList.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ryantianj"},"content":"                Task taskToChange \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ryantianj"},"content":"                taskToChange.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ryantianj"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ryantianj"},"content":"                System.out.println(\"   \" + taskToChange);","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ryantianj"},"content":"                newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ryantianj"},"content":"                return \"   \" + taskToChange;","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"Task does not exist\");","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"ryantianj"},"content":"     * Deletes Tasks from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ryantianj"},"content":"     * @throws DukeException Handles out of range errors.","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"ryantianj"},"content":"     * @return returns a String message.","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"ryantianj"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"ryantianj"},"content":"        if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"ryantianj"},"content":"            throw new DukeException(\"Delete Task:\", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"ryantianj"},"content":"            if (taskNumber \u003c\u003d taskList.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"ryantianj"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"ryantianj"},"content":"                Task taskToDelete \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ryantianj"},"content":"                taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ryantianj"},"content":"                System.out.println(\"   \" + taskToDelete);","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ryantianj"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ryantianj"},"content":"                newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ryantianj"},"content":"                return \"   \" + taskToDelete;","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"Unable to Delete: Task does not exist\");","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"ryantianj"},"content":"     * Saves list of commands to hard drive upon program exit.","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"ryantianj"},"content":"    public static void saveList() {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"ryantianj"},"content":"        Storage.wipeOldSave();","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"ryantianj"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"ryantianj"},"content":"            Storage.writeTask(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"ryantianj"},"content":"    // Simply creates a new line in the terminal","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"ryantianj"},"content":"    private static String newLine() {","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"ryantianj"},"content":"        System.out.println(\"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"ryantianj"},"content":"        return \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"ryantianj"},"content":"     * Returns the size of the List.","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"ryantianj"},"content":"     * @return The String representation of the size of the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"ryantianj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"ryantianj"},"content":"        return Integer.toString(taskList.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ryantianj":150}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class represents a ToDo.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *  A ToDo: tasks without any date/time attached to it.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"     * This constructor handles the creation af a new ToDo Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type: Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    public ToDo(String description, TYPE type) {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"        super(description, type);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"     * This constructor handles the ToDo Task read from the hard drive.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"     * @param type Task type: Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"     * @param isDone Whether the task has been done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"    public ToDo(TYPE type, boolean isDone, String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"        super(type, isDone, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"        return super.toString() ;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ryantianj":36}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":" *  This class handles interactions with the user","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"    private String currentCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"    private static TaskList commands \u003d new TaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"    private Parser parsedCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"    public Ui(String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"            Parser parser \u003d new Parser(command);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"            this.parsedCommand \u003d parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"            this.currentCommand \u003d command;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"            Parser.COMMAND commandType \u003d parser.getCommandType();","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"            executeCommand(commandType);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"            System.out.println(dukeException + \"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"    private void executeCommand(Parser.COMMAND commandType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"            if (commandType \u003d\u003d Parser.COMMAND.LIST) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"                TaskList.userCommands();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"            } else if (commandType \u003d\u003d Parser.COMMAND.DONE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"                int taskNumberDone \u003d parsedCommand.getTaskNumber();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"                commands.markDone(taskNumberDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"            } else if (commandType \u003d\u003d Parser.COMMAND.TODO) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"                Task taskTodo \u003d new ToDo(currentCommand.substring(5).trim(), Task.TYPE.T);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"                Ui.commands.add(taskTodo);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"                printTask(taskTodo);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"            } else if (commandType \u003d\u003d Parser.COMMAND.DEADLINE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"                Task taskDeadline \u003d new DeadLine(currentCommand.substring(9).trim(),","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ryantianj"},"content":"                        Task.TYPE.D, returnDeadline(currentCommand).trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ryantianj"},"content":"                Ui.commands.add(taskDeadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ryantianj"},"content":"                printTask(taskDeadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ryantianj"},"content":"            } else if (commandType \u003d\u003d Parser.COMMAND.EVENT) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ryantianj"},"content":"                Task taskEvent \u003d new Event(currentCommand.substring(6).trim(),","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ryantianj"},"content":"                        Task.TYPE.E, returnTimeline(currentCommand).trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ryantianj"},"content":"                Ui.commands.add(taskEvent);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ryantianj"},"content":"                printTask(taskEvent);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ryantianj"},"content":"            } else if (commandType \u003d\u003d Parser.COMMAND.DELETE) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ryantianj"},"content":"                int taskNumberDelete \u003d parsedCommand.getTaskNumber();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ryantianj"},"content":"                commands.deleteTask(taskNumberDelete);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ryantianj"},"content":"            } else if (commandType \u003d\u003d Parser.COMMAND.FIND){","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ryantianj"},"content":"                String query \u003d parsedCommand.getQuery();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ryantianj"},"content":"                commands.search(query);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ryantianj"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ryantianj"},"content":"                // Unknown Command, throw error","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ryantianj"},"content":"                throw new DukeException(\"Error, Invalid Command\");","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ryantianj"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ryantianj"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ryantianj"},"content":"            System.out.println(dukeException + \"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"ryantianj"},"content":"     * Sets saved list history read from hard drive.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ryantianj"},"content":"    public static void setList(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"ryantianj"},"content":"        commands.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ryantianj"},"content":"     * Echos user commands.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ryantianj"},"content":"     * Level-1 Increment, not used anymore.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ryantianj"},"content":"     * @return returns an echo of the users commands.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ryantianj"},"content":"    private String echoCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ryantianj"},"content":"        System.out.println(currentCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ryantianj"},"content":"        newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ryantianj"},"content":"        return currentCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"ryantianj"},"content":"     * Adds user commands to history ArrayList commands.","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"ryantianj"},"content":"     * Level-2 Increment, not used anymore.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ryantianj"},"content":"     * @return Notifies the user that their command has been added.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"ryantianj"},"content":"    private String addCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"ryantianj"},"content":"        System.out.println(\"added: \" + currentCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ryantianj"},"content":"        newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"ryantianj"},"content":"        return \"added: \" + currentCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"ryantianj"},"content":"    // Simply creates a new line in the terminal","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"ryantianj"},"content":"    private static String newLine() {","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"ryantianj"},"content":"        System.out.println(\"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"ryantianj"},"content":"        return \"\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"ryantianj"},"content":"    // Parses out Deadline from Deadline Command","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"ryantianj"},"content":"    private String returnDeadline(String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"ryantianj"},"content":"        int startNumber \u003d command.indexOf(\"/by\");","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"ryantianj"},"content":"        if (startNumber \u003e 0 \u0026\u0026 command.length() \u003e 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"ryantianj"},"content":"            return command.substring(startNumber + 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"ryantianj"},"content":"            return \"No Deadline\";","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"ryantianj"},"content":"    // Parses out Timeline from Event Command","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"ryantianj"},"content":"    private String returnTimeline(String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"ryantianj"},"content":"        int startNumber \u003d command.indexOf(\"/at\");","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"ryantianj"},"content":"        if (startNumber \u003e 0 \u0026\u0026 command.length() \u003e 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"ryantianj"},"content":"            return command.substring(startNumber + 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"ryantianj"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"ryantianj"},"content":"            return \"No Timeline\";","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"ryantianj"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"ryantianj"},"content":"     * Prints a Task Object neatly on the command line.","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"ryantianj"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"ryantianj"},"content":"     * @param task Takes in a task object, invoking its toString method.","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"ryantianj"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"ryantianj"},"content":"    private void printTask(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"ryantianj"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"ryantianj"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"ryantianj"},"content":"        System.out.println(\"Now you have \" + commands + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ryantianj":133}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":" *  This class tests the class Parser.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":" *  The class Parser makes sense of the user inputs.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    public void getCommandType_returnCommandType_ReturnEnum() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"            Parser parser \u003d new Parser(\"todo testing\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"            assertEquals(Parser.COMMAND.TODO, parser.getCommandType());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"    public void getTaskNumber_returnTaskNumber_ReturnNumber() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"            Ui ui \u003d new Ui(\"todo testing\");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"            Parser parser \u003d new Parser(\"done 1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"            assertEquals(1, parser.getTaskNumber());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ryantianj":37}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":" *  This class tests the class Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":" *  The class Task represents the tasks in a list.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":" * @author Ryan Tian Jun.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"    public void markAsDone_alreadyDone_throwException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"        Task task \u003d new ToDo(Task.TYPE.T, true, \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"            assertEquals(true, task.markAsDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"            assertEquals(\"Task has already been marked as done!\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ryantianj"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ryantianj"},"content":"    public void markAsDone_markDone_writtenCorrectly(){","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ryantianj"},"content":"        Task task \u003d new ToDo(Task.TYPE.T, false, \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ryantianj"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ryantianj"},"content":"            assertEquals(true, task.markAsDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ryantianj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ryantianj"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ryantianj"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ryantianj"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ryantianj"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ryantianj":37}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"T | 0 | fly","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"E | 0 | meeting tmr  | 2-4am Sunday","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ryantianj":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryantianj"},"content":"todo fly","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ryantianj"},"content":"deadline return book /by sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ryantianj"},"content":"event meeting tmr /at 2-4am Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ryantianj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ryantianj"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ryantianj"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ryantianj"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ryantianj"},"content":"done asda","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ryantianj"},"content":"doneasfasf","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ryantianj"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ryantianj"},"content":"todo1","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ryantianj"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ryantianj"},"content":"eventasfaf","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ryantianj"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ryantianj"},"content":"deadlineasfasf","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ryantianj"},"content":"asfasf","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ryantianj"},"content":"delete -1","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ryantianj"},"content":"delete adsad","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"delete 7","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"ryantianj"},"content":"delete1","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ryantianj"},"content":"find fly","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ryantianj"},"content":"find","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ryantianj"},"content":"find 2","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ryantianj"},"content":"findasda","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ryantianj"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ryantianj":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ryantianj"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ryantianj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"ryantianj"},"content":"FC ACTUAL.txt EXPECTED.txt","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ryantianj":3,"-":18}}]
