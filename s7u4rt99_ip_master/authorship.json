[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"s7u4rt99":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" * Represents a program called Duke. A \u003ccode\u003e Duke \u003c/code\u003e is a software which","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * acts as a todolist.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for Duke. Initialises Ui, Storage and TaskList objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        this.tasks \u003d new TaskList(storage.initialise());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * Runs the duke program.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        ui.welcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"                String userInput \u003d ui.readInput();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"                Command c \u003d Parser.parse(userInput, ui, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"     * Main method for Duke program.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"     * @param args Arguments for main method.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"s7u4rt99":47,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":" * Represents a parser which parses the input given by users of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if dateString is in a valid date form depicted by dateFormatter.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * @param dateString String which contains a date.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     * @param dateFormatter Format which you want to check if dateString is in.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if dateString is in valid form, else otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public static boolean isValidDate(String dateString, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"            LocalDate.parse(dateString, dateFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if timeString is in a valid date form depicted by timeFormatter.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * @param timeString String which contains a time.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * @param timeFormatter Format which you want to check if timeString is in.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if timeString is in valid form, else otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public static boolean isValidTime(String timeString, DateTimeFormatter timeFormatter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"            LocalTime.parse(timeString, timeFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if input is a remove command.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"     * @param input Input which is being checked.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if input is a remove command.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"    public static boolean isRemove(String input){","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        return input.startsWith(\"remove \");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if input is a done command.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     * @param input Input which is being checked.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if input is a done command.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"    public static boolean isDone(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"//        String[] splited \u003d phrase.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"////        System.out.println(splited);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"//        if (splited.length !\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"//            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"//        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"//            return splited[0].equals(\"done\") \u0026\u0026 splited[1]","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"//                  .matches(\"\\\\d+\") \u0026\u0026 Integer.valueOf(splited[1]) \u003c\u003d listLength;","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"//        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        return input.startsWith(\"done \");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if user input is a find command.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"     * @param input User input to check if it is a find command.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if it is a find command, else false.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"    public static boolean isFind(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"        return input.startsWith(\"find \");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"     * Splits string which contains a description and possibly a deadline of Task Objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"     * @param input Input which contains a description and possibly a deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"     * @param type Type of Task information the input contains.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"     * @return String[] containing the description at index 0 and the deadline (if any) at index 1.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"     * @throws DukeException If no deadline or description for respective Task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"    public static String[] splitInput(String input, String type) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"        if (type.equals(\"deadline\") || type.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"            String[] str \u003d input.split(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"            if (str.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"                if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"                    throw new IncompleteDeadlineException();","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"                    throw new IncompleteEventException();","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"                String[] first \u003d str[0].split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"                String[] second \u003d str[1].split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"                String description \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"                String deadline \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"                for (int i \u003d 1; i \u003c first.length; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"                    description +\u003d first[i];","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"                    if (i !\u003d first.length - 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"                        description +\u003d \" \";","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"                for (int i \u003d 1; i \u003c second.length; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"                    if (i \u003d\u003d 1 \u0026\u0026 (second[i].equals(\"by\") || second[i].equals(\"at\"))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"                        // handle the case where user formatted command wrongly (include a space after \"/\")","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"                        continue;","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"                    if (Parser.isValidDate(second[i], DateTimeFormatter.ISO_LOCAL_DATE)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"                        deadline +\u003d LocalDate.parse(second[i], DateTimeFormatter.ISO_LOCAL_DATE)","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"                                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"                    } else if (Parser.isValidTime(second[i], DateTimeFormatter.ISO_LOCAL_TIME)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"                        deadline +\u003d LocalTime.parse(second[i], DateTimeFormatter.ISO_LOCAL_TIME)","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"s7u4rt99"},"content":"                                .format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"                        deadline +\u003d second[i];","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"                    if (i !\u003d second.length - 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"                        deadline +\u003d \" \";","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"s7u4rt99"},"content":"                return new String[]{description, deadline};","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"s7u4rt99"},"content":"            String[] str \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"s7u4rt99"},"content":"            if (str.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"s7u4rt99"},"content":"                throw new IncompleteToDoException();","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"s7u4rt99"},"content":"                String description \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"s7u4rt99"},"content":"                for (int i \u003d 1; i \u003c str.length; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"s7u4rt99"},"content":"                    description +\u003d str[i];","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"s7u4rt99"},"content":"                    if (i !\u003d str.length - 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"s7u4rt99"},"content":"                        description +\u003d \" \";","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"s7u4rt99"},"content":"                return new String[]{description};","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the input string and returns a command for Duke to execute.","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"     * @param userInput Input which needs to be parsed.","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"     * @param ui Ui object from Duke class.","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList object from Duke class.","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"     * @return Command to execute.","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"     * @throws DukeException If incorrect values are passed for remove or done commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"    public static Command parse(String userInput, Ui ui, TaskList tasks) throws DukeException{","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"s7u4rt99"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"s7u4rt99"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"        } else if (Parser.isDone(userInput)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"            String[] splited \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"            if (splited.length \u003c 2 || !splited[1].matches(\"\\\\d+\")","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"                    || Integer.valueOf(splited[1]) \u003e tasks.getSize()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"s7u4rt99"},"content":"                throw new DukeException(ui.buildMessage(\"Please key in valid number to mark as done.\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"                int index \u003d Integer.valueOf(splited[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"                return new DoneCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"        } else if (Parser.isRemove(userInput)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"s7u4rt99"},"content":"            String[] str \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"            if (str.length \u003c 2 || !str[1].matches(\"\\\\d+\") || Integer.valueOf(str[1]) \u003e tasks.getSize()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"                throw new DukeException(ui.buildMessage(\"Please key in valid number to remove.\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"                return new RemoveCommand(Integer.valueOf(str[1]) - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"        } else if (Parser.isFind(userInput)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"            String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"                throw new IncompleteFindException();","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"            String keyword \u003d splitInput[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"            String[] splited \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"            if (splited[0].equals(\"todo\") || splited[0].equals(\"deadline\") || splited[0].equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"                String[] str \u003d Parser.splitInput(userInput, splited[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"                if (splited[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"                    ToDo add \u003d new ToDo(str[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"                    return new AddCommand(add);","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"                } else if (splited[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"s7u4rt99"},"content":"                    Deadline add \u003d new Deadline(str[0], str[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"                    return new AddCommand(add);","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"s7u4rt99"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"s7u4rt99"},"content":"                    Event add \u003d new Event(str[0], str[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"s7u4rt99"},"content":"                    return new AddCommand(add);","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"s7u4rt99"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":222,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":223}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":" * Stores and retrieves information of the tasklist for Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    private ArrayList\u003cTask\u003e toStore;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    private final String FILEPATH;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    private final String DIRPATH;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public Storage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        this.FILEPATH \u003d \"data\" + File.separator + \"history.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        this.DIRPATH \u003d \"data\";","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     * Initialises the initial ArrayList for Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     * @return ArrayList to be passed into TaskList for Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    public ArrayList\u003cTask\u003e initialise() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        //read from the data/history.text and return an ArrayList of Tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"            ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"                String[] splitTask \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"                if (splitTask.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"                    // it is todotask","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"                    Task toAdd \u003d new ToDo(splitTask[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"                    if (splitTask[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"                        toAdd.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"                    output.add(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"                    // can be event or deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"                    if (splitTask[0].equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"                        // event","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"                        Task toAdd \u003d new Event(splitTask[2], splitTask[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"                        if (splitTask[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"                            toAdd.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"                        output.add(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"                        // deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"                        Task toAdd \u003d new Deadline(splitTask[2], splitTask[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"                        if (splitTask[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"                            toAdd.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"                        output.add(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"            return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"     * Saves the taskList given by Duke into user\u0027s computer.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks taskList which is being saved into user\u0027s computer.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"    public void saveFile(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"            String textToAdd \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"                if (i \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"                    textToAdd +\u003d tasks.taskSaveToString(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"                    textToAdd +\u003d \"\\n\" + tasks.taskSaveToString(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"            File file \u003d new File(DIRPATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"            if (file.mkdir()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"                saveFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"                System.out.println(\"Failed to create file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":118}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Represents the list of Tasks for Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for TaskList, setting tasks to a given list.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @param list List to be assigned to tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        this.tasks \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"     * Adds a new Task to tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     * @param toAdd Task to add to tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        this.tasks.add(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     * Getter for tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"     * @return tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"     * Removes Task from given index from tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"     * @param index Index of Task to remove from tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"     * @return The removed Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"    public Task remove(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the size of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"     * @return Size of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Task of a given index in tasks into its String representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"     * @param index Index of Task to get the String representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of Task in tasks with given index.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    public String taskToString(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"        return this.tasks.get(index).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Task of a given index in tasks to its String representation to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"     * @param index Index of Task to get the String representation to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of Task in tasks with given index.","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"    public String taskSaveToString(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        return this.tasks.get(index).convertToString();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"     * Marks Task at given index in tasks as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"     * @param index Index of Task to mark as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"     * Finds tasks with given keyword in tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"     * @param keyword Keyword of tasks we want to find.","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"     * @return TaskList of Tasks with given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"    public TaskList findTasksWithKeyword(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"        ArrayList\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"            if (this.tasks.get(i).hasKeyword(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"                tasksWithKeyword.add(this.tasks.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"        return new TaskList(tasksWithKeyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"     * Converts TaskList object into its String representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of TaskList object.","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"        return tasks.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":122}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Represents the Ui of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    public static String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor of Ui.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     * Prints message in same style as other outputs of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * @param message Message to be printed in the same style as other","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     *                outputs of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    public void print(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     * Prints add message in same style as other outputs of Duke whenever","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     * a new Task has been added.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * @param toAdd Task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * @param size Size of TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    public void printAdd(Task toAdd, int size) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + \"  \" + toAdd","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        print(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"     * Prints out TaskList in a form of a list for users to see.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"    public void print(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"            System.out.println((i + 1) + \".\" + tasks.taskToString(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     * Builds message in same form as other outputs of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"     * @param message Message to be built in the same form as other outputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"     * @return Message which has been built in the same form as other outputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"    public String buildMessage(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        // to build error messages","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"        return LINE + \"\\n\" + message + \"\\n\" + LINE;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"     * Reads next line of user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"     * Welcomes user to Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"    public void welcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"        print(\"Hello! I\u0027m duke.Duke\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"                + \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"     * Prints out TaskList of tasks with given keyword for users to see.","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasksWithKeyword TaskList of tasks with given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"     * @param keyword Keyword which tasks in tasksWithKeyword contains.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"    public void printKeywordTasks(TaskList tasksWithKeyword, String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"        if (tasksWithKeyword.getSize() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"            System.out.println(LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"            for (int i \u003d 0; i \u003c tasksWithKeyword.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"                System.out.println((i + 1) + \".\" + tasksWithKeyword.taskToString(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"            System.out.println(LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"            print(\"You do not have any tasks with keyword: \" + keyword + \".\");","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"     * Says bye to user and closes scanner.","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"    public void exit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":124}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" * Representation for the add command of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * @param toAdd Task to add to taskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    public AddCommand(Task toAdd){","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if AddCommand is an exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     * Executes the AddCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList object to add toAdd to.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * @param ui Ui Object to print to user.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * @param storage Storage object which saves and loads the taskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        tasks.add(this.toAdd);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        ui.printAdd(this.toAdd, tasks.getSize());","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":45}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Abstract class for Commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":13}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Representation for the done command of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private final int indexToMarkAsDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for DoneCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexToMarkAsDone Index of taskList to mark as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    public DoneCommand(int indexToMarkAsDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        this.indexToMarkAsDone \u003d indexToMarkAsDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if this is an exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     * Executes the DoneCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList to mark Task at index indexToMarkAsDone as Done.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     * @param ui Ui to print to users of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * @param storage Storage to save and load TaskList for Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        tasks.markAsDone(this.indexToMarkAsDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                + tasks.taskToString(this.indexToMarkAsDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        ui.print(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":46}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Representation for exit command of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if this is an exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * @return true.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * Executes the Exit Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     * @param ui Ui to print to users of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     * @param storage Storage to save and load TaskList of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        ui.exit();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Representation for the find command of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * @param keyword Keyword to search for in TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if FindCommand is an exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     * Executes the FindCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList object to find keyword from.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * @param ui Ui Object to print to user.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * @param storage Storage object which saves and loads the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        TaskList keywordTasks \u003d tasks.findTasksWithKeyword(this.keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        ui.printKeywordTasks(keywordTasks, this.keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"s7u4rt99":45}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Representation of the list command of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if this is an exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * Executes the ListCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList of Tasks to be listed.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     * @param ui Ui to print to users of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     * @param storage Storage to save and load TaskList of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        ui.print(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":33}},{"path":"src/main/java/duke/command/RemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" * Representation of remove command of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private final int indexToRemove;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for RemoveCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexToRemove Index of TaskList to be removed.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    public RemoveCommand(int indexToRemove){","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        this.indexToRemove \u003d indexToRemove;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if this is an exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     * Executes the RemoveCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     * @param tasks TaskList to remove command at index indexToRemove from.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * @param ui Ui to print to users of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * @param storage Storage to save and load TaskList of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        Task toRemove \u003d tasks.remove(this.indexToRemove);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + toRemove + \"\\nNow you have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                + tasks.getSize() + \" tasks in the list\";","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        ui.print(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"s7u4rt99":46}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * Represents an exception of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":16}},{"path":"src/main/java/duke/exception/IncompleteDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static duke.Ui.LINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":" * Representation for incomplete fields of Deadline exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"public class IncompleteDeadlineException extends DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    private static String MESSAGE \u003d \"OOPS!!! The description or date of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for IncompleteDeadlineException.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public IncompleteDeadlineException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"        super(LINE + \"\\n\" + MESSAGE + \"\\n\" + LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"s7u4rt99":18}},{"path":"src/main/java/duke/exception/IncompleteEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static duke.Ui.LINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":" * Representation for incomplete fields of Event exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"public class IncompleteEventException extends DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    private static String MESSAGE \u003d \"OOPS!!! The description or date of an event cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for IncompleteEventException.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public IncompleteEventException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"        super(LINE + \"\\n\" + MESSAGE + \"\\n\" + LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":17}},{"path":"src/main/java/duke/exception/IncompleteFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static duke.Ui.LINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":" * Representation for incomplete keyword for FindCommand exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"public class IncompleteFindException extends DukeException{","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    private static String message \u003d \"OOPS!!! Please remember to key in keyword to find!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for IncompleteFindException.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public IncompleteFindException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"        super(LINE + \"\\n\" + message + \"\\n\" + LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"s7u4rt99":17}},{"path":"src/main/java/duke/exception/IncompleteToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static duke.Ui.LINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":" * Representation for incomplete fields of ToDoObject exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"public class IncompleteToDoException extends DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    private static String MESSAGE \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for IncompleteToDoException.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public IncompleteToDoException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"        super(LINE + \"\\n\" + MESSAGE + \"\\n\" + LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":17}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static duke.Ui.LINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":" * Representation for the invalid command exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    private static String MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for InvalidCommandException.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"            super(LINE + \"\\n\" + MESSAGE + \"\\n\" + LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * Type of Task which has a deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    private String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     * @param by Deadline of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Deadline object into String form to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @return String form of Deadline object to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        return \"D|\" + super.convertToString() + \"|\" + by;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Deadline object to its String representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of Deadline object.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * Type of Task which is an Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    private String duration;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * @param description Description of Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     * @param duration Duration of Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    public Event(String description, String duration) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Event object into String form to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @return String form of Event object to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        return \"E|\" + super.convertToString() + \"|\" + duration;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Event object into its String representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of Event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + duration + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * Representation of Task to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     * @param description Description of Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the status icon of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @return \"X\" if done, else \" \".","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"     * Marks the Task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the status icon of the Task in a format suitable to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     * @return \"1\" if done, else \"0\".","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public String printStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        return (isDone) ? \"1\" : \"0\";","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Task object into String form to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"     * @return {StatusIcon}|{description}.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        return printStatusIcon() + \"|\" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"     * Checks if description of Task has given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"     * @param keyword Keyword to check if description of Task contains.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if Task contains keyword, else false.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"        String[] deconstructedDescription \u003d description.split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c deconstructedDescription.length; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"            if (deconstructedDescription[i].equals(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"                return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Task object into its String representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of Task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":81}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * Type of Task which is an Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"     * Constructor for ToDoObject.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     * @param description Description of ToDoObject.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     * Converts ToDoObject into String form to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     * @return String form of ToDoObject to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        return \"T|\" + super.convertToString();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"     * Converts ToDoObject into its String representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"     * @return String representation of ToDoObject.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":36}},{"path":"src/test/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    void isValidDate_validDate_true() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(Parser.isValidDate(\"1999-03-29\", DateTimeFormatter.ISO_LOCAL_DATE));","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    void isValidDate_invalidDate_false() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(Parser.isValidDate(\"1999/03/29\", DateTimeFormatter.ISO_LOCAL_DATE));","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    void isValidTime_validTime_true() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(Parser.isValidTime(\"23:59\", DateTimeFormatter.ISO_LOCAL_TIME));","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    void isValidTime_invalidTime_false() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(Parser.isValidTime(\"2359\", DateTimeFormatter.ISO_LOCAL_TIME));","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    void isRemove_correctForm_true() {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(Parser.isRemove(\"remove 2\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    void isRemove_incorrectForm_false() {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(Parser.isRemove(\"remove\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"    void isDone_correctFormAndLength_true() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(Parser.isDone(\"done \"));","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"    void isDone_incorrectForm_false() {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(Parser.isDone(\"done\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"s7u4rt99":50}},{"path":"src/test/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    void testGetSizeOfOne() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"        tasks.add(new Task(\"taskTest\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new TaskList(tasks).getSize());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    void testGetSizeOfZero() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(0, new TaskList().getSize());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"s7u4rt99":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"s7u4rt99":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"s7u4rt99":1,"-":20}}]
