[{"path":"src/main/java/abyss/Abyss.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class Abyss {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"    private static final String TODO_REGEX \u003d \"^todo[ ]+\\\\S[ -~]*$\";","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    private static final String DEADLINE_REGEX \u003d \"^deadline[ ]+\\\\S[ -~]*\\\\/by[ ]+\\\\S[ -~]*$\";","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    private static final String EVENT_REGEX \u003d \"^event[ ]+\\\\S[ -~]*\\\\/at[ ]+\\\\S[ -~]*$\";","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        printLogo();","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"        reply(\"Hello beautiful. Welcome to the Abyss.\", \"What can we do for you today?\");","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"        String cmd \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        while (!cmd.equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"                if (cmd.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"                    list();","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.matches(\"^done.*\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"                    if (!cmd.matches(\"^done[ ]+\\\\d*$\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidCommandException(\"Command \u0027done\u0027 should be followed by \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"                                \"the index of the task piece.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidCommandException(\"The Abyss is empty\");","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"                    String index \u003d cmd.split(\"done[ ]+\", 2)[1];","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"                    int i \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"                    if (i \u003c 1 || i \u003e getNumberOfTasks()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidCommandException(\"Index should be within 1 and \" + getNumberOfTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"                    markAsDone(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.matches(\"^delete.*\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"                    if (!cmd.matches(\"^delete[ ]+\\\\d*$\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidCommandException(\"Command \u0027delete\u0027 should be followed by \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"                                \"the index of the task piece.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidCommandException(\"The Abyss is empty\");","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"                    String index \u003d cmd.split(\"delete[ ]+\", 2)[1];","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"                    int i \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"                    if (i \u003c 1 || i \u003e getNumberOfTasks()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidCommandException(\"Index should be within 1 and \" + getNumberOfTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"                    deleteTask(i);","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.matches(\"^todo.*\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"ailing35"},"content":"                    if (!cmd.matches(TODO_REGEX)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidTodoException(\"Description of a \u0027todo\u0027 task piece cannot be empty.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"                    String description \u003d cmd.split(\"todo[ ]+\", 2)[1];","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"                    addToDo(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.matches(\"^deadline.*\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"ailing35"},"content":"                    if (!cmd.matches(DEADLINE_REGEX)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidDeadlineException(\"Description and date of a \u0027deadline\u0027 task piece \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"                                \"cannot be empty.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"ailing35"},"content":"                    String content \u003d cmd.split(\"deadline[ ]+\", 2)[1];","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"                    String[] parts \u003d content.split(\"\\\\/by[ ]+\", 2);","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"ailing35"},"content":"                    addDeadline(parts[0], parts[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.matches(\"^event.*\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"                    if (!cmd.matches(EVENT_REGEX)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"ailing35"},"content":"                        throw new InvalidEventException(\"Description and date of an \u0027event\u0027 task piece \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"ailing35"},"content":"                                \"cannot be empty.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"ailing35"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"ailing35"},"content":"                    String content \u003d cmd.split(\"event[ ]+\", 2)[1];","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"ailing35"},"content":"                    String[] parts \u003d content.split(\"\\\\/at[ ]+\", 2);","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"ailing35"},"content":"                    addEvent(parts[0], parts[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"ailing35"},"content":"                } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"ailing35"},"content":"                    throw new InvalidCommandException(\"The Abyss does not understand your command.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ailing35"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"ailing35"},"content":"            } catch (AbyssException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ailing35"},"content":"                reply(e.getMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"ailing35"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"ailing35"},"content":"            cmd \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"ailing35"},"content":"        sc.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"ailing35"},"content":"        reply(\"Exiting the Abyss. We look forward to your return.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"ailing35"},"content":"    private static void reply(String... messages) {","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"ailing35"},"content":"        System.out.println(formatReply(messages));","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"ailing35"},"content":"    private static void list() {","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"ailing35"},"content":"        System.out.println(formatListReply());","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"ailing35"},"content":"    private static void markAsDone(int i) {","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"ailing35"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"ailing35"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"ailing35"},"content":"        String markedTask \u003d \"  \" + task.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"ailing35"},"content":"        reply(\"Task piece is lit up in the Abyss.\", markedTask);","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"ailing35"},"content":"    private static void addToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"ailing35"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"ailing35"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"ailing35"},"content":"    private static void addDeadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"ailing35"},"content":"        Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"ailing35"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-14"},{"lineNumber":112,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"ailing35"},"content":"    private static void addEvent(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":115,"author":{"gitId":"ailing35"},"content":"        Task newTask \u003d new Event(description, at);","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"ailing35"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":119,"author":{"gitId":"ailing35"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2021-08-14"},{"lineNumber":120,"author":{"gitId":"ailing35"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"ailing35"},"content":"        String addedMsg \u003d \"Task piece is added to the Abyss.\";","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"ailing35"},"content":"        String tasksLeftMsg \u003d \"The Abyss now contains \" + getNumberOfTasks() + \" task piece(s).\";","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"ailing35"},"content":"        reply(addedMsg, task.toString(), tasksLeftMsg);","lastModifiedDate":"2021-08-14"},{"lineNumber":124,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":125,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":126,"author":{"gitId":"ailing35"},"content":"    private static void deleteTask(int i) {","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"ailing35"},"content":"        String removedMsg \u003d \"Task piece is swallowed by the Abyss.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"ailing35"},"content":"        String tasksLeftMsg \u003d \"The Abyss now contains \" + (getNumberOfTasks() - 1) + \" task piece(s).\";","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"ailing35"},"content":"        String task \u003d tasks.get(i - 1).toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"ailing35"},"content":"        tasks.remove(i - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"ailing35"},"content":"        reply(removedMsg, task, tasksLeftMsg);","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"ailing35"},"content":"    private static int getNumberOfTasks() {","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"ailing35"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"ailing35"},"content":"    private static String formatReply(String[] messages) {","lastModifiedDate":"2021-08-14"},{"lineNumber":139,"author":{"gitId":"ailing35"},"content":"        String reply \u003d \"\\t......................................................\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":140,"author":{"gitId":"ailing35"},"content":"        for (int i \u003d 0; i \u003c messages.length; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":141,"author":{"gitId":"ailing35"},"content":"            reply +\u003d \"\\t \" + messages[i] + \"\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":142,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":143,"author":{"gitId":"ailing35"},"content":"        reply +\u003d \"\\n\\t......................................................\";","lastModifiedDate":"2021-08-14"},{"lineNumber":144,"author":{"gitId":"ailing35"},"content":"        return reply;","lastModifiedDate":"2021-08-14"},{"lineNumber":145,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":146,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":147,"author":{"gitId":"ailing35"},"content":"    private static String formatListReply() {","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"ailing35"},"content":"        String reply \u003d \"\\t......................................................\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":149,"author":{"gitId":"ailing35"},"content":"        for (int i \u003d 0; i \u003c getNumberOfTasks(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"ailing35"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"ailing35"},"content":"            reply +\u003d \"\\t \" + (i + 1) + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":152,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":153,"author":{"gitId":"ailing35"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"ailing35"},"content":"            reply +\u003d \"\\t The Abyss is empty.\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":156,"author":{"gitId":"ailing35"},"content":"        reply +\u003d \"\\n\\t......................................................\";","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"ailing35"},"content":"        return reply;","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":160,"author":{"gitId":"ailing35"},"content":"    private static void printLogo() {","lastModifiedDate":"2021-08-14"},{"lineNumber":161,"author":{"gitId":"ailing35"},"content":"        String logo \u003d","lastModifiedDate":"2021-08-14"},{"lineNumber":162,"author":{"gitId":"ailing35"},"content":"                \"  (\u0027-.    .-. .-\u0027)                .-\u0027)     .-\u0027)   \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":163,"author":{"gitId":"ailing35"},"content":"                        + \"  ( OO ).-.\\\\  ( OO )              ( OO ).  ( OO ). \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":164,"author":{"gitId":"ailing35"},"content":"                        + \"  / . --. / ;-----.\\\\  ,--.   ,--.(_)---\\\\_)(_)---\\\\_)\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":165,"author":{"gitId":"ailing35"},"content":"                        + \"  | \\\\-.  \\\\  | .-.  |   \\\\  `.\u0027  / /    _ | /    _ | \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":166,"author":{"gitId":"ailing35"},"content":"                        + \".-\u0027-\u0027  |  | | \u0027-\u0027 /_).-\u0027)     /  \\\\  :` `. \\\\  :` `. \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":167,"author":{"gitId":"ailing35"},"content":"                        + \" \\\\| |_.\u0027  | | .-. `.(OO  \\\\   /    \u0027..`\u0027\u0027.) \u0027..`\u0027\u0027.)\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":168,"author":{"gitId":"ailing35"},"content":"                        + \"  |  .-.  | | |  \\\\  ||   /  /\\\\_  .-._)   \\\\.-._)   \\\\\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":169,"author":{"gitId":"ailing35"},"content":"                        + \"  |  | |  | | \u0027--\u0027  /`-./  /.__) \\\\       /\\\\       /\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":170,"author":{"gitId":"ailing35"},"content":"                        + \"  `--\u0027 `--\u0027 `------\u0027   `--\u0027       `-----\u0027  `-----\u0027 \\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":171,"author":{"gitId":"ailing35"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-14"},{"lineNumber":172,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":173}},{"path":"src/main/java/abyss/AbyssException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class AbyssException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    public AbyssException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":7}},{"path":"src/main/java/abyss/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    protected String by;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        return \"  [D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":15}},{"path":"src/main/java/abyss/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    protected String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        return \"  [E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":15}},{"path":"src/main/java/abyss/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class InvalidCommandException extends AbyssException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":7}},{"path":"src/main/java/abyss/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class InvalidDeadlineException extends AbyssException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    public InvalidDeadlineException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":7}},{"path":"src/main/java/abyss/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class InvalidEventException extends AbyssException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    public InvalidEventException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":7}},{"path":"src/main/java/abyss/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class InvalidTodoException extends AbyssException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    public InvalidTodoException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":7}},{"path":"src/main/java/abyss/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":24}},{"path":"src/main/java/abyss/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"        return \"  [T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"todo CS2103 iP Assignment","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"deadline CS2103 iP /by Thurs, 19 August","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"event CS2103 iP lecture /at 4-6pm Friday","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"exit","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"if ! javac -cp ../src/main/java/abyss -Xlint:none -d ../bin ../src/main/java/abyss/*.java","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"java -classpath ../bin abyss.Abyss \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ailing35":2,"-":36}}]
