[{"path":"src/main/java/abyss/Abyss.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.command.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import abyss.exception.AbyssException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import abyss.exception.LoadTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"import abyss.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import abyss.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"import java.io.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":" * The Abyss is an application which keeps track of tasks, allowing users to","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":" * add and delete tasks of multiple types, including deadlines, events and to-dos.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":" * The Abyss can also list existing tasks and mark tasks as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"public class Abyss {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    private static final String FILE_PATH \u003d \"./data/abyss.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    private static final String[] START_MESSAGES \u003d {\"Hello beautiful. Welcome to the Abyss.\",","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"            \"What can we do for you today?\"};","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"    private static final String EXIT_MESSAGE \u003d \"Exiting the Abyss. We look forward to your return.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"     * Main function that handles the flow of the application.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"     * @param args Input arguments.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"        Ui.printLogo();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"        Ui.reply(START_MESSAGES);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"            storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        } catch (IOException | LoadTaskException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"            Ui.reply(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"                String input \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"                Command cmd \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"                Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"                if (cmd.getClass() \u003d\u003d DoneCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"                    DoneCommand done \u003d (DoneCommand) cmd;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"                    tasks.markAsDone(done.getIndex());","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ailing35"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.getClass() \u003d\u003d DeleteCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"                    DeleteCommand delete \u003d (DeleteCommand) cmd;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"                    tasks.delete(delete.getIndex());","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.getClass() \u003d\u003d TodoCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"                    TodoCommand todo \u003d (TodoCommand) cmd;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ailing35"},"content":"                    task \u003d tasks.addToDo(todo.getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ailing35"},"content":"                    Ui.replyTaskAdded(task, tasks.getNumberOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.getClass() \u003d\u003d DeadlineCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ailing35"},"content":"                    DeadlineCommand deadline \u003d (DeadlineCommand) cmd;","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ailing35"},"content":"                    task \u003d tasks.addDeadline(deadline.getDescription(), deadline.getDate());","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"                    Ui.replyTaskAdded(task, tasks.getNumberOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ailing35"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.getClass() \u003d\u003d EventCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"                    EventCommand event \u003d (EventCommand) cmd;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ailing35"},"content":"                    task \u003d tasks.addEvent(event.getDescription(), event.getDate());","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"ailing35"},"content":"                    Ui.replyTaskAdded(task, tasks.getNumberOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"ailing35"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.getClass() \u003d\u003d FindCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"ailing35"},"content":"                    FindCommand find \u003d (FindCommand) cmd;","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ailing35"},"content":"                    tasks.find(find.getKeyword());","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ailing35"},"content":"                }  else if (cmd.getClass() \u003d\u003d ListCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ailing35"},"content":"                    tasks.list();","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"ailing35"},"content":"                } else if (cmd.getClass() \u003d\u003d ExitCommand.class) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"ailing35"},"content":"                    Ui.reply(EXIT_MESSAGE);","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"ailing35"},"content":"                    sc.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"ailing35"},"content":"                    return;","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"ailing35"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"ailing35"},"content":"            } catch (AbyssException | IOException | DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"ailing35"},"content":"                Ui.reply(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"ailing35"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"ailing35"},"content":"    public static int getNumberOfTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ailing35"},"content":"        return tasks.getNumberOfTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":94}},{"path":"src/main/java/abyss/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.exception.LoadTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import abyss.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import abyss.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import java.io.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":" * Represents a storage file which stores user tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    private String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    private File file;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"     * @param filePath File path of the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"     * Loads tasks from storage file into a task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"     * @return Loaded task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"     * @throws IOException If there is error reading from file.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"     * @throws LoadTaskException If there is invalid task in the file.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    public TaskList loadTasks() throws IOException, LoadTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"        FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"        BufferedReader reader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"        String line;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"            String[] entry \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"            String taskType \u003d entry[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"            String isDone \u003d entry[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"            Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"            case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"                task \u003d tasks.addToDo(entry[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ailing35"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ailing35"},"content":"            case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"                task \u003d tasks.addDeadline(entry[2], entry[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ailing35"},"content":"            case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ailing35"},"content":"                task \u003d tasks.addEvent(entry[2], entry[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ailing35"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ailing35"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ailing35"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ailing35"},"content":"                throw new LoadTaskException(\"Invalid task in file.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ailing35"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ailing35"},"content":"        reader.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"ailing35"},"content":"        return tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ailing35"},"content":"     * Save tasks from given task list into the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ailing35"},"content":"     * @param tasks List of tasks to be stored.","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"ailing35"},"content":"     * @throws IOException If there is error writing to file.","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"ailing35"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"ailing35"},"content":"        StringBuffer input \u003d new StringBuffer();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"ailing35"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"ailing35"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"ailing35"},"content":"            input.append(task.toFileEntry());","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"ailing35"},"content":"            input.append(\"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"ailing35"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"ailing35"},"content":"        writer.write(input.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"ailing35"},"content":"        writer.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":91}},{"path":"src/main/java/abyss/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.exception.LoadTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import abyss.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import abyss.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":" * Represents a storage file which stores and updates user tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"public abstract class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"     * Prints reply with given messages in the interface.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"     * @param messages  Messages to be printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"    public static void reply(String... messages) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        System.out.println(formatReply(messages));","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"     * Prints reply after a task is successfully added.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"     * @param task Task that is added.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"     * @param numberOfTasks Number of tasks in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"    public static void replyTaskAdded(Task task, int numberOfTasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"        String addedMsg \u003d \"Task piece is added to the Abyss.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"        String tasksLeftMsg \u003d \"The Abyss now contains \" + numberOfTasks + \" task piece(s).\";","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        Ui.reply(addedMsg, task.toString(), tasksLeftMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"     * Formats messages into a reply chat bubble.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"     * @param messages Messages to be included in the reply.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"     * @return Formatted reply.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"    public static String formatReply(String[] messages) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"        String reply \u003d \"\\t......................................................\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"        for (int i \u003d 0; i \u003c messages.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"            reply +\u003d \"\\t \" + messages[i] + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"        reply +\u003d \"\\n\\t......................................................\";","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"        return reply;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"     * Formats a list of tasks into a reply chat bubble.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ailing35"},"content":"     * @return Formatted reply.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"    public static String formatListReply(TaskList tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"        String reply \u003d \"\\t......................................................\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"            reply +\u003d \"\\t \" + (i + 1) + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ailing35"},"content":"        if (tasks.getNumberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"            reply +\u003d \"\\t The Abyss is empty.\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ailing35"},"content":"        reply +\u003d \"\\n\\t......................................................\";","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ailing35"},"content":"        return reply;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"     * Prints the Abyss logo.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"ailing35"},"content":"    public static void printLogo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"ailing35"},"content":"        String logo \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ailing35"},"content":"                \"  (\u0027-.    .-. .-\u0027)                .-\u0027)     .-\u0027)   \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"ailing35"},"content":"                        + \"  ( OO ).-.\\\\  ( OO )              ( OO ).  ( OO ). \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ailing35"},"content":"                        + \"  / . --. / ;-----.\\\\  ,--.   ,--.(_)---\\\\_)(_)---\\\\_)\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ailing35"},"content":"                        + \"  | \\\\-.  \\\\  | .-.  |   \\\\  `.\u0027  / /    _ | /    _ | \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ailing35"},"content":"                        + \".-\u0027-\u0027  |  | | \u0027-\u0027 /_).-\u0027)     /  \\\\  :` `. \\\\  :` `. \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"ailing35"},"content":"                        + \" \\\\| |_.\u0027  | | .-. `.(OO  \\\\   /    \u0027..`\u0027\u0027.) \u0027..`\u0027\u0027.)\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"ailing35"},"content":"                        + \"  |  .-.  | | |  \\\\  ||   /  /\\\\_  .-._)   \\\\.-._)   \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"ailing35"},"content":"                        + \"  |  | |  | | \u0027--\u0027  /`-./  /.__) \\\\       /\\\\       /\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"ailing35"},"content":"                        + \"  `--\u0027 `--\u0027 `------\u0027   `--\u0027       `-----\u0027  `-----\u0027 \\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"ailing35"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":84}},{"path":"src/main/java/abyss/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents a general user command.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public interface Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":7}},{"path":"src/main/java/abyss/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidDeadlineException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":" * Represents a command to add a deadline to the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    private static final String DEADLINE_REGEX \u003d \"^\\\\S[ -~]*\\\\/by[ ]+\\\\S[ -~]*$\";","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    private String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    private String by;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    protected DeadlineCommand(String content) throws InvalidDeadlineException {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"        if (!content.matches(DEADLINE_REGEX)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        String[] parts \u003d content.split(\"\\\\/by[ ]+\", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        this.description \u003d parts[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        this.by \u003d parts[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"        return this.by;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":30}},{"path":"src/main/java/abyss/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.Abyss;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidCommandException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" * Represents a command to delete a task from the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    private static final String DELETE_REGEX \u003d \"^\\\\d*$\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    private int index;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    protected DeleteCommand(String content) throws InvalidCommandException {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"        if (!content.matches(DELETE_REGEX)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"            throw new InvalidCommandException(\"Command \u0027delete\u0027 should be followed by \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"                    \"the index of the task piece.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        if (Abyss.getNumberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"            throw new InvalidCommandException(\"The Abyss is empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        int i \u003d Integer.parseInt(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"        if (i \u003c 1 || i \u003e Abyss.getNumberOfTasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"            throw new InvalidCommandException(\"Index should be positive and not more than \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"                    Abyss.getNumberOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        this.index \u003d i;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"    public int getIndex() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"        return this.index;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":38}},{"path":"src/main/java/abyss/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.Abyss;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidCommandException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" * Represents a command to mark a task as done in the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    private static final String DONE_REGEX \u003d \"^\\\\d*$\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    private int index;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    protected DoneCommand(String content) throws InvalidCommandException {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"        if (!content.matches(DONE_REGEX)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"            throw new InvalidCommandException(\"Command \u0027done\u0027 should be followed by \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"                    \"the index of the task piece.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        if (Abyss.getNumberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"            throw new InvalidCommandException(\"The Abyss is empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        int i \u003d Integer.parseInt(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"        if (i \u003c 1 || i \u003e Abyss.getNumberOfTasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"            throw new InvalidCommandException(\"Index should be positive and not more than \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"                    Abyss.getNumberOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        this.index \u003d i;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"    public int getIndex() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"        return this.index;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":37}},{"path":"src/main/java/abyss/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidEventException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":" * Represents a command to add an event to the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    private static final String EVENT_REGEX \u003d \"^\\\\S[ -~]*\\\\/at[ ]+\\\\S[ -~]*$\";","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    private String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    private String at;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    protected EventCommand(String content) throws InvalidEventException {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"        if (!content.matches(EVENT_REGEX)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        String[] parts \u003d content.split(\"\\\\/at[ ]+\", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        this.description \u003d parts[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        this.at \u003d parts[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"        return this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":30}},{"path":"src/main/java/abyss/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    protected ExitCommand() {}","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":9}},{"path":"src/main/java/abyss/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"    private String keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"    protected FindCommand(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"        return this.keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":13}},{"path":"src/main/java/abyss/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents a command to list the existing tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    protected ListCommand() {}","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":8}},{"path":"src/main/java/abyss/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.command.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidCommandException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" * Represents a parser that makes sense of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"public abstract class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"     * Returns a parsed user command.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"     * @param command Raw command string from user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"     * @return Parsed user command.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"     * @throws InvalidCommandException If command is invalid.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"    public static Command parseCommand(String command) throws InvalidCommandException {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        String[] parts \u003d command.split(\"[ ]+\", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        String type \u003d parts[0].toUpperCase();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        String content \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"            content \u003d parts[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"        case \"TODO\":","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"            return new TodoCommand(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"            return new DeadlineCommand(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"        case \"EVENT\":","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"            return new EventCommand(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"        case \"DONE\":","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"            return new DoneCommand(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"        case \"DELETE\":","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"            return new DeleteCommand(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"        case \"FIND\":","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"            return new FindCommand(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        case \"LIST\":","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"        case \"EXIT\":","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"            throw new InvalidCommandException(\"The Abyss does not understand your command.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":46}},{"path":"src/main/java/abyss/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidTodoException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":" * Represents a command to add a to-do task to the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    private String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    protected TodoCommand(String description) throws InvalidTodoException {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"            throw new InvalidTodoException();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":21}},{"path":"src/main/java/abyss/exception/AbyssException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents an exception that occurs in Abyss.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class AbyssException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"     * Constructor for AbyssException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    public AbyssException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":15}},{"path":"src/main/java/abyss/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents an exception that occurs when user inputs an invalid command.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class InvalidCommandException extends AbyssException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"     * Constructor for InvalidCommandException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":15}},{"path":"src/main/java/abyss/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents an exception that occurs when user inputs an invalid deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class InvalidDeadlineException extends InvalidCommandException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"     * Constructor for InvalidDeadlineException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"        super(\"Description and date of a \u0027deadline\u0027 task piece \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"                \"cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":14}},{"path":"src/main/java/abyss/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents an exception that occurs when user inputs an invalid event.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class InvalidEventException extends InvalidCommandException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"     * Constructor for InvalidEventException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    public InvalidEventException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"        super(\"Description and date of a \u0027event\u0027 task piece \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"                \"cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":14}},{"path":"src/main/java/abyss/exception/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents an exception that occurs when user inputs an invalid to-do.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class InvalidTodoException extends InvalidCommandException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"     * Constructor for InvalidTodoException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    public InvalidTodoException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"        super(\"Description of a \u0027todo\u0027 task piece cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ailing35":13}},{"path":"src/main/java/abyss/exception/LoadTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents an exception that occurs when user inputs an invalid task.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class LoadTaskException extends AbyssException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"     * Constructor for LoadTaskException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    public LoadTaskException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        super(\"Error loading tasks: \" + message);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":15}},{"path":"src/main/java/abyss/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" * Represents a deadline with a description and date.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"     * Constructor for deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"     * @param by Date of deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"     * Returns formatted details of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"     * @return Formatted deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"        return \"  [D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"     * Returns details of the deadline formatted for file entry.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     * @return Formatted deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"    public String toFileEntry() {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"        return \"D | \" + super.getIsDone() + \" | \" + super.description + \" | \" + this.by;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":42}},{"path":"src/main/java/abyss/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" * Represents an event with a description and date.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"     * Constructor for event.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"     * @param at Date of event.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"     * Returns formatted details of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"     * @return Formatted event details.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"        return \"  [E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"     * Returns details of the event formatted for file entry.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     * @return Formatted event details.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"    public String toFileEntry() {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"        return \"E | \" + super.getIsDone() + \" | \" + super.description + \" | \" + this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":42}},{"path":"src/main/java/abyss/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents an general task with a description and whether it is completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"     * Constructor for task.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"    public int getIsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"     * Returns formatted details of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"     * @return Formatted task details.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"     * Returns details of the task formatted for file entry.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"     * @return Formatted task details.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"    abstract public String toFileEntry();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":48}},{"path":"src/main/java/abyss/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":" * Represents a list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    public TaskList() {}","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"    public Task addToDo(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        return newTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    public Task addDeadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        Task newTask \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"        return newTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    public Task addEvent(String description, String at) throws DateTimeParseException {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        LocalDate date \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"        Task newTask \u003d new Event(description, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"        return newTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    public void delete(int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        String removedMsg \u003d \"Task piece is swallowed by the Abyss.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"        String tasksLeftMsg \u003d \"The Abyss now contains \" + (getNumberOfTasks() - 1) + \" task piece(s).\";","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"        String task \u003d tasks.get(i - 1).toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"        tasks.remove(i - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"        Ui.reply(removedMsg, task, tasksLeftMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"    public void markAsDone(int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"        String markedTask \u003d \"  \" + task.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"        Ui.reply(\"Task piece is lit up in the Abyss.\", markedTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"    public void find(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ailing35"},"content":"        keyword \u003d keyword.trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ailing35"},"content":"        String regex \u003d \"[ -~]*\" + keyword + \"[ -~]*\";","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"            Task task \u003d this.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"            if (!task.description.matches(regex)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"                continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ailing35"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ailing35"},"content":"            filteredTasks.tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ailing35"},"content":"        filteredTasks.list();","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"    public void list() {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ailing35"},"content":"        System.out.println(Ui.formatListReply(this));","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ailing35"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"ailing35"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"ailing35"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"ailing35"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":77}},{"path":"src/main/java/abyss/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package abyss.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":" * Represents a to-do task with a description.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"     * Constructor for to-do.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"     * @param description Description of the to-do.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"     * Returns formatted details of the to-do.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"     * @return Formatted to-do details.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"        return \"  [T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"     * Returns details of the to-do formatted for file entry.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"     * @return Formatted to-do details.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    public String toFileEntry() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"        return \"T | \" + super.getIsDone() + \" | \" + super.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":35}},{"path":"src/test/java/AbyssTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"import abyss.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"import abyss.command.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import abyss.command.TodoCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidCommandException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import abyss.exception.InvalidTodoException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"import abyss.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import abyss.task.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"import abyss.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"public class AbyssTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    public void addTodo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"        String description \u003d \"CS2103 Weekly Quiz\";","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        Task todo \u003d new ToDo(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        assertEquals(todo.toString(), tasks.addToDo(description).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    public void todoCommand_invalid() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        String err \u003d new InvalidTodoException().toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"            Parser.parseCommand(\"todo \");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"            output \u003d e.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        assertEquals(err, output);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"    public void formatReply() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"        String[] messages \u003d {\"Hello.\", \"This is a test reply.\"};","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"        String reply \u003d \"\\t......................................................\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        reply +\u003d \"\\t \" + messages[0] + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"        reply +\u003d \"\\t \" + messages[1] + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"        reply +\u003d \"\\n\\t......................................................\";","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"        assertEquals(reply, Ui.formatReply(messages));","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ailing35":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"todo CS2103 iP Assignment","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"deadline CS2103 iP /by Thurs, 19 August","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"event CS2103 iP lecture /at 4-6pm Friday","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"exit","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"ailing35":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"if ! javac -cp ../src/main/java/abyss -Xlint:none -d ../bin ../src/main/java/abyss/*.java","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"java -classpath ../bin abyss.Abyss \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ailing35":2,"-":36}}]
